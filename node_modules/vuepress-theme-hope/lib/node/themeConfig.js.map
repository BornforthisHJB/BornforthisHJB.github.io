{"version":3,"file":"themeConfig.js","sourceRoot":"","sources":["../../src/node/themeConfig.ts"],"names":[],"mappings":"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","sourcesContent":["import { getLocales } from \"vuepress-shared/node\";\nimport { resolveEncrypt } from \"./encrypt.js\";\nimport { themeLocalesData } from \"./locales/index.js\";\n\nimport type { App } from \"@vuepress/core\";\nimport type { ThemeStatus } from \"./status.js\";\nimport {\n  HopeThemeConfig,\n  HopeThemeLocaleConfig,\n  HopeThemeLocaleOptions,\n  HopeThemeOptions,\n  HopeThemeRootConfig,\n} from \"../shared/index.js\";\n\nconst rootAllowConfig = [\n  \"blog\",\n  \"encrypt\",\n  \"pure\",\n  \"darkmode\",\n  \"themeColor\",\n  \"fullscreen\",\n  \"mobileBreakPoint\",\n];\n\nconst defaultRootOptions: HopeThemeRootConfig = {\n  // features\n  blog: {},\n  encrypt: {},\n\n  // appearance\n  pure: false,\n  darkmode: \"switch\",\n  themeColor: false,\n  fullscreen: false,\n};\n\nconst defaultLocaleOptions: HopeThemeLocaleOptions = {\n  // features\n  blog: {},\n  // layouts\n  repoDisplay: true,\n  navbarIcon: true,\n  navbarAutoHide: \"mobile\",\n  hideSiteNameonMobile: true,\n  sidebar: \"structure\",\n  sidebarIcon: true,\n  headerDepth: 2,\n};\n\n/**\n * Get client-side `themeConfig`\n */\nexport const getThemeConfig = (\n  app: App,\n  themeOptions: HopeThemeOptions,\n  { enableBlog }: ThemeStatus\n): HopeThemeConfig => {\n  const themeData: HopeThemeConfig = {\n    ...defaultRootOptions,\n    ...Object.fromEntries(\n      Object.entries(themeOptions).filter(([key]) =>\n        rootAllowConfig.includes(key)\n      )\n    ),\n    locales:\n      // assign locale data to `themeConfig`\n      getLocales({\n        app,\n        name: \"vuepress-theme-hope\",\n        default: Object.fromEntries(\n          Object.entries(themeLocalesData).map(([locale, config]) => {\n            if (!enableBlog) {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              delete config.blogLocales;\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              delete config.paginationLocales;\n            }\n\n            return [\n              locale,\n              <HopeThemeLocaleConfig>{\n                // default config\n                ...defaultLocaleOptions,\n                ...config,\n              },\n            ];\n          })\n        ),\n        // extract localeConfig\n        config: Object.fromEntries(\n          [\n            <[string, HopeThemeLocaleOptions]>[\"/\", {}],\n            ...Object.entries(themeOptions.locales || {}),\n          ].map<[string, HopeThemeLocaleConfig]>(\n            ([localePath, localeConfig]) => [\n              localePath,\n              <HopeThemeLocaleConfig>{\n                // root config\n                ...Object.fromEntries(\n                  Object.entries(themeOptions).filter(\n                    ([key]) =>\n                      key !== \"locales\" && !rootAllowConfig.includes(key)\n                  )\n                ),\n                // locale options\n                ...localeConfig,\n              },\n            ]\n          )\n        ),\n      }),\n  };\n\n  // handle encrypt options\n  themeData.encrypt = resolveEncrypt(themeData.encrypt);\n\n  if (app.env.isDebug) console.log(\"Theme config: \", themeData);\n\n  return themeData;\n};\n"]}