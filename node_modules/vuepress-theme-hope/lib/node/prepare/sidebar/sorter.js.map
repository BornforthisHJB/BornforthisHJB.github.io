{"version":3,"file":"sorter.js","sourceRoot":"","sources":["../../../../src/node/prepare/sidebar/sorter.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  HopeThemeSidebarInfo,\n  HopeThemeSidebarSorter,\n  HopeThemeSidebarSorterFunction,\n} from \"../../../shared/index.js\";\n\nexport const readmeSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  if (\n    infoA.type === \"file\" &&\n    (infoA.path === \"README.md\" || infoA.path === \"readme.md\")\n  )\n    return -1;\n\n  if (\n    infoB.type === \"file\" &&\n    (infoB.path === \"README.md\" || infoB.path === \"readme.md\")\n  )\n    return 1;\n\n  return 0;\n};\n\nexport const orderSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  // itemA order is absent\n  if (infoA.order === null) {\n    // both item do not have orders\n    if (infoB.order === null) return 0;\n\n    // itemA order is absent while itemB order is present\n    return infoB.order;\n  }\n\n  // itemA order is present while itemB order is absent\n  if (infoB.order === null) return -infoA.order;\n\n  // now we are sure both order exist\n\n  // itemA order is positive\n  if (infoA.order > 0) {\n    // both order are negative\n    if (infoB.order > 0) return infoA.order - infoB.order;\n\n    // infoA.order is positive while infoB.order is negative\n    return -1;\n  }\n\n  // both order are negative\n  if (infoB.order < 0) return infoA.order - infoB.order;\n\n  // infoA.order is negative while infoB.order is positive\n  return 1;\n};\n\nexport const dateSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  if (infoA.frontmatter.date instanceof Date) {\n    if (infoB.frontmatter.date instanceof Date)\n      return (\n        infoA.frontmatter.date.getTime() - infoB.frontmatter.date.getTime()\n      );\n\n    return -1;\n  }\n\n  if (infoB.frontmatter.date instanceof Date) return 1;\n\n  return 0;\n};\n\nexport const dateDescSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  if (infoA.frontmatter.date instanceof Date) {\n    if (infoB.frontmatter.date instanceof Date)\n      return (\n        infoB.frontmatter.date.getTime() - infoA.frontmatter.date.getTime()\n      );\n\n    return -1;\n  }\n\n  if (infoB.frontmatter.date instanceof Date) return 1;\n\n  return 0;\n};\n\nconst getFilename = (info: HopeThemeSidebarInfo): string =>\n  info.type === \"file\"\n    ? info.path.replace(/\\.md$/, \"\")\n    : info.info.prefix.replace(/\\/$/, \"\");\n\nexport const filenameSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => getFilename(infoA).localeCompare(getFilename(infoB));\n\nexport const fileNumberSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  const [, filenameA, fileANumber] = /^(.*?)(\\d*)?$/.exec(getFilename(infoA))!;\n  const [, filenameB, fileBNumber] = /^(.*?)(\\d*)?$/.exec(getFilename(infoB))!;\n\n  const result = filenameA.localeCompare(filenameB);\n\n  if (result) return result;\n\n  return Number(fileANumber) - Number(fileBNumber);\n};\n\nexport const fileNumberDescSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  const [, filenameA, fileANumber] = /^(.*?)(\\d*)?$/.exec(getFilename(infoA))!;\n  const [, filenameB, fileBNumber] = /^(.*?)(\\d*)?$/.exec(getFilename(infoB))!;\n  const result = filenameA.localeCompare(filenameB);\n\n  if (result) return result;\n\n  return Number(fileBNumber) - Number(fileANumber);\n};\n\nconst getTitle = (info: HopeThemeSidebarInfo): string =>\n  info.type === \"dir\" ? info.info.text : info.title;\n\nexport const titleSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => getTitle(infoA).localeCompare(getTitle(infoB));\n\nexport const titleNumberSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  const [, titleA, titleANumber] = /^(.*?)(\\d*)?$/g.exec(getTitle(infoA))!;\n  const [, titleB, titleBNumber] = /^(.*?)(\\d*)?$/g.exec(getTitle(infoB))!;\n\n  const result = titleA.localeCompare(titleB);\n\n  if (result) return result;\n\n  return Number(titleANumber) - Number(titleBNumber);\n};\n\nexport const titleNumberDescSorter = (\n  infoA: HopeThemeSidebarInfo,\n  infoB: HopeThemeSidebarInfo\n): number => {\n  const [, titleA, titleANumber] = /^(.*?)(\\d*)?$/.exec(getTitle(infoA))!;\n  const [, titleB, titleBNumber] = /^(.*?)(\\d*)?$/.exec(getTitle(infoB))!;\n\n  const result = titleA.localeCompare(titleB);\n\n  if (result) return result;\n\n  return Number(titleBNumber) - Number(titleANumber);\n};\n\nconst sortKeyMap: Record<string, HopeThemeSidebarSorterFunction> = {\n  readme: readmeSorter,\n  order: orderSorter,\n  date: dateSorter,\n  \"date-desc\": dateDescSorter,\n  filename: filenameSorter,\n  \"file-number\": fileNumberSorter,\n  \"file-number-desc\": fileNumberDescSorter,\n  title: titleSorter,\n  \"title-number\": titleNumberSorter,\n  \"title-number-desc\": titleNumberDescSorter,\n};\n\nconst availableKeywords = Object.keys(sortKeyMap);\n\nexport const getSorter = (\n  sorter?: HopeThemeSidebarSorter\n): HopeThemeSidebarSorterFunction[] => {\n  if (typeof sorter === \"string\" && availableKeywords.includes(sorter))\n    return [sortKeyMap[sorter]];\n\n  if (Array.isArray(sorter))\n    return sorter\n      .filter((sorterKey) => availableKeywords.includes(sorterKey))\n      .map((sorterKey) => sortKeyMap[sorterKey]);\n\n  if (typeof sorter === \"function\") return [sorter];\n\n  return [readmeSorter, orderSorter, titleSorter];\n};\n"]}