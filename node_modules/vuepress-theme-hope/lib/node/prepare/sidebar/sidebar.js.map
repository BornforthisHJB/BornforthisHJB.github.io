{"version":3,"file":"sidebar.js","sourceRoot":"","sources":["../../../../src/node/prepare/sidebar/sidebar.ts"],"names":[],"mappings":"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","sourcesContent":["import { removeLeadingSlash } from \"@vuepress/shared\";\nimport { path } from \"@vuepress/utils\";\n\nimport { getSorter } from \"./sorter.js\";\nimport { logger } from \"../../utils.js\";\n\nimport type { App, Page } from \"@vuepress/core\";\nimport type {\n  HopeThemeConfig,\n  HopeThemeNormalPageFrontmatter,\n  HopeThemePageData,\n  HopeThemeSidebarArrayConfig,\n  HopeThemeSidebarConfig,\n  HopeThemeSidebarGroupItem,\n  HopeThemeSidebarSorter,\n  HopeThemeSidebarInfo,\n  HopeThemeSidebarSorterFunction,\n} from \"../../../shared/index.js\";\n\nconst getInfo = (\n  app: App,\n  rootDir: string,\n  sidebarSorters: HopeThemeSidebarSorterFunction[],\n  base = \"\"\n): HopeThemeSidebarInfo[] => {\n  const dir = `${rootDir}${base}`;\n\n  return (\n    (\n      (<Page<HopeThemePageData, HopeThemeNormalPageFrontmatter>[]>app.pages)\n        .filter(\n          ({ filePathRelative, pathLocale }) =>\n            // generated from file\n            filePathRelative &&\n            // inside dir\n            filePathRelative.startsWith(dir) &&\n            // filter only current level\n            /^[^/]*(?:\\/README.md)?$/.test(\n              filePathRelative.slice(dir.length)\n            ) &&\n            // root dir should filter other locales\n            (dir !== \"\" || pathLocale === \"/\")\n        )\n        .map((page) => {\n          const filename = path.relative(dir, page.filePathRelative!);\n\n          // continue to read nest dir\n          if (filename?.endsWith(\"/README.md\")) {\n            const filePath = path.relative(rootDir, page.filePathRelative!);\n            const base = filePath.replace(/README\\.md$/, \"\");\n            const dirname = filename.replace(/README\\.md$/, \"\");\n\n            // get result\n            const result = getInfo(app, rootDir, sidebarSorters, base);\n\n            // get dir information\n            const dirInfo = page.frontmatter.dir;\n\n            return dirInfo?.index !== false\n              ? {\n                  type: \"dir\",\n\n                  order: dirInfo?.order || null,\n                  frontmatter: page.frontmatter,\n                  pageData: page.data,\n\n                  // generate information\n                  info: {\n                    text:\n                      dirInfo?.text ||\n                      page.frontmatter.shortTitle ||\n                      page.title,\n                    icon: dirInfo?.icon || page.frontmatter.icon,\n                    collapsable:\n                      dirInfo && \"collapsable\" in dirInfo\n                        ? dirInfo.collapsable\n                        : true,\n                    ...(dirInfo?.link ? { link: page.path } : {}),\n                    prefix: dirname,\n                  },\n\n                  children: dirInfo?.link\n                    ? // filter README.md\n                      result.filter(\n                        (item) =>\n                          !(item.type === \"file\" && item.path === \"README.md\")\n                      )\n                    : result,\n                }\n              : null;\n          }\n\n          // it’s a markdown\n          return page.frontmatter.index !== false\n            ? {\n                type: \"file\",\n                path: filename,\n                title: page.frontmatter.shortTitle || page.title,\n                frontmatter: page.frontmatter,\n                order:\n                  \"order\" in page.frontmatter ? page.frontmatter.order : null,\n              }\n            : null;\n        })\n        // dir without README.md should be dropped here\n        .filter((info) => info !== null) as HopeThemeSidebarInfo[]\n    )\n      // sort items\n      .sort((infoA, infoB) => {\n        for (let i = 0; i < sidebarSorters.length; i++) {\n          const result = sidebarSorters[i](infoA, infoB);\n\n          if (result !== 0) return result;\n        }\n\n        return 0;\n      })\n  );\n};\n\nconst getGeneratePaths = (\n  sidebarConfig: HopeThemeSidebarArrayConfig,\n  prefix = \"\"\n): string[] => {\n  const result: string[] = [];\n\n  if (!Array.isArray(sidebarConfig)) {\n    logger.error(\n      `Expecting array, but getting invalid sidebar config${\n        prefix ? ` under ${prefix}` : \"\"\n      } with: ${JSON.stringify(sidebarConfig)}`\n    );\n\n    return result;\n  }\n\n  sidebarConfig.forEach((item) => {\n    // it’s a sidebar group config\n    if (typeof item === \"object\" && \"children\" in item) {\n      const childPrefix = `${prefix}${item.prefix || \"\"}`;\n\n      // the children needs to be generated\n      if (item.children === \"structure\") result.push(childPrefix);\n      else result.push(...getGeneratePaths(item.children, childPrefix));\n    }\n  });\n\n  return result;\n};\n\nconst getSidebarItems = (\n  infos: HopeThemeSidebarInfo[]\n): (HopeThemeSidebarGroupItem | string)[] =>\n  infos.map((info) => {\n    if (info.type === \"file\") return info.path;\n\n    return {\n      ...info.info,\n      children: getSidebarItems(info.children),\n    };\n  });\n\nexport const getSidebarData = (\n  app: App,\n  themeConfig: HopeThemeConfig,\n  sorter?: HopeThemeSidebarSorter\n): HopeThemeSidebarConfig => {\n  const generatePaths: string[] = [];\n  const sidebarSorters = getSorter(sorter);\n\n  // exact generate sidebar paths\n  Object.entries(themeConfig.locales).forEach(([localePath, { sidebar }]) => {\n    if (Array.isArray(sidebar))\n      generatePaths.push(...getGeneratePaths(sidebar));\n    else if (typeof sidebar === \"object\")\n      Object.entries(sidebar).forEach(([prefix, config]) => {\n        if (config === \"structure\") generatePaths.push(prefix);\n        else if (Array.isArray(config))\n          generatePaths.push(\n            ...getGeneratePaths(config).map((item) => `${prefix}${item}`)\n          );\n      });\n    else if (sidebar === \"structure\") generatePaths.push(localePath);\n  });\n\n  const sidebarData = Object.fromEntries(\n    generatePaths.map((path) => [\n      path,\n      getSidebarItems(getInfo(app, removeLeadingSlash(path), sidebarSorters)),\n    ])\n  );\n\n  if (app.env.isDebug)\n    logger.info(\n      `Sidebar structure data:${JSON.stringify(sidebarData, null, 2)}`\n    );\n\n  return sidebarData;\n};\n\nexport const prepareSidebarData = async (\n  app: App,\n  themeConfig: HopeThemeConfig,\n  sorter?: HopeThemeSidebarSorter\n): Promise<void> => {\n  const sidebarData = getSidebarData(app, themeConfig, sorter);\n\n  await app.writeTemp(\n    \"theme-hope/sidebar.js\",\n    `\\\nexport const sidebarData = ${JSON.stringify(sidebarData)};\n`\n  );\n};\n"]}