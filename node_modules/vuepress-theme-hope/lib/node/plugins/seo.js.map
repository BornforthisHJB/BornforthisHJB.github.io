{"version":3,"file":"seo.js","sourceRoot":"","sources":["../../../src/node/plugins/seo.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAQ3C,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,WAA4B,EAC5B,EAAE,IAAI,EAAE,GAAG,EAA2B,EACtC,QAAQ,GAAG,EAAE,EACb,MAAM,GAAG,KAAK,EACC,EAAE;IACjB,IAAI,GAAG,KAAK,KAAK;QAAE,OAAO,IAAI,CAAC;IAE/B,qEAAqE;IACrE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,QAAQ;QAAE,OAAO,IAAI,CAAC;IAE7D,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IAEzC,MAAM,SAAS,GAAG,CAAC,EACjB,gBAAgB,EAChB,WAAW,EACX,UAAU,EACV,IAAI,GACC,EAAW,EAAE;QAClB,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,MAAM,CAAC;YAAE,OAAO,KAAK,CAAC;QAE3D,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QAEnE,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC;aAC/B,MAAM,CACL,CAAC,IAAI,EAA4B,EAAE,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAChE;aACA,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC;IAEF,OAAO,SAAS,CACd;QACE,QAAQ;QACR,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7D,SAAS;QACT,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC;KACf,EACD,MAAM,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { seoPlugin } from \"vuepress-plugin-seo2\";\nimport { getBlogOptions } from \"./blog.js\";\n\nimport type { Page, Plugin } from \"@vuepress/core\";\nimport type {\n  HopeThemeConfig,\n  HopeThemePluginsOptions,\n} from \"../../shared/index.js\";\n\nexport const getSEOPlugin = (\n  themeConfig: HopeThemeConfig,\n  { blog, seo }: HopeThemePluginsOptions,\n  hostname = \"\",\n  legacy = false\n): Plugin | null => {\n  if (seo === false) return null;\n\n  // disable seo if `hostname` is not set and no options for seo plugin\n  if (!Object.keys(seo || {}).length && !hostname) return null;\n\n  const blogOptions = getBlogOptions(blog);\n\n  const isArticle = ({\n    filePathRelative,\n    frontmatter,\n    pathLocale,\n    path,\n  }: Page): boolean => {\n    if (!filePathRelative || frontmatter[\"home\"]) return false;\n\n    const localePath = path.replace(new RegExp(`^${pathLocale}`), \"/\");\n\n    return Object.entries(blogOptions)\n      .filter<[string, string]>(\n        (item): item is [string, string] => typeof item[1] === \"string\"\n      )\n      .every(([, value]) => !localePath.startsWith(value));\n  };\n\n  return seoPlugin(\n    {\n      hostname,\n      ...(themeConfig.author ? { author: themeConfig.author } : {}),\n      isArticle,\n      ...(seo || {}),\n    },\n    legacy\n  );\n};\n"]}