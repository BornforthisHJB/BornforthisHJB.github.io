{"version":3,"file":"extendsPage.js","sourceRoot":"","sources":["../../src/node/extendsPage.ts"],"names":[],"mappings":"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","sourcesContent":["import { logger } from \"@vuepress/utils\";\nimport {\n  getCategory,\n  getDate,\n  getTag,\n  injectLocalizedDate,\n  timeTransformer,\n} from \"vuepress-shared/node\";\n\nimport { ArticleInfoType, PageType } from \"../shared/index.js\";\n\nimport type { Page } from \"@vuepress/core\";\nimport type {\n  HopeThemeConfig,\n  HopeThemePageData,\n  HopeThemePluginsOptions,\n  HopeThemeBlogHomePageFrontmatter,\n  HopeThemeProjectHomePageFrontmatter,\n  HopeThemeNormalPageFrontmatter,\n} from \"../shared/index.js\";\n\nexport const checkFrontmatter = (\n  page: Page<HopeThemePageData>,\n  isDev = false\n): void => {\n  const frontmatter = page.frontmatter as\n    | HopeThemeProjectHomePageFrontmatter\n    | HopeThemeBlogHomePageFrontmatter\n    | HopeThemeNormalPageFrontmatter;\n\n  const { filePathRelative } = page;\n\n  // check date\n  if (\"date\" in frontmatter && !(frontmatter.date instanceof Date)) {\n    if (isDev)\n      logger.error(\n        `\"date\" property in Page FrontMatter should be a valid Date.${\n          filePathRelative ? `\\nFound in ${filePathRelative}` : \"\"\n        }`\n      );\n\n    delete frontmatter.date;\n  }\n\n  // resolve category\n  if (\"category\" in frontmatter) {\n    const category = getCategory(frontmatter.category);\n\n    frontmatter.category = category;\n  }\n\n  // resolve tag\n  if (\"tag\" in frontmatter) {\n    const tag = getTag(frontmatter.tag);\n\n    frontmatter.tag = tag;\n  }\n};\n\nexport const extendsPage = (\n  themeConfig: HopeThemeConfig,\n  plugins: HopeThemePluginsOptions,\n  page: Page<HopeThemePageData>,\n  isDev = false\n): void => {\n  const { config = {} } = themeConfig.encrypt;\n  const frontmatter = page.frontmatter as\n    | HopeThemeProjectHomePageFrontmatter\n    | HopeThemeBlogHomePageFrontmatter\n    | HopeThemeNormalPageFrontmatter;\n  const { filePathRelative, path } = page;\n  const { createdTime } = page.data.git || {};\n\n  checkFrontmatter(page, isDev);\n\n  // save relative file path into page data to generate edit link\n  page.data.filePathRelative = filePathRelative;\n\n  // inject localized date\n  injectLocalizedDate(page);\n\n  page.routeMeta[ArticleInfoType.title] = page.title;\n\n  if (\"icon\" in frontmatter)\n    page.routeMeta[ArticleInfoType.icon] = frontmatter.icon;\n\n  // resolve shortTitle\n  if (\"shortTitle\" in frontmatter)\n    page.routeMeta[ArticleInfoType.shortTitle] = frontmatter.shortTitle;\n\n  if (plugins.blog) {\n    const isArticle =\n      // declaring this is an article\n      frontmatter.article ||\n      // generated from markdown files\n      Boolean(frontmatter.article !== false && filePathRelative);\n    const isEncrypted = Object.keys(config).some((key) =>\n      decodeURI(path).startsWith(key)\n    );\n    const isSlide = isArticle && frontmatter.layout === \"Slide\";\n\n    // save page type to routeMeta\n    page.routeMeta[ArticleInfoType.type] = frontmatter.home\n      ? PageType.home\n      : isSlide\n      ? PageType.slide\n      : isArticle\n      ? PageType.article\n      : PageType.page;\n\n    const excerpt = isEncrypted\n      ? \"\"\n      : page.excerpt ||\n        frontmatter.description ||\n        (typeof plugins.blog === \"object\" && plugins.blog.autoExcerpt\n          ? frontmatter.summary || \"\"\n          : \"\");\n\n    // save page excerpt to routeMeta\n    if (excerpt) page.routeMeta[ArticleInfoType.excerpt] = excerpt;\n\n    // resolve author\n    if (\"author\" in frontmatter)\n      page.routeMeta[ArticleInfoType.author] = frontmatter.author;\n\n    // resolve date\n    if (\"date\" in frontmatter) {\n      const date = getDate(page.frontmatter.date)?.value;\n\n      if (date) {\n        page.routeMeta[ArticleInfoType.date] = frontmatter.date;\n\n        page.routeMeta[ArticleInfoType.localizedDate] = timeTransformer(date, {\n          lang: page.lang,\n          type: \"date\",\n        });\n      }\n    } else if (createdTime)\n      page.routeMeta[ArticleInfoType.date] = new Date(createdTime);\n\n    if (\"category\" in frontmatter)\n      // resolve category\n      // resolve category\n      page.routeMeta[ArticleInfoType.category] = frontmatter.category;\n\n    // resolve tag\n    if (\"tag\" in frontmatter)\n      page.routeMeta[ArticleInfoType.tag] = frontmatter.tag;\n\n    // resolve sticky\n    if (\"sticky\" in frontmatter)\n      page.routeMeta[ArticleInfoType.sticky] = frontmatter.sticky;\n\n    // resolve image\n    if (\"cover\" in frontmatter)\n      page.routeMeta[ArticleInfoType.cover] = frontmatter.cover;\n\n    // ensure a valid reading time exists\n    if (page.data.readingTime && page.data.readingTime.words !== 0)\n      page.routeMeta[ArticleInfoType.readingTime] = page.data.readingTime;\n\n    // resolve isOriginal\n    if (\"isOriginal\" in frontmatter)\n      page.routeMeta[ArticleInfoType.isOriginal] = frontmatter.isOriginal;\n\n    // resolve encrypted\n    if (isEncrypted) page.routeMeta[ArticleInfoType.isEncrypted] = true;\n  }\n};\n"]}