{"version":3,"file":"StackBlitz.js","sources":["../../../src/client/composables/size.ts","../../../src/client/components/StackBlitz.ts"],"sourcesContent":["import { useEventListener } from \"@vueuse/core\";\nimport { computed, onMounted, isRef, ref, unref, watch } from \"vue\";\nimport type { MaybeRef } from \"@vueuse/core\";\nimport type { Ref } from \"vue\";\n\nconst getValue = (value: string | number): string =>\n  typeof value === \"string\" ? value : `${value}px`;\n\nexport interface SizeOptions {\n  width: string | number | undefined;\n  height: string | number | undefined;\n  ratio: number | undefined;\n}\n\nexport interface SizeInfo<E extends HTMLElement> {\n  el: Ref<E | undefined>;\n  width: Ref<string>;\n  height: Ref<string>;\n}\n\nexport const useSize = <E extends HTMLElement>(\n  options: SizeOptions,\n  extraHeight: MaybeRef<number> = 0\n): SizeInfo<E> => {\n  const el = ref<E>();\n  const width = computed(() => getValue(unref(options.width) || \"100%\"));\n  const height = ref(\"auto\");\n\n  const getHeight = (width: number): string => {\n    const height = unref(options.height);\n    const ratio = unref(options.ratio) || 16 / 9;\n\n    return height\n      ? getValue(height)\n      : `${Number(width) / ratio + unref(extraHeight)}px`;\n  };\n\n  const updateHeight = (): void => {\n    height.value = getHeight(el.value!.clientWidth);\n  };\n\n  onMounted(() => {\n    updateHeight();\n    if (isRef(extraHeight)) watch(extraHeight, () => updateHeight());\n    useEventListener(\"orientationchange\", () => updateHeight());\n    useEventListener(\"resize\", () => updateHeight());\n  });\n\n  return {\n    el,\n    width,\n    height,\n  };\n};\n","import { defineComponent, h } from \"vue\";\nimport { useSize } from \"../composables/index.js\";\n\nimport type { VNode, PropType } from \"vue\";\n\nimport \"../styles/stack-blitz.scss\";\nexport default defineComponent({\n  name: \"StackBlitz\",\n\n  props: {\n    /**\n     * StackBlitz id\n     *\n     * @description Full StackBlitz url is also supported\n     */\n    id: {\n      type: String,\n      required: true,\n    },\n\n    width: {\n      type: [String, Number],\n      default: \"100%\",\n    },\n\n    height: {\n      type: [String, Number],\n      default: undefined,\n    },\n\n    ratio: {\n      type: Number,\n      default: 16 / 9,\n    },\n\n    /**\n     * The default file to have open in the editor\n     */\n    file: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * The initial URL path the preview should open\n     */\n    initialpath: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Force embed view regardless of screen size\n     */\n    embed: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Require user to 'click to load' the embed demo\n     */\n    clickToLoad: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Which view to open by default\n     */\n    view: {\n      type: String as PropType<\"editor\" | \"preview\">,\n      default: \"preview\",\n    },\n\n    /**\n     * Hide file explorer panel in embed view\n     */\n    hideExplorer: Boolean,\n\n    /**\n     * Hide file explorer panel in embed view\n     */\n    hideNavigation: Boolean,\n\n    /**\n     * Hide the debugging console in the editor preview\n     */\n    hidedevtools: Boolean,\n  },\n\n  setup(props) {\n    const { el, width, height } = useSize<HTMLIFrameElement>(props);\n\n    return (): VNode =>\n      h(\"iframe\", {\n        ref: el,\n        class: \"stack-blitz-iframe\",\n        src: `https://stackblitz.com/edit/${props.id}?embed=${\n          props.embed ? 1 : 0\n        }${props.file ? `&file=${props.file}` : \"\"}${\n          props.initialpath\n            ? `&initialpath=${encodeURI(props.initialpath)}`\n            : \"\"\n        }&ctl=${props.clickToLoad ? 1 : 0}&view=${props.view}${\n          props.hideExplorer ? \"&hideExplorer=1\" : \"\"\n        }${props.hideNavigation ? \"&hideNavigation=1\" : \"\"}${\n          props.hidedevtools ? \"&hidedevtools=1\" : \"\"\n        }`,\n        allow: \"clipboard-write\",\n        style: {\n          width: width.value,\n          height: height.value,\n        },\n      });\n  },\n});\n"],"names":["getValue","value","useSize","options","extraHeight","el","ref","width","computed","unref","height","getHeight","ratio","updateHeight","onMounted","isRef","watch","useEventListener","StackBlitz","defineComponent","props","h"],"mappings":"uMAKA,MAAMA,EAAYC,GAChB,OAAOA,GAAU,SAAWA,EAAQ,GAAGA,MAc5BC,EAAU,CACrBC,EACAC,EAAgC,IAChB,CAChB,MAAMC,EAAKC,IACLC,EAAQC,EAAS,IAAMR,EAASS,EAAMN,EAAQ,KAAK,GAAK,MAAM,CAAC,EAC/DO,EAASJ,EAAI,MAAM,EAEnBK,EAAaJ,GAA0B,CAC3C,MAAMG,EAASD,EAAMN,EAAQ,MAAM,EAC7BS,EAAQH,EAAMN,EAAQ,KAAK,GAAK,GAAK,EAE3C,OAAOO,EACHV,EAASU,CAAM,EACf,GAAG,OAAOH,CAAK,EAAIK,EAAQH,EAAML,CAAW,KAClD,EAEMS,EAAe,IAAY,CAC/BH,EAAO,MAAQC,EAAUN,EAAG,MAAO,WAAW,CAChD,EAEA,OAAAS,EAAU,IAAM,CACdD,IACIE,EAAMX,CAAW,GAAGY,EAAMZ,EAAa,IAAMS,EAAc,CAAA,EAC/DI,EAAiB,oBAAqB,IAAMJ,EAAc,CAAA,EAC1DI,EAAiB,SAAU,IAAMJ,EAAc,CAAA,CACjD,CAAC,EAEM,CACL,GAAAR,EACA,MAAAE,EACA,OAAAG,CACF,CACF,EC/CA,IAAAQ,EAAeC,EAAgB,CAC7B,KAAM,aAEN,MAAO,CAML,GAAI,CACF,KAAM,OACN,SAAU,EACZ,EAEA,MAAO,CACL,KAAM,CAAC,OAAQ,MAAM,EACrB,QAAS,MACX,EAEA,OAAQ,CACN,KAAM,CAAC,OAAQ,MAAM,EACrB,QAAS,MACX,EAEA,MAAO,CACL,KAAM,OACN,QAAS,GAAK,CAChB,EAKA,KAAM,CACJ,KAAM,OACN,QAAS,EACX,EAKA,YAAa,CACX,KAAM,OACN,QAAS,EACX,EAKA,MAAO,CACL,KAAM,QACN,QAAS,EACX,EAKA,YAAa,CACX,KAAM,QACN,QAAS,EACX,EAKA,KAAM,CACJ,KAAM,OACN,QAAS,SACX,EAKA,aAAc,QAKd,eAAgB,QAKhB,aAAc,OAChB,EAEA,MAAMC,EAAO,CACX,KAAM,CAAE,GAAAf,EAAI,MAAAE,EAAO,OAAAG,CAAO,EAAIR,EAA2BkB,CAAK,EAE9D,MAAO,IACLC,EAAE,SAAU,CACV,IAAKhB,EACL,MAAO,qBACP,IAAK,+BAA+Be,EAAM,YACxCA,EAAM,MAAQ,EAAI,IACjBA,EAAM,KAAO,SAASA,EAAM,OAAS,KACtCA,EAAM,YACF,gBAAgB,UAAUA,EAAM,WAAW,IAC3C,UACEA,EAAM,YAAc,EAAI,UAAUA,EAAM,OAC9CA,EAAM,aAAe,kBAAoB,KACxCA,EAAM,eAAiB,oBAAsB,KAC9CA,EAAM,aAAe,kBAAoB,KAE3C,MAAO,kBACP,MAAO,CACL,MAAOb,EAAM,MACb,OAAQG,EAAO,KACjB,CACF,CAAC,CACL,CACF,CAAC"}