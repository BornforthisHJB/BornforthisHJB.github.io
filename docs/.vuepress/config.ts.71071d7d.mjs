// docs/.vuepress/config.ts
import { defineUserConfig } from "vuepress";

// docs/.vuepress/theme.ts
import { hopeTheme } from "vuepress-theme-hope";
var theme_default = hopeTheme({
  hostname: "https://bornforthis.cn/",
  author: {
    name: "AndersonHJB",
    url: "https://www.bornforthis.cn/"
  },
  iconPrefix: "iconfont icon-",
  iconAssets: "//at.alicdn.com/t/c/font_3426793_v3bc0nkd7c.css",
  logo: "/img_home/logo_min.png",
  repo: "AndersonHJB?tab=repositories",
  docsDir: "docs",
  darkmode: "toggle",
  displayFooter: true,
  pageInfo: ["Author", "Original", "Date", "Category", "Tag", "ReadingTime"],
  blog: {
    medias: {
      Email: "mailto:bornforthis@bornforthis.cn",
      Gitee: "https://gitee.com/huangjiabaoaiyc",
      GitHub: "https://github.com/AndersonHJB",
      Gmail: "mailto:aiyuechuang@gmail.com",
      QQ: "http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",
      Youtube: "https://www.youtube.com/channel/UCT525Fk74w_l9Pk06OxkLxg",
      Zhihu: "https://www.zhihu.com/people/aiyuechuang"
    }
  },
  footer: '\u957F\u671F\u62DB\u6536\u7F16\u7A0B\u4E00\u5BF9\u4E00\u5B66\u5458!\u5FAE\u4FE1:Jiabcdefh, <a href="https://beian.miit.gov.cn/" target="_blank">\u95FDICP\u590719021486\u53F7-6</a>',
  locales: {
    "/": {
      navbar: zhNavbar,
      sidebar: zhSidebar,
      footer: "Default footer",
      displayFooter: true,
      blog: {
        name: "AI\u60A6\u521B",
        avatar: "/aiyc.jpg",
        description: "\u4E00\u4E2A\u601D\u8003\u8005,\u7F16\u7A0B\u79C1\u6559 1v1",
        intro: "/intro.md",
        articlePerPage: 6
      }
    }
  },
  encrypt: {
    config: {
      "/1v1/03-Dannie/01.html": "123123",
      "/1v1/01-Thomas-hw-note/": ["123123"],
      "/column/python60/": "123123a",
      "/dedao/": "123123a",
      "/column/TensorFlow/\u96F6\u57FA\u7840\u5B9E\u6218\u673A\u5668\u5B66\u4E60/": "123123a",
      "/column/Programmingthinking/": "123123a",
      "/column/playback/01-Tommy.html": "20220517",
      "/column/playback/02-LKW.html": "lkw",
      "/column/playback/03-20220610.html": "20220610"
    }
  },
  plugins: {
    blog: {
      autoExcerpt: true
    },
    components: [
      "Badge",
      "PDF",
      "YouTube"
    ],
    mdEnhance: {
      tasklist: true,
      imageMark: true,
      footnote: true,
      tabs: true,
      align: true,
      attrs: true,
      chart: true,
      codetabs: true,
      container: true,
      demo: true,
      echarts: true,
      flowchart: true,
      gfm: true,
      imageSize: true,
      include: true,
      katex: true,
      lazyLoad: true,
      mark: true,
      mermaid: true,
      playground: {
        presets: ["ts", "vue"]
      },
      presentation: {
        plugins: ["highlight", "math", "search", "notes", "zoom"]
      },
      stylize: [
        {
          matcher: "Recommanded",
          replacer: ({ tag }) => {
            if (tag === "em")
              return {
                tag: "Badge",
                attrs: { type: "tip" },
                content: "Recommanded"
              };
          }
        }
      ],
      sub: true,
      sup: true,
      vpre: true,
      vuePlayground: true
    },
    copyright: {
      author: "\u9EC4\u5BB6\u5B9D|AI\u60A6\u521B",
      global: true,
      triggerWords: 100,
      disableCopy: false,
      disableSelection: false
    },
    pwa: false
  }
});

// docs/.vuepress/config.ts
import { searchPlugin } from "@vuepress/plugin-search";
var config_default = defineUserConfig({
  lang: "zh-CN",
  title: "AI\u60A6\u521B",
  description: "Python 1v1,AI\u60A6\u521B,\u4E00\u5BF9\u4E00,Python,\u7F16\u7A0B\u4E00\u5BF9\u4E00,C++,Java,AI,\u4EBA\u5DE5\u667A\u80FD,\u9EC4\u5BB6\u5B9D,Python\u4E00\u5BF9\u4E00\u6559\u5B66",
  base: "/",
  shouldPrefetch: false,
  head: [
    [
      "link",
      {
        rel: "shortcut icon",
        href: "/favicon.ico"
      }
    ],
    [
      "script",
      {
        type: "text/javascript",
        src: "/js/baidu.js"
      }
    ],
    [
      "link",
      {
        rel: "stylesheet",
        href: "//at.alicdn.com/t/font_2410206_mfj6e1vbwo.css"
      }
    ]
  ],
  plugins: [
    searchPlugin({
      locales: {
        "/": {
          placeholder: "\u641C\u7D22"
        }
      }
    })
  ],
  theme: theme_default
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiZG9jcy8udnVlcHJlc3MvY29uZmlnLnRzIiwgImRvY3MvLnZ1ZXByZXNzL3RoZW1lLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL2h1YW5namlhYmFvL0dpdEh1Yi9XZWJTaXRlcy9Cb3JuZm9ydGhpc0hKQi5naXRodWIuaW8vZG9jcy8udnVlcHJlc3NcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9odWFuZ2ppYWJhby9HaXRIdWIvV2ViU2l0ZXMvQm9ybmZvcnRoaXNISkIuZ2l0aHViLmlvL2RvY3MvLnZ1ZXByZXNzL2NvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvaHVhbmdqaWFiYW8vR2l0SHViL1dlYlNpdGVzL0Jvcm5mb3J0aGlzSEpCLmdpdGh1Yi5pby9kb2NzLy52dWVwcmVzcy9jb25maWcudHNcIjtpbXBvcnQgeyBkZWZpbmVVc2VyQ29uZmlnIH0gZnJvbSBcInZ1ZXByZXNzXCI7XG5pbXBvcnQgdGhlbWUgZnJvbSBcIi4vdGhlbWUuanNcIjtcbmltcG9ydCB7IHNlYXJjaFBsdWdpbiB9IGZyb20gXCJAdnVlcHJlc3MvcGx1Z2luLXNlYXJjaFwiO1xuLy8gaW1wb3J0IHsgZG9jc2VhcmNoUGx1Z2luIH0gZnJvbSAnQHZ1ZXByZXNzL3BsdWdpbi1kb2NzZWFyY2gnO1xuXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVVc2VyQ29uZmlnKHtcbiAgbGFuZzogXCJ6aC1DTlwiLFxuICB0aXRsZTogXCJBSVx1NjBBNlx1NTIxQlwiLFxuICBkZXNjcmlwdGlvbjogXCJQeXRob24gMXYxLEFJXHU2MEE2XHU1MjFCLFx1NEUwMFx1NUJGOVx1NEUwMCxQeXRob24sXHU3RjE2XHU3QTBCXHU0RTAwXHU1QkY5XHU0RTAwLEMrKyxKYXZhLEFJLFx1NEVCQVx1NURFNVx1NjY3QVx1ODBGRCxcdTlFQzRcdTVCQjZcdTVCOUQsUHl0aG9uXHU0RTAwXHU1QkY5XHU0RTAwXHU2NTU5XHU1QjY2XCIsXG4gIGJhc2U6IFwiL1wiLFxuICBzaG91bGRQcmVmZXRjaDogZmFsc2UsXG4gIGhlYWQ6IFtcbiAgICAvLyBbXG4gICAgLy8gICBcInNjcmlwdFwiLFxuICAgIC8vICAge1xuICAgIC8vICAgICBhc3luYzogdHJ1ZSxcbiAgICAvLyAgICAgZGVmZXI6IHRydWUsXG4gICAgLy8gICAgIHR5cGU6IFwidGV4dC9qYXZhc2NyaXB0XCIsXG4gICAgLy8gICAgIHNyYzogXCJodHRwczovL3BsYXRmb3JtLmxpbmtlZGluLmNvbS9iYWRnZXMvanMvcHJvZmlsZS5qc1wiLFxuICAgIC8vICAgfVxuICAgIC8vIF0sXG4gICAgLy8gW1xuICAgIC8vICAgXCJzY3JpcHRcIixcbiAgICAvLyAgIHtcbiAgICAvLyAgICAgdHlwZTogXCJ0ZXh0L2phdmFzY3JpcHRcIixcbiAgICAvLyAgICAgc3JjOiBcIi8vdW5wa2cuYnl0ZWQtc3RhdGljLmNvbS94Z3BsYXllci1obHMuanMvMi4yLjIvYnJvd3Nlci9pbmRleC5qc1wiLFxuICAgIC8vICAgICBjaGFyc2V0OiBcInV0Zi04XCIsXG4gICAgLy8gICB9XG4gICAgLy8gXSxcbiAgICBbXG4gICAgICBcImxpbmtcIiwge1xuICAgICAgICByZWw6IFwic2hvcnRjdXQgaWNvblwiLFxuICAgICAgICBocmVmOiBcIi9mYXZpY29uLmljb1wiLFxuICAgICAgfVxuICAgIF0sXG4gICAgLy8gW1xuICAgIC8vICAgXCJzY3JpcHRcIiwge1xuICAgIC8vICAgICB0eXBlOiBcInRleHQvamF2YXNjcmlwdFwiLFxuICAgIC8vICAgICBzcmM6IFwiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9AZG9jc2VhcmNoL2pzQDNcIixcbiAgICAvLyAgIH1cbiAgICAvLyBdLFxuICAgIC8vIFtcbiAgICAvLyAgIFwic2NyaXB0XCIsXG4gICAgLy8gICB7IFxuICAgIC8vICAgICB0eXBlOiBcInRleHQvamF2YXNjcmlwdFwiLFxuICAgIC8vICAgICBzcmM6IFwiL2pzL215anMuanNcIlxuICAgIC8vICAgfSxcbiAgICAvLyBdLFxuICAgIFtcbiAgICAgIFwic2NyaXB0XCIsXG4gICAgICB7IFxuICAgICAgICB0eXBlOiBcInRleHQvamF2YXNjcmlwdFwiLFxuICAgICAgICBzcmM6IFwiL2pzL2JhaWR1LmpzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIFtcbiAgICAgIFwibGlua1wiLFxuICAgICAge1xuICAgICAgICByZWw6IFwic3R5bGVzaGVldFwiLFxuICAgICAgICBocmVmOiBcIi8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMjQxMDIwNl9tZmo2ZTF2YndvLmNzc1wiLFxuICAgICAgICAvLyBocmVmOiBcIi9jc3MvZm9udF8yNDEwMjA2X21majZlMXZid28uY3NzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gIF0sXG4gIFxuICBwbHVnaW5zOiBbXG4gICAgLy8gY29tbWVudFBsdWdpbih7XG4gICAgLy8gICBwYWdlU2l6ZTogMTAsXG4gICAgLy8gICBjb3B5cmlnaHQ6IGZhbHNlLFxuICAgIC8vIH0pLFxuXG4gICAgLy8gZG9jc2VhcmNoUGx1Z2luKHtcbiAgICAvLyAgIC8vIFx1NEY2MFx1NzY4NFx1OTAwOVx1OTg3OVxuICAgIC8vICAgLy8gYXBwSWQsIGFwaUtleSBcdTU0OEMgaW5kZXhOYW1lIFx1NjYyRlx1NUZDNVx1NTg2Qlx1NzY4NFxuICAgIC8vICAgYXBwSWQ6IFwiQUNEMVMxMDBJVFwiLFxuICAgIC8vICAgYXBpS2V5OiBcIjQwOTMxMTE1ODk4NWNmZWU1YzBhNTM1ZTU5OThkZGQyXCIsXG4gICAgLy8gICBpbmRleE5hbWU6IFwiYm9ybmZvcnRoaXNcIixcbiAgICAvLyAgIHBsYWNlaG9sZGVyOiBcIlx1NjQxQ1x1N0QyMlwiLFxuICAgIC8vIH0pLFxuICAgIFxuICAgIHNlYXJjaFBsdWdpbih7XG4gICAgICBsb2NhbGVzOiB7XG4gICAgICAgIFwiL1wiOiB7XG4gICAgICAgICAgcGxhY2Vob2xkZXI6IFwiXHU2NDFDXHU3RDIyXCIsXG4gICAgICAgICAgXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pLFxuICBdLFxuXG4gIHRoZW1lLFxufSk7XG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9Vc2Vycy9odWFuZ2ppYWJhby9HaXRIdWIvV2ViU2l0ZXMvQm9ybmZvcnRoaXNISkIuZ2l0aHViLmlvL2RvY3MvLnZ1ZXByZXNzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvVXNlcnMvaHVhbmdqaWFiYW8vR2l0SHViL1dlYlNpdGVzL0Jvcm5mb3J0aGlzSEpCLmdpdGh1Yi5pby9kb2NzLy52dWVwcmVzcy90aGVtZS50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvaHVhbmdqaWFiYW8vR2l0SHViL1dlYlNpdGVzL0Jvcm5mb3J0aGlzSEpCLmdpdGh1Yi5pby9kb2NzLy52dWVwcmVzcy90aGVtZS50c1wiO2ltcG9ydCB7IGhvcGVUaGVtZSB9IGZyb20gXCJ2dWVwcmVzcy10aGVtZS1ob3BlXCI7XG5pbXBvcnQgeyBOYXZiYXIgfSBmcm9tIFwiLi9uYXZiYXIuanNcIjtcbmltcG9ydCB7IFNpZGViYXIgfSBmcm9tIFwiLi9zaWRlYmFyLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGhvcGVUaGVtZSh7XG4gIGhvc3RuYW1lOiBcImh0dHBzOi8vYm9ybmZvcnRoaXMuY24vXCIsXG5cbiAgYXV0aG9yOiB7XG4gICAgbmFtZTogXCJBbmRlcnNvbkhKQlwiLFxuICAgIHVybDogXCJodHRwczovL3d3dy5ib3JuZm9ydGhpcy5jbi9cIixcbiAgfSxcblxuICBpY29uUHJlZml4OiBcImljb25mb250IGljb24tXCIsXG4gIC8vIGljb25Bc3NldHM6IFwiaWNvbmZvbnRcIixcbiAgaWNvbkFzc2V0czogXCIvL2F0LmFsaWNkbi5jb20vdC9jL2ZvbnRfMzQyNjc5M192M2JjMG5rZDdjLmNzc1wiLFxuXG4gIGxvZ286IFwiL2ltZ19ob21lL2xvZ29fbWluLnBuZ1wiLFxuXG4gIC8vIHJlcG86IFwiQm9ybmZvcnRoaXNISkIvQm9ybmZvcnRoaXNISkIuZ2l0aHViLmlvXCIsXG4gIC8vIHJlcG86IFwiQW5kZXJzb25ISkIvQW5kZXJzb25ISkIuZ2l0aHViLmlvXCIsXG4gIHJlcG86IFwiQW5kZXJzb25ISkI/dGFiPXJlcG9zaXRvcmllc1wiLFxuICAvLyBlZGl0TGluazogZmFsc2UsXG4gIC8vIGxhc3RVcGRhdGVkOiB0cnVlLFxuXG4gIGRvY3NEaXI6IFwiZG9jc1wiLFxuXG4gIC8vIGRhcmttb2RlOiBcImVuYWJsZVwiLCAvLyBcdTVGM0FcdTUyMzZcdTZERjFcdTgyNzJcdTZBMjFcdTVGMEZcbiAgLy8gZGFya21vZGU6IFwic3dpdGNoXCIsXG4gIGRhcmttb2RlOiBcInRvZ2dsZVwiLFxuXG4gIGRpc3BsYXlGb290ZXI6IHRydWUsXG5cbiAgcGFnZUluZm86IFtcIkF1dGhvclwiLCBcIk9yaWdpbmFsXCIsIFwiRGF0ZVwiLCBcIkNhdGVnb3J5XCIsIFwiVGFnXCIsIFwiUmVhZGluZ1RpbWVcIl0sXG5cbiAgYmxvZzoge1xuICAgIG1lZGlhczoge1xuICAgICAgRW1haWw6IFwibWFpbHRvOmJvcm5mb3J0aGlzQGJvcm5mb3J0aGlzLmNuXCIsXG4gICAgICBHaXRlZTogXCJodHRwczovL2dpdGVlLmNvbS9odWFuZ2ppYWJhb2FpeWNcIixcbiAgICAgIEdpdEh1YjogXCJodHRwczovL2dpdGh1Yi5jb20vQW5kZXJzb25ISkJcIixcbiAgICAgIEdtYWlsOiBcIm1haWx0bzphaXl1ZWNodWFuZ0BnbWFpbC5jb21cIixcbiAgICAgIFFROiBcImh0dHA6Ly93cGEucXEuY29tL21zZ3JkP3Y9MyZ1aW49MTQzMjgwMzc3NiZzaXRlPXFxJm1lbnU9eWVzXCIsXG4gICAgICBZb3V0dWJlOiBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2NoYW5uZWwvVUNUNTI1Rms3NHdfbDlQazA2T3hrTHhnXCIsXG4gICAgICBaaGlodTogXCJodHRwczovL3d3dy56aGlodS5jb20vcGVvcGxlL2FpeXVlY2h1YW5nXCIsXG4gICAgfSxcbiAgfSxcblxuICBmb290ZXI6ICdcdTk1N0ZcdTY3MUZcdTYyREJcdTY1MzZcdTdGMTZcdTdBMEJcdTRFMDBcdTVCRjlcdTRFMDBcdTVCNjZcdTU0NTghXHU1RkFFXHU0RkUxOkppYWJjZGVmaCwgPGEgaHJlZj1cImh0dHBzOi8vYmVpYW4ubWlpdC5nb3YuY24vXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHU5NUZESUNQXHU1OTA3MTkwMjE0ODZcdTUzRjctNjwvYT4nLFxuXG4gIGxvY2FsZXM6IHtcbiAgICBcIi9cIjoge1xuICAgICAgLy8gbmF2YmFyXG4gICAgICBuYXZiYXI6IHpoTmF2YmFyLFxuXG4gICAgICAvLyBzaWRlYmFyXG4gICAgICBzaWRlYmFyOiB6aFNpZGViYXIsXG5cbiAgICAgIGZvb3RlcjogXCJEZWZhdWx0IGZvb3RlclwiLFxuXG4gICAgICBkaXNwbGF5Rm9vdGVyOiB0cnVlLFxuXG4gICAgICBibG9nOiB7XG4gICAgICAgIG5hbWU6IFwiQUlcdTYwQTZcdTUyMUJcIixcbiAgICAgICAgYXZhdGFyOiBcIi9haXljLmpwZ1wiLFxuICAgICAgICBkZXNjcmlwdGlvbjogXCJcdTRFMDBcdTRFMkFcdTYwMURcdTgwMDNcdTgwMDUsXHU3RjE2XHU3QTBCXHU3OUMxXHU2NTU5IDF2MVwiLFxuICAgICAgICBpbnRybzogXCIvaW50cm8ubWRcIixcbiAgICAgICAgYXJ0aWNsZVBlclBhZ2U6IDYsXG4gICAgICB9LFxuXG4gICAgICAvLyBtZXRhTG9jYWxlczoge1xuICAgICAgLy8gICBlZGl0TGluazogXCJFZGl0IHRoaXMgcGFnZSBvbiBHaXRIdWJcIixcbiAgICAgIC8vIH0sXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENoaW5lc2UgbG9jYWxlIGNvbmZpZ1xuICAgICAqL1xuICAgIC8vIFwiL3poL1wiOiB7XG4gICAgLy8gICAvLyBuYXZiYXJcbiAgICAvLyAgIG5hdmJhcjogemhOYXZiYXIsXG5cbiAgICAvLyAgIC8vIHNpZGViYXJcbiAgICAvLyAgIHNpZGViYXI6IHpoU2lkZWJhcixcblxuICAgIC8vICAgZm9vdGVyOiBcIlx1OUVEOFx1OEJBNFx1OTg3NVx1ODExQVwiLFxuXG4gICAgLy8gICBkaXNwbGF5Rm9vdGVyOiB0cnVlLFxuXG4gICAgLy8gICBibG9nOiB7XG4gICAgLy8gICAgIGRlc2NyaXB0aW9uOiBcIlx1NEUwMFx1NEUyQVx1NTI0RFx1N0FFRlx1NUYwMFx1NTNEMVx1ODAwNVwiLFxuICAgIC8vICAgICBpbnRybzogXCIvemgvaW50cm8uaHRtbFwiLFxuICAgIC8vICAgfSxcblxuICAgIC8vICAgLy8gcGFnZSBtZXRhXG4gICAgLy8gICBtZXRhTG9jYWxlczoge1xuICAgIC8vICAgICBlZGl0TGluazogXCJcdTU3MjggR2l0SHViIFx1NEUwQVx1N0YxNlx1OEY5MVx1NkI2NFx1OTg3NVwiLFxuICAgIC8vICAgfSxcbiAgICAvLyB9LFxuICB9LFxuXG4gIGVuY3J5cHQ6IHtcbiAgICBjb25maWc6IHtcbiAgICAgIFwiLzF2MS8wMy1EYW5uaWUvMDEuaHRtbFwiOiBcIjEyMzEyM1wiLFxuICAgICAgXCIvMXYxLzAxLVRob21hcy1ody1ub3RlL1wiOiBbXCIxMjMxMjNcIl0sXG4gICAgICBcIi9jb2x1bW4vcHl0aG9uNjAvXCI6IFwiMTIzMTIzYVwiLFxuICAgICAgLy8gXCIvY29sdW1uL0ZpZnRoX2Jyb3RoZXJfcGhvdG9ncmFwaHlfY2xhc3MvXCI6IFwiMTIzMTIzYVwiLFxuICAgICAgLy8gXCIvY29sdW1uL2RhdGEtc3RydWN0dXJlL1wiOiBcIjEyMzEyM2FcIixcbiAgICAgIC8vIFwiL2NvbHVtbi93ZWIvXCI6IFwiMTIzMTIzYVwiLFxuICAgICAgXCIvZGVkYW8vXCI6IFwiMTIzMTIzYVwiLFxuICAgICAgLy8gXCIvY29sdW1uL2RhdGFfYW5hbHlzaXMvd2VlazFcIjogXCIxMjMxMjNhXCIsXG4gICAgICBcIi9jb2x1bW4vVGVuc29yRmxvdy9cdTk2RjZcdTU3RkFcdTc4NDBcdTVCOUVcdTYyMThcdTY3M0FcdTU2NjhcdTVCNjZcdTRFNjAvXCI6IFwiMTIzMTIzYVwiLFxuICAgICAgLy8gXCIvJHtlbmNvZGVVUkkoY29sdW1uL1RlbnNvckZsb3cvXHU5NkY2XHU1N0ZBXHU3ODQwXHU1QjlFXHU2MjE4XHU2NzNBXHU1NjY4XHU1QjY2XHU0RTYwKX0vXCI6IFwiMTIzMTIzYVwiLFxuICAgICAgXCIvY29sdW1uL1Byb2dyYW1taW5ndGhpbmtpbmcvXCI6IFwiMTIzMTIzYVwiLFxuICAgICAgXCIvY29sdW1uL3BsYXliYWNrLzAxLVRvbW15Lmh0bWxcIjogXCIyMDIyMDUxN1wiLFxuICAgICAgXCIvY29sdW1uL3BsYXliYWNrLzAyLUxLVy5odG1sXCI6IFwibGt3XCIsXG4gICAgICBcIi9jb2x1bW4vcGxheWJhY2svMDMtMjAyMjA2MTAuaHRtbFwiOiBcIjIwMjIwNjEwXCIsXG4gICAgfSxcbiAgfSxcblxuICBwbHVnaW5zOiB7XG4gICAgYmxvZzoge1xuICAgICAgYXV0b0V4Y2VycHQ6IHRydWUsXG4gICAgfSxcblxuICAgIC8vIElmIHlvdSBkb24ndCBuZWVkIGNvbW1lbnQgZmVhdHVyZSwgeW91IGNhbiByZW1vdmUgZm9sbG93aW5nIG9wdGlvblxuICAgIC8vIFRoZSBmb2xsb3dpbmcgY29uZmlnIGlzIGZvciBkZW1vIE9OTFksIGlmIHlvdSBuZWVkIGNvbW1lbnQgZmVhdHVyZSwgcGxlYXNlIGdlbmVyYXRlIGFuZCB1c2UgeW91ciBvd24gY29uZmlnLCBzZWUgY29tbWVudCBwbHVnaW4gZG9jdW1lbnRhdGlvbiBmb3IgZGV0YWlscy5cbiAgICAvLyBUbyBhdm9pZCBkaXN0dXJiaW5nIHRoZSB0aGVtZSBkZXZlbG9wZXIgYW5kIGNvbnN1bWluZyBoaXMgcmVzb3VyY2VzLCBwbGVhc2UgRE8gTk9UIHVzZSB0aGUgZm9sbG93aW5nIGNvbmZpZyBkaXJlY3RseSBpbiB5b3VyIHByb2R1Y3Rpb24gZW52aXJvbm1lbnQhISEhIVxuICAgIC8vIGNvbW1lbnQ6IHtcbiAgICAvLyAgIC8qKlxuICAgIC8vICAgICogVXNpbmcgR2lzY3VzXG4gICAgLy8gICAgKi9cbiAgICAvLyAgIC8vIHByb3ZpZGVyOiBcImdpc2N1c1wiLFxuICAgIC8vICAgLy8gcmVwbzogXCJCb3JuZm9ydGhpc0hKQi9jb21tZW50XCIsXG4gICAgLy8gICAvLyByZXBvSWQ6IFwiUl9rZ0RPSFRKRVN3XCIsXG4gICAgLy8gICAvLyBjYXRlZ29yeTogXCJBbm5vdW5jZW1lbnRzXCIsXG4gICAgLy8gICAvLyBjYXRlZ29yeUlkOiBcIkRJQ19rd0RPSFRKRVM4NENPX1F6XCIsXG5cbiAgICAvLyAgIC8qKlxuICAgIC8vICAgICogVXNpbmcgVHdpa29vXG4gICAgLy8gICAgKi9cbiAgICAvLyAgIC8vIHByb3ZpZGVyOiBcIlR3aWtvb1wiLFxuICAgIC8vICAgLy8gZW52SWQ6IFwiaHR0cHM6Ly90d2lrb28uY2NrbmJjLnZlcmNlbC5hcHBcIixcblxuICAgIC8vICAgLyoqXG4gICAgLy8gICAgKiBVc2luZyBXYWxpbmVcbiAgICAvLyAgICAqL1xuICAgIC8vICAgIHByb3ZpZGVyOiBcIldhbGluZVwiLFxuICAgIC8vICAgIHNlcnZlclVSTDogXCJodHRwczovL2NvbW1lbnQuYm9ybmZvcnRoaXMuY24vXCIsXG4gICAgLy8gICAgY29tbWVudDogdHJ1ZSwgLy8gXHU4QkM0XHU4QkJBXHU2NTcwXHU3RURGXHU4QkExXG4gICAgLy8gICAgcGFnZXZpZXc6IHRydWUsIC8vIFx1NkQ0Rlx1ODlDOFx1OTFDRlx1N0VERlx1OEJBMVxuICAgIC8vICAgIGNvcHlyaWdodDogZmFsc2UsXG4gICAgLy8gICAgZGFyazogdHJ1ZSxcbiAgICAvLyAgICBlbW9qaTogW1xuICAgIC8vICAgICAgJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC93YWxpbmVqcy9lbW9qaXNAMS4wLjAvcXEnLFxuICAgIC8vICAgICAgJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC93YWxpbmVqcy9lbW9qaXNAMS4wLjAvd2VpYm8nLFxuICAgIC8vICAgICAgJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC93YWxpbmVqcy9lbW9qaXNAMS4wLjAvYmlsaWJpbGknLFxuICAgIC8vICAgICAgJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC93YWxpbmVqcy9lbW9qaXNAMS4wLjAvYWx1cycsXG4gICAgLy8gICAgICAnaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dhbGluZWpzL2Vtb2ppc0AxLjAuMC90aWViYScsXG4gICAgLy8gICAgICAnaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dhbGluZWpzL2Vtb2ppc0AxLjAuMC90dy1lbW9qaScsXG4gICAgLy8gICAgXSxcbiAgICAvLyB9LFxuICAgIGNvbXBvbmVudHM6IFtcbiAgICAgIFwiQmFkZ2VcIixcbiAgICAgIFwiUERGXCIsXG4gICAgICBcIllvdVR1YmVcIixcbiAgICBdLFxuXG4gICAgLy8gRGlzYWJsZSBmZWF0dXJlcyB5b3UgZG9uJ3Qgd2FudCBoZXJlXG4gICAgbWRFbmhhbmNlOiB7XG4gICAgICB0YXNrbGlzdDogdHJ1ZSxcbiAgICAgIGltYWdlTWFyazogdHJ1ZSxcbiAgICAgIGZvb3Rub3RlOiB0cnVlLFxuICAgICAgdGFiczogdHJ1ZSxcbiAgICAgIGFsaWduOiB0cnVlLFxuICAgICAgYXR0cnM6IHRydWUsXG4gICAgICBjaGFydDogdHJ1ZSxcbiAgICAgIGNvZGV0YWJzOiB0cnVlLFxuICAgICAgY29udGFpbmVyOiB0cnVlLFxuICAgICAgZGVtbzogdHJ1ZSxcbiAgICAgIGVjaGFydHM6IHRydWUsXG4gICAgICBmbG93Y2hhcnQ6IHRydWUsXG4gICAgICBnZm06IHRydWUsXG4gICAgICBpbWFnZVNpemU6IHRydWUsXG4gICAgICBpbmNsdWRlOiB0cnVlLFxuICAgICAga2F0ZXg6IHRydWUsXG4gICAgICBsYXp5TG9hZDogdHJ1ZSxcbiAgICAgIG1hcms6IHRydWUsXG4gICAgICBtZXJtYWlkOiB0cnVlLFxuICAgICAgcGxheWdyb3VuZDoge1xuICAgICAgICBwcmVzZXRzOiBbXCJ0c1wiLCBcInZ1ZVwiXSxcbiAgICAgIH0sXG4gICAgICBwcmVzZW50YXRpb246IHtcbiAgICAgICAgcGx1Z2luczogW1wiaGlnaGxpZ2h0XCIsIFwibWF0aFwiLCBcInNlYXJjaFwiLCBcIm5vdGVzXCIsIFwiem9vbVwiXSxcbiAgICAgIH0sXG4gICAgICBzdHlsaXplOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBtYXRjaGVyOiBcIlJlY29tbWFuZGVkXCIsXG4gICAgICAgICAgcmVwbGFjZXI6ICh7IHRhZyB9KSA9PiB7XG4gICAgICAgICAgICBpZiAodGFnID09PSBcImVtXCIpXG4gICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdGFnOiBcIkJhZGdlXCIsXG4gICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJ0aXBcIiB9LFxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiUmVjb21tYW5kZWRcIixcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIHN1YjogdHJ1ZSxcbiAgICAgIHN1cDogdHJ1ZSxcbiAgICAgIHZwcmU6IHRydWUsXG4gICAgICB2dWVQbGF5Z3JvdW5kOiB0cnVlLFxuICAgIH0sXG5cbiAgICBjb3B5cmlnaHQ6IHtcbiAgICAgIGF1dGhvcjogXCJcdTlFQzRcdTVCQjZcdTVCOUR8QUlcdTYwQTZcdTUyMUJcIixcbiAgICAgIGdsb2JhbDogdHJ1ZSxcbiAgICAgIHRyaWdnZXJXb3JkczogMTAwLFxuICAgICAgZGlzYWJsZUNvcHk6IGZhbHNlLFxuICAgICAgZGlzYWJsZVNlbGVjdGlvbjogZmFsc2UsXG4gICAgfSxcbiAgICBcbiAgICBwd2E6IGZhbHNlLFxuICAgIC8vIHB3YToge1xuICAgIC8vICAgdXBkYXRlOiBcImhpbnRcIixcbiAgICAvLyAgIG1heFBpY1NpemU6IDkwMDAwLFxuICAgIC8vICAgbWF4U2l6ZTogOTAwMDAwMCxcbiAgICAvLyAgIC8vIGZhdmljb246IFwiL2Zhdmljb24uaWNvXCIsXG4gICAgLy8gICBjYWNoZUhUTUw6IGZhbHNlLFxuICAgIC8vICAgY2FjaGVQaWM6IGZhbHNlLFxuICAgIC8vICAgYXBwZW5kQmFzZTogdHJ1ZSxcbiAgICAvLyB9LFxuICB9LFxufSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQXNZLFNBQVMsd0JBQXdCOzs7QUNBbkMsU0FBUyxpQkFBaUI7QUFJOVosSUFBTyxnQkFBUSxVQUFVO0FBQUEsRUFDdkIsVUFBVTtBQUFBLEVBRVYsUUFBUTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sS0FBSztBQUFBLEVBQ1A7QUFBQSxFQUVBLFlBQVk7QUFBQSxFQUVaLFlBQVk7QUFBQSxFQUVaLE1BQU07QUFBQSxFQUlOLE1BQU07QUFBQSxFQUlOLFNBQVM7QUFBQSxFQUlULFVBQVU7QUFBQSxFQUVWLGVBQWU7QUFBQSxFQUVmLFVBQVUsQ0FBQyxVQUFVLFlBQVksUUFBUSxZQUFZLE9BQU8sYUFBYTtBQUFBLEVBRXpFLE1BQU07QUFBQSxJQUNKLFFBQVE7QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLE9BQU87QUFBQSxNQUNQLFFBQVE7QUFBQSxNQUNSLE9BQU87QUFBQSxNQUNQLElBQUk7QUFBQSxNQUNKLFNBQVM7QUFBQSxNQUNULE9BQU87QUFBQSxJQUNUO0FBQUEsRUFDRjtBQUFBLEVBRUEsUUFBUTtBQUFBLEVBRVIsU0FBUztBQUFBLElBQ1AsS0FBSztBQUFBLE1BRUgsUUFBUTtBQUFBLE1BR1IsU0FBUztBQUFBLE1BRVQsUUFBUTtBQUFBLE1BRVIsZUFBZTtBQUFBLE1BRWYsTUFBTTtBQUFBLFFBQ0osTUFBTTtBQUFBLFFBQ04sUUFBUTtBQUFBLFFBQ1IsYUFBYTtBQUFBLFFBQ2IsT0FBTztBQUFBLFFBQ1AsZ0JBQWdCO0FBQUEsTUFDbEI7QUFBQSxJQUtGO0FBQUEsRUEwQkY7QUFBQSxF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
