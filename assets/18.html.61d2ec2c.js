import{_ as o}from"./gzh.b03adfd2.js";import{_ as p}from"./zsxq.77f6dc86.js";import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c,a as n,d as s,b as e,e as t,r}from"./app.2f02f4cb.js";const u="/assets/4372228c8a70408abb54de7f17bc58fb.3762caaf.png",d="/assets/image-20220616225047380.85ca520a.png",k="/assets/image-20220616225257769.bf521c40.png",m="/assets/image-20220617224406069.4b761b09.png",v="/assets/image-20220617224826141.a8d1db2d.png",b="/assets/image-20220617225220341.a700d027.png",y="/assets/image-20220617234136701.46d06b35.png",h="/assets/image-20220618093524589.d1d7d054.png",g="/assets/image-20220618115159500.886fade1.png",f={},_=t('<p><img src="'+u+'" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0" loading="lazy"></p><p>\u4F60\u597D\uFF0C\u6211\u662F\u60A6\u521B\u3002</p><blockquote><p>Hello, I&#39;m Yue Chuang.</p></blockquote><p>\u6211\u6700\u8FD1\u60F3\u8981\u53BB\u5F00\u59CB\u5F00\u53D1 Python \u7B2C\u4E09\u65B9\u5E93\uFF0C\u4F46\u662F\u53D1\u73B0\u56FD\u5185\u8FD9\u6837\u7684\u6559\u7A0B\u592A\u5C11\u4E86\uFF0C\u6240\u4EE5\u5C31\u6211\u6765\u5199\u5427\uFF01</p><blockquote><p>I recently wanted to start developing Python third-party libraries, but found that there are too few such tutorials in the country, so I will write them instead!</p></blockquote><p>\u8FD8\u6709\u5C31\u662F\u66FE\u7ECF\u60F3\u521B\u5EFA\u4E00\u4E2A Python \u5E93\uFF0C\u65E0\u8BBA\u662F\u4E3A\u60A8\u7684\u5DE5\u4F5C\u56E2\u961F\u8FD8\u662F\u5728\u7EBF\u7684\u4E00\u4E9B\u5F00\u6E90\u9879\u76EE\uFF1F\u5728\u6B64\u535A\u5BA2\u4E2D\uFF0C\u60A8\u5C06\u5B66\u4E60\u5982\u4F55\u64CD\u4F5C\uFF01</p><blockquote><p>Ever wanted to create a Python library, albeit for your team at work or for some open source project online? In this blog you will learn how to!</p></blockquote><p>\u5F53\u60A8\u4F7F\u7528\u76F8\u540C\u7684\u5F00\u53D1\u5DE5\u5177 Pycharm \uFF0C\u4F60\u4F1A\u6700\u5BB9\u6613\u8DDF\u4E0A\u6211\u7684\u6559\u7A0B\uFF0C\u5F53\u7136\u60A8\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E0D\u540C\u7684\u5DE5\u5177\u3002</p><blockquote><p>The tutorial is easiest to follow when you are using the same tools, however it is also possible for you to use different ones.</p></blockquote><p>\u672C\u6587\u7AE0\u4F7F\u7528\u7684\u662F\u5DE5\u5177\u6709\uFF1A</p><blockquote><p>The tools used in this tutorial are:</p></blockquote><ul><li>MacOS\u300C\u5176\u5B9E\uFF0C\u4E0D\u7BA1\u4F60\u4F7F\u7528\u4F55\u79CD\u7535\u8111\u90FD\u53EF\u4EE5\u300DMacOS command prompt</li><li>Pycharm\u300C\u793E\u533A\u7248\u672C\u8DB3\u5DF2\u300D</li></ul><h2 id="\u7B2C-0-\u6B65-macos-\u547D\u4EE4\u884C\u547D\u4EE4\u300Cstep-0-macos-command-line-command\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-0-\u6B65-macos-\u547D\u4EE4\u884C\u547D\u4EE4\u300Cstep-0-macos-command-line-command\u300D" aria-hidden="true">#</a> \u7B2C 0 \u6B65\uFF1AMacOS \u547D\u4EE4\u884C\u547D\u4EE4\u300CStep 0: MacOS command line command\u300D</h2><p>\u6253\u5F00\u547D\u4EE4\u63D0\u793A\u7B26\u5E76\u521B\u5EFA\u4E00\u4E2A\u6587\u4EF6\u5939\uFF0C\u60A8\u5C06\u5728\u5176\u4E2D\u521B\u5EFA Python \u5E93\u3002</p><blockquote><p>Open your command prompt and create a folder in which you will create your Python library.</p></blockquote><p>\u8BF7\u8BB0\u4F4F\uFF1A</p><blockquote><p>Remember:</p></blockquote><ul><li><p><code>pwd</code> \u60A8\u53EF\u4EE5\u770B\u5230\u60A8\u5F53\u524D\u7684\u5DE5\u4F5C\u76EE\u5F55\u3002 \u300CWith <code>pwd</code> you can see your present working directory.\u300D</p></li><li><p><code>ls</code> \u60A8\u53EF\u4EE5\u5217\u51FA\u5F53\u524D\u76EE\u5F55\u4E2D\u7684\u6587\u4EF6\u5939\u548C\u6587\u4EF6\u3002 \u300CWith <code>ls</code> you can list the folders and files in your directory.\u300D</p></li><li><p><code>cd &lt;path&gt;</code> \u60A8\u53EF\u4EE5\u66F4\u6539\u5F53\u524D\u6240\u5728\u7684\u76EE\u5F55\u3002 \u300CWith <code>cd &lt;path&gt;</code> you can change the current present directory you are in.\u300D</p></li><li><p><code>mkdir &lt;folder&gt;</code> \u60A8\u53EF\u4EE5\u5728\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u4E2D\u521B\u5EFA\u4E00\u4E2A\u65B0\u6587\u4EF6\u5939\u3002 \u300CWith <code>mkdir &lt;folder&gt;</code> you can create a new folder in your working directory.\u300D</p></li></ul><h2 id="\u7B2C-1-\u6B65-\u521B\u5EFA\u4E00\u4E2A\u8981\u653E\u7F6E\u5E93\u7684\u76EE\u5F55\u300Cstep-1-create-a-directory-in-which-you-want-to-put-your-library\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-1-\u6B65-\u521B\u5EFA\u4E00\u4E2A\u8981\u653E\u7F6E\u5E93\u7684\u76EE\u5F55\u300Cstep-1-create-a-directory-in-which-you-want-to-put-your-library\u300D" aria-hidden="true">#</a> \u7B2C 1 \u6B65\uFF1A\u521B\u5EFA\u4E00\u4E2A\u8981\u653E\u7F6E\u5E93\u7684\u76EE\u5F55\u300CStep 1: Create a directory in which you want to put your library\u300D</h2><p>\u6211\u521B\u5EFA\u4E00\u4E2A\u6587\u4EF6\u5939\u540D\u4E3A\uFF1ATuringaiyc\uFF0C\u8FD9\u4E2A\u540D\u79F0\u5176\u5B9E\u4E5F\u662F\u6211\u540E\u9762\u53D1\u5E03\u5E93\u7684\u540D\u79F0\uFF0C\u6CE8\u610F\u4E0D\u8981\u592A\u666E\u904D\u56E0\u4E3A\u4F1A\u91CD\u590D\uFF0C\u91CD\u590D\u5C31\u4F1A\u5BFC\u81F4<strong>\u53D1\u5E03\u5E93\u5931\u8D25</strong>\u3002</p><blockquote><p>I created a folder called Turingaiyc, which is actually the name of the library I will publish later. Be careful not to make it too common because it will be repetitive, which will cause the library to fail.</p></blockquote><p>\u300CPS\uFF1A\u4F60\u5982\u679C Win \u7CFB\u7EDF\u7684\u8BDD\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u547D\u4EE4\uFF0C\u5982\u679C\u662F MacOS \u7684\u8BDD\u6211\u5176\u5B9E\u66F4\u559C\u6B22\u547D\u4EE4\u884C\u521B\u5EFA\u3002\u300D</p><blockquote><p>I created a folder called Turingaiyc, which is actually the name of the library I will publish later. Be careful not to make it too common because it will be repetitive, which will cause the library to fail.</p></blockquote><p><img src="'+d+'" alt="image-20220616225047380" loading="lazy"></p><p><img src="'+k+'" alt="image-20220616225257769" loading="lazy"></p><p>\u5C31\u6211\u800C\u8A00\uFF0C\u6211\u5C06\u4F7F\u7528\u7684\u6587\u4EF6\u5939\u662F <code>Turingaiyc</code>\u3002\u5C06\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u66F4\u6539\u4E3A\u60A8\u7684\u6587\u4EF6\u5939\u3002</p><blockquote><p>In my case, the folder I will be working with is <code>Turingaiyc</code>. Change the present working directory to be your folder.</p></blockquote><h2 id="\u7B2C-2-\u6B65-\u4E3A\u60A8\u7684\u6587\u4EF6\u5939\u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u73AF\u5883\u300Cstep-2-create-a-virtual-environment-for-your-folder\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-2-\u6B65-\u4E3A\u60A8\u7684\u6587\u4EF6\u5939\u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u73AF\u5883\u300Cstep-2-create-a-virtual-environment-for-your-folder\u300D" aria-hidden="true">#</a> \u7B2C 2 \u6B65\uFF1A\u4E3A\u60A8\u7684\u6587\u4EF6\u5939\u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u73AF\u5883\u300CStep 2: Create a virtual environment for your folder\u300D</h2><p>\u5728\u542F\u52A8\u60A8\u7684\u9879\u76EE\u65F6\uFF0C\u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u73AF\u5883\u6765\u5C01\u88C5\u60A8\u7684\u9879\u76EE\u603B\u662F\u4E00\u4E2A\u597D\u4E3B\u610F\u3002\u865A\u62DF\u73AF\u5883\u7531\u67D0\u4E2A Python \u7248\u672C\u548C\u4E00\u4E9B\u5E93\u7EC4\u6210\u3002</p><blockquote><p>When starting your project, it is always a good idea to create a virtual environment to encapsulate your project. A virtual environment consists of a certain Python version and some libraries.</p></blockquote>',30),q={href:"https://mp.weixin.qq.com/s/-LeK-O6pO5b2SQtB_H83gw",target:"_blank",rel:"noopener noreferrer"},w={href:"https://mp.weixin.qq.com/s/-LeK-O6pO5b2SQtB_H83gw",target:"_blank",rel:"noopener noreferrer"},x=t(`<p>\u865A\u62DF\u73AF\u5883\u53EF\u9632\u6B62\u4EE5\u540E\u9047\u5230\u4F9D\u8D56\u6027\u95EE\u9898\u3002 \u4F8B\u5982\uFF0C\u5728\u8F83\u65E7\u7684\u9879\u76EE\u4E2D\uFF0C\u60A8\u53EF\u80FD\u4F7F\u7528\u7684\u662F\u8F83\u65E7\u7248\u672C\u7684 numpy \u5E93\u3002\u4E00\u4E9B\u66FE\u7ECF\u8FD0\u884C\u826F\u597D\u7684\u65E7\u4EE3\u7801\u53EF\u80FD\u4F1A\u5728\u4F60\u66F4\u65B0 numpy \u7248\u672C\u540E\u4E0D\u80FD\u6B63\u5E38\u8FD0\u884C\u4E86\u3002 \u521B\u5EFA\u865A\u62DF\u73AF\u5883\u53EF\u4EE5\u9632\u6B62\u8FD9\u79CD\u60C5\u51B5\uFF0C\u5F53\u4F60\u4E0E\u5176\u4ED6\u4EBA\u534F\u4F5C\u65F6\uFF0C\u865A\u62DF\u73AF\u5883\u4E5F\u80FD\u786E\u4FDD\u4F60\u7684\u7A0B\u5E8F\u5728\u5176\u4ED6\u4EBA\u7684\u7535\u8111\u4E0A\u6B63\u5E38\u8FD0\u884C\u3002 \u53CD\u4E4B\u4EA6\u7136\u3002</p><blockquote><p>Virtual environments prevent the issue of running into dependency issues later on. For example, in older projects you might have worked with older versions of the <code>numpy</code> library. Some old code, that once worked beautifully, might stop working once you update its version. Perhaps parts of <code>numpy</code> are no longer compatible with other parts of your program. Creating virtual environments prevents this. They are also useful in cases when you are collaborating with someone else, and you want to make sure that your application is working on their computer, and vice versa.</p></blockquote><p>\u63A5\u4E0B\u6765\uFF0C\u4F60\u8981\u786E\u4FDD\u4F60\u5F53\u524D\u7684\u5DE5\u4F5C\u76EE\u5F55\u662F\u4F60\u521A\u521A\u521B\u5EFA\u7684\u76EE\u5F55\uFF0C( <code>cd &lt;path/to/folder&gt;</code> ) \u4E2D\u521B\u5EFA Python \u5E93\u7684\u6587\u4EF6\u5939\u3002\uFF09</p><blockquote><p>(Make sure you changed the present working directory to the folder you are going to create your Python library in (<code>cd &lt;path/to/folder&gt;</code>).)</p></blockquote><p>\u7EE7\u7EED\u5E76\u901A\u8FC7\u952E\u5165\u4EE5\u4E0B\u5185\u5BB9\u521B\u5EFA\u865A\u62DF\u73AF\u5883\uFF1A</p><blockquote><p>Go ahead and create a virtual environment by typing:</p></blockquote><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code>python3 -m venv venv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+m+'" alt="image-20220617224406069" loading="lazy"></p><p><img src="'+v+`" alt="image-20220617224826141" loading="lazy"></p><p>\u521B\u5EFA\u540E\uFF0C\u4F60\u73B0\u5728\u5FC5\u987B\u4F7F\u7528\u4EE5\u4E0B\u547D\u4EE4\u6FC0\u6D3B\u73AF\u5883\uFF1A</p><blockquote><p>Once it is created, you must now activate the environment by using:</p></blockquote><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code>source venv/bin/activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+b+`" alt="image-20220617225220341" loading="lazy"></p><p>\u6FC0\u6D3B\u865A\u62DF\u73AF\u5883\u4F1A\u4FEE\u6539 PATH \u548C shell \u7684\u53D8\u91CF\uFF0C\u4EE5\u6307\u5411\u60A8\u521B\u5EFA\u7684\u7279\u5B9A\u865A\u62DF\u73AF\u5883 Python \u7684\u8BBE\u7F6E\u3002PATH \u662F MacOS/Linux \u548C\u5176\u4ED6\u7C7B Unix \u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u7684\u73AF\u5883\u53D8\u91CF\uFF0C\u5B83\u544A\u8BC9 shell \u5728\u54CD\u5E94\u7528\u6237\u53D1\u51FA\u7684\u547D\u4EE4\u65F6\uFF0C\u53BB\u641C\u7D22\u54EA\u4E9B\u76EE\u5F55\u7684 Python \u6267\u884C\u73AF\u5883\uFF08\u5373\u51C6\u5907\u8FD0\u884C\u7684\u7A0B\u5E8F\uFF09\u3002\u547D\u4EE4\u63D0\u793A\u7B26\u5C06\u66F4\u6539\u4E3A\u901A\u8FC7\u6DFB\u52A0 ( yourenvname) \u6765\u6307\u793A\u60A8\u5F53\u524D\u6240\u5728\u7684\u865A\u62DF\u73AF\u5883\u3002</p><blockquote><p>Activating a virtual environment modifies the PATH and shell variables to point to the specific isolated Python set-up you created. PATH is an environmental variable in Linux and other Unix-like operating systems that tells the shell which directories to search for executable files (i.e., ready-to-run programs) in response to commands issued by a user. The command prompt will change to indicate which virtual environment you are currently in by prepending (<code>yourenvname</code>).</p></blockquote><p>\u4F60\u8981\u786E\u4FDD\u4F60\u7684\u73AF\u5883\u5DF2\u7ECF\u5B89\u88C5\u4E86 pip\u3001wheel\u3001setuptools\u3001twine\u3002\u6211\u4EEC\u7A0D\u540E\u5C06\u9700\u8981\u5B83\u4EEC\u6765\u6784\u5EFA\u6211\u4EEC\u7684 Python \u5E93\u3002</p><blockquote><p>In your environment, make sure you have pip installed <code>wheel</code>, <code>setuptools</code> and <code>twine</code>. We will need them for later to build our Python library.</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>pip install wheel
pip install setuptools
pip install twine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u4E5F\u53EF\u4EE5\u4E00\u6761\u547D\u4E86\u5B9E\u73B0\uFF1A</p><blockquote><p>Or it can be done with one life:</p></blockquote><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code>sudo pip install wheel setuptools twine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u7528\u7684\u662F MacOS \u6240\u4EE5\uFF0CWindows \u7684\u8BDD\uFF0C\u53BB\u6389 sudo\u3002</p><blockquote><p>I&#39;m using MacOS so for Windows, get rid of Sudo.</p></blockquote><h2 id="\u7B2C-3-\u6B65-\u521B\u5EFA\u6587\u4EF6\u5939\u7ED3\u6784\u300Cstep-3-create-a-folder-structure\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-3-\u6B65-\u521B\u5EFA\u6587\u4EF6\u5939\u7ED3\u6784\u300Cstep-3-create-a-folder-structure\u300D" aria-hidden="true">#</a> \u7B2C 3 \u6B65\uFF1A\u521B\u5EFA\u6587\u4EF6\u5939\u7ED3\u6784\u300CStep 3: Create a folder structure\u300D</h2><p>\u8FD9\u4E00\u6B65\uFF0C\u4E5F\u5C31\u662F\u521B\u5EFA\u6211\u4EEC\u5F00\u53D1\u5E93\u6240\u9700\u8981\u7684\u6587\u4EF6\u3002 \u5728 Pycharm \u4E2D\uFF0C\u6253\u5F00\u60A8\u7684\u6587\u4EF6\u5939 mypythonlibrary\uFF08\u6216\u4F60\u81EA\u5DF1\u521B\u5EFA\u7684\u6587\u4EF6\u5939\u540D\u79F0\uFF09\u3002\u5B83\u5E94\u8BE5\u662F\u8FD9\u6837\u7684\uFF1A</p><blockquote><p>In Pycharm, open your folder mypythonlibrary (or any name you have given your folder). It should look something like this:</p></blockquote><p><img src="`+y+'" alt="image-20220617234136701" loading="lazy"></p><p>\u4F60\u73B0\u5728\u53EF\u4EE5\u5F00\u59CB\u5411\u9879\u76EE\u6DFB\u52A0\u6587\u4EF6\u5939\u548C\u6587\u4EF6\u3002\u60A8\u53EF\u4EE5\u901A\u8FC7\u547D\u4EE4\u63D0\u793A\u7B26\u6216\u5728 Pycharm \u672C\u8EAB\u4E2D\u6267\u884C\u6B64\u64CD\u4F5C\u3002</p><blockquote><p>You now can start adding folders and files to your project. You can do this either through the command prompt or in Pycharm itself.</p></blockquote>',29),P=t("<li>\u521B\u5EFA\u4E00\u4E2A\u540D\u4E3A <code>setup.py</code> \u7684\u7A7A\u6587\u4EF6\uFF0C\u8FD9\u662F\u521B\u5EFA Python \u5E93\u65F6\u6700\u91CD\u8981\u7684\u6587\u4EF6\u4E4B\u4E00\uFF01\u300CCreate an empty file called <code>setup.py</code>. This is one of the most important files when creating a Python library!\u300D</li><li>\u521B\u5EFA\u4E00\u4E2A\u540D\u4E3A <code>README.md</code> \u7684\u7A7A\u6587\u4EF6\uFF0C\u4F60\u53EF\u4EE5\u5728\u6B64\u5904\u7F16\u5199 Markdown \u4EE5\u5411\u5176\u4ED6\u7528\u6237\u63CF\u8FF0\u6211\u4EEC\u7684\u5E93\u5185\u5BB9\u3002\u300CCreate an empty file called <code>README.md</code>. This is the place where you can write markdown to describe the contents of your library for other users.\u300D</li><li>\u521B\u5EFA\u4E00\u4E2A\u540D\u4E3A <code>TuringRobots</code> \uFF0C\u6216\u8005\u4EFB\u4F55\u60A8\u5E0C\u671B\u5728 pip \u5B89\u88C5\u65F6\u8C03\u7528 Python \u5E93\u7684\u6587\u4EF6\u5939\u3002\uFF08\u5982\u679C\u4F60\u60F3\u7A0D\u540E\u53D1\u5E03\u5B83\uFF0C\u8BE5\u540D\u79F0\u5728 pip \u4E0A\u5E94\u8BE5\u662F\u552F\u4E00\u7684\u3002\uFF09\u300CCreate a folder called <code>TuringRobots</code>, or whatever you want your Python library to be called when you pip install it. (The name should be unique on pip if you want to publish it later.)\u300D</li>",3),T={href:"https://pypi.org/search/?q=TuringRobots",target:"_blank",rel:"noopener noreferrer"},I=t('<p><img src="'+h+'" alt="image-20220618093524589" loading="lazy"></p><ol start="5"><li>\u5728 <code>TuringRobots</code> \u6587\u4EF6\u5939\u91CC\u9762\uFF0C\u521B\u5EFA\u540D\u4E3A <code>__init__.py</code> \u7684\u7A7A\u6587\u4EF6\u3002\u57FA\u672C\u4E0A\uFF0C\u4EFB\u4F55\u5305\u542B\u6587\u4EF6\u7684 <code>__init__.py</code> \u6587\u4EF6\u5939\uFF0C\u5728\u6211\u4EEC\u6784\u5EFA\u5B83\u65F6\uFF0C\u90FD\u5C06\u5305\u542B\u5728\u5E93\u4E2D\u3002\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u60A8\u53EF\u4EE5\u5C06 <code>__init__.py</code> \u6587\u4EF6\u7559\u7A7A\uFF0C\u4E5F\u5C31\u662F\u4E0D\u7528\u5199\u4EE3\u7801\u3002\u5728\u5BFC\u5165\u65F6\uFF0C\u5176\u4E2D\u7684 <code>__init__.py</code> \u91CC\u9762\u7684\u4EE3\u7801\u5C06\u88AB\u6267\u884C\uFF0C\u56E0\u6B64\u5B83\u5E94\u8BE5\u53EA\u5305\u542B\u80FD\u591F\u8FD0\u884C\u9879\u76EE\u6240\u9700\u7684\u6700\u5C11\u91CF\u4EE3\u7801\u3002\u73B0\u5728\uFF0C\u6211\u4EEC\u5C06\u5B83\u4FDD\u6301\u539F\u6837\u3002\u300CCreate an empty file inside <code>mypythonlib</code> that is called <code>__init__.py</code>. Basically, any folder that has an <code>__init__.py</code> file in it, will be included in the library when we build it. Most of the time, you can leave the <code>__init__.py</code> files empty. Upon import, the code within <code>__init__.py</code> gets executed, so it should contain only the minimal amount of code that is needed to be able to run your project. For now, we will leave them as is.\u300D</li><li>\u6B64\u5916\uFF0C\u5728 <code>TuringRobots</code> \u6587\u4EF6\u5939\u4E2D\uFF0C\u521B\u5EFA\u4E00\u4E2A\u540D\u4E3A <code>TuringRobots.py</code> \u300CAlso, in the same folder, create a file called <code>TuringRobots.py</code>.\u300D</li><li>\u6700\u540E\uFF0C\u5728\u60A8\u7684\u6839\u6587\u4EF6\u5939\u4E2D\u521B\u5EFA\u4E00\u4E2A\u6587\u4EF6\u5939\u6D4B\u8BD5\u3002\u5728\u91CC\u9762\uFF0C\u521B\u5EFA\u4E00\u4E2A\u7A7A <code>__init__.py</code> \u6587\u4EF6\u548C\u4E00\u4E2A\u7A7A\u7684 <code>test_myfunctions.py</code> \u300CAnd, finally, create a folder tests in your root folder. Inside, create an empty <code>__init__.py</code> file and an empty <code>test_myfunctions.py</code>.\u300D</li></ol><p>\u4F60\u6240\u521B\u5EFA\u7684\u6587\u4EF6\u5939\u548C\u4EE3\u7801\u6587\u4EF6\uFF0C\u73B0\u5728\u5E94\u5982\u4E0B\u6240\u793A\uFF1A</p><blockquote><p>Your set-up should now look something like this:</p></blockquote><p><img src="'+g+`" alt="image-20220618115159500" loading="lazy"></p><h2 id="\u7B2C-4-\u6B65-\u4E3A\u60A8\u7684\u5E93\u521B\u5EFA\u5185\u5BB9\u300Cstep-4-create-content-for-your-library\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-4-\u6B65-\u4E3A\u60A8\u7684\u5E93\u521B\u5EFA\u5185\u5BB9\u300Cstep-4-create-content-for-your-library\u300D" aria-hidden="true">#</a> \u7B2C 4 \u6B65\uFF1A\u4E3A\u60A8\u7684\u5E93\u521B\u5EFA\u5185\u5BB9\u300CStep 4: Create content for your library\u300D</h2><p>\u8981\u5C06\u51FD\u6570\u653E\u5165\u5E93\u4E2D\uFF0C\u60A8\u53EF\u4EE5\u5C06\u5B83\u4EEC\u653E\u5165 <code>TuringRobots.py</code> \u6587\u4EF6\u4E2D\u3002\u4F8B\u5982\uFF0C\u590D\u5236\u6587\u4EF6\u4E2D\u7684 TuringRobots \u51FD\u6570\uFF1A</p><blockquote><p>To put functions inside your library, you can place them in the <code>TuringRobots.py</code> file. For example, copy the TuringRobots function in your file:</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># @Time    : 2022/6/18 11:34</span>
<span class="token comment"># @Author  : AI\u60A6\u521B</span>
<span class="token comment"># @FileName: TuringRobots.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># @Blog    \uFF1Ahttps://bornforthis.cn/</span>
<span class="token keyword">import</span> json
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request
<span class="token keyword">import</span> os
<span class="token keyword">from</span> dotenv <span class="token keyword">import</span> load_dotenv

<span class="token keyword">def</span> <span class="token function">TuringRobots</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> over_print<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	load_dotenv<span class="token punctuation">(</span><span class="token punctuation">)</span>
	api_url <span class="token operator">=</span> <span class="token string">&quot;http://openapi.tuling123.com/openapi/api/v2&quot;</span>
	req <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;reqType&quot;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
		<span class="token string">&quot;perception&quot;</span><span class="token punctuation">:</span>
			<span class="token punctuation">{</span>
				<span class="token string">&quot;inputText&quot;</span><span class="token punctuation">:</span>
					<span class="token punctuation">{</span>
						<span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> text
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
				<span class="token string">&quot;selfInfo&quot;</span><span class="token punctuation">:</span>
					<span class="token punctuation">{</span>
						<span class="token string">&quot;location&quot;</span><span class="token punctuation">:</span>
							<span class="token punctuation">{</span>
								<span class="token string">&quot;city&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;\u53A6\u95E8&quot;</span><span class="token punctuation">,</span>
								<span class="token string">&quot;province&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;\u53A6\u95E8&quot;</span><span class="token punctuation">,</span>
								<span class="token string">&quot;street&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;\u6D77\u6CA7\u533A&quot;</span>
							<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token string">&quot;userInfo&quot;</span><span class="token punctuation">:</span>
			<span class="token punctuation">{</span>
				<span class="token string">&quot;apiKey&quot;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&quot;API_KEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
				<span class="token string">&quot;userId&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;OnlyUseAlphabet&quot;</span>
			<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment"># print(req)</span>
	<span class="token comment"># \u5C06\u5B57\u5178\u683C\u5F0F\u7684req\u7F16\u7801\u4E3Autf8</span>
	req <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
	<span class="token comment"># print(req)</span>

	http_post <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>api_url<span class="token punctuation">,</span> data<span class="token operator">=</span>req<span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>http_post<span class="token punctuation">)</span>
	response_str <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
	<span class="token comment"># print(response_str)</span>
	response_dic <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response_str<span class="token punctuation">)</span>
	<span class="token comment"># print(response_dic)</span>

	intent_code <span class="token operator">=</span> response_dic<span class="token punctuation">[</span><span class="token string">&#39;intent&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">]</span>
	results_text <span class="token operator">=</span> response_dic<span class="token punctuation">[</span><span class="token string">&#39;results&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;values&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span>
	<span class="token keyword">if</span> over_print<span class="token punctuation">:</span>
		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Turing\u7684\u56DE\u7B54\uFF1A&#39;</span><span class="token punctuation">)</span>
		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;code\uFF1A&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>intent_code<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;text\uFF1A&#39;</span> <span class="token operator">+</span> results_text<span class="token punctuation">)</span>
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>intent_code<span class="token punctuation">)</span><span class="token punctuation">,</span> results_text<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
	text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u4F60\u7684\u5BF9\u8BDD\uFF1A&quot;</span><span class="token punctuation">)</span>
	code<span class="token punctuation">,</span> content <span class="token operator">=</span> TuringRobots<span class="token punctuation">(</span>text<span class="token punctuation">,</span> over_print<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u5355\u7684\u673A\u5668\u4EBA\u5BF9\u8BDD\uFF0C\u5BF9\u4E8E Python \u6D4B\u8BD5\uFF0C\u53EF\u4EE5\u4F7F\u7528 pytest \u548C pytest-runner \u5E93\u3002\u5728\u865A\u62DF\u73AF\u5883\u4E2D\u5B89\u88C5\u5E93\uFF1A</p><blockquote><p>A simple robot dialogue is implemented above, For testing with Python you can use the libraries <code>pytest</code> and <code>pytest-runner</code>. Install the library in your virtual environment:</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>pip install pytest
pip install pytest<span class="token operator">-</span>runner
pip install python<span class="token operator">-</span>dotenv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BA9\u6211\u4EEC\u4E3A\u9879\u76EE\u521B\u5EFA\u4E00\u4E2A\u5C0F\u6D4B\u8BD5\uFF0C\u6D4B\u8BD5\u5982\u4E0B\uFF1A</p><blockquote><p>Let&#39;s create a small test for the project that looks like this:</p><p><code>TuringRobots_Tests.py</code></p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>from TuringRobots import TuringRobots

def test_TuringRobots():
	assert TuringRobots.TuringRobots(&quot;\u6211\u662F\u5929\u624D\uFF0C\u90A3\u4F60\u5462\uFF1F&quot;, over_print=True)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\uFF0C\u8BA9\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A <code>setup.py</code> \u6587\u4EF6\uFF0C\u5B83\u5C06\u5E2E\u52A9\u6211\u4EEC\u6784\u5EFA\u5E93\u3002<code>setup.py</code> \u7684\u5185\u5BB9\u5982\u4E0B\u6240\u793A\uFF1A</p><blockquote><p>Finally, let\u2019s create a <code>setup.py</code> file, that will help us to build the library. A limited version of <code>setup.py</code> will look something like this:</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> setuptools <span class="token keyword">import</span> find_packages<span class="token punctuation">,</span> setup
setup<span class="token punctuation">(</span>
    name<span class="token operator">=</span><span class="token string">&#39;mypythonlib&#39;</span><span class="token punctuation">,</span>
    packages<span class="token operator">=</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    version<span class="token operator">=</span><span class="token string">&#39;0.1.0&#39;</span><span class="token punctuation">,</span>
    description<span class="token operator">=</span><span class="token string">&#39;My first Python library&#39;</span><span class="token punctuation">,</span>
    author<span class="token operator">=</span><span class="token string">&#39;Me&#39;</span><span class="token punctuation">,</span>
    license<span class="token operator">=</span><span class="token string">&#39;MIT&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u7684\u8BBE\u7F6E\uFF1A\u3010\u4F60\u4EEC\u770B\u7B80\u6D01\u7684\u914D\u7F6E\u5373\u53EF\u3011</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># !/usr/bin/env python</span>
<span class="token comment"># @Time    : 2022/6/18 11:51</span>
<span class="token comment"># @Author  : AI\u60A6\u521B</span>
<span class="token comment"># @FileName: setup.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># @Blog    \uFF1Ahttps://bornforthis.cn/</span>
<span class="token comment"># Note: To use the &#39;upload&#39; functionality of this file, you must:</span>
<span class="token comment">#   $ pipenv install twine --dev</span>

<span class="token keyword">import</span> io
<span class="token keyword">import</span> os
<span class="token keyword">import</span> sys
<span class="token keyword">from</span> shutil <span class="token keyword">import</span> rmtree

<span class="token keyword">from</span> setuptools <span class="token keyword">import</span> find_packages<span class="token punctuation">,</span> setup<span class="token punctuation">,</span> Command

<span class="token comment"># Package meta-data.</span>
NAME <span class="token operator">=</span> <span class="token string">&#39;TuringRobots&#39;</span>
DESCRIPTION <span class="token operator">=</span> <span class="token string">&#39;Simple dialogue test Turing robot.&#39;</span>
URL <span class="token operator">=</span> <span class="token string">&#39;https://github.com/AndersonHJB/TuringRobots&#39;</span>
EMAIL <span class="token operator">=</span> <span class="token string">&#39;bornforthis@bornforthis.cn&#39;</span>
AUTHOR <span class="token operator">=</span> <span class="token string">&#39;Bornforthis&#39;</span>
REQUIRES_PYTHON <span class="token operator">=</span> <span class="token string">&#39;&gt;=3.6.0&#39;</span>
VERSION <span class="token operator">=</span> <span class="token string">&#39;1.2.5&#39;</span>

<span class="token comment"># What packages are required for this module to be executed?</span>
REQUIRED <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token comment"># &#39;dotenv==0.0.5&#39;,</span>
<span class="token punctuation">]</span>

<span class="token comment"># What packages are optional?</span>
EXTRAS <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token comment"># &#39;fancy feature&#39;: [&#39;django&#39;],</span>
<span class="token punctuation">}</span>

<span class="token comment"># The rest you shouldn&#39;t have to touch too much :)</span>
<span class="token comment"># ------------------------------------------------</span>
<span class="token comment"># Except, perhaps the License and Trove Classifiers!</span>
<span class="token comment"># If you do change the License, remember to change the Trove Classifier for that!</span>

here <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Import the README and use it as the long-description.</span>
<span class="token comment"># Note: this will only work if &#39;README.md&#39; is present in your MANIFEST.in file!</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
	<span class="token keyword">with</span> io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>here<span class="token punctuation">,</span> <span class="token string">&#39;README.md&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
		long_description <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>
	long_description <span class="token operator">=</span> DESCRIPTION

<span class="token comment"># Load the package&#39;s __version__.py module as a dictionary.</span>
about <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> VERSION<span class="token punctuation">:</span>
	project_slug <span class="token operator">=</span> NAME<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>here<span class="token punctuation">,</span> project_slug<span class="token punctuation">,</span> <span class="token string">&#39;__version__.py&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
		<span class="token keyword">exec</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> about<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
	about<span class="token punctuation">[</span><span class="token string">&#39;__version__&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> VERSION


<span class="token keyword">class</span> <span class="token class-name">UploadCommand</span><span class="token punctuation">(</span>Command<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token triple-quoted-string string">&quot;&quot;&quot;Support setup.py upload.&quot;&quot;&quot;</span>

	description <span class="token operator">=</span> <span class="token string">&#39;Build and publish the package.&#39;</span>
	user_options <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

	<span class="token decorator annotation punctuation">@staticmethod</span>
	<span class="token keyword">def</span> <span class="token function">status</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token triple-quoted-string string">&quot;&quot;&quot;Prints things in bold.&quot;&quot;&quot;</span>
		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\033[1m{0}\\033[0m&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token keyword">def</span> <span class="token function">initialize_options</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">pass</span>

	<span class="token keyword">def</span> <span class="token function">finalize_options</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">pass</span>

	<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">try</span><span class="token punctuation">:</span>
			self<span class="token punctuation">.</span>status<span class="token punctuation">(</span><span class="token string">&#39;Removing previous builds\u2026&#39;</span><span class="token punctuation">)</span>
			rmtree<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>here<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">except</span> OSError<span class="token punctuation">:</span>
			<span class="token keyword">pass</span>

		self<span class="token punctuation">.</span>status<span class="token punctuation">(</span><span class="token string">&#39;Building Source and Wheel (universal) distribution\u2026&#39;</span><span class="token punctuation">)</span>
		os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;python3 -m build&#39;</span><span class="token punctuation">)</span>
		<span class="token comment"># os.system(&#39;{0} setup.py sdist bdist_wheel --universal&#39;.format(sys.executable))</span>
		<span class="token comment"># os.system(&#39;{0} setup.py sdist build --universal&#39;.format(sys.executable))</span>
		<span class="token comment"># os.system(&#39;{0} setup.py sdist build --universal&#39;.format(sys.executable))</span>

		self<span class="token punctuation">.</span>status<span class="token punctuation">(</span><span class="token string">&#39;Uploading the package to PyPI via Twine\u2026&#39;</span><span class="token punctuation">)</span>
		os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;twine upload dist/*&#39;</span><span class="token punctuation">)</span>

		self<span class="token punctuation">.</span>status<span class="token punctuation">(</span><span class="token string">&#39;Pushing git tags\u2026&#39;</span><span class="token punctuation">)</span>
		os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;git tag v{0}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>about<span class="token punctuation">[</span><span class="token string">&#39;__version__&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;git push --tags&#39;</span><span class="token punctuation">)</span>

		sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment"># Where the magic happens:</span>
setup<span class="token punctuation">(</span>
	name<span class="token operator">=</span>NAME<span class="token punctuation">,</span>
	version<span class="token operator">=</span>about<span class="token punctuation">[</span><span class="token string">&#39;__version__&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	description<span class="token operator">=</span>DESCRIPTION<span class="token punctuation">,</span>
	long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>
	long_description_content_type<span class="token operator">=</span><span class="token string">&#39;text/markdown&#39;</span><span class="token punctuation">,</span>
	author<span class="token operator">=</span>AUTHOR<span class="token punctuation">,</span>
	author_email<span class="token operator">=</span>EMAIL<span class="token punctuation">,</span>
	python_requires<span class="token operator">=</span>REQUIRES_PYTHON<span class="token punctuation">,</span>
	url<span class="token operator">=</span>URL<span class="token punctuation">,</span>
	<span class="token comment"># packages=find_packages(exclude=[&quot;tests&quot;, &quot;*.tests&quot;, &quot;*.tests.*&quot;, &quot;tests.*&quot;]),</span>
	<span class="token comment"># packages=find_packages(exclude=[&quot;TuringRobots&quot;, ]),</span>
	packages<span class="token operator">=</span>find_packages<span class="token punctuation">(</span>include<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;TuringRobots&quot;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token comment"># If your package is a single module, use this instead of &#39;packages&#39;:</span>
	<span class="token comment"># py_modules=[&#39;mypackage&#39;],</span>

	<span class="token comment"># entry_points={</span>
	<span class="token comment">#     &#39;console_scripts&#39;: [&#39;mycli=mymodule:cli&#39;],</span>
	<span class="token comment"># },</span>
	install_requires<span class="token operator">=</span>REQUIRED<span class="token punctuation">,</span>
	<span class="token comment"># setup_requires=[&#39;pytest-runner&#39;],</span>
	<span class="token comment"># tests_require=[&#39;pytest&#39;],</span>
	<span class="token comment"># tests_require=[&#39;pytest&#39;, &#39;dotenv&#39;],</span>
	test_suite<span class="token operator">=</span><span class="token string">&#39;tests&#39;</span><span class="token punctuation">,</span>
	extras_require<span class="token operator">=</span>EXTRAS<span class="token punctuation">,</span>
	include_package_data<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
	license<span class="token operator">=</span><span class="token string">&#39;MIT&#39;</span><span class="token punctuation">,</span>
	classifiers<span class="token operator">=</span><span class="token punctuation">[</span>
		<span class="token comment"># Trove classifiers</span>
		<span class="token comment"># Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers</span>
		<span class="token string">&#39;License :: OSI Approved :: MIT License&#39;</span><span class="token punctuation">,</span>
		<span class="token string">&#39;Programming Language :: Python&#39;</span><span class="token punctuation">,</span>
		<span class="token string">&#39;Programming Language :: Python :: 3&#39;</span><span class="token punctuation">,</span>
		<span class="token string">&#39;Programming Language :: Python :: 3.6&#39;</span><span class="token punctuation">,</span>
		<span class="token string">&#39;Programming Language :: Python :: Implementation :: CPython&#39;</span><span class="token punctuation">,</span>
		<span class="token string">&#39;Programming Language :: Python :: Implementation :: PyPy&#39;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token comment"># $ setup.py publish support.</span>
	cmdclass<span class="token operator">=</span><span class="token punctuation">{</span>
		<span class="token string">&#39;upload&#39;</span><span class="token punctuation">:</span> UploadCommand<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C-5-\u6B65-\u8BBE\u7F6E\u60A8\u60F3\u8981\u521B\u5EFA\u7684\u5305\u300Cset-the-packages-you-would-like-to-create\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-5-\u6B65-\u8BBE\u7F6E\u60A8\u60F3\u8981\u521B\u5EFA\u7684\u5305\u300Cset-the-packages-you-would-like-to-create\u300D" aria-hidden="true">#</a> \u7B2C 5 \u6B65\uFF1A\u8BBE\u7F6E\u60A8\u60F3\u8981\u521B\u5EFA\u7684\u5305\u300CSet the packages you would like to create\u300D</h2><p>setup \u4E2D\u7684 name \u53D8\u91CF\u4FDD\u5B58\u60A8\u5E0C\u671B\u5305\u8F6E\u6587\u4EF6\u5177\u6709\u7684\u4EFB\u4F55\u540D\u79F0\u3002\u4E3A\u4E86\u65B9\u4FBF\u8D77\u89C1\uFF0C\u6211\u4EEC\u5C06\u5176\u547D\u540D\u4E3A\u4E0E\u6587\u4EF6\u5939\u76F8\u540C\u7684\u540D\u79F0\u3002</p><blockquote><p>The name variable in setup holds whatever name you want your package wheel file to have. To make it easy, we will gave it the same name as the folder.</p></blockquote><p>\u867D\u7136\u539F\u5219\u4E0A <code>find_packages()</code> \u53EF\u4EE5\u4E0D\u5E26\u4EFB\u4F55\u53C2\u6570\u4F7F\u7528\uFF0C\u4F46\u8FD9\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5305\u542B\u4E0D\u9700\u8981\u7684\u5305\u3002 \u6240\u4EE5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8FD9\u4E48\u6765\u5199\uFF1A</p><p>\u4F8B\u5982\uFF0C\u5982\u679C\u60A8\u5728 <code>tests/</code> \u76EE\u5F55\u4E2D\u5305\u542B <code>__init__.py</code> , \u5C31\u4F1A\u53D1\u751F\u8FD9\u79CD\u60C5\u51B5\u3002\u53E6\u5916\uFF0C\u60A8\u4E5F\u53EF\u4EE5\u4F7F\u7528 exclude \u53C2\u6570\u663E\u5F0F\u5730\u963B\u6B62\u5728\u5305\u4E2D\u5305\u542B\u6D4B\u8BD5\uFF0C\u4F46\u662F\u8FD9\u6837\u505A\u7A0D\u5FAE\u4E0D\u90A3\u4E48\u5065\u58EE\u3002\u8BA9\u6211\u4EEC\u628A\u5B83\u6539\u4E3A\u5982\u4E0B:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> setuptools <span class="token keyword">import</span> find_packages<span class="token punctuation">,</span> setup
setup<span class="token punctuation">(</span>
    name<span class="token operator">=</span><span class="token string">&#39;mypythonlib&#39;</span><span class="token punctuation">,</span>
    packages<span class="token operator">=</span>find_packages<span class="token punctuation">(</span>include<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;mypythonlib&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    version<span class="token operator">=</span><span class="token string">&#39;0.1.0&#39;</span><span class="token punctuation">,</span>
    description<span class="token operator">=</span><span class="token string">&#39;My first Python library&#39;</span><span class="token punctuation">,</span>
    author<span class="token operator">=</span><span class="token string">&#39;Me&#39;</span><span class="token punctuation">,</span>
    license<span class="token string">&#39;MIT&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C-6-\u6B65-\u8BBE\u7F6E\u5E93\u6240\u9700\u7684\u8981\u6C42\u300Cset-the-requirements-your-library-needs\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-6-\u6B65-\u8BBE\u7F6E\u5E93\u6240\u9700\u7684\u8981\u6C42\u300Cset-the-requirements-your-library-needs\u300D" aria-hidden="true">#</a> \u7B2C 6 \u6B65\uFF1A\u8BBE\u7F6E\u5E93\u6240\u9700\u7684\u8981\u6C42\u300CSet the requirements your library needs\u300D</h2><p>\u6CE8\u610F\uFF0C\u5F53\u4F60\u7684\u9879\u76EE\u88AB\u5176\u4ED6\u4EBA\u4F5C\u4E3A\u4F9D\u8D56\u9879\u5B89\u88C5\u65F6\uFF0Cpip \u4E0D\u4F1A\u4F7F\u7528<code>requirements.yml</code>/ <code>requirements.txt</code>\u3002 \u901A\u5E38\uFF0C\u4E3A\u6B64\uFF0C\u60A8\u5FC5\u987B\u5728 <code>setup.py</code> \u6587\u4EF6\u7684 <code>install_requires</code> \u548C <code>tests_require</code> \u53C2\u6570\u4E2D\u6307\u5B9A\u4F9D\u8D56\u9879\u3002</p><blockquote><p>Note that pip does not use <code>requirements.yml</code> / <code>requirements.txt</code> when your project is installed as a dependency by others. Generally, for that, you will have to specify dependencies in the <code>install_requires</code> and <code>tests_require</code> arguments in your <code>setup.py</code> file.</p></blockquote><p><code>Install_requires</code> \u5E94\u8BE5\u4EC5\u9650\u4E8E\u7EDD\u5BF9\u9700\u8981\u7684\u8F6F\u4EF6\u5305\u5217\u8868\u3002\u8FD9\u662F\u56E0\u4E3A\u60A8\u4E0D\u60F3\u8BA9\u7528\u6237\u5B89\u88C5\u4E0D\u5FC5\u8981\u7684\u8F6F\u4EF6\u5305\u3002 <strong>\u53E6\u8BF7\u6CE8\u610F\uFF0C\u4F60\u4E0D\u9700\u8981\u5217\u51FA\u5C5E\u4E8E\u6807\u51C6 Python \u5E93\u7684\u5305\u3002</strong></p><blockquote><p><code>Install_requires</code> should be limited to the list of packages that are absolutely needed. This is because you do not want to make users install unnecessary packages. Also note that you do not need to list packages that are part of the standard Python library.</p></blockquote><p>\u5982\u679C\u4F60\u7528\u7684\u662F Python \u81EA\u5E26\u7684\u5E93\uFF0C\u662F\u53EF\u4EE5\u4E0D\u7528\u5199\u7684\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u8FD9\u4E2A\u5E93\u662F\u4E00\u76F4\u5230\u73B0\u5728\u7684 Python \u672C\u7248\u7684\u53EF\u4EE5\u4F7F\u7528\u7684\u3002 \u4E5F\u8BB8\u4F60\u8FD8\u8BB0\u5F97\u6211\u4EEC <code>pytest</code> \u3001<code>numpy</code> \u4E4B\u524D\u5B89\u88C5\u8FC7\u8FD9\u4E2A\u5E93\u3002\u5F53\u7136\uFF0C\u4F60\u4E0D\u60F3\u5728\u5176\u4E2D\u6DFB\u52A0 <code>pytest</code> \u4F9D\u8D56\u9879\u3002\u8FD9\u4E2A\u5305\u7684\u7528\u6237\u4E0D\u9700\u8981\u5B83\u3002\u4E3A\u4E86\u4EC5\u5728\u8FD0\u884C\u6D4B\u8BD5\u65F6\u81EA\u52A8\u5B89\u88C5\u5B83\uFF0C\u60A8\u53EF\u4EE5\u5C06\u4EE5\u4E0B\u5185\u5BB9\u6DFB\u52A0\u5230\u60A8\u7684 <code>setup.py</code>\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> setuptools <span class="token keyword">import</span> find_packages<span class="token punctuation">,</span> setup
setup<span class="token punctuation">(</span>
    name<span class="token operator">=</span><span class="token string">&#39;mypythonlib&#39;</span><span class="token punctuation">,</span>
    packages<span class="token operator">=</span>find_packages<span class="token punctuation">(</span>include<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;mypythonlib&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    version<span class="token operator">=</span><span class="token string">&#39;0.1.0&#39;</span><span class="token punctuation">,</span>
    description<span class="token operator">=</span><span class="token string">&#39;My first Python library&#39;</span><span class="token punctuation">,</span>
    author<span class="token operator">=</span><span class="token string">&#39;Me&#39;</span><span class="token punctuation">,</span>
    license<span class="token operator">=</span><span class="token string">&#39;MIT&#39;</span><span class="token punctuation">,</span>
    install_requires<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    setup_requires<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;pytest-runner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    tests_require<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;pytest==4.4.1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    test_suite<span class="token operator">=</span><span class="token string">&#39;tests&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\uFF1A\u5C06\u6267\u884C\u5B58\u50A8\u5728 \u201Ctests\u201D \u6587\u4EF6\u5939\u4E2D\u7684\u6240\u6709\u6D4B\u8BD5\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>python setup<span class="token punctuation">.</span>py pytest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Running:</p><p><code>&gt; python setup.py pytest</code></p><p>will execute all tests stored in the \u2018tests\u2019 folder.</p><blockquote><p>\u4E0B\u9762\u662F\u7B80\u5355\u7684\u4EE3\u7801\u6D4B\u8BD5\u8F93\u51FA\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token punctuation">(</span>venv<span class="token punctuation">)</span> aiyc@aiyc<span class="token punctuation">:</span><span class="token operator">~</span><span class="token operator">/</span>Linux_Code<span class="token operator">/</span>mypythonlibrary$ python setup<span class="token punctuation">.</span>py pytest
running pytest
running egg_info
creating mypythonlib<span class="token punctuation">.</span>egg<span class="token operator">-</span>info
writing mypythonlib<span class="token punctuation">.</span>egg<span class="token operator">-</span>info<span class="token operator">/</span>PKG<span class="token operator">-</span>INFO
writing dependency_links to mypythonlib<span class="token punctuation">.</span>egg<span class="token operator">-</span>info<span class="token operator">/</span>dependency_links<span class="token punctuation">.</span>txt
writing requirements to mypythonlib<span class="token punctuation">.</span>egg<span class="token operator">-</span>info<span class="token operator">/</span>requires<span class="token punctuation">.</span>txt
writing top<span class="token operator">-</span>level names to mypythonlib<span class="token punctuation">.</span>egg<span class="token operator">-</span>info<span class="token operator">/</span>top_level<span class="token punctuation">.</span>txt
writing manifest <span class="token builtin">file</span> <span class="token string">&#39;mypythonlib.egg-info/SOURCES.txt&#39;</span>
reading manifest <span class="token builtin">file</span> <span class="token string">&#39;mypythonlib.egg-info/SOURCES.txt&#39;</span>
writing manifest <span class="token builtin">file</span> <span class="token string">&#39;mypythonlib.egg-info/SOURCES.txt&#39;</span>
running build_ext
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> test session starts <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
platform linux <span class="token operator">-</span><span class="token operator">-</span> Python <span class="token number">3.8</span><span class="token number">.10</span><span class="token punctuation">,</span> pytest<span class="token operator">-</span><span class="token number">6.2</span><span class="token number">.4</span><span class="token punctuation">,</span> py<span class="token operator">-</span><span class="token number">1.10</span><span class="token number">.0</span><span class="token punctuation">,</span> pluggy<span class="token operator">-</span><span class="token number">0.13</span><span class="token number">.1</span>
rootdir<span class="token punctuation">:</span> <span class="token operator">/</span>home<span class="token operator">/</span>aiyc<span class="token operator">/</span>Linux_Code<span class="token operator">/</span>mypythonlibrary
collected <span class="token number">1</span> item                                                                                                                                     

tests<span class="token operator">/</span>test_myfunctions<span class="token punctuation">.</span>py <span class="token punctuation">.</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h2 id="\u7B2C-7-\u6B65-\u6784\u5EFA\u4F60\u7684\u5E93\u300Cstep-5-build-your-library\u300D" tabindex="-1"><a class="header-anchor" href="#\u7B2C-7-\u6B65-\u6784\u5EFA\u4F60\u7684\u5E93\u300Cstep-5-build-your-library\u300D" aria-hidden="true">#</a> \u7B2C 7 \u6B65\uFF1A\u6784\u5EFA\u4F60\u7684\u5E93\u300CStep 5: Build your library\u300D</h2><p>\u73B0\u5728\u6240\u6709\u5185\u5BB9\u90FD\u5DF2\u51C6\u5907\u5C31\u7EEA\uFF0C\u6211\u4EEC\u8981\u6784\u5EFA\u6211\u4EEC\u7684\u5E93\u3002\u786E\u4FDD\u60A8\u5F53\u524D\u7684\u5DE5\u4F5C\u76EE\u5F55\u662F <code>/path/to/mypythonlibrary</code>\uFF08\u56E0\u6B64\u662F\u9879\u76EE\u7684\u6839\u6587\u4EF6\u5939\uFF09\u3002\u5728\u60A8\u7684\u547D\u4EE4\u63D0\u793A\u7B26\u4E2D\uFF0C\u8FD0\u884C\uFF1A</p><blockquote><p>Now that all the content is there, we want to build our library. Make sure your present working directory is <code>/path/to/mypythonlibrary </code>(so the root folder of your project). In your command prompt, run:</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>python setup<span class="token punctuation">.</span>py bdist_wheel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u60A8\u7684\u8F6E\u6587\u4EF6\u5B58\u50A8\u5728\u73B0\u5728\u521B\u5EFA\u7684 \u201Cdist\u201D \u6587\u4EF6\u5939\u4E2D\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u65B9\u6CD5\u5B89\u88C5\u60A8\u7684\u5E93\uFF1A</p><blockquote><p>Your wheel file is stored in the \u201Cdist\u201D folder that is now created. You can install your library by using:</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>pip install <span class="token operator">/</span>path<span class="token operator">/</span>to<span class="token operator">/</span>wheelfile<span class="token punctuation">.</span>whl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BF7\u6CE8\u610F\uFF0C\u60A8\u8FD8\u53EF\u4EE5\u5C06\u60A8\u7684\u5E93\u53D1\u5E03\u5230\u60A8\u5DE5\u4F5C\u573A\u6240\u5185\u8054\u7F51\u4E0A\u7684\u5185\u90E8\u6587\u4EF6\u7CFB\u7EDF\uFF0C\u6216\u53D1\u5E03\u5230\u5B98\u65B9 PyPI \u5B58\u50A8\u5E93\u5E76\u4ECE\u90A3\u91CC\u5B89\u88C5\u5B83\u3002 \u5B89\u88C5 Python \u5E93\u540E\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u547D\u4EE4\u5BFC\u5165\u5B83\uFF1A</p><blockquote><p>Note that you could also publish your library to an internal file system on intranet at your workplace, or to the official PyPI repository and install it from there.Once you have installed your Python library, you can import it using:</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> mypythonlib
<span class="token keyword">from</span> mypythonlib <span class="token keyword">import</span> myfunctions
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>\u6211\u81EA\u5DF1\u4F7F\u7528\u5982\u4E0B\u5B98\u65B9\u6784\u5EFA\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>python3 <span class="token operator">-</span>m pip install <span class="token operator">-</span><span class="token operator">-</span>upgrade build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>python3 <span class="token operator">-</span>m build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code># \u6D4B\u8BD5\u4EE3\u7801
python setup.py pytest
# \u63D0\u4EA4\u4EE3\u7801
python setup.py upload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0\uFF1A</h2>`,56),R={href:"https://bornforthis.cn/posts/17.html",target:"_blank",rel:"noopener noreferrer"},S={href:"https://packaging.python.org/en/latest/tutorials/packaging-projects/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://packaging.python.org/en/latest/specifications/pypirc/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://medium.com/analytics-vidhya/how-to-create-a-python-library-7d5aea80cc3f",target:"_blank",rel:"noopener noreferrer"},M={href:"https://medium.com/@alexbebereche/how-to-hide-you-api-key-with-python-5cc63d2a6c45",target:"_blank",rel:"noopener noreferrer"},O=n("p",null,"\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01",-1),C=n("details",{class:"custom-container details"},[n("summary",null,"\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011"),n("p",null,[n("img",{src:o,alt:"",loading:"lazy"})])],-1),N={class:"custom-container info"},L=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),j=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),U=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),B={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},W=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),z=n("p",null,[n("img",{src:p,alt:"",loading:"lazy"})],-1);function F(H,D){const a=r("ExternalLinkIcon");return l(),c("div",null,[_,n("p",null,[s("\u53C2\u8003\uFF1A"),n("a",q,[s("\u8FD9\u4E48\u5168\u7684 Python \u865A\u62DF\u73AF\u5883\uFF1F\u4E0D\u770B\u53EF\u60DC\u4E86\uFF01"),e(a)])]),n("blockquote",null,[n("p",null,[s("Reference: "),n("a",w,[s("Such a full Python virtual environment? What a pity!"),e(a)])])]),x,n("ol",null,[P,n("li",null,[n("a",T,[s("https://pypi.org/search/?q=TuringRobots"),e(a)]),s(" \u540E\u9762\u7684 TuringRobots \u4FEE\u6539\u6210\u4F60\u81EA\u5DF1\u7684\u5E93\u540D\u5B57\uFF0C\u4E4B\u540E\u6253\u5F00\u6D4F\u89C8\u5668\u8BBF\u95EE\uFF0C\u770B\u662F\u5426\u6709\u8FD9\u4E2A\u5E93\u3002")])]),I,n("ul",null,[n("li",null,[n("a",R,[s("\u5982\u4F55\u521B\u5EFA Python \u5E93"),e(a)])]),n("li",null,[n("a",S,[s("https://packaging.python.org/en/latest/tutorials/packaging-projects/"),e(a)])]),n("li",null,[n("a",E,[s("https://packaging.python.org/en/latest/specifications/pypirc/"),e(a)])]),n("li",null,[n("a",A,[s("https://medium.com/analytics-vidhya/how-to-create-a-python-library-7d5aea80cc3f"),e(a)])]),n("li",null,[n("a",M,[s("https://medium.com/@alexbebereche/how-to-hide-you-api-key-with-python-5cc63d2a6c45"),e(a)])])]),O,C,n("div",N,[L,j,U,n("p",null,[s("\u65B9\u6CD5\u4E00\uFF1A"),n("a",B,[s("QQ"),e(a)])]),W]),z])}const $=i(f,[["render",F],["__file","18.html.vue"]]);export{$ as default};
