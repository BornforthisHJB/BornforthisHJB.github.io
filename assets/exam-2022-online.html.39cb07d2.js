import{_ as e}from"./gzh.b03adfd2.js";import{_ as t}from"./zsxq.77f6dc86.js";import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as i,a as n,d as s,b as l,e as c,r as u}from"./app.d9d4cd25.js";const r={},d=c(`<h2 id="question1" tabindex="-1"><a class="header-anchor" href="#question1" aria-hidden="true">#</a> Question1</h2><p>Construct a <strong>single</strong> Python expression which evaluates to the following values, and incorporates the specified operations in each case (executed in any order).</p><blockquote><p>\u6784\u9020\u4E00\u4E2A Python \u8868\u8FBE\u5F0F\uFF0C\u6C42\u503C\u4E3A\u4EE5\u4E0B\u503C\uFF0C\u5E76\u5728\u6BCF\u79CD\u60C5\u51B5\u4E0B\u5408\u5E76\u6307\u5B9A\u7684\u64CD\u4F5C(\u4EE5\u4EFB\u4F55\u987A\u5E8F\u6267\u884C)\u3002</p></blockquote><p><strong>(a) Output value: &#39;grin&#39;</strong></p><p>Required operations:</p><blockquote><p>\u8981\u6C42\u64CD\u4F5C:</p></blockquote><ol><li>string slicing</li></ol><blockquote><p>\u5B57\u7B26\u4E32\u5206\u5272</p></blockquote><ol start="2"><li>string indexing</li></ol><blockquote><p>\u5B57\u7B26\u4E32\u7D22\u5F15</p></blockquote><p><strong>(b) Output value: True</strong></p><p>Required operations:</p><ol><li><p>range() function</p></li><li><p>in</p></li></ol><p><strong>(c) Output value: 2</strong></p><p>Required operations:</p><ol><li><p>(float) division</p></li><li><p>integer division</p></li></ol><p><strong>(d) Output value: 0</strong></p><p>Required operations:</p><ol><li>dictionary lookup</li></ol><blockquote><p>\u5B57\u5178\u67E5\u627E</p></blockquote><ol start="2"><li><p>.pop() method</p></li><li><p>list indexing</p></li></ol><p><strong>(e) Output value: &#39;ace&#39;</strong></p><p>Required operations:</p><ol><li><p>items method</p></li><li><p>list indexing</p></li><li><p>tuple indexing</p></li></ol><h2 id="question-\u53D8\u6210-while-loop" tabindex="-1"><a class="header-anchor" href="#question-\u53D8\u6210-while-loop" aria-hidden="true">#</a> Question \u53D8\u6210 while loop</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>SUIT <span class="token operator">=</span> <span class="token number">1</span>
BLACK <span class="token operator">=</span> <span class="token number">0</span>
RED <span class="token operator">=</span> <span class="token number">1</span>

SUIT_COLOURS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">,</span>
                <span class="token string">&#39;H&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">same_colour</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            colour <span class="token operator">=</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span>
        <span class="token keyword">elif</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span> colour<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B54\u6848\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>SUIT <span class="token operator">=</span> <span class="token number">1</span>

BLACK <span class="token operator">=</span> <span class="token number">0</span>
RED <span class="token operator">=</span> <span class="token number">1</span>

SUIT_COLOURS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">,</span>
                <span class="token string">&#39;H&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">}</span>


<span class="token comment"># def same_colour(cards):</span>
<span class="token comment">#     for i in range(len(cards)):</span>
<span class="token comment">#         if i == 0:</span>
<span class="token comment">#             colour = SUIT_COLOURS[cards[i][SUIT]]</span>
<span class="token comment">#         elif SUIT_COLOURS[cards[i][SUIT]] != colour:</span>
<span class="token comment">#             return False</span>
<span class="token comment">#     return True</span>

<span class="token keyword">def</span> <span class="token function">same_colour1</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">:</span>
    i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            colour <span class="token operator">=</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span>
            i <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">elif</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span> colour<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="question-\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#question-\u6392\u5E8F" aria-hidden="true">#</a> Question \u6392\u5E8F</h2><p>Sandy has enrolled in a Bachelor of Magical Arts. In order to graduate, they must complete the subject WIZ90001 Advanced Wizardry. However, this subject has a number of prerequisites, each of which must be completed before they can take WIZ90001. Each of those subjects in turn may have its own prerequisites, and so on.</p><blockquote><p>\u6851\u8FEA\u5DF2\u7ECF\u6CE8\u518C\u4E86\u9B54\u6CD5\u827A\u672F\u5B66\u58EB\u5B66\u4F4D\u3002\u4E3A\u4E86\u6BD5\u4E1A\uFF0C\u4ED6\u4EEC\u5FC5\u987B\u5B8C\u6210 WIZ90001 \u9AD8\u7EA7\u9B54\u6CD5\u8BFE\u7A0B\u3002\u4F46\u662F\uFF0C\u672C\u4E3B\u9898\u6709\u8BB8\u591A\u5148\u51B3\u6761\u4EF6\uFF0C\u5728\u5B66\u4E60WIZ90001\u4E4B\u524D\u5FC5\u987B\u5B8C\u6210\u6BCF\u4E00\u4E2A\u5148\u51B3\u6761\u4EF6\u3002\u8FD9\u4E9B\u5B66\u79D1\u4E2D\u7684\u6BCF\u4E00\u95E8\u90FD\u53EF\u80FD\u6709\u81EA\u5DF1\u7684\u5148\u51B3\u6761\u4EF6\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</p></blockquote><p>Given a particular list of prerequisite requirements, the function <code>wiz_study_length(prereq_list, final=&#39;WIZ90001&#39;)</code> is intended to calculate the minimum number of semesters it will take Sandy to graduate. The arguments are:</p><blockquote><p>\u7ED9\u5B9A\u4E00\u4E2A\u7279\u5B9A\u7684\u5148\u51B3\u6761\u4EF6\u8981\u6C42\u5217\u8868\uFF0C\u51FD\u6570 <code>wiz_study_length(prereq_list, final=&#39;WIZ90001&#39;)</code> \u7528\u4E8E\u8BA1\u7B97 Sandy \u6BD5\u4E1A\u6240\u9700\u7684\u6700\u5C0F\u5B66\u671F\u6570\u3002\u7684\u53C2\u6570\u662F:</p></blockquote><ul><li><code>prereq_list</code> , a list of <code>(subject, prerequisite)</code> tuples specifying that prerequisite must be completed before enrolling in subject. Note that a subject may have more than one prerequisite.</li></ul><blockquote><p>Prereq_list\uFF0C\u4E00\u4E2A(subject\uFF0C\u5148\u51B3\u6761\u4EF6)\u5143\u7EC4\u5217\u8868\uFF0C\u6307\u5B9A\u5728\u6CE8\u518C subject \u4E4B\u524D\u5FC5\u987B\u5B8C\u6210\u5148\u51B3\u6761\u4EF6\u3002\u6CE8\u610F\uFF0C\u4E00\u4E2A\u4E3B\u9898\u53EF\u80FD\u6709\u591A\u4E2A\u5148\u51B3\u6761\u4EF6\u3002</p></blockquote><ul><li>final, the target subject to complete, with a default value of &#39;WIZ90001&#39;.</li></ul><blockquote><p>final\u662F\u8981\u5B8C\u6210\u7684\u76EE\u6807\u4E3B\u9898\uFF0C\u9ED8\u8BA4\u503C\u4E3A&#39;WIZ90001&#39;\u3002</p></blockquote><p>Any subject that appears as a prerequisite in a prereq_list tuple but does not appear as a subject can be assumed to have no prerequisites. Furthermore, we assume that Sandy has capacity to take as many subjects as required each semester, as long as they have completed their prerequisites.</p><blockquote><p>\u5728prereq_list\u5143\u7EC4\u4E2D\u4F5C\u4E3A\u5148\u51B3\u6761\u4EF6\u51FA\u73B0\u4F46\u4E0D\u4F5C\u4E3A\u4E3B\u9898\u51FA\u73B0\u7684\u4EFB\u4F55\u4E3B\u9898\u90FD\u53EF\u4EE5\u5047\u5B9A\u4E3A\u6CA1\u6709\u5148\u51B3\u6761\u4EF6\u3002\u6B64\u5916\uFF0C\u6211\u4EEC\u5047\u8BBESandy\u6709\u80FD\u529B\u6BCF\u5B66\u671F\u9009\u4FEE\u8981\u6C42\u7684\u8BFE\u7A0B\uFF0C\u53EA\u8981\u4ED6\u4EEC\u5B8C\u6210\u4E86\u4ED6\u4EEC\u7684\u5148\u51B3\u6761\u4EF6\u3002</p></blockquote><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+e+'" alt="" loading="lazy"></p></details>',41),k={class:"custom-container info"},m=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),v=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),b=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),h={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),_=n("p",null,[n("img",{src:t,alt:"",loading:"lazy"})],-1);function f(q,y){const a=u("ExternalLinkIcon");return p(),i("div",null,[d,n("div",k,[m,v,b,n("p",null,[s("\u65B9\u6CD5\u4E00\uFF1A"),n("a",h,[s("QQ"),l(a)])]),g]),_])}const O=o(r,[["render",f],["__file","exam-2022-online.html.vue"]]);export{O as default};
