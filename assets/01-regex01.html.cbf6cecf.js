import{_ as t}from"./gzh.aa7caba6.js";import{_ as p}from"./zsxq.96f46dfd.js";import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as i,c as l,a as n,b as e,d as s,e as c,r as u}from"./app.8efd43a1.js";const r={},d=n("h2",{id:"_1-\u9700\u6C42",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-\u9700\u6C42","aria-hidden":"true"},"#"),s(" 1. \u9700\u6C42")],-1),k=s("\u6293\u53D6\u76EE\u6807\u7F51\u7AD9\uFF1A"),v={href:"https://bornforthis.cn/web_runing/crawler/regex/index.html",target:"_blank",rel:"noopener noreferrer"},m=s("https://bornforthis.cn/web_runing/crawler/regex/index.html"),b=n("li",null,[s("\u6280\u672F\u9650\u5236\uFF1A "),n("ol",null,[n("li",null,"requests"),n("li",null,"re"),n("li",null,"Python \u57FA\u7840\u8BED\u6CD5")])],-1),_=n("li",null,"\u6293\u53D6\u76EE\u6807\u97F3\u4E50",-1),h=n("li",null,"\u5B58\u50A8\u5236\u5B9A\u8DEF\u5F84\uFF1A/data/music/",-1),y=c(`<h2 id="_2-\u5BFC\u5165\u6240\u9700\u5E93" tabindex="-1"><a class="header-anchor" href="#_2-\u5BFC\u5165\u6240\u9700\u5E93" aria-hidden="true">#</a> 2. \u5BFC\u5165\u6240\u9700\u5E93</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> re
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u7F16\u5199\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199\u4EE3\u7801" aria-hidden="true">#</a> 3. \u7F16\u5199\u4EE3\u7801</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> re
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> RequestException
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urljoin

BASE <span class="token operator">=</span> <span class="token string">&quot;https://bornforthis.cn/web_runing/crawler/regex/&quot;</span>


<span class="token keyword">def</span> <span class="token function">requests_fun</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> binary<span class="token punctuation">:</span>
                <span class="token keyword">return</span> response<span class="token punctuation">.</span>content
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> response<span class="token punctuation">.</span>text
        <span class="token keyword">return</span> <span class="token boolean">None</span>
    <span class="token keyword">except</span> RequestException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">save_music</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> binary<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pattern <span class="token operator">=</span> <span class="token string">&#39;&lt;a.*?href=&quot;(.*?)&quot;.*?&lt;/a&gt;&#39;</span>
    result <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> html<span class="token punctuation">)</span>
    <span class="token keyword">return</span> result


<span class="token keyword">def</span> <span class="token function">joint</span><span class="token punctuation">(</span>url_lst<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> url <span class="token keyword">in</span> url_lst<span class="token punctuation">:</span>
        url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>BASE<span class="token punctuation">,</span> url<span class="token punctuation">)</span>
        url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">return</span> url_list


<span class="token keyword">def</span> <span class="token function">postfix</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    music_name <span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> music_name


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> <span class="token string">&quot;https://bornforthis.cn/web_runing/crawler/regex/index.html&quot;</span>
    html <span class="token operator">=</span> requests_fun<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token comment"># url_lst = parse(html)</span>
    url_list <span class="token operator">=</span> joint<span class="token punctuation">(</span>parse<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># print(url_list)</span>
    <span class="token keyword">for</span> url <span class="token keyword">in</span> url_list<span class="token punctuation">:</span>
        <span class="token comment"># print(url)</span>
        binary_content <span class="token operator">=</span> requests_fun<span class="token punctuation">(</span>url<span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token comment"># print(binary_content)</span>
        save_music<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;data/music/</span><span class="token interpolation"><span class="token punctuation">{</span>postfix<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> binary_content<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+t+'" alt=""></p></details>',6),f={class:"custom-container info"},w=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),g=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),x=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),q=s("\u65B9\u6CD5\u4E00\uFF1A"),E={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},A=s("QQ"),I=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),N=n("p",null,[n("img",{src:p,alt:""})],-1);function j(B,P){const a=u("ExternalLinkIcon");return i(),l("div",null,[d,n("ol",null,[n("li",null,[k,n("a",v,[m,e(a)])]),b,_,h]),y,n("div",f,[w,g,x,n("p",null,[q,n("a",E,[A,e(a)])]),I]),N])}var R=o(r,[["render",j],["__file","01-regex01.html.vue"]]);export{R as default};
