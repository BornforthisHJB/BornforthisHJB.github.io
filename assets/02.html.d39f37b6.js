import{_ as a}from"./gzh.b03adfd2.js";import{_ as s}from"./zsxq.77f6dc86.js";import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,a as e,d as o,b as r,e as n,r as h}from"./app.5e2eef08.js";const d="/assets/ff53754d5318668c1014674c3917d308.72e65430.jpg",c="/assets/5c3daf49453370c3aa7ddf3bb36cab2d.cdbff4f8.png",u="/assets/dee40d0f591d3f5e2f43839dccc24471.383d17ee.png",b="/assets/f81efe2538074a3385b9ba70aced2cc9.1ed83837.png",_={},y=e("p",null,[e("img",{src:d,alt:"img",loading:"lazy"})],-1),m=e("p",null,"你好，我是悦创。",-1),g=e("p",null,"Stack Overflow 曾在 2017 年底，发布了在该站上各种语言的提问流量。其中，Python 已经超过了 JavaScript 成为了流量最高的语言，预测在 2020 年前会远远甩开 JavaScript。",-1),k=e("p",null,[e("img",{src:c,alt:"img",loading:"lazy"})],-1),f={href:"https://jupyter.org/",target:"_blank",rel:"noopener noreferrer"},J=n('<p>毫不夸张地说，根据我对 Facebook 等硅谷一线大厂的了解，一个 Python 工程师如果现在还不会使用 Jupyter Notebook 的话，可能就真的太落伍了。</p><p>磨刀不误砍柴工，高效的工具让我们的编程事半功倍。这一节课，我就来带你学习一下 Jupyter Notebook，为后面的 Python 学习打下必备基础。</p><h2 id="什么是-jupyter-notebook" tabindex="-1"><a class="header-anchor" href="#什么是-jupyter-notebook" aria-hidden="true">#</a> 什么是 Jupyter Notebook？</h2><p>说了这么多，到底什么是 Jupyter Notebook？按照 Jupyter 创始人 Fernando Pérez 的说法，他最初的梦想是做一个综合 Ju （Julia）、Py （Python）和 R 三种科学运算语言的计算工具平台，所以将其命名为 Ju-Py-te-R。发展到现在，Jupyter 已经成为一个几乎支持所有语言，能够把<strong>软件代码、计算输出、解释文档、多媒体资源</strong>整合在一起的多功能科学运算平台。</p><p>英文里说一图胜千言（A picture is worth a thousand words）。看下面这个图片，你就明白什么是 Jupyter Notebook 了。</p><p><img src="'+u+'" alt="img" loading="lazy"></p><p>你在一个框框中直接输入代码，运行，它立马就在下面给你输出。怎么样，是不是很酷？你可能会纳闷儿，这样一个看起来“华而不实”的玩意儿，真的就成了 Python 社区的颠覆者吗？说实话放在几年前我也是不信的。所以 Jupyter Notebook 的影响究竟有多大呢？</p><h2 id="jupyter-notebook-的影响力" tabindex="-1"><a class="header-anchor" href="#jupyter-notebook-的影响力" aria-hidden="true">#</a> Jupyter Notebook 的影响力</h2><p>我们衡量一个技术的影响力，或者说要用自己的技术去影响世界时，必定绕不开这个技术对教育界的影响力。</p><p>就拿微软的 Word 文本处理系统来说吧。从纯技术角度来讲，Word 的单机设计理念早已落后时代 20 年。但以 Google Doc 为代表的在线文档系统，却并没有像想象中那样，实现对 Word 的降维打击。</p><p>直观的原因是用户习惯，使用 Word 修改文档，那就来回发几十遍呗，用着也还可以。但更深刻来想，之所以养成这样的用户习惯，是因为我们的教育根源。教育系统从娃娃抓起，用小学中学大学十几年的时间，训练了用户 Word 的使用习惯。到工作中，老员工又会带着新员工继续使用 Word，如此行程技术影响力生生不息的正向反馈。</p><p>回到我们今天的主题，我们来看 Jupyter Notebook。从 2017 年开始，已有大量的北美顶尖计算机课程，开始完全使用 Jupyter Notebook 作为工具。比如李飞飞的 CS231N《计算机视觉与神经网络》课程，在 16 年时作业还是命令行 Python 的形式，但是 17 年的作业就全部在 Jupyter Notebook 上完成了。再如 UC Berkeley 的《数据科学基础》课程，从 17 年起，所有作业也全部用 Jupyter Notebook 完成。</p><p>而 Jupyter Notebook 在工业界的影响力更甚。在 Facebook，虽然大规模的后台开发仍然借助于功能齐全的 IDE，但是几乎所有的中小型程序，比如内部的一些线下分析软件，机器学习模块的训练都是借助于 Jupyter Notebook 完成的。据我了解，在别的硅谷一线大厂，例如 Google 的 AI Research 部门 Google Brain，也是清一色地全部使用 Jupyter Notebook，虽然用的是他们自己的改进定制版，叫 Google Colab。</p><p>看到这里，相信你已经认可了 Jupter Notebook 现如今的江湖地位。不过，说到技术的选择，有些人会说，这个技术流行，我们应该用；有些人认为，阿里已经在用这个技术了，这就是未来，我们也要用等等。不得不说，这些都是片面的认知。不管是阿里还是 Facebook 用的技术，其实不一定适用你的应用场景。</p><p>我经常会鼓励技术同行，对于技术选择要有独立的思考，不要人云亦云。最起码你要去思考，Facebook 为什么选择这个技术？这个技术解决了哪些问题？Facebook 为什么不选择别的技术？有哪些局限？单从选择结果而言，Facebook 选择的技术很可能是因为它有几百个产品线，几万个工程师。而同样的技术，在一个十人的团队里，反而成了拖累。</p><p>在这里，我不想忽悠你任何技术，我想教会你的是辩证分析技术的思考方法。接下来，我们就来看看，Jupyter 究竟解决了哪些别人没有解决的问题。</p><h2 id="jupyter-的优点" tabindex="-1"><a class="header-anchor" href="#jupyter-的优点" aria-hidden="true">#</a> Jupyter 的优点</h2><h3 id="整合所有的资源" tabindex="-1"><a class="header-anchor" href="#整合所有的资源" aria-hidden="true">#</a> 整合所有的资源</h3><p>在真正的软件开发中，上下文切换占用了大量的时间。什么意思呢？举个例子你就很好理解了，比如你需要切换窗口去看一些文档，再切换窗口去用另一个工具画图等等。这些都是影响生产效率的因素。</p><p>正如我前面提到的，Jupyter 通过把所有和软件编写有关的资源全部放在一个地方，解决了这个问题。当你打开一个 Jupyter Notebook 时，就已经可以看到相应的文档、图表、视频和相应的代码。这样，你就不需要切换窗口去找资料，只要看一个文件，就可以获得项目的所有信息。</p><h3 id="交互性编程体验" tabindex="-1"><a class="header-anchor" href="#交互性编程体验" aria-hidden="true">#</a> 交互性编程体验</h3><p>在机器学习和数学统计领域，Python 编程的实验性特别强，经常出现的情况是，一小块代码需要重写 100 遍，比如为了尝试 100 种不同的方法，但别的代码都不想动。这一点和传统的 Python 开发有很大不同。如果是在传统的 Python 开发流程中，每一次实验都要把所有代码重新跑一遍，会花费开发者很多时间。特别是在像 Facebook 这样千万行级别的代码库里，即使整个公司的底层架构已经足够优化，真要重新跑一遍，也需要几分钟的时间。</p><p>而 Jupyter Notebook 引进了 Cell 的概念，每次实验可以只跑一小个 Cell 里的代码；并且，所见即所得，在代码下面立刻就可以看到结果。这样强的互动性，让 Python 研究员可以专注于问题本身，不被繁杂的工具链所累，不用在命令行直接切换，所有科研工作都能在 Jupyter 上完成。</p><h3 id="零成本重现结果" tabindex="-1"><a class="header-anchor" href="#零成本重现结果" aria-hidden="true">#</a> 零成本重现结果</h3><p>同样在机器学习和数学统计领域，Python 的使用是非常短平快的。常见的场景是，我在论文里看到别人的方法效果很好，可是当我去重现时，却发现需要 pip 重新安装一堆依赖软件。这些准备工作可能会消耗你 80% 的时间，却并不是真正的生产力。</p><p>Jupyter Notebook 如何解决这个问题呢？</p>',26),N={href:"https://mybinder.readthedocs.io/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://colab.research.google.com/notebooks/welcome.ipynb",target:"_blank",rel:"noopener noreferrer"},v=e("p",null,"所以，现在当你用 Binder 打开一份 GitHub 上的 Jupyter Notebook 时，你不需要安装任何软件，直接在浏览器打开一份代码，就能在云端运行。",-1),P=e("h2",{id:"jupyter-notebook-初体验",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#jupyter-notebook-初体验","aria-hidden":"true"},"#"),o(" Jupyter Notebook 初体验")],-1),j=e("p",null,"学习技术的最好方法就是用技术。不过，在今天的篇幅里，我不可能带你完全学会 Jupyter Notebook 的所有技巧。我想先带你直接感受一下，使用 Jupyter Notebook 的工作体验。",-1),C={href:"https://github.com/binder-examples/python2_with_3/blob/master/index3.ipynb",target:"_blank",rel:"noopener noreferrer"},G={href:"https://mybinder.org/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://mybinder.org/v2/gh/binder-examples/python2_with_3/master?filepath=index3.ipynb",target:"_blank",rel:"noopener noreferrer"},I=e("p",null,[e("img",{src:b,alt:"img",loading:"lazy"})],-1),B=e("p",null,"每一个 Jupyter 的运行单元都包含了 In、Out 的 Cell。如图所示，你可以使用 Run 按钮，运行单独的一个 Cell。当然，你也可以在此基础上加以修改，或者新建一个 notebook，写成自己想要的程序。赶紧打开链接试一试吧！",-1),F=e("p",null,"另外，我还推荐下面这些 Jupyter Notebook，作为你实践的第一站。",-1),R={href:"https://mybinder.org/v2/gh/binder-examples/matplotlib-versions/mpl-v2.0/?filepath=matplotlib_versions_demo.ipynb",target:"_blank",rel:"noopener noreferrer"},z={href:"https://colab.research.google.com/notebooks/basic_features_overview.ipynb",target:"_blank",rel:"noopener noreferrer"},A=e("blockquote",null,[e("p",null,"如果你想在本地或者远程的机器上安装 Jupyter Notebook，可以参考下面的两个文档。")],-1),W={href:"https://jupyter.org/install.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://jupyter.readthedocs.io/en/latest/running.html#running",target:"_blank",rel:"noopener noreferrer"},S=n('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>这节课，我为你介绍了 Jupyter Notebook，并告诉你它为什么日趋成为 Python 社区的必学技术。这主要是因为它的三大特点：<strong>整合所有的资源、交互性编程体验和零成本重现结果。</strong> 但还是那句话，学习技术必须动手实操。这节课后，希望你能自己动手试一试 Jupyter Notebook，后面我们的一些课程代码，我也会用 Jupyter Notebook 的形式分享给你。</p><h2 id="思考题" tabindex="-1"><a class="header-anchor" href="#思考题" aria-hidden="true">#</a> 思考题</h2><p>你尝试 Jupyter Notebook 了吗？欢迎在留言区和我分享你的使用体验。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="'+a+'" alt="" loading="lazy"></p></details>',6),E={class:"custom-container info"},Q=e("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),V=e("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),D=e("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),H={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},L=e("p",null,"方法二：微信：Jiabcdefh",-1),O=e("p",null,[e("img",{src:s,alt:"",loading:"lazy"})],-1);function U($,T){const t=h("ExternalLinkIcon");return l(),i("div",null,[y,m,g,k,e("p",null,[o("可能你已经知道，Python 在 14 年后的“崛起”，得益于机器学习和数学统计应用的兴起。那为什么 Python 如此适合数学统计和机器学习呢？作为“老司机”的我可以肯定地告诉你，Jupyter Notebook （"),e("a",f,[o("https://jupyter.org/"),r(t)]),o("）功不可没。")]),J,e("p",null,[o("其实最初的 Jupyter Notebook 也是挺麻烦的，需要你先在本机上安装 IPython 引擎及其各种依赖软件。不过现在的技术趋势，则是彻底云端化了，例如 Jupyter 官方的 Binder 平台（介绍文档："),e("a",N,[o("https://mybinder.readthedocs.io/en/latest/index.html"),r(t)]),o("）和 Google 提供的 Google Colab 环境（介绍："),e("a",x,[o("https://colab.research.google.com/notebooks/welcome.ipynb"),r(t)]),o("）。它们让 Jupyter Notebook 变得和石墨文档、Google Doc 在线文档一样，在浏览器点开链接就能运行。")]),v,P,j,e("p",null,[o("比如这样一个 "),e("a",C,[o("GitHub 文件"),r(t)]),o(" 。在 "),e("a",G,[o("Binder"),r(t)]),o(" 中，你只要输入其对应的 GitHub Repository 的名字或者 URL，就能在云端打开整个 Repository，选择你需要的 "),e("a",w,[o("notebook"),r(t)]),o(" ，你就能看到下图这个界面。")]),I,B,F,e("ul",null,[e("li",null,[o("第一个是 Jupyter 官方："),e("a",R,[o("https://mybinder.org/v2/gh/binder-examples/matplotlib-versions/mpl-v2.0/?filepath=matplotlib_versions_demo.ipynb"),r(t)])]),e("li",null,[o("第二个是 Google Research 提供的 Colab 环境，尤其适合机器学习的实践应用："),e("a",z,[o("https://colab.research.google.com/notebooks/basic_features_overview.ipynb"),r(t)])])]),A,e("ul",null,[e("li",null,[o("安装："),e("a",W,[o("https://jupyter.org/install.html"),r(t)])]),e("li",null,[o("运行："),e("a",q,[o("https://jupyter.readthedocs.io/en/latest/running.html#running"),r(t)])])]),S,e("div",E,[Q,V,D,e("p",null,[o("方法一："),e("a",H,[o("QQ"),r(t)])]),L]),O])}const Z=p(_,[["render",U],["__file","02.html.vue"]]);export{Z as default};
