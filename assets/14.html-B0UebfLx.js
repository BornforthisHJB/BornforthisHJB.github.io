import{_ as c}from"./gzh-DnOBNg6W.js";import{_ as i}from"./zsxq-BcdwOI-_.js";import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as y,a as t,b as F,d as a,f as s,r as d,o as v,e as l}from"./app-YAtctw5y.js";const u="/assets/1659933827638-19026e89-0d4b-4b24-9fbc-7299add8d35e-3v4ufN1h.png",m={};function E(b,n){const p=d("CodeTabs");return v(),y("div",null,[n[16]||(n[16]=t('<h2 id="_0-目录" tabindex="-1"><a class="header-anchor" href="#_0-目录"><span>0. 目录</span></a></h2><ul><li>简化输出连续 26 个字符的程序</li><li>简化并增强找整除数的程序</li><li>break 语句</li><li>continue 语句</li></ul><h2 id="_1-简化输出连续-26-个字符的程序" tabindex="-1"><a class="header-anchor" href="#_1-简化输出连续-26-个字符的程序"><span>1. 简化输出连续 26 个字符的程序</span></a></h2><h3 id="_1-1-for-语句" tabindex="-1"><a class="header-anchor" href="#_1-1-for-语句"><span>1.1 for 语句</span></a></h3><ul><li>让程序在满足某条件时，重复执行某个代码块。for 是 Java 中的关键字</li><li>for 语句语法和简单的示例程</li><li>初始语句在 for 循环开始前执行一次，以后不再执行；循环体条件表达式在每次循环体执行前会执行，如果为 true，则执行循环体，否则循环结束；循环体后语句会在每次循环执行后被执行；</li></ul>',5)),F(p,{id:"48",data:[{id:"语法"},{id:"代码"},{id:"输出"}]},{title0:a(({value:o,isActive:e})=>n[0]||(n[0]=[l("语法")])),title1:a(({value:o,isActive:e})=>n[1]||(n[1]=[l("代码")])),title2:a(({value:o,isActive:e})=>n[2]||(n[2]=[l("输出")])),tab0:a(({value:o,isActive:e})=>n[3]||(n[3]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," (初始语句; 循环体条件表达式; 循环体后语句) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," 循环体")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>n[4]||(n[4]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"SimpleFor"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 10"),s("span",{style:{color:"#F8F8F2"}},"; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"i的值是："'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," i);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:o,isActive:e})=>n[5]||(n[5]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"0")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"7")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"8")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i的值是："),s("span",{style:{color:"#AE81FF"}},"9")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[17]||(n[17]=s("h3",{id:"_1-2-使用-for-简化输出连续-26-个字符的程序",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-2-使用-for-简化输出连续-26-个字符的程序"},[s("span",null,"1.2 使用 for 简化输出连续 26 个字符的程序")])],-1)),F(p,{id:"62",data:[{id:"PrintChars1"},{id:"PrintChars2"}]},{title0:a(({value:o,isActive:e})=>n[6]||(n[6]=[l("PrintChars1")])),title1:a(({value:o,isActive:e})=>n[7]||(n[7]=[l("PrintChars2")])),tab0:a(({value:o,isActive:e})=>n[8]||(n[8]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"PrintChars"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," ch "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," '我'"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," startNum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ch;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 26"),s("span",{style:{color:"#F8F8F2"}},"; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"            int"),s("span",{style:{color:"#F8F8F2"}}," newNum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," startNum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," i;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(newNum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," (("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"char"),s("span",{style:{color:"#F8F8F2"}},") newNum));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>n[9]||(n[9]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"PrintChars"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," ch "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," startNum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ch;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 26"),s("span",{style:{color:"#F8F8F2"}},"; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"            int"),s("span",{style:{color:"#F8F8F2"}}," newNum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," startNum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," i;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(newNum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," (("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"char"),s("span",{style:{color:"#F8F8F2"}},") newNum));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[18]||(n[18]=t(`<h2 id="_2-简化并增强找整除数的程序" tabindex="-1"><a class="header-anchor" href="#_2-简化并增强找整除数的程序"><span>2. 简化并增强找整除数的程序</span></a></h2><h3 id="_2-1-简化和增强找整除数的程序" tabindex="-1"><a class="header-anchor" href="#_2-1-简化和增强找整除数的程序"><span>2.1 简化和增强找整除数的程序</span></a></h3><ul><li>使用 for 语句让程序简洁</li><li>增加新功能，输出最多10个可以整除的数</li><li>条件布尔表达式可以用 for 语句外部的变量</li><li>循环体执行后的语句可以有多个表达式，用逗号分开</li></ul><h4 id="_2-1-1-使用-for-语句让程序简洁" tabindex="-1"><a class="header-anchor" href="#_2-1-1-使用-for-语句让程序简洁"><span>2.1.1 使用 for 语句让程序简洁</span></a></h4><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CalcDivFor</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (divided </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(divided </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;可以整除&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;。商为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> divisor);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            divided</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_2-1-2-增加新功能-输出最多10个可以整除的数" tabindex="-1"><a class="header-anchor" href="#_2-1-2-增加新功能-输出最多10个可以整除的数"><span>2.1.2 增加新功能，输出最多10个可以整除的数</span></a></h4><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CalcDivFor</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> found </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> &amp;&amp;</span><span style="color:#F8F8F2;"> found </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (divided </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(divided </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;可以整除&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;。商为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> divisor);</span></span>
<span class="line"><span style="color:#F8F8F2;">                found</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            divided</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_2-1-3-条件布尔表达式可以用-for-语句外部的变量" tabindex="-1"><a class="header-anchor" href="#_2-1-3-条件布尔表达式可以用-for-语句外部的变量"><span>2.1.3 条件布尔表达式可以用 for 语句外部的变量</span></a></h4><p>其实，上面的代码 found 使用的就是 for 外面的变量。</p><h4 id="_2-1-4-循环体执行后的语句可以有多个表达式-用逗号分开" tabindex="-1"><a class="header-anchor" href="#_2-1-4-循环体执行后的语句可以有多个表达式-用逗号分开"><span>2.1.4 循环体执行后的语句可以有多个表达式，用逗号分开</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CalcDivFor</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> found </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> &amp;&amp;</span><span style="color:#F8F8F2;"> found </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">, divided</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (divided </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(divided </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;可以整除&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;。商为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> divisor);</span></span>
<span class="line"><span style="color:#F8F8F2;">                found</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 前 ++ 和 后 ++ 影响都不大，前 ++ 与 后 ++，其实是在运行的那行才会体现区别</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，强调一点，上面把 <code>divided++</code>写入，其实不是一个好的方式，还是推荐单独写出来。</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">demo</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> found </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#88846F;">//        下面这样写可以吗？</span></span>
<span class="line"><span style="color:#88846F;">//        不行，逻辑出错，found 需要在可以取整的时候自增，现在这样编写，意味着不管能不能整除都可以自增</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> &amp;&amp;</span><span style="color:#F8F8F2;"> found </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">, found</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (divided </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(divided </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;可以整除&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;。商为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divided </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> divisor);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            divided</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_3-break-语句" tabindex="-1"><a class="header-anchor" href="#_3-break-语句"><span>3. Break 语句</span></a></h2><h3 id="_3-1-结束循环" tabindex="-1"><a class="header-anchor" href="#_3-1-结束循环"><span>3.1 结束循环</span></a></h3><ul><li>break 语句可以结束循环</li><li>在求整除程序中使用 break 提前结束循环</li></ul><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CalcDivBreak</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> dividend </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> foundCount </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> toBeFound </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (dividend </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(dividend </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;可以整除&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;。商为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> dividend </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> divisor);</span></span>
<span class="line"><span style="color:#F8F8F2;">                foundCount</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            dividend</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (foundCount </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> toBeFound) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;已经找到&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> toBeFound </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;个数,循环退出。&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">                break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;总共找到&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> foundCount </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;个可以整除&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;的数。&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>如果，你有时候不知道 break 出哪个循环，可以直接光标点击，即可看见跳出的是哪个循环。</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-continue-语句" tabindex="-1"><a class="header-anchor" href="#_4-continue-语句"><span>4. continue 语句</span></a></h2><h3 id="_4-1-跳过不符合条件的循环" tabindex="-1"><a class="header-anchor" href="#_4-1-跳过不符合条件的循环"><span>4.1 跳过不符合条件的循环</span></a></h3><ul><li>continue 语句可以结束当次循环的执行，开始下一次循环体的执行</li></ul>',22)),F(p,{id:"158",data:[{id:"CalcDivBreakAndContinue"},{id:"补充代码 CalcDivForWithLimit"},{id:"CalcDivForWithLimit2"}]},{title0:a(({value:o,isActive:e})=>n[10]||(n[10]=[l("CalcDivBreakAndContinue")])),title1:a(({value:o,isActive:e})=>n[11]||(n[11]=[l("补充代码 CalcDivForWithLimit")])),title2:a(({value:o,isActive:e})=>n[12]||(n[12]=[l("CalcDivForWithLimit2")])),tab0:a(({value:o,isActive:e})=>n[13]||(n[13]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"CalcDivBreakAndContinue"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," dividend "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 10"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 21"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," foundCount "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," toBeFound "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 200"),s("span",{style:{color:"#F8F8F2"}},"; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},", dividend"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (divisor "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," dividend) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"跳过"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," dividend "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' ", 因为它比除数"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "小。"'),s("span",{style:{color:"#F8F8F2"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                continue"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (dividend "),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(dividend "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "可以整除"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "。商为"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," dividend "),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," divisor);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                foundCount"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (foundCount "),s("span",{style:{color:"#F92672"}},">="),s("span",{style:{color:"#F8F8F2"}}," toBeFound) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                break"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"总共找到"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," foundCount "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "个可以整除"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "的数。"'),s("span",{style:{color:"#F8F8F2"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>n[14]||(n[14]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"CalcDivForWithLimit"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," dividend "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 3"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," foundCount "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," toBeFound "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 100"),s("span",{style:{color:"#F92672"}}," &&"),s("span",{style:{color:"#F8F8F2"}}," toBeFound "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," foundCount; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (dividend "),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(dividend "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "可以整除"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "。商为"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," dividend "),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," divisor);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                foundCount"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            dividend"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"总共找到"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," foundCount "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "个可以整除"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "的数。"'),s("span",{style:{color:"#F8F8F2"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:a(({value:o,isActive:e})=>n[15]||(n[15]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"CalcDivForWithLimit2"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," dividend "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 3"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," foundCount "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," toBeFound "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 100"),s("span",{style:{color:"#F92672"}}," &&"),s("span",{style:{color:"#F8F8F2"}}," toBeFound "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," foundCount; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},", foundCount"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (dividend "),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(dividend "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "可以整除"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "。商为"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," dividend "),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," divisor);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            dividend"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"总共找到"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," foundCount "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "个可以整除"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," divisor "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "的数。"'),s("span",{style:{color:"#F8F8F2"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[19]||(n[19]=t(`<h2 id="_5-for-循环嵌套" tabindex="-1"><a class="header-anchor" href="#_5-for-循环嵌套"><span>5. for 循环嵌套</span></a></h2><h3 id="_5-1-基本结构" tabindex="-1"><a class="header-anchor" href="#_5-1-基本结构"><span>5.1 基本结构</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (初始化表达式1; 条件表达式1; 更新表达式1) {</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (初始化表达式2; 条件表达式2; 更新表达式2) {</span></span>
<span class="line"><span style="color:#88846F;">        // 内层循环的循环体</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-例子-打印一个-5x5-的星号矩阵" tabindex="-1"><a class="header-anchor" href="#_5-2-例子-打印一个-5x5-的星号矩阵"><span>5.2 例子：打印一个 5x5 的星号矩阵</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Main</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 外层循环控制行数</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">            // 内层循环控制列数</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; j </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">; j</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;* &quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 打印星号</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 换行</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解释</strong>：</p><ol><li><strong>外层循环</strong>（<code>for (int i = 0; i &lt; 5; i++)</code>）：控制行数，循环 5 次。</li><li><strong>内层循环</strong>（<code>for (int j = 0; j &lt; 5; j++)</code>）：每次外层循环执行时，内层循环会执行5次，打印5个星号。</li><li><strong><code>System.out.print(&quot;\\* &quot;)</code></strong>：在同一行打印星号。</li><li><strong><code>System.out.println()</code></strong>：每次外层循环结束后，换行，开始打印新的一行。</li></ol><p><strong>输出结果</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">*</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F92672;">*</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F92672;">*</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F92672;">*</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F92672;">*</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span><span style="color:#F92672;"> *</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-直角三角形-右上角" tabindex="-1"><a class="header-anchor" href="#_5-3-直角三角形-右上角"><span>5.3 直角三角形（右上角）</span></a></h3><p>输出像下面这样的三角形：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">*</span></span>
<span class="line"><span style="color:#F92672;">**</span></span>
<span class="line"><span style="color:#F92672;">***</span></span>
<span class="line"><span style="color:#F92672;">****</span></span>
<span class="line"><span style="color:#F92672;">*****</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码实现：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">RightAngleTriangle</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 三角形的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> height; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; j </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> i; j</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;*&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 换行</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-直角三角形-右下角" tabindex="-1"><a class="header-anchor" href="#_5-4-直角三角形-右下角"><span>5.4 直角三角形（右下角）</span></a></h3><p>输出像下面这样的三角形：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">*****</span></span>
<span class="line"><span style="color:#F92672;">****</span></span>
<span class="line"><span style="color:#F92672;">***</span></span>
<span class="line"><span style="color:#F92672;">**</span></span>
<span class="line"><span style="color:#F92672;">*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码实现：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">RightAngleTriangleInverse</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 三角形的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> height; i </span><span style="color:#F92672;">&gt;=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; j </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> i; j</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;*&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 换行</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-等腰三角形" tabindex="-1"><a class="header-anchor" href="#_5-5-等腰三角形"><span>5.5 等腰三角形</span></a></h3><p>输出像下面这样的等腰三角形：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">    *</span></span>
<span class="line"><span style="color:#F92672;">   ***</span></span>
<span class="line"><span style="color:#F92672;">  *****</span></span>
<span class="line"><span style="color:#F92672;"> *******</span></span>
<span class="line"><span style="color:#F92672;">*********</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码实现：</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">IsoscelesTriangle</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 三角形的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> height; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">            // 打印空格</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> i; j </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> height; j</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot; &quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // 打印星号</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> k </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; k </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">); k</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;*&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 换行</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-6-倒等腰三角形" tabindex="-1"><a class="header-anchor" href="#_5-6-倒等腰三角形"><span>5.6 倒等腰三角形</span></a></h3><p>输出像下面这样的倒等腰三角形：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">*********</span></span>
<span class="line"><span style="color:#F92672;"> *******</span></span>
<span class="line"><span style="color:#F92672;">  *****</span></span>
<span class="line"><span style="color:#F92672;">   ***</span></span>
<span class="line"><span style="color:#F92672;">    *</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码实现：</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">InvertedIsoscelesTriangle</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 三角形的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> height; i </span><span style="color:#F92672;">&gt;=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">            // 打印空格</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> height; j </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> i; j</span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot; &quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // 打印星号</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> k </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; k </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">); k</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;*&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 换行</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><details class="hint-container details"><summary>详情</summary><p><strong>九九乘法表</strong></p><p>输出效果如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">1</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">3</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">3</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">6</span><span style="color:#AE81FF;">	3</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">3</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">4</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">4</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">8</span><span style="color:#AE81FF;">	3</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">4</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">12</span><span style="color:#AE81FF;">	4</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">4</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">16</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">10</span><span style="color:#AE81FF;">	3</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">15</span><span style="color:#AE81FF;">	4</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">20</span><span style="color:#AE81FF;">	5</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">25</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">6</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">6</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">6</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">12</span><span style="color:#AE81FF;">	3</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">6</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">18</span><span style="color:#AE81FF;">	4</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">6</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">24</span><span style="color:#AE81FF;">	5</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">6</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">30</span><span style="color:#AE81FF;">	6</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">6</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">36</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">7</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">14</span><span style="color:#AE81FF;">	3</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">21</span><span style="color:#AE81FF;">	4</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">28</span><span style="color:#AE81FF;">	5</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">35</span><span style="color:#AE81FF;">	6</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">42</span><span style="color:#AE81FF;">	7</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">49</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">8</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">16</span><span style="color:#AE81FF;">	3</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">24</span><span style="color:#AE81FF;">	4</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">32</span><span style="color:#AE81FF;">	5</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">40</span><span style="color:#AE81FF;">	6</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">48</span><span style="color:#AE81FF;">	7</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">56</span><span style="color:#AE81FF;">	8</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">8</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">64</span><span style="color:#F8F8F2;">	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">9</span><span style="color:#AE81FF;">	2</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">18</span><span style="color:#AE81FF;">	3</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">27</span><span style="color:#AE81FF;">	4</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">36</span><span style="color:#AE81FF;">	5</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">45</span><span style="color:#AE81FF;">	6</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">54</span><span style="color:#AE81FF;">	7</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">63</span><span style="color:#AE81FF;">	8</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">72</span><span style="color:#AE81FF;">	9</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">9</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">81</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MultiplicationTable</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 外层循环：控制行</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 9</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">            // 内层循环：控制列</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; j </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> i; j</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">                // 打印乘法表的一项，格式为“j*i=结果”</span></span>
<span class="line"><span style="color:#F8F8F2;">                System.out.</span><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(j </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;*&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;=&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> (i </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> j) </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#88846F;">            // 换行</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',34))])}const D=r(m,[["render",E],["__file","14.html.vue"]]),k=JSON.parse('{"path":"/Java/chapter01/14.html","title":"14-程序循环之 for 语句","lang":"zh-CN","frontmatter":{"title":"14-程序循环之 for 语句","date":"2023-08-21T12:57:54.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课"],"tag":["Java体系课"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"footer":"长期招收编程一对一学员！微信：Jiabcdefh, <a href=\\"https://beian.miit.gov.cn/\\" target=\\"_blank\\">闽ICP备19021486号-6</a>","feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"0. 目录","slug":"_0-目录","link":"#_0-目录","children":[]},{"level":2,"title":"1. 简化输出连续 26 个字符的程序","slug":"_1-简化输出连续-26-个字符的程序","link":"#_1-简化输出连续-26-个字符的程序","children":[{"level":3,"title":"1.1 for 语句","slug":"_1-1-for-语句","link":"#_1-1-for-语句","children":[]},{"level":3,"title":"1.2 使用 for 简化输出连续 26 个字符的程序","slug":"_1-2-使用-for-简化输出连续-26-个字符的程序","link":"#_1-2-使用-for-简化输出连续-26-个字符的程序","children":[]}]},{"level":2,"title":"2. 简化并增强找整除数的程序","slug":"_2-简化并增强找整除数的程序","link":"#_2-简化并增强找整除数的程序","children":[{"level":3,"title":"2.1 简化和增强找整除数的程序","slug":"_2-1-简化和增强找整除数的程序","link":"#_2-1-简化和增强找整除数的程序","children":[{"level":4,"title":"2.1.1 使用 for 语句让程序简洁","slug":"_2-1-1-使用-for-语句让程序简洁","link":"#_2-1-1-使用-for-语句让程序简洁","children":[]},{"level":4,"title":"2.1.2 增加新功能，输出最多10个可以整除的数","slug":"_2-1-2-增加新功能-输出最多10个可以整除的数","link":"#_2-1-2-增加新功能-输出最多10个可以整除的数","children":[]},{"level":4,"title":"2.1.3 条件布尔表达式可以用 for 语句外部的变量","slug":"_2-1-3-条件布尔表达式可以用-for-语句外部的变量","link":"#_2-1-3-条件布尔表达式可以用-for-语句外部的变量","children":[]},{"level":4,"title":"2.1.4 循环体执行后的语句可以有多个表达式，用逗号分开","slug":"_2-1-4-循环体执行后的语句可以有多个表达式-用逗号分开","link":"#_2-1-4-循环体执行后的语句可以有多个表达式-用逗号分开","children":[]}]}]},{"level":2,"title":"3. Break 语句","slug":"_3-break-语句","link":"#_3-break-语句","children":[{"level":3,"title":"3.1 结束循环","slug":"_3-1-结束循环","link":"#_3-1-结束循环","children":[]}]},{"level":2,"title":"4. continue 语句","slug":"_4-continue-语句","link":"#_4-continue-语句","children":[{"level":3,"title":"4.1 跳过不符合条件的循环","slug":"_4-1-跳过不符合条件的循环","link":"#_4-1-跳过不符合条件的循环","children":[]}]},{"level":2,"title":"5. for 循环嵌套","slug":"_5-for-循环嵌套","link":"#_5-for-循环嵌套","children":[{"level":3,"title":"5.1 基本结构","slug":"_5-1-基本结构","link":"#_5-1-基本结构","children":[]},{"level":3,"title":"5.2 例子：打印一个 5x5 的星号矩阵","slug":"_5-2-例子-打印一个-5x5-的星号矩阵","link":"#_5-2-例子-打印一个-5x5-的星号矩阵","children":[]},{"level":3,"title":"5.3 直角三角形（右上角）","slug":"_5-3-直角三角形-右上角","link":"#_5-3-直角三角形-右上角","children":[]},{"level":3,"title":"5.4 直角三角形（右下角）","slug":"_5-4-直角三角形-右下角","link":"#_5-4-直角三角形-右下角","children":[]},{"level":3,"title":"5.5 等腰三角形","slug":"_5-5-等腰三角形","link":"#_5-5-等腰三角形","children":[]},{"level":3,"title":"5.6 倒等腰三角形","slug":"_5-6-倒等腰三角形","link":"#_5-6-倒等腰三角形","children":[]}]}],"git":{"createdTime":1732028288000,"updatedTime":1732028288000,"contributors":[{"name":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1}]},"readingTime":{"minutes":7.6,"words":2280},"filePathRelative":"Java/chapter01/14.md","localizedDate":"2023年8月21日","copyright":{"author":"AI悦创"}}');export{D as comp,k as data};
