import{_ as i}from"./gzh-X2g0OvFa.js";import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as r,c as k,a as n,d as p,w as a,b as s,e as d}from"./app-PmZnNhb4.js";const m={},b=d(`<h2 id="_0-二分查找代码" tabindex="-1"><a class="header-anchor" href="#_0-二分查找代码" aria-hidden="true">#</a> 0. 二分查找代码</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 定义二分查找函数，接受一个有序列表 arr 和一个目标值 x 作为参数</span>
<span class="token keyword">def</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 初始化两个指针 low 和 high</span>
    <span class="token comment"># low 指向数组的开始，high 指向数组的结束</span>
    low<span class="token punctuation">,</span> high <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
    
    <span class="token comment"># 当 low 指针不大于 high 指针时，循环继续</span>
    <span class="token keyword">while</span> low <span class="token operator">&lt;=</span> high<span class="token punctuation">:</span>
        <span class="token comment"># 计算中间索引 mid</span>
        mid <span class="token operator">=</span> <span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>
        
        <span class="token comment"># 如果 mid 位置的元素小于目标值 x</span>
        <span class="token comment"># 说明目标值在 mid 右边，所以更新 low 指针到 mid + 1</span>
        <span class="token keyword">if</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> x<span class="token punctuation">:</span>
            low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token comment"># 如果 mid 位置的元素大于目标值 x</span>
        <span class="token comment"># 说明目标值在 mid 左边，所以更新 high 指针到 mid - 1</span>
        <span class="token keyword">elif</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> x<span class="token punctuation">:</span>
            high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token comment"># 如果 mid 位置的元素等于目标值 x，直接返回 mid 索引</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> mid

    <span class="token comment"># 如果循环结束还没有返回，说明目标值 x 不在列表中，返回 -1</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>

<span class="token comment"># 示例测试</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>  <span class="token comment"># 一个已排序的数组</span>
result <span class="token operator">=</span> binary_search<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># 在数组中查找数字5</span>

<span class="token comment"># 输出查找结果</span>
<span class="token keyword">if</span> result <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;元素在数组中的索引为 </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;元素不在数组中&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-基础题" tabindex="-1"><a class="header-anchor" href="#_1-基础题" aria-hidden="true">#</a> 1. 基础题</h2><blockquote><p>请注意，这些题目可能需要对二分查找进行一些修改和调整，以满足特定的查找需求，例如查找最接近的值，而不仅仅是精确匹配的值。</p></blockquote><h3 id="_1-1-电影播放时长查找" tabindex="-1"><a class="header-anchor" href="#_1-1-电影播放时长查找" aria-hidden="true">#</a> 1.1 电影播放时长查找</h3><p>假设你有一个有序的电影时长列表（以分钟为单位），现在你想找到一个电影，其播放时长接近于你现在的空闲时间。写一个函数，使用二分查找来找到与你的空闲时间最接近的电影时长，并返回该电影的索引。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">find_closest_movie_duration</span><span class="token punctuation">(</span>durations<span class="token punctuation">,</span> free_time<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># ... 你的二分查找代码 ...</span>

movie_durations <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">]</span>
free_time <span class="token operator">=</span> <span class="token number">130</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_closest_movie_duration<span class="token punctuation">(</span>movie_durations<span class="token punctuation">,</span> free_time<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-书籍页数查找" tabindex="-1"><a class="header-anchor" href="#_1-2-书籍页数查找" aria-hidden="true">#</a> 1.2 书籍页数查找</h3><p>假设你在一个大型图书馆，这个图书馆的书按页数从少到多进行了有序排列。现在，你只记得你要找的书有大约 <code>n</code> 页，但你不确定具体是多少。写一个函数，使用二分查找来帮助你快速定位到那本书的大致位置。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">find_book_by_pages</span><span class="token punctuation">(</span>books<span class="token punctuation">,</span> target_pages<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># ... 你的二分查找代码 ...</span>

book_pages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">]</span>
target <span class="token operator">=</span> <span class="token number">340</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_book_by_pages<span class="token punctuation">(</span>book_pages<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-理想温度查找" tabindex="-1"><a class="header-anchor" href="#_1-3-理想温度查找" aria-hidden="true">#</a> 1.3 理想温度查找</h3><p>你有一个按日期排序的气温记录列表，你想知道在过去的某一段时间内，何时的气温最接近你的理想温度。写一个函数，使用二分查找来帮助你找到与你的理想温度最接近的那一天的日期。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">find_ideal_temperature</span><span class="token punctuation">(</span>temperatures<span class="token punctuation">,</span> ideal_temp<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># ... 你的二分查找代码 ...</span>

recorded_temperatures <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">]</span>
ideal <span class="token operator">=</span> <span class="token number">24</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_ideal_temperature<span class="token punctuation">(</span>recorded_temperatures<span class="token punctuation">,</span> ideal<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="答案" tabindex="-1"><a class="header-anchor" href="#答案" aria-hidden="true">#</a> 答案</h2>`,14),v={class:"hint-container details"},h=n("summary",null,"1. 基础题目答案",-1),_=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"find_closest_movie_duration"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},","),s(" free_time"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# 初始化两个指针"),s(`
    low`),n("span",{class:"token punctuation"},","),s(" high "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`
    closest_index `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(`
    
    `),n("span",{class:"token comment"},"# 当 low 不大于 high 时，继续查找"),s(`
    `),n("span",{class:"token keyword"},"while"),s(" low "),n("span",{class:"token operator"},"<="),s(" high"),n("span",{class:"token punctuation"},":"),s(`
        mid `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("low "),n("span",{class:"token operator"},"+"),s(" high"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"//"),s(),n("span",{class:"token number"},"2"),s(`
        `),n("span",{class:"token comment"},"# 如果找到准确的时长，直接返回"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" durations"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" free_time"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(` mid
        `),n("span",{class:"token comment"},"# 如果当前时长小于目标时长，更新 low"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" durations"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" free_time"),n("span",{class:"token punctuation"},":"),s(`
            low `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token comment"},"# 否则更新 high"),s(`
        `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
            high `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`
        
        `),n("span",{class:"token comment"},"# 更新最接近的时长索引"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" closest_index "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(),n("span",{class:"token keyword"},"or"),s(),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"-"),s(" free_time"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},"["),s("closest_index"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"-"),s(" free_time"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            closest_index `),n("span",{class:"token operator"},"="),s(` mid

    `),n("span",{class:"token keyword"},"return"),s(` closest_index

movie_durations `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"80"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"95"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"105"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"138"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"150"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"165"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"176"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"188"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"210"),n("span",{class:"token punctuation"},"]"),s(`
free_time `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"130"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("find_closest_movie_duration"),n("span",{class:"token punctuation"},"("),s("movie_durations"),n("span",{class:"token punctuation"},","),s(" free_time"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"find_closest_movie_duration"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},","),s(" free_time"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    low`),n("span",{class:"token punctuation"},","),s(" high "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`
    
    `),n("span",{class:"token keyword"},"while"),s(" low "),n("span",{class:"token operator"},"<="),s(" high"),n("span",{class:"token punctuation"},":"),s(`
        mid `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("low "),n("span",{class:"token operator"},"+"),s(" high"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"//"),s(),n("span",{class:"token number"},"2"),s(`

        `),n("span",{class:"token comment"},"# If the mid duration is less than free_time, increase low"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" durations"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" free_time"),n("span",{class:"token punctuation"},":"),s(`
            low `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token comment"},"# If the mid duration is greater than free_time, decrease high"),s(`
        `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
            high `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`

    `),n("span",{class:"token comment"},"# After the loop, we will have two candidates: low and high. "),s(`
    `),n("span",{class:"token comment"},"# Compare the gaps between free_time and the durations at these indices to determine which one is closer."),s(`

    `),n("span",{class:"token comment"},"# In case low is out of bounds, return high"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" low "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` high
    `),n("span",{class:"token comment"},"# In case high is out of bounds (or -1), return low"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" high "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` low
    
    gap_low `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},"["),s("low"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"-"),s(" free_time"),n("span",{class:"token punctuation"},")"),s(`
    gap_high `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("durations"),n("span",{class:"token punctuation"},"["),s("high"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"-"),s(" free_time"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token comment"},"# Return the index with the smallest gap"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" gap_low "),n("span",{class:"token operator"},"<"),s(" gap_high"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` low
    `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` high

movie_durations `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"80"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"95"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"105"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"138"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"150"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"165"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"176"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"188"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"210"),n("span",{class:"token punctuation"},"]"),s(`
free_time `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"130"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("find_closest_movie_duration"),n("span",{class:"token punctuation"},"("),s("movie_durations"),n("span",{class:"token punctuation"},","),s(" free_time"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"find_book_by_pages"),n("span",{class:"token punctuation"},"("),s("books"),n("span",{class:"token punctuation"},","),s(" target_pages"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    low`),n("span",{class:"token punctuation"},","),s(" high "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("books"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token keyword"},"while"),s(" low "),n("span",{class:"token operator"},"<="),s(" high"),n("span",{class:"token punctuation"},":"),s(`
        mid `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("low "),n("span",{class:"token operator"},"+"),s(" high"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"//"),s(),n("span",{class:"token number"},"2"),s(`
        `),n("span",{class:"token comment"},"# 如果找到相应的页数，直接返回"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" books"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" target_pages"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(` mid
        `),n("span",{class:"token comment"},"# 如果当前页数小于目标页数，更新 low"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" books"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" target_pages"),n("span",{class:"token punctuation"},":"),s(`
            low `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token comment"},"# 否则更新 high"),s(`
        `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
            high `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`

    `),n("span",{class:"token comment"},"# 如果没有找到，返回 -1"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(`

book_pages `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"150"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"250"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"300"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"350"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"400"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"450"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"500"),n("span",{class:"token punctuation"},"]"),s(`
target `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"340"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("find_book_by_pages"),n("span",{class:"token punctuation"},"("),s("book_pages"),n("span",{class:"token punctuation"},","),s(" target"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"find_ideal_temperature"),n("span",{class:"token punctuation"},"("),s("temperatures"),n("span",{class:"token punctuation"},","),s(" ideal_temp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    low`),n("span",{class:"token punctuation"},","),s(" high "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("temperatures"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`
    closest_index `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(`
    
    `),n("span",{class:"token keyword"},"while"),s(" low "),n("span",{class:"token operator"},"<="),s(" high"),n("span",{class:"token punctuation"},":"),s(`
        mid `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("low "),n("span",{class:"token operator"},"+"),s(" high"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"//"),s(),n("span",{class:"token number"},"2"),s(`
        `),n("span",{class:"token comment"},"# 如果找到准确的温度，直接返回"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" temperatures"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" ideal_temp"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(` mid
        `),n("span",{class:"token comment"},"# 如果当前温度低于理想温度，更新 low"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" temperatures"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" ideal_temp"),n("span",{class:"token punctuation"},":"),s(`
            low `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token comment"},"# 否则更新 high"),s(`
        `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
            high `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(`
        
        `),n("span",{class:"token comment"},"# 更新最接近的温度索引"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" closest_index "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(),n("span",{class:"token keyword"},"or"),s(),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("temperatures"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"-"),s(" ideal_temp"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("temperatures"),n("span",{class:"token punctuation"},"["),s("closest_index"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"-"),s(" ideal_temp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            closest_index `),n("span",{class:"token operator"},"="),s(` mid

    `),n("span",{class:"token keyword"},"return"),s(` closest_index

recorded_temperatures `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"15"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"17"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"19"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"21"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"22"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"23"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"24"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"25"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"27"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"29"),n("span",{class:"token punctuation"},"]"),s(`
ideal `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"24"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("find_ideal_temperature"),n("span",{class:"token punctuation"},"("),s("recorded_temperatures"),n("span",{class:"token punctuation"},","),s(" ideal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("p",null,"欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！",-1),x=n("details",{class:"hint-container details"},[n("summary",null,"公众号：AI悦创【二维码】"),n("figure",null,[n("img",{src:i,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")])],-1),A={class:"hint-container info"},q=n("p",{class:"hint-container-title"},"AI悦创·编程一对一",-1),I=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),C=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),N={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,"方法二：微信：Jiabcdefh",-1);function V(B,E){const c=o("Tabs"),l=o("ExternalLinkIcon");return r(),k("div",null,[b,n("details",v,[h,p(c,{id:"37",data:[{id:"1.1 电影播放时长查找"},{id:"郑同学代码"},{id:"1.2 书籍页数查找"},{id:"1.3 理想温度查找"}]},{title0:a(({value:e,isActive:t})=>[s("1.1 电影播放时长查找")]),title1:a(({value:e,isActive:t})=>[s("郑同学代码")]),title2:a(({value:e,isActive:t})=>[s("1.2 书籍页数查找")]),title3:a(({value:e,isActive:t})=>[s("1.3 理想温度查找")]),tab0:a(({value:e,isActive:t})=>[_]),tab1:a(({value:e,isActive:t})=>[w]),tab2:a(({value:e,isActive:t})=>[g]),tab3:a(({value:e,isActive:t})=>[y]),_:1})]),f,x,n("div",A,[q,I,C,n("p",null,[s("方法一："),n("a",N,[s("QQ"),p(l)])]),Q])])}const L=u(m,[["render",V],["__file","practice.html.vue"]]);export{L as default};
