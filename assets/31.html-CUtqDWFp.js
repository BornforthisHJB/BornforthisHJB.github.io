import{_ as n}from"./gzh-DnOBNg6W.js";import{_ as a}from"./zsxq-BcdwOI-_.js";import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as o,o as t}from"./app-5ibwX_Sh.js";const p={};function i(c,s){return t(),e("div",null,s[0]||(s[0]=[o(`<p>你好，我是悦创。</p><p>我们来系统学习 <strong>Java</strong> 中的 <code>Random</code> 类及其用法。Java 提供了 <code>java.util.Random</code> 类用于生成随机数，它是基础随机数生成工具之一。</p><h2 id="_1-引入-random-类" tabindex="-1"><a class="header-anchor" href="#_1-引入-random-类"><span>1. 引入 Random 类</span></a></h2><p>在使用 <code>Random</code> 类之前，需要引入它：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.Random</span><span style="color:#F8F8F2;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-创建random对象" tabindex="-1"><a class="header-anchor" href="#_2-创建random对象"><span>2. 创建Random对象</span></a></h2><p>创建 <code>Random</code> 类对象有两种方法：</p><h3 id="_2-1-无种子构造方法" tabindex="-1"><a class="header-anchor" href="#_2-1-无种子构造方法"><span>2.1 无种子构造方法</span></a></h3><p>使用 <strong>无参数</strong> 构造方法，它会根据当前时间自动生成一个种子：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Random</span><span style="color:#F8F8F2;"> random </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Random</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-2-带种子构造方法" tabindex="-1"><a class="header-anchor" href="#_2-2-带种子构造方法"><span>2.2 带种子构造方法</span></a></h3><p>带有种子的构造方法可以生成可重复的随机数（用于调试）：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Random</span><span style="color:#F8F8F2;"> random </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Random</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">12345</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 12345 是种子值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-random类的常用方法" tabindex="-1"><a class="header-anchor" href="#_3-random类的常用方法"><span>3. Random类的常用方法</span></a></h2><h3 id="_3-1-nextint" tabindex="-1"><a class="header-anchor" href="#_3-1-nextint"><span>3.1 nextInt()</span></a></h3><p>生成一个 <strong>任意范围的整数</strong>。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(num); </span><span style="color:#88846F;">// 输出一个任意范围的整数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-nextint-int-bound" tabindex="-1"><a class="header-anchor" href="#_3-2-nextint-int-bound"><span>3.2 nextInt(int bound)</span></a></h3><p>生成一个 <strong>0 到 bound-1 范围内</strong> 的随机整数：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// [0, 9]</span></span>
<span class="line"><span style="color:#F8F8F2;">System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(num);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-nextdouble" tabindex="-1"><a class="header-anchor" href="#_3-3-nextdouble"><span>3.3 nextDouble()</span></a></h3><p>生成一个 <strong>0.0 到 1.0</strong> 之间的随机小数（double类型）：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">double</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextDouble</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(num);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-nextboolean" tabindex="-1"><a class="header-anchor" href="#_3-4-nextboolean"><span>3.4 nextBoolean()</span></a></h3><p>随机生成 <code>true</code> 或 <code>false</code>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> flag </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextBoolean</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(flag);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-nextfloat" tabindex="-1"><a class="header-anchor" href="#_3-5-nextfloat"><span>3.5 nextFloat()</span></a></h3><p>生成一个 <strong>0.0 到 1.0</strong> 之间的随机小数（float类型）：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">float</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextFloat</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(num);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-nextlong" tabindex="-1"><a class="header-anchor" href="#_3-6-nextlong"><span>3.6 nextLong()</span></a></h3><p>生成一个 <strong>随机的long类型的整数</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">long</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextLong</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(num);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-7-生成指定范围的随机数" tabindex="-1"><a class="header-anchor" href="#_3-7-生成指定范围的随机数"><span>3.7 生成指定范围的随机数</span></a></h3><p>如果要生成指定范围内的随机数，例如 <strong>[min, max]</strong>，可以这样做：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> max </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 15</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(max </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(num);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-示例代码-随机数的综合生成" tabindex="-1"><a class="header-anchor" href="#_4-示例代码-随机数的综合生成"><span>4. 示例代码：随机数的综合生成</span></a></h2><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.Random</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">RandomExample</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        Random</span><span style="color:#F8F8F2;"> random </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Random</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 生成0到9之间的随机整数</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> randomInt </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;0到9之间的随机整数: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> randomInt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 生成随机小数 [0.0, 1.0)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;"> randomDouble </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextDouble</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;随机小数 (0.0 - 1.0): &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> randomDouble);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 生成随机布尔值</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        boolean</span><span style="color:#F8F8F2;"> randomBoolean </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextBoolean</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;随机布尔值: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> randomBoolean);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 生成指定范围的随机整数 [10, 20]</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">, max </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> rangedInt </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(max </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;10到20之间的随机整数: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> rangedInt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 生成long类型随机数</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        long</span><span style="color:#F8F8F2;"> randomLong </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextLong</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;随机long类型数: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> randomLong);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>输出示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">0到9之间的随机整数</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 4</span><span style="color:#F8F8F2;">  </span></span>
<span class="line"><span style="color:#F8F8F2;">随机小数 (</span><span style="color:#AE81FF;">0.0</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;"> 1.0</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 0.234567</span><span style="color:#F8F8F2;">  </span></span>
<span class="line"><span style="color:#F8F8F2;">随机布尔值</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">  </span></span>
<span class="line"><span style="color:#F8F8F2;">10到20之间的随机整数</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 15</span><span style="color:#F8F8F2;">  </span></span>
<span class="line"><span style="color:#F8F8F2;">随机long类型数</span><span style="color:#F92672;">:</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">3456789021234567890</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-常见应用场景" tabindex="-1"><a class="header-anchor" href="#_5-常见应用场景"><span>5. 常见应用场景</span></a></h2><ol><li><strong>生成随机密码或字符串：</strong> 结合字符数组与 <code>Random</code> 实现随机字符串。</li><li><strong>模拟随机事件：</strong> 例如掷骰子、抛硬币等。</li><li><strong>随机抽取数据：</strong> 例如从集合中随机取出元素。</li><li><strong>生成随机数用于游戏开发：</strong> 例如生成怪物攻击力、地图坐标等。</li></ol><h2 id="_6-随机字符串示例" tabindex="-1"><a class="header-anchor" href="#_6-随机字符串示例"><span>6. 随机字符串示例</span></a></h2><p>以下是生成随机字符串（如密码）的示例：</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.Random</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">RandomString</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;"> characters </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> length </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 8</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 指定随机字符串的长度</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        Random</span><span style="color:#F8F8F2;"> random </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Random</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        StringBuilder</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> StringBuilder</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">            int</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(characters.</span><span style="color:#A6E22E;">length</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">            result.</span><span style="color:#A6E22E;">append</span><span style="color:#F8F8F2;">(characters.</span><span style="color:#A6E22E;">charAt</span><span style="color:#F8F8F2;">(index));</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;生成的随机字符串: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> result.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>输出示例：</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span>生成的随机字符串: a9FhT2Lm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_7-总结" tabindex="-1"><a class="header-anchor" href="#_7-总结"><span>7. 总结</span></a></h2><ol><li>引入 <code>java.util.Random</code> 类。</li><li>使用 <code>Random</code> 对象生成各种类型的随机数。</li><li>根据需求生成指定范围或格式的随机数。</li><li>结合循环等方法，可以实现更复杂的随机场景。</li></ol><h2 id="_8-速查表格" tabindex="-1"><a class="header-anchor" href="#_8-速查表格"><span>8. 速查表格</span></a></h2><table><thead><tr><th><strong>方法</strong></th><th><strong>返回值类型</strong></th><th><strong>作用</strong></th><th><strong>代码示例</strong></th></tr></thead><tbody><tr><td><code>nextInt()</code></td><td><code>int</code></td><td>生成一个任意范围的整数</td><td><code>int num = random.nextInt();</code></td></tr><tr><td><code>nextInt(int bound)</code></td><td><code>int</code></td><td>生成 <code>[0, bound-1]</code> 范围内的随机整数</td><td><code>int num = random.nextInt(10); // 0-9</code></td></tr><tr><td><code>nextDouble()</code></td><td><code>double</code></td><td>生成 <code>[0.0, 1.0)</code> 范围的随机小数</td><td><code>double num = random.nextDouble();</code></td></tr><tr><td><code>nextFloat()</code></td><td><code>float</code></td><td>生成 <code>[0.0, 1.0)</code> 范围的随机小数</td><td><code>float num = random.nextFloat();</code></td></tr><tr><td><code>nextBoolean()</code></td><td><code>boolean</code></td><td>随机生成 <code>true</code> 或 <code>false</code></td><td><code>boolean flag = random.nextBoolean();</code></td></tr><tr><td><code>nextLong()</code></td><td><code>long</code></td><td>生成一个任意范围的 <code>long</code> 类型随机数</td><td><code>long num = random.nextLong();</code></td></tr><tr><td><strong>指定范围的随机数</strong></td><td><code>int</code></td><td>生成 <code>[min, max]</code> 范围的随机整数</td><td><code>int num = min + random.nextInt(max - min + 1);</code></td></tr><tr><td><strong>随机字符串生成</strong></td><td><code>String</code></td><td>生成一个固定长度的随机字符串</td><td><code>String chars = &quot;abc&quot;; chars.charAt(random.nextInt(chars.length()));</code></td></tr></tbody></table><h2 id="_9-生成指定范围的随机数讲解" tabindex="-1"><a class="header-anchor" href="#_9-生成指定范围的随机数讲解"><span>9. 生成指定范围的随机数讲解</span></a></h2><p>在 Java 中，<code>Random</code> 类的 <code>nextInt(int bound)</code> 方法默认生成 <code>[0, bound-1]</code> 范围内的随机整数。如果要生成指定范围 <code>[min, max]</code> 的随机数，可以通过以下公式实现：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> randomNumber </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(max </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_9-1-公式推导" tabindex="-1"><a class="header-anchor" href="#_9-1-公式推导"><span>9.1 公式推导</span></a></h3><ol><li><p><code>random.nextInt(n)</code>：默认会生成 <code>[0, n-1]</code> 范围的整数，<code>n</code> 是一个正整数。</p></li><li><p>为了生成 <code>[min, max]</code> 范围的整数，我们将目标范围 <code>[min, max]</code> 的大小定义为：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">范围大小 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> max </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>max - min</code> 表示 <code>max</code> 与 <code>min</code> 之间的差值（即区间内的元素个数减1）。</li><li>加 <code>1</code> 是因为范围是 <strong>闭区间</strong>，包括了 <code>max</code> 本身。</li><li>具体例子： <ul><li>我要取：2～6之间的随机整数，也就是：<code>[2, 3, 4, 5, 6]</code> 一共 5 个元素；「min：2、max：6」</li><li>要计算有几个元素：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>max - min</mtext><mo>=</mo><mn>6</mn><mo>−</mo><mn>2</mn><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">\\text{max - min} = 6 - 2 = 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mord text"><span class="mord">max - min</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 差一个元素，所以需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">+</span><span class="mord">1</span></span></span></span>；</li></ul></li></ul></li><li><p><code>random.nextInt(max - min + 1)</code>：会生成 <code>[0, max - min]</code> 范围内的整数。</p></li><li><p>加上 <code>min</code>：将 <code>[0, max - min]</code> 范围整体平移到 <code>[min, max]</code> 范围。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">randomNumber </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(max </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="_9-2-示例-推导-5-15-的随机数" tabindex="-1"><a class="header-anchor" href="#_9-2-示例-推导-5-15-的随机数"><span>9.2 示例：推导 <code>[5, 15]</code> 的随机数</span></a></h3><ul><li><code>max = 15</code>，<code>min = 5</code>。</li><li>范围大小：<code>15 - 5 + 1 = 11</code>。</li><li><code>random.nextInt(11)</code>：生成 <code>[0, 10]</code> 范围的整数。</li><li>加上 <code>5</code>：结果范围变为 <code>[5, 15]</code>。</li></ul><h3 id="_9-3-示例代码-生成指定范围的随机数" tabindex="-1"><a class="header-anchor" href="#_9-3-示例代码-生成指定范围的随机数"><span>9.3 示例代码：生成指定范围的随机数</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.Random</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">RandomRangeExample</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        Random</span><span style="color:#F8F8F2;"> random </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Random</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> max </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 15</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 生成 [min, max] 范围的随机数</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> randomNumber </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> random.</span><span style="color:#A6E22E;">nextInt</span><span style="color:#F8F8F2;">(max </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;生成的随机数 (范围: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> min </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot; 到 &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> max </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;): &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> randomNumber);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-4-输出示例" tabindex="-1"><a class="header-anchor" href="#_9-4-输出示例"><span>9.4 输出示例</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">生成的随机数 (范围</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;"> 到 </span><span style="color:#AE81FF;">15</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 12</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_9-5-总结" tabindex="-1"><a class="header-anchor" href="#_9-5-总结"><span>9.5 总结</span></a></h3><ul><li>使用 <code>nextInt(int bound)</code> 方法实现基本随机数生成。</li><li>通过公式 <code>min + random.nextInt(max - min + 1)</code> 可以灵活生成 <code>[min, max]</code> 范围的随机整数。</li><li><strong>关键点</strong>： <ul><li><code>max - min + 1</code> 计算出范围的大小。</li><li>加 <code>min</code> 将结果平移到目标范围。</li></ul></li></ul><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',67)]))}const m=l(p,[["render",i],["__file","31.html.vue"]]),u=JSON.parse('{"path":"/Java/chapter02/31.html","title":"31-Java 中的 Random 类","lang":"zh-CN","frontmatter":{"title":"31-Java 中的 Random 类","date":"2024-12-18T08:05:27.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课"],"tag":["Java体系课"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"footer":"长期招收编程一对一学员！微信：Jiabcdefh, <a href=\\"https://beian.miit.gov.cn/\\" target=\\"_blank\\">闽ICP备19021486号-6</a>","feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 引入 Random 类","slug":"_1-引入-random-类","link":"#_1-引入-random-类","children":[]},{"level":2,"title":"2. 创建Random对象","slug":"_2-创建random对象","link":"#_2-创建random对象","children":[{"level":3,"title":"2.1 无种子构造方法","slug":"_2-1-无种子构造方法","link":"#_2-1-无种子构造方法","children":[]},{"level":3,"title":"2.2 带种子构造方法","slug":"_2-2-带种子构造方法","link":"#_2-2-带种子构造方法","children":[]}]},{"level":2,"title":"3. Random类的常用方法","slug":"_3-random类的常用方法","link":"#_3-random类的常用方法","children":[{"level":3,"title":"3.1 nextInt()","slug":"_3-1-nextint","link":"#_3-1-nextint","children":[]},{"level":3,"title":"3.2 nextInt(int bound)","slug":"_3-2-nextint-int-bound","link":"#_3-2-nextint-int-bound","children":[]},{"level":3,"title":"3.3 nextDouble()","slug":"_3-3-nextdouble","link":"#_3-3-nextdouble","children":[]},{"level":3,"title":"3.4 nextBoolean()","slug":"_3-4-nextboolean","link":"#_3-4-nextboolean","children":[]},{"level":3,"title":"3.5 nextFloat()","slug":"_3-5-nextfloat","link":"#_3-5-nextfloat","children":[]},{"level":3,"title":"3.6 nextLong()","slug":"_3-6-nextlong","link":"#_3-6-nextlong","children":[]},{"level":3,"title":"3.7 生成指定范围的随机数","slug":"_3-7-生成指定范围的随机数","link":"#_3-7-生成指定范围的随机数","children":[]}]},{"level":2,"title":"4. 示例代码：随机数的综合生成","slug":"_4-示例代码-随机数的综合生成","link":"#_4-示例代码-随机数的综合生成","children":[]},{"level":2,"title":"5. 常见应用场景","slug":"_5-常见应用场景","link":"#_5-常见应用场景","children":[]},{"level":2,"title":"6. 随机字符串示例","slug":"_6-随机字符串示例","link":"#_6-随机字符串示例","children":[]},{"level":2,"title":"7. 总结","slug":"_7-总结","link":"#_7-总结","children":[]},{"level":2,"title":"8. 速查表格","slug":"_8-速查表格","link":"#_8-速查表格","children":[]},{"level":2,"title":"9. 生成指定范围的随机数讲解","slug":"_9-生成指定范围的随机数讲解","link":"#_9-生成指定范围的随机数讲解","children":[{"level":3,"title":"9.1 公式推导","slug":"_9-1-公式推导","link":"#_9-1-公式推导","children":[]},{"level":3,"title":"9.2 示例：推导 [5, 15] 的随机数","slug":"_9-2-示例-推导-5-15-的随机数","link":"#_9-2-示例-推导-5-15-的随机数","children":[]},{"level":3,"title":"9.3 示例代码：生成指定范围的随机数","slug":"_9-3-示例代码-生成指定范围的随机数","link":"#_9-3-示例代码-生成指定范围的随机数","children":[]},{"level":3,"title":"9.4 输出示例","slug":"_9-4-输出示例","link":"#_9-4-输出示例","children":[]},{"level":3,"title":"9.5 总结","slug":"_9-5-总结","link":"#_9-5-总结","children":[]}]}],"git":{"createdTime":1734487378000,"updatedTime":1734579594000,"contributors":[{"name":"AndersonHJB","username":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":2,"url":"https://github.com/AndersonHJB"}]},"readingTime":{"minutes":5.94,"words":1781},"filePathRelative":"Java/chapter02/31.md","localizedDate":"2024年12月18日","copyright":{"author":"AI悦创"}}');export{m as comp,u as data};
