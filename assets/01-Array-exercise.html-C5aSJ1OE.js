import{_ as r}from"./gzh-DnOBNg6W.js";import{_ as c}from"./zsxq-BcdwOI-_.js";import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as y,f as F,h as p,i as a,r as d,o as u,g as s,j as l}from"./app-DkLsrUFz.js";const m={};function v(b,n){const t=d("CodeTabs");return u(),y("div",null,[n[24]||(n[24]=F('<h2 id="_1-数组的最大值和最小值" tabindex="-1"><a class="header-anchor" href="#_1-数组的最大值和最小值"><span>1. 数组的最大值和最小值</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，接收一个整数数组，返回数组中的最大值和最小值。</p><p><strong>输入示例</strong>: <code>int[] nums = {3, 5, 1, 9, 2};</code></p><p><strong>输出示例</strong>: <code>Max: 9, Min: 1</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">findMinAndMax</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p>',7)),p(t,{id:"19",data:[{id:"Code1"},{id:"Code2"},{id:"Code3"}]},{title0:a(({value:o,isActive:e})=>n[0]||(n[0]=[l("Code1")])),title1:a(({value:o,isActive:e})=>n[1]||(n[1]=[l("Code2")])),title2:a(({value:o,isActive:e})=>n[2]||(n[2]=[l("Code3")])),tab0:a(({value:o,isActive:e})=>n[3]||(n[3]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ArrayProblems"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," findMaxAndMin"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"nums"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 初始化最大值和最小值为数组第一个元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 遍历数组，逐步更新最大值和最小值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max) {  "),s("span",{style:{color:"#88846F"}},"// 如果当前元素比当前最大值大，更新最大值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," min) {  "),s("span",{style:{color:"#88846F"}},"// 如果当前元素比当前最小值小，更新最小值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 打印结果")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Max: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' ", Min: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," min);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 测试数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E"}},"        findMaxAndMin"),s("span",{style:{color:"#F8F8F2"}},"(nums);  "),s("span",{style:{color:"#88846F"}},"// 调用方法")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>n[4]||(n[4]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#A6E22E"}},"findMinAndMax"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] nums) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 初始化最大值和最小值为数组的第一个元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 遍历数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 如果当前值大于最大值，更新最大值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 如果当前值小于最小值，更新最小值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," min) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 返回最大值和最小值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[]{min, max};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:a(({value:o,isActive:e})=>n[5]||(n[5]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ArraySolutions"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#A6E22E"}},"findMinAndMax"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"nums"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]; "),s("span",{style:{color:"#88846F"}},"// 初始化最小值为第一个元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]; "),s("span",{style:{color:"#88846F"}},"// 初始化最大值为第一个元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums) { "),s("span",{style:{color:"#88846F"}},"// 遍历数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," min) min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num; "),s("span",{style:{color:"#88846F"}},"// 更新最小值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max) max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num; "),s("span",{style:{color:"#88846F"}},"// 更新最大值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[]{min, max}; "),s("span",{style:{color:"#88846F"}},"// 返回包含最小值和最大值的数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#A6E22E"}}," findMinAndMax"),s("span",{style:{color:"#F8F8F2"}},"(nums);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Min: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," result["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' ", Max: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," result["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[25]||(n[25]=F(`<h2 id="_2-数组的元素之和" tabindex="-1"><a class="header-anchor" href="#_2-数组的元素之和"><span>2. 数组的元素之和</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，计算并返回一个整数数组中所有元素的总和。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5};</code></p><p><strong>输出示例</strong>: <code>Sum = 15</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> calculateSum</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ArraySum</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> calculateSum</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">nums</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 初始化总和为0</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#88846F;">        // 遍历数组并累加每个元素的值</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> nums) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            sum </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> num;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#88846F;">        // 打印数组的总和</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Sum: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> sum);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 测试数组</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#A6E22E;">        calculateSum</span><span style="color:#F8F8F2;">(nums);  </span><span style="color:#88846F;">// 调用方法</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_3-反转数组" tabindex="-1"><a class="header-anchor" href="#_3-反转数组"><span>3. 反转数组</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，将给定的整数数组反转。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5};</code></p><p><strong>输出示例</strong>: <code>Reversed = {5, 4, 3, 2, 1}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">reverseArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p>`,15)),p(t,{id:"69",data:[{id:"Code1"},{id:"Code2"}]},{title0:a(({value:o,isActive:e})=>n[6]||(n[6]=[l("Code1")])),title1:a(({value:o,isActive:e})=>n[7]||(n[7]=[l("Code2")])),tab0:a(({value:o,isActive:e})=>n[8]||(n[8]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#A6E22E"}},"reverseArray"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] nums) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," start "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},", end "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums.length "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"; "),s("span",{style:{color:"#88846F"}},"// 定义双指针")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," (start "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," end) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 交换两个指针的值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," temp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums[start];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        nums[start] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums[end];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        nums[end] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," temp;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        start"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        end"),s("span",{style:{color:"#F92672"}},"--"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," nums; "),s("span",{style:{color:"#88846F"}},"// 返回反转后的数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] args) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}},"[] reversed "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#A6E22E"}}," reverseArray"),s("span",{style:{color:"#F8F8F2"}},"(nums);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Reversed: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," Arrays."),s("span",{style:{color:"#A6E22E"}},"toString"),s("span",{style:{color:"#F8F8F2"}},"(reversed));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>n[9]||(n[9]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ReverseArray"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] reversedArray "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[nums.length];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," index "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 4"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 4"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},">="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i"),s("span",{style:{color:"#F92672"}},"--"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            reversedArray["),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"i] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums[i];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," reversedArray.length; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            System.out."),s("span",{style:{color:"#A6E22E"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(reversedArray[i] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' " "'),s("span",{style:{color:"#F8F8F2"}},");")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[26]||(n[26]=F(`<h2 id="_4-查找目标元素的索引" tabindex="-1"><a class="header-anchor" href="#_4-查找目标元素的索引"><span>4. 查找目标元素的索引</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，接收一个整数数组和一个目标值，返回目标值的索引，如果不存在则返回 -1。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 3, 5, 7}; int target = 5;</code></p><p><strong>输出示例</strong>: <code>Index = 2</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> findIndex</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> target);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> findIndex</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> target) {</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) { </span><span style="color:#88846F;">// 遍历数组</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (nums[i] </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> target) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> i; </span><span style="color:#88846F;">// 找到目标值时返回索引</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 如果目标值不存在，返回 -1</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;"> target </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Index: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#A6E22E;"> findIndex</span><span style="color:#F8F8F2;">(nums, target));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-去除数组中的重复值" tabindex="-1"><a class="header-anchor" href="#_5-去除数组中的重复值"><span>5. 去除数组中的重复值</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，删除数组中的重复值，返回新的数组。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 2, 3, 4, 4, 5};</code></p><p><strong>输出示例</strong>: <code>{1, 2, 3, 4, 5}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">removeDuplicates</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">removeDuplicates</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Set</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Integer</span><span style="color:#F8F8F2;">&gt; set </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> LinkedHashSet</span><span style="color:#F8F8F2;">&lt;&gt;(); </span><span style="color:#88846F;">// 使用有序集合去重</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> nums) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        set.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(num); </span><span style="color:#88846F;">// 自动去重</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> set.</span><span style="color:#A6E22E;">stream</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">mapToInt</span><span style="color:#F8F8F2;">(Integer</span><span style="color:#F92672;">::</span><span style="color:#F8F8F2;">intValue).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 转换为数组</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Unique: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">removeDuplicates</span><span style="color:#F8F8F2;">(nums)));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-数组的元素平方" tabindex="-1"><a class="header-anchor" href="#_6-数组的元素平方"><span>6. 数组的元素平方</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，返回一个数组，其中每个元素是原数组对应元素的平方值。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4};</code></p><p><strong>输出示例</strong>: <code>{1, 4, 9, 16}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">squareArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">squareArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] squared </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[nums.length]; </span><span style="color:#88846F;">// 创建结果数组</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        squared[i] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[i] </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> nums[i]; </span><span style="color:#88846F;">// 计算平方值</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> squared; </span><span style="color:#88846F;">// 返回结果数组</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Squared: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">squareArray</span><span style="color:#F8F8F2;">(nums)));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-两个数组的交集" tabindex="-1"><a class="header-anchor" href="#_7-两个数组的交集"><span>7. 两个数组的交集</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，接收两个数组并返回它们的交集，结果不包含重复值。</p><p><strong>输入示例</strong>: <code>int[] nums1 = {1, 2, 2, 3}; int[] nums2 = {2, 2, 3, 4};</code></p><p><strong>输出示例</strong>: <code>{2, 3}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">findIntersection</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums1, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums2);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p>`,31)),p(t,{id:"159",data:[{id:"Code1"},{id:"Code2"}]},{title0:a(({value:o,isActive:e})=>n[10]||(n[10]=[l("Code1")])),title1:a(({value:o,isActive:e})=>n[11]||(n[11]=[l("Code2")])),tab0:a(({value:o,isActive:e})=>n[12]||(n[12]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#A6E22E"}},"findIntersection"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] nums1, "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] nums2) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    Set"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},"> set1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashSet"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    Set"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},"> intersection "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashSet"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums1) set1."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(num); "),s("span",{style:{color:"#88846F"}},"// 将第一个数组加入集合")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums2) { "),s("span",{style:{color:"#88846F"}},"// 遍历第二个数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," (set1."),s("span",{style:{color:"#A6E22E"}},"contains"),s("span",{style:{color:"#F8F8F2"}},"(num)) intersection."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(num); "),s("span",{style:{color:"#88846F"}},"// 取交集")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," intersection."),s("span",{style:{color:"#A6E22E"}},"stream"),s("span",{style:{color:"#F8F8F2"}},"()."),s("span",{style:{color:"#A6E22E"}},"mapToInt"),s("span",{style:{color:"#F8F8F2"}},"(Integer"),s("span",{style:{color:"#F92672"}},"::"),s("span",{style:{color:"#F8F8F2"}},"intValue)."),s("span",{style:{color:"#A6E22E"}},"toArray"),s("span",{style:{color:"#F8F8F2"}},"(); "),s("span",{style:{color:"#88846F"}},"// 转换为数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] args) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}},"[] nums1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}},"[] nums2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Intersection: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," Arrays."),s("span",{style:{color:"#A6E22E"}},"toString"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#A6E22E"}},"findIntersection"),s("span",{style:{color:"#F8F8F2"}},"(nums1, nums2)));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>n[13]||(n[13]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.ArrayList"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.List"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ArraysIntersection"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        List"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},"> intersection "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," ArrayList"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," nums1.length; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; j "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," nums2.length; j"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                if"),s("span",{style:{color:"#F8F8F2"}}," (nums1[i] "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," nums2[j] "),s("span",{style:{color:"#F92672"}},"&&"),s("span",{style:{color:"#F92672"}}," !"),s("span",{style:{color:"#F8F8F2"}},"intersection."),s("span",{style:{color:"#A6E22E"}},"contains"),s("span",{style:{color:"#F8F8F2"}},"(nums1[i])) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                    intersection."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(nums1[i]);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(intersection);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[27]||(n[27]=F(`<h2 id="_8-数组的左旋" tabindex="-1"><a class="header-anchor" href="#_8-数组的左旋"><span>8. 数组的左旋</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，将数组中的元素向左旋转 k 个位置。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5}; int k = 2;</code></p><p><strong>输出示例</strong>: <code>{3, 4, 5, 1, 2}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">leftRotateArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> k);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">leftRotateArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> k) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    k </span><span style="color:#F92672;">%=</span><span style="color:#F8F8F2;"> nums.length; </span><span style="color:#88846F;">// 处理旋转次数大于数组长度的情况</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] rotated </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[nums.length];</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        rotated[i] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[(i </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> k) </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> nums.length]; </span><span style="color:#88846F;">// 计算新位置</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> rotated;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;"> k </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Rotated: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">leftRotateArray</span><span style="color:#F8F8F2;">(nums, k)));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-数组是否有序" tabindex="-1"><a class="header-anchor" href="#_9-数组是否有序"><span>9. 数组是否有序</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法判断数组是否为升序排列。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5};</code></p><p><strong>输出示例</strong>: <code>true</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> boolean</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> boolean</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) { </span><span style="color:#88846F;">// 遍历数组</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (nums[i] </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums[i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">]) </span><span style="color:#F92672;">return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 检查是否降序</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 如果所有元素都符合升序，返回 true</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Is Sorted: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(nums));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-数组的子数组之和最大值" tabindex="-1"><a class="header-anchor" href="#_10-数组的子数组之和最大值"><span>10. 数组的子数组之和最大值</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，找出具有最大和的连续子数组，并返回其和。</p><p><strong>输入示例</strong>: <code>int[] nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};</code></p><p><strong>输出示例</strong>: <code>6</code>（子数组 <code>[4, -1, 2, 1]</code> 的和）</p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> maxSubArraySum</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p>`,23)),p(t,{id:"229",data:[{id:"Code1"},{id:"Code2"},{id:"推荐答案"}]},{title0:a(({value:o,isActive:e})=>n[14]||(n[14]=[l("Code1")])),title1:a(({value:o,isActive:e})=>n[15]||(n[15]=[l("Code2")])),title2:a(({value:o,isActive:e})=>n[16]||(n[16]=[l("推荐答案")])),tab0:a(({value:o,isActive:e})=>n[17]||(n[17]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"MaxSubArraySum"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#A6E22E"}}," maxSubArraySum"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"nums"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 初始值：全局最大值和当前最大值都设为数组的第一个元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," maxSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," currentSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 从第二个元素开始遍历数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," nums.length; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 当前子数组和：选择加上当前元素，或者从当前元素重新开始")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            currentSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Math."),s("span",{style:{color:"#A6E22E"}},"max"),s("span",{style:{color:"#F8F8F2"}},"(nums[i], currentSum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," nums[i]);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 更新全局最大值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            maxSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Math."),s("span",{style:{color:"#A6E22E"}},"max"),s("span",{style:{color:"#F8F8F2"}},"(maxSum, currentSum);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," maxSum;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"最大子数组和: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#A6E22E"}}," maxSubArraySum"),s("span",{style:{color:"#F8F8F2"}},"(nums)); "),s("span",{style:{color:"#88846F"}},"// 输出：6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>n[18]||(n[18]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#A6E22E"}}," maxSubArraySum"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] nums) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," maxSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]; "),s("span",{style:{color:"#88846F"}},"// 初始化最大值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," currentSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]; "),s("span",{style:{color:"#88846F"}},"// 当前子数组和")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," nums.length; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        currentSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Math."),s("span",{style:{color:"#A6E22E"}},"max"),s("span",{style:{color:"#F8F8F2"}},"(nums[i], currentSum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," nums[i]); "),s("span",{style:{color:"#88846F"}},"// 更新当前子数组和")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        maxSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Math."),s("span",{style:{color:"#A6E22E"}},"max"),s("span",{style:{color:"#F8F8F2"}},"(maxSum, currentSum); "),s("span",{style:{color:"#88846F"}},"// 更新最大值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," maxSum;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] args) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Max Subarray Sum: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#A6E22E"}}," maxSubArraySum"),s("span",{style:{color:"#F8F8F2"}},"(nums));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:o,isActive:e})=>n[19]||(n[19]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"MaxSubArray"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 定义方法，输入一个整数数组，返回具有最大和的连续子数组的和")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#A6E22E"}}," maxSubArraySum"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"nums"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 如果输入数组为空或长度为0，返回0（边界条件）")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," (nums "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," null"),s("span",{style:{color:"#F92672"}}," ||"),s("span",{style:{color:"#F8F8F2"}}," nums.length "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; "),s("span",{style:{color:"#88846F"}},"// 空数组情况下返回0")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 初始化最大子数组和，初始值设为最小的整数，因为最小值可能是最优解")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," maxSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Integer.MIN_VALUE;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 当前子数组的和，初始化为0")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," currentSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 遍历数组中的每个元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 判断当前子数组和是否应继续累加当前元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 如果 `currentSum + num` 大于 `num`，说明继续将当前元素加入子数组更合适")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (currentSum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," num) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                currentSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," currentSum "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," num;  "),s("span",{style:{color:"#88846F"}},"// 累加当前元素到子数组和")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            } "),s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                currentSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;  "),s("span",{style:{color:"#88846F"}},"// 否则，从当前元素重新开始子数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 更新最大子数组和")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 如果当前子数组和 `currentSum` 大于记录的最大子数组和 `maxSum`，就更新 `maxSum`")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (currentSum "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," maxSum) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                maxSum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," currentSum;  "),s("span",{style:{color:"#88846F"}},"// 更新最大子数组和")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 返回最大子数组和")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," maxSum;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 主方法，用于测试")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 测试数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 调用 maxSubArraySum 方法，输出结果")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#A6E22E"}},"maxSubArraySum"),s("span",{style:{color:"#F8F8F2"}},"(nums)); "),s("span",{style:{color:"#88846F"}},"// 输出 6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[28]||(n[28]=F(`<h2 id="_11-统计数组中出现的元素个数" tabindex="-1"><a class="header-anchor" href="#_11-统计数组中出现的元素个数"><span>11. 统计数组中出现的元素个数</span></a></h2><ul><li><p><strong>描述</strong>：给定一个整数数组，统计每个元素出现的次数。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>输出</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_12-寻找数组中的重复元素" tabindex="-1"><a class="header-anchor" href="#_12-寻找数组中的重复元素"><span>12. 寻找数组中的重复元素</span></a></h2><ul><li><p><strong>描述</strong>：给定一个整数数组，找到数组中所有重复出现的元素。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>输出：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_13-合并两个已排序数组" tabindex="-1"><a class="header-anchor" href="#_13-合并两个已排序数组"><span>13. <strong>合并两个已排序数组</strong></span></a></h2><ul><li><p><strong>描述</strong>：给定两个已排序的数组，将其合并成一个新的已排序数组。</p></li><li><p><strong>输入：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>输出：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_14-数组中的第二大元素" tabindex="-1"><a class="header-anchor" href="#_14-数组中的第二大元素"><span>14. 数组中的第二大元素</span></a></h2><ul><li><p><strong>描述</strong>：给定一个数组，找出数组中的第二大元素。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">45</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>输出</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">45</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_15-数组中的奇偶数分离" tabindex="-1"><a class="header-anchor" href="#_15-数组中的奇偶数分离"><span>15. 数组中的奇偶数分离</span></a></h2><ul><li><p><strong>描述</strong>：给定一个整数数组，将其中的奇数和偶数分开，返回一个新数组，奇数在前，偶数在后。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>输出</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>扩展</strong>：如果觉得轻松，你可以尝试：在奇偶分离后，分别对奇偶进行排序，例如原本的数组是无序的！</p></li></ul><h2 id="_16-数组旋转" tabindex="-1"><a class="header-anchor" href="#_16-数组旋转"><span>16. 数组旋转</span></a></h2><ul><li><p><strong>描述</strong>：给定一个数组和一个整数 <code>k</code>，将数组向右旋转 <code>k</code> 个位置。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> k </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>输出</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_17-查找数组中的最小差值" tabindex="-1"><a class="header-anchor" href="#_17-查找数组中的最小差值"><span>17. 查找数组中的最小差值</span></a></h2><ul><li><p><strong>描述</strong>：给定一个整数数组，求数组中任意两个元素的最小差值。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">18</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">25</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>输出</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_18-数组中连续子数组的最大和" tabindex="-1"><a class="header-anchor" href="#_18-数组中连续子数组的最大和"><span>18. 数组中连续子数组的最大和</span></a></h2><ul><li><p><strong>描述</strong>：给定一个整数数组，找到其连续子数组的最大和。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>输出</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_19-找出数组中的缺失数字" tabindex="-1"><a class="header-anchor" href="#_19-找出数组中的缺失数字"><span>19. 找出数组中的缺失数字</span></a></h2><ul><li><p><strong>描述</strong>：给定一个包含 1 到 N 的数组，但缺少其中一个数字，找出缺失的数字。</p></li><li><p><strong>输入</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>输出</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_20-找出数组中出现次数超过一半的元素" tabindex="-1"><a class="header-anchor" href="#_20-找出数组中出现次数超过一半的元素"><span>20. 找出数组中出现次数超过一半的元素</span></a></h2><ul><li><p><strong>描述</strong>：给定一个数组，找出出现次数超过数组长度一半的元素。</p></li><li><p><strong>输入</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="_11-斐波那契数组" tabindex="-1"><a class="header-anchor" href="#_11-斐波那契数组"><span>11. 斐波那契数组</span></a></h2><p>创建一个长度为 <code>n</code> 的数组，并用循环填充前 <code>n</code> 个斐波那契数。</p><h2 id="_12-数组累积和" tabindex="-1"><a class="header-anchor" href="#_12-数组累积和"><span>12. <strong>数组累积和</strong></span></a></h2><p>给定一个整数数组，生成一个新数组，其中第 <code>i</code> 个元素是原数组从头到第 <code>i</code> 个元素的累积和。</p><h2 id="_13-字符串数组的连接" tabindex="-1"><a class="header-anchor" href="#_13-字符串数组的连接"><span>13. 字符串数组的连接</span></a></h2><p>输入一个字符串数组，将其所有元素连接成一个字符串，中间用指定分隔符（如 <code>-</code> 或 <code>,</code>）连接。</p><h2 id="_16-数组排序-冒泡排序" tabindex="-1"><a class="header-anchor" href="#_16-数组排序-冒泡排序"><span>16. 数组排序（冒泡排序）</span></a></h2><p>实现冒泡排序算法，对一个整数数组从小到大排序，输出每一轮排序后的数组状态。</p><h2 id="_17-数组排序「选择排序」" tabindex="-1"><a class="header-anchor" href="#_17-数组排序「选择排序」"><span>17. 数组排序「选择排序」</span></a></h2>`,29)),p(t,{id:"486",data:[{id:"Code1"},{id:"Code2"}]},{title0:a(({value:o,isActive:e})=>n[20]||(n[20]=[l("Code1")])),title1:a(({value:o,isActive:e})=>n[21]||(n[21]=[l("Code2")])),tab0:a(({value:o,isActive:e})=>n[22]||(n[22]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.Arrays"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"SelectionSortWithTwoArrays"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," selectionSort"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"array"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," n "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," array.length;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] sortedArray "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[n];  "),s("span",{style:{color:"#88846F"}},"// 用于存储排序后的元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        boolean"),s("span",{style:{color:"#F8F8F2"}},"[] used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," boolean"),s("span",{style:{color:"#F8F8F2"}},"[n]; "),s("span",{style:{color:"#88846F"}},"// 标记原始数组中的元素是否已使用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 遍历原始数组，逐步构建排序数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," n; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"            int"),s("span",{style:{color:"#F8F8F2"}}," minIndex "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 找到未使用的元素中最小的元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; j "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," n; j"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                if"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#F92672"}},"!"),s("span",{style:{color:"#F8F8F2"}},"used[j] "),s("span",{style:{color:"#F92672"}},"&&"),s("span",{style:{color:"#F8F8F2"}}," (minIndex "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F92672"}}," ||"),s("span",{style:{color:"#F8F8F2"}}," array[j] "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," array[minIndex])) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                    minIndex "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," j;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 将找到的最小元素放入排序数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            sortedArray[i] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," array[minIndex];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            used[minIndex] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," true"),s("span",{style:{color:"#F8F8F2"}},"; "),s("span",{style:{color:"#88846F"}},"// 标记该元素为已使用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 将排序后的结果写回原数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System."),s("span",{style:{color:"#A6E22E"}},"arraycopy"),s("span",{style:{color:"#F8F8F2"}},"(sortedArray, "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", array, "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", n);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] array "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"64"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"25"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"12"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"22"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"排序前的数组: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," Arrays."),s("span",{style:{color:"#A6E22E"}},"toString"),s("span",{style:{color:"#F8F8F2"}},"(array));")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E"}},"        selectionSort"),s("span",{style:{color:"#F8F8F2"}},"(array);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"排序后的数组: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," Arrays."),s("span",{style:{color:"#A6E22E"}},"toString"),s("span",{style:{color:"#F8F8F2"}},"(array));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>n[23]||(n[23]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.Arrays"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"SelectionSort"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," selectionSort"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"array"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," n "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," array.length;")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 遍历数组的每一个元素")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},"; i "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," n "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"; i"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 假设当前元素是最小值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"            int"),s("span",{style:{color:"#F8F8F2"}}," minIndex "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," i;")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 找到未排序部分的最小值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"; j "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," n; j"),s("span",{style:{color:"#F92672"}},"++"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                if"),s("span",{style:{color:"#F8F8F2"}}," (array[j] "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," array[minIndex]) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                    minIndex "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," j;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            // 如果最小值不是当前值，则交换")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (minIndex "),s("span",{style:{color:"#F92672"}},"!="),s("span",{style:{color:"#F8F8F2"}}," i) {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"                int"),s("span",{style:{color:"#F8F8F2"}}," temp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," array[i];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                array[i] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," array[minIndex];")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                array[minIndex] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," temp;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] array "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"64"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"25"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"12"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"22"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},"};")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"排序前的数组: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," Arrays."),s("span",{style:{color:"#A6E22E"}},"toString"),s("span",{style:{color:"#F8F8F2"}},"(array));")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E"}},"        selectionSort"),s("span",{style:{color:"#F8F8F2"}},"(array);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"排序后的数组: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," Arrays."),s("span",{style:{color:"#A6E22E"}},"toString"),s("span",{style:{color:"#F8F8F2"}},"(array));")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[29]||(n[29]=F('<h2 id="_18-猜数字游戏" tabindex="-1"><a class="header-anchor" href="#_18-猜数字游戏"><span>18. 猜数字游戏</span></a></h2><p>随机生成一个包含10个元素的数组，提示用户输入一个数字，判断该数字是否在数组中，并输出索引。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',6))])}const f=i(m,[["render",v],["__file","01-Array-exercise.html.vue"]]),D=JSON.parse('{"path":"/Java/practice/01-Array-exercise.html","title":"01-数组练习","lang":"zh-CN","frontmatter":{"title":"01-数组练习","date":"2024-11-20T17:49:13.000Z","icon":"java","author":"AI悦创","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"git":{"createdTime":1732099933000,"updatedTime":1732800042000,"contributors":[{"name":"AndersonHJB","username":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":8,"url":"https://github.com/AndersonHJB"}]},"readingTime":{"minutes":12.45,"words":3736},"filePathRelative":"Java/practice/01-Array-exercise.md","localizedDate":"2024年11月20日","copyright":{"author":"AI悦创"}}');export{f as comp,D as data};
