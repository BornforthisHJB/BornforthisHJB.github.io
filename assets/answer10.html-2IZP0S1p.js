import{_ as t,a as p}from"./784dde09ac8178ddcf851290a9d2369d-VO2kVyTy.js";import{_ as o}from"./gzh-X2g0OvFa.js";import{_ as e}from"./zsxq-YQJ_sFB4.js";import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as l,c as u,a as n,b as s,d as r,e as d}from"./app-w-32Ecj2.js";const k="/assets/d7dcf5cc21f461a76ecbdc30e6b64e54-5bpZ0wwS.png",_="/assets/a3c7e23478cc5b26f8cf352ee474af6b-bNh0I9H4.png",m="/assets/abeee3a7a1c1c7e2ff6dca8a07c66afe-aly72YcV.png",g={},v=d('<ol><li>Python 中的可变数据类型有___________，不可变数据类型有___________。</li></ol><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：列表和字典；字符串、数字、元组</p><p>记忆性知识点</p></div><ol start="2"><li>表达式 3 and not 5 的值为___________，不可变数据类型有___________。</li></ol><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：False</p><p>and 是 python 逻辑运算里的与运算。</p><p>在纯 and 语句中，如果每一个表达式都不是假的话，那么返回最后一个，因为需要一直匹配直到最后一个。</p><p>如果有一个是假，那么返回假。</p><p>从理论上来说他们都属于变量的位操作，即二进制的换算过程。</p><p>所有变量的位操作都是通过强制转换成 bool 实现的，并且表达式的值是从左到右第一个能够确定表达式的值的变量。</p><p>其中所有非 0 数字或非空对象均为 True，0、空对象及特殊对象 None 被视为 False。</p><p>3 and not 5 计算过程 ==(<code>Ture and False</code>)，逻辑运算中与计算的规则是如果有一个是 False，那么返回 False。</p><p>不可变数据类型有：略</p></div><ol start="3"><li><code>input()</code> 函数的返回值是，不可变数据类型有___________类型。</li></ol><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：字符串</p></div><ol start="4"><li>下面程序的执行结果是___________。</li></ol><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：1275</p><p>for 循环中有 <code>if i==50</code> 则输出 s 并跳出循环。即跳出循环时 s 的数值为 <code>0-50</code> 累加的计算结果。即 <code>0+1+2+3+…+50=1275</code>。</p></div><ol start="5"><li>只要判断条件是非零数值、非空字符串、非空 list 等，就判断为 True，否则为 False。</li></ol><p>A. √</p><p>B. X</p><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：A 易错项：B</p><p>记忆性知识点</p></div><ol start="6"><li>Python 字符串方法 <code>replace()</code> 对字符串进行原地修改。</li></ol><p>A. √</p><p>B. X</p><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：B 易错项：A</p><p>在 Python 中，字符串属于不可变对象，不支持原地修改，如果需要修改其中的值，只能重新创建一个新的字符串对象。</p></div><ol start="7"><li>可以使用 format 函数对字符串进行格式化。</li></ol><p>A. √</p><p>B. X</p><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：A 易错项：B</p></div><ol start="8"><li>当以指定“键”为下标给字典对象赋值时，若该“键”存在则表示修改该“键”对应的“值”，若不存在则表示为字典对象添加一个新的“键-值对”。</li></ol><p>A. √</p><p>B. X</p><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：A 易错项：B</p><p>记忆性知识点</p></div><ol start="9"><li>Python 内置的字典 dict 中元素是按添加的顺序依次进行存储的。</li></ol><p>A. √</p><p>B. X</p><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：B 易错项：A</p><p>Python 内置字典是无序的，如果需要一个可以记住元素插入顺序的字典，可以使用 <code>collections.OrderedDict</code>。</p></div><ol start="10"><li>下面的代码是否能够正确运行，若不能请解释原因；若能，请分析其执行结果。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">del</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：无法正确执行，因为删除列表元素时会影响其他元素在列表中的索引，上面的代码会抛出下标越界的异常。</p></div><ol start="11"><li>请写出以下代码的执行结果：</li></ol><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">答案解析</p><p>正确答案：输出为： <code>Tom Jason is speaking: I am 20 years old</code></p><p>代码定义了 People 类，并初始化属性为 <code>name=&#39;Tom&#39;</code>, <code>age=18</code>。</p><p>然后使用构造函数 <code>__init__()</code> 对 name 属性和 age 属性进行重写，令其可接受实例化时的参数引用，并在 People 类里定义了一个 speak 函数用固定的格式来输出 name 和 age 属性。</p><p>接着新建了 p 作为 People 类的实例对象(也称为 People 类的实例化)，并在这个实例里将 name 属性定义为 Sunny，age 属性为 20。但并没有更改此时 People 类的 name 属性，所以 <code>People.name</code> 的输出值依旧为初始化中的 <code>&#39;Tom&#39;</code>。</p><p>接着使用 <code>p.name = &#39;Jason&#39;</code> 语句将实例对象 p 的 name 属性更改为 Jason，即实例对象 p 的 speak 函数输出为 <code>&quot;Jason is speaking: I am 20 years old&quot;</code>。</p></div><ol start="12"><li>编写程序: 输入长方形的长和宽,计算长方形的面积.</li></ol><div class="hint-container tip"><p class="hint-container-title">答案解析</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 参考代码:</span>
l <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;长方形的长：&#39;</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;长方形的宽：&#39;</span><span class="token punctuation">)</span>
l <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
area <span class="token operator">=</span> l <span class="token operator">*</span> b
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;长方形的面积为：&#39;</span><span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意数据类型的一致性。input 函数默认的输入值为字符串，但相乘时需要转换成数字，输出时需要再转换为字符串。</p></div><ol start="13"><li>输入一个时间(以“小时:分钟:秒”的格式)，输出该时间经过 5 分 30 秒后的时间。</li></ol><div class="hint-container tip"><p class="hint-container-title">答案解析</p><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><ol start="14"><li>斐波那契数列为<code>1,2,3,5,8,13,21.....</code>根据这样的规律，编程求出 400 万以内最大的斐波那契数，并求出他是第几个斐波那契数。</li></ol><div class="hint-container tip"><p class="hint-container-title">答案解析</p><figure><img src="'+_+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><ol start="15"><li>要求写一段代码，实现两个字典的相加，不同的 key 对应的值保留，相同的 key 对应的值相加后保留。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dicta <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;f&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">}</span>
dictb <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&quot;m&quot;</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">&quot;k&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">}</span>
<span class="token comment"># 如上示例得到结果为：</span>
dictc <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&quot;m&quot;</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">&quot;f&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;k&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">答案解析</p><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details>',46),b={class:"hint-container info"},h=n("p",{class:"hint-container-title"},"AI悦创·编程一对一",-1),f=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),q=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),y={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,"方法二：微信：Jiabcdefh",-1),A=n("figure",null,[n("img",{src:e,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function P(B,w){const a=c("ExternalLinkIcon");return l(),u("div",null,[v,n("div",b,[h,f,q,n("p",null,[s("方法一："),n("a",y,[s("QQ"),r(a)])]),x]),A])}const N=i(g,[["render",P],["__file","answer10.html.vue"]]);export{N as default};
