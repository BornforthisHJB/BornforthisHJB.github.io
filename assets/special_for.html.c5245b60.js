import{_ as r}from"./gzh.b03adfd2.js";import{_ as k}from"./zsxq.77f6dc86.js";import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as m,c as b,b as o,w as a,a as n,d as s,e as l,r as c}from"./app.09b201ca.js";const v={},g=l(`<h2 id="_1-九九乘法表" tabindex="-1"><a class="header-anchor" href="#_1-九九乘法表" aria-hidden="true">#</a> 1. 九九乘法表</h2><p>要求输出结果：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>1x1<span class="token operator">=</span><span class="token number">1</span>    
1x2<span class="token operator">=</span><span class="token number">2</span>    2x2<span class="token operator">=</span><span class="token number">4</span>    
1x3<span class="token operator">=</span><span class="token number">3</span>    2x3<span class="token operator">=</span><span class="token number">6</span>    3x3<span class="token operator">=</span><span class="token number">9</span>    
1x4<span class="token operator">=</span><span class="token number">4</span>    2x4<span class="token operator">=</span><span class="token number">8</span>    3x4<span class="token operator">=</span><span class="token number">12</span>    4x4<span class="token operator">=</span><span class="token number">16</span>    
1x5<span class="token operator">=</span><span class="token number">5</span>    2x5<span class="token operator">=</span><span class="token number">10</span>    3x5<span class="token operator">=</span><span class="token number">15</span>    4x5<span class="token operator">=</span><span class="token number">20</span>    5x5<span class="token operator">=</span><span class="token number">25</span>    
1x6<span class="token operator">=</span><span class="token number">6</span>    2x6<span class="token operator">=</span><span class="token number">12</span>    3x6<span class="token operator">=</span><span class="token number">18</span>    4x6<span class="token operator">=</span><span class="token number">24</span>    5x6<span class="token operator">=</span><span class="token number">30</span>    6x6<span class="token operator">=</span><span class="token number">36</span>    
1x7<span class="token operator">=</span><span class="token number">7</span>    2x7<span class="token operator">=</span><span class="token number">14</span>    3x7<span class="token operator">=</span><span class="token number">21</span>    4x7<span class="token operator">=</span><span class="token number">28</span>    5x7<span class="token operator">=</span><span class="token number">35</span>    6x7<span class="token operator">=</span><span class="token number">42</span>    7x7<span class="token operator">=</span><span class="token number">49</span>    
1x8<span class="token operator">=</span><span class="token number">8</span>    2x8<span class="token operator">=</span><span class="token number">16</span>    3x8<span class="token operator">=</span><span class="token number">24</span>    4x8<span class="token operator">=</span><span class="token number">32</span>    5x8<span class="token operator">=</span><span class="token number">40</span>    6x8<span class="token operator">=</span><span class="token number">48</span>    7x8<span class="token operator">=</span><span class="token number">56</span>    8x8<span class="token operator">=</span><span class="token number">64</span>    
1x9<span class="token operator">=</span><span class="token number">9</span>    2x9<span class="token operator">=</span><span class="token number">18</span>    3x9<span class="token operator">=</span><span class="token number">27</span>    4x9<span class="token operator">=</span><span class="token number">36</span>    5x9<span class="token operator">=</span><span class="token number">45</span>    6x9<span class="token operator">=</span><span class="token number">54</span>    7x9<span class="token operator">=</span><span class="token number">63</span>    8x9<span class="token operator">=</span><span class="token number">72</span>    9x9<span class="token operator">=</span><span class="token number">81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 九九乘法表"),s(`
`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"for"),s(" j "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" i"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'{}x{}={}\\t'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"format"),n("span",{class:"token punctuation"},"("),s("j"),n("span",{class:"token punctuation"},","),s(" i"),n("span",{class:"token punctuation"},","),s(" i"),n("span",{class:"token operator"},"*"),s("j"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 九九乘法表"),s(`
i `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token keyword"},"while"),s(" i "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},":"),s(`
    j `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("j "),n("span",{class:"token operator"},"<="),s(" i"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s("  "),n("span",{class:"token comment"},"# j 的大小是由 i 来控制的"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},"f'"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"*"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"="),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i "),n("span",{class:"token operator"},"*"),s(" j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"'")]),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'\\t'"),n("span",{class:"token punctuation"},")"),s(`
        j `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),s(`
    i `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token keyword"},"while"),s(" i "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"for"),s(" j "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s("  "),n("span",{class:"token comment"},"# range()函数左闭右开"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},"f'"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"*"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"="),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i "),n("span",{class:"token operator"},"*"),s(" j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"'")]),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"' '"),n("span",{class:"token punctuation"},")"),s(`
    i `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    j `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token keyword"},"while"),s(" j "),n("span",{class:"token operator"},"<"),s(" i"),n("span",{class:"token punctuation"},":"),s(`
        j `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"*"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"="),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i "),n("span",{class:"token operator"},"*"),s(" j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"' '"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(" a"),n("span",{class:"token punctuation"},":"),s(`
    j `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token keyword"},"while"),s(" j "),n("span",{class:"token operator"},"<="),s(" i"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},"f'"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"*"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"="),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i "),n("span",{class:"token operator"},"*"),s(" j"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"'")]),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'\\t'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# %-3d 是控制输出结果占据3位，且从左面开始对齐"),s(`
        j `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"multiplication"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" n "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"for"),s(" m "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" n "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("m"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"*"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("n"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"="),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("m "),n("span",{class:"token operator"},"*"),s(" n"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"\\t"'),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        multiplication`),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`

multiplication`),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'\\n'"),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"' '"),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"%2s x%2s = %2s"'),s(),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token punctuation"},"("),s("j"),n("span",{class:"token punctuation"},","),s(" i"),n("span",{class:"token punctuation"},","),s(" i "),n("span",{class:"token operator"},"*"),s(" j"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"for"),s(" j "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),q=l(`<details class="custom-container details"><summary>合并答案</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 第一种方式：for 循环实现【for-for 嵌套】</span>
<span class="token comment"># 九九乘法表</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{}x{}={}\\t&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token operator">*</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment"># 第二种方式：while【while-while 嵌套】</span>
<span class="token comment"># 九九乘法表</span>
i <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">:</span>
    j <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># j 的大小是由 i 来控制的</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">*</span> j<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>
        j <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>

<span class="token comment"># 第三种方式：while【while-for 嵌套】</span>
i <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># range()函数左闭右开</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">*</span> j<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 第四种方式：while【for-while 嵌套】</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    j <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">:</span>
        j <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">*</span> j<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 
<span class="token comment"># 第五种方式：定义一个变量 a</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">:</span>
    j <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">while</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">*</span> j<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>
        <span class="token comment"># %-3d 是控制输出结果占据3位，且从左面开始对齐</span>
        j <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   
<span class="token comment"># 未学到函数的，可以选择阅读</span>
<span class="token comment"># 第六种方式：使用递归</span>
<span class="token keyword">def</span> <span class="token function">multiplication</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>m<span class="token punctuation">}</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">{</span>n<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>m <span class="token operator">*</span> n<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;\\t&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        multiplication<span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>

multiplication<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 第七种方式：使用 1 行语句</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39; &#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;%2s x%2s = %2s&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i <span class="token operator">*</span> j<span class="token punctuation">)</span> <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 上面的一行代码优化之后：</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39; &#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string">x</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">*</span> j<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_2-编写循环-寻找列表最大值" tabindex="-1"><a class="header-anchor" href="#_2-编写循环-寻找列表最大值" aria-hidden="true">#</a> 2. 编写循环，寻找列表最大值</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">,</span> <span class="token number">777</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="`+r+'" alt="" loading="lazy"></p></details>',5),A={class:"custom-container info"},C=n("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),I=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),N=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),Q={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,"方法二：微信：Jiabcdefh",-1),B=n("p",null,[n("img",{src:k,alt:"",loading:"lazy"})],-1);function E(J,P){const i=c("CodeTabs"),u=c("ExternalLinkIcon");return m(),b("div",null,[g,o(i,{id:"7",data:[{title:"for-for"},{title:"while-while"},{title:"while-for"},{title:"for-while"},{title:"定义一个变量 a"},{title:"使用递归"},{title:"使用 1 行语句"}],"tab-id":"shell"},{tab0:a(({title:t,value:p,isActive:e})=>[y]),tab1:a(({title:t,value:p,isActive:e})=>[w]),tab2:a(({title:t,value:p,isActive:e})=>[h]),tab3:a(({title:t,value:p,isActive:e})=>[x]),tab4:a(({title:t,value:p,isActive:e})=>[f]),tab5:a(({title:t,value:p,isActive:e})=>[_]),tab6:a(({title:t,value:p,isActive:e})=>[j]),_:1}),q,n("div",A,[C,I,N,n("p",null,[s("方法一："),n("a",Q,[s("QQ"),o(u)])]),V]),B])}const D=d(v,[["render",E],["__file","special_for.html.vue"]]);export{D as default};
