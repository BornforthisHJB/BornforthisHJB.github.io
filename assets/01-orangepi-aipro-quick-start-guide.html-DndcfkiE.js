import{_ as n}from"./gzh-DnOBNg6W.js";import{_ as a}from"./zsxq-BcdwOI-_.js";import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as o,o as p}from"./app-BRhJJPGx.js";const i="/assets/image-20240531094457688-CHjMhVxJ.png",r="/assets/aipro-18-u97qif7t.png",c="/assets/image-20240604141939197-CNrWBTVn.png",t="/assets/image-20240604154559883-C8KYUr-A.png",d="/assets/image-20240604154945085-Bf73s9sd.png",y={};function u(E,s){return p(),e("div",null,s[0]||(s[0]=[o('<h2 id="_0-前言" tabindex="-1"><a class="header-anchor" href="#_0-前言"><span>0. 前言</span></a></h2><p>你好，我是悦创。</p><p>今天受邀测评 Orange Pi AIpro开发板，我将准备用这个测试简单的代码来看看这块开发版的性能体验。</p><p>分别从：Sysbench、Stress-ng、PyPerformance、RPi.GPIO Benchmark、Geekbench 等方面来测试和分析结果。</p><p>下面就是我收到的开发板子：</p><img src="'+i+'" style="zoom:25%;"><p>香橙派 AIpro 启动后支持用户通过<strong>远程登录模式</strong>或者<strong>本机显示模式</strong>登录开发板推理任务，此处可根据两种模式所需的配件，自行选择其中一种模式准备相关硬件即可。</p><h2 id="_1-设备介绍" tabindex="-1"><a class="header-anchor" href="#_1-设备介绍"><span>1. 设备介绍</span></a></h2><figure><img src="'+r+`" alt="一图胜千言" tabindex="0" loading="lazy"><figcaption>一图胜千言</figcaption></figure><h2 id="_2-使用-vnc" tabindex="-1"><a class="header-anchor" href="#_2-使用-vnc"><span>2. 使用 VNC</span></a></h2><ol><li>安装</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt</span><span style="color:#E6DB74;"> update</span></span>
<span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt</span><span style="color:#E6DB74;"> install</span><span style="color:#E6DB74;"> xfce4</span><span style="color:#E6DB74;"> xfce4-goodies</span></span>
<span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt</span><span style="color:#E6DB74;"> install</span><span style="color:#E6DB74;"> tightvncserver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装语言包，不然会出错 <code>Fatal server error:could not open default font &#39;fixed’</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt-get</span><span style="color:#E6DB74;"> install</span><span style="color:#E6DB74;"> xfonts-base</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>配置密码</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">vncserver</span></span>
<span class="line"><span style="color:#A6E22E;">aiyc1234</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>配置开机启动</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">mv</span><span style="color:#E6DB74;"> ~/.vnc/xstartup</span><span style="color:#E6DB74;"> ~/.vnc/xstartup.bak</span></span>
<span class="line"><span style="color:#A6E22E;">vim</span><span style="color:#E6DB74;"> ~/.vnc/xstartup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#!/bin/bash</span></span>
<span class="line"><span style="color:#A6E22E;">xrdb</span><span style="color:#F8F8F2;"> $HOME</span><span style="color:#E6DB74;">/.Xresources</span></span>
<span class="line"><span style="color:#A6E22E;">startxfce4</span><span style="color:#F8F8F2;"> &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> chmod</span><span style="color:#E6DB74;"> +x</span><span style="color:#E6DB74;"> ~/.vnc/xstartup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li><p>启动和关闭</p><ol><li>启动</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">vncserver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>关闭</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">vncserver</span><span style="color:#AE81FF;"> -kill</span><span style="color:#E6DB74;"> :1</span></span>
<span class="line"><span style="color:#A6E22E;">vncserver</span><span style="color:#AE81FF;"> -kill</span><span style="color:#E6DB74;"> :2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>连接</p></li></ol><p>直接使用 VNC 软件连接即可。</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="6"><li>问题：focal vnc 灰屏</li></ol><p>使用 ubuntu focal，vnc 登录灰屏幕。原因是 focal 默认图形界面是 gnome，和 ubuntu18、ubuntu16 配置不同。</p><p>解决办法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt-get</span><span style="color:#E6DB74;"> install</span><span style="color:#E6DB74;"> gnome-panel</span><span style="color:#E6DB74;"> gnome-settings-daemon</span><span style="color:#E6DB74;"> metacity</span><span style="color:#E6DB74;"> nautilus</span><span style="color:#E6DB74;"> gnome-terminal</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置 vnc：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">vim</span><span style="color:#E6DB74;"> ~/.vnc/xstartup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>添加以下内容：</p><div class="language-bash line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#!/bin/bash</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> $(</span><span style="color:#A6E22E;">dbus-launch</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 主要是这句</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> XKL_XMODMAP_DISABLE</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#66D9EF;">unset</span><span style="color:#E6DB74;"> SESSION_MANAGER</span></span>
<span class="line"><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#A6E22E;">gnome-panel</span><span style="color:#F8F8F2;"> &amp;</span></span>
<span class="line"><span style="color:#A6E22E;">gnome-settings-daemon</span><span style="color:#F8F8F2;"> &amp;</span></span>
<span class="line"><span style="color:#A6E22E;">metacity</span><span style="color:#F8F8F2;"> &amp;</span></span>
<span class="line"><span style="color:#A6E22E;">nautilus</span><span style="color:#F8F8F2;"> &amp;</span></span>
<span class="line"><span style="color:#A6E22E;">gnome-terminal</span><span style="color:#F8F8F2;"> &amp;</span></span>
<span class="line"><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#88846F;"># [ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup</span></span>
<span class="line"><span style="color:#88846F;"># [ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources</span></span>
<span class="line"><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#A6E22E;">xsetroot</span><span style="color:#AE81FF;"> -solid</span><span style="color:#E6DB74;"> grey</span></span>
<span class="line"><span style="color:#A6E22E;">vncconfig</span><span style="color:#AE81FF;"> -iconic</span><span style="color:#F8F8F2;"> &amp;</span></span>
<span class="line"><span style="color:#A6E22E;">x-terminal-emulator</span><span style="color:#AE81FF;"> -geometry</span><span style="color:#E6DB74;"> 80x24+10+10</span><span style="color:#AE81FF;"> -ls</span><span style="color:#AE81FF;"> -title</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#F8F8F2;">$VNCDESKTOP</span><span style="color:#E6DB74;"> Desktop&quot;</span><span style="color:#F8F8F2;"> &amp;</span></span>
<span class="line"><span style="color:#A6E22E;">gnome-session</span><span style="color:#F8F8F2;"> &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ol start="7"><li>重启 vnc</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">vncserver</span><span style="color:#AE81FF;"> -kill</span><span style="color:#E6DB74;"> :1</span></span>
<span class="line"><span style="color:#A6E22E;">vncserver</span><span style="color:#AE81FF;"> -kill</span><span style="color:#E6DB74;"> :2</span></span>
<span class="line"><span style="color:#A6E22E;">vncserver</span><span style="color:#E6DB74;"> :1</span><span style="color:#AE81FF;"> -geometry</span><span style="color:#E6DB74;"> 1536x864</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-开始测试" tabindex="-1"><a class="header-anchor" href="#_3-开始测试"><span>3. 开始测试</span></a></h2><h3 id="_3-1-sysbench" tabindex="-1"><a class="header-anchor" href="#_3-1-sysbench"><span>3.1 Sysbench</span></a></h3><h4 id="_3-1-1-简介" tabindex="-1"><a class="header-anchor" href="#_3-1-1-简介"><span>3.1.1 简介</span></a></h4><ul><li>虽然 Sysbench 不是一个 Python 项目，但它是一个非常流行的多线程测试工具，可以测试 CPU、内存、文件 I/O 和数据库性能。</li><li>安装命令：<code>sudo apt-get install sysbench</code></li><li>使用例子：<code>sysbench cpu --cpu-max-prime=20000 run</code> 来测试CPU性能。</li></ul><h4 id="_3-1-2-实际测试" tabindex="-1"><a class="header-anchor" href="#_3-1-2-实际测试"><span>3.1.2 实际测试</span></a></h4><ol><li>安装命令：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt-get</span><span style="color:#E6DB74;"> update</span></span>
<span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt-get</span><span style="color:#E6DB74;"> install</span><span style="color:#E6DB74;"> sysbench</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>测试 CPU 性能：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">sysbench</span><span style="color:#E6DB74;"> cpu</span><span style="color:#AE81FF;"> --cpu-max-prime=20000</span><span style="color:#E6DB74;"> run</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>结果观察：</li></ol><ul><li>注意观察输出中的 <code>total time</code>, <code>events per second</code> 和 <code>min/avg/max latency</code>。这些指标显示了 CPU 处理能力和响应时间。</li></ul><p>我的实际输出如下：</p><div class="language-bash line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">base</span><span style="color:#F8F8F2;">) </span><span style="color:#A6E22E;">HwHiAiUser@orangepiaipro:~$</span><span style="color:#E6DB74;"> sysbench</span><span style="color:#E6DB74;"> cpu</span><span style="color:#AE81FF;"> --cpu-max-prime=20000</span><span style="color:#E6DB74;"> run</span></span>
<span class="line"><span style="color:#A6E22E;">sysbench</span><span style="color:#AE81FF;"> 1.0.20</span><span style="color:#F8F8F2;"> (using </span><span style="color:#E6DB74;">system</span><span style="color:#E6DB74;"> LuaJIT</span><span style="color:#E6DB74;"> 2.1.0-beta3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">Running</span><span style="color:#E6DB74;"> the</span><span style="color:#E6DB74;"> test</span><span style="color:#E6DB74;"> with</span><span style="color:#E6DB74;"> following</span><span style="color:#E6DB74;"> options:</span></span>
<span class="line"><span style="color:#A6E22E;">Number</span><span style="color:#E6DB74;"> of</span><span style="color:#E6DB74;"> threads:</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#A6E22E;">Initializing</span><span style="color:#E6DB74;"> random</span><span style="color:#E6DB74;"> number</span><span style="color:#E6DB74;"> generator</span><span style="color:#E6DB74;"> from</span><span style="color:#E6DB74;"> current</span><span style="color:#E6DB74;"> time</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">Prime</span><span style="color:#E6DB74;"> numbers</span><span style="color:#E6DB74;"> limit:</span><span style="color:#AE81FF;"> 20000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">Initializing</span><span style="color:#E6DB74;"> worker</span><span style="color:#E6DB74;"> threads...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">Threads</span><span style="color:#E6DB74;"> started!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">CPU</span><span style="color:#E6DB74;"> speed:</span></span>
<span class="line"><span style="color:#A6E22E;">    events</span><span style="color:#E6DB74;"> per</span><span style="color:#E6DB74;"> second:</span><span style="color:#AE81FF;">   817.07</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">General</span><span style="color:#E6DB74;"> statistics:</span></span>
<span class="line"><span style="color:#A6E22E;">    total</span><span style="color:#E6DB74;"> time:</span><span style="color:#E6DB74;">                          10.0005s</span></span>
<span class="line"><span style="color:#A6E22E;">    total</span><span style="color:#E6DB74;"> number</span><span style="color:#E6DB74;"> of</span><span style="color:#E6DB74;"> events:</span><span style="color:#AE81FF;">              8175</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">Latency</span><span style="color:#F8F8F2;"> (ms):</span></span>
<span class="line"><span style="color:#A6E22E;">         min:</span><span style="color:#AE81FF;">                                    1.22</span></span>
<span class="line"><span style="color:#A6E22E;">         avg:</span><span style="color:#AE81FF;">                                    1.22</span></span>
<span class="line"><span style="color:#A6E22E;">         max:</span><span style="color:#AE81FF;">                                    1.85</span></span>
<span class="line"><span style="color:#A6E22E;">         95th</span><span style="color:#E6DB74;"> percentile:</span><span style="color:#AE81FF;">                        1.23</span></span>
<span class="line"><span style="color:#A6E22E;">         sum:</span><span style="color:#AE81FF;">                                 9998.12</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">Threads</span><span style="color:#E6DB74;"> fairness:</span></span>
<span class="line"><span style="color:#A6E22E;">    events</span><span style="color:#F8F8F2;"> (avg/stddev):           8175.0000/0.00</span></span>
<span class="line"><span style="color:#A6E22E;">    execution</span><span style="color:#E6DB74;"> time</span><span style="color:#F8F8F2;"> (avg/stddev):   9.9981/0.00</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>操作截图：</p><figure><img src="`+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-1-3-评价" tabindex="-1"><a class="header-anchor" href="#_3-1-3-评价"><span>3.1.3 评价</span></a></h4><p>我们可以提取一些关键信息来评估您的香橙派（Orange Pi AI Pro）的 CPU 性能：</p><ol><li><p><strong>测试配置</strong>：</p><ul><li><strong>线程数量</strong>：1</li><li><strong>质数上限</strong>：20000</li><li>测试使用单线程计算到 20000 的质数，这是一个典型的 CPU 密集型任务，用来评估处理器的计算能力。</li></ul></li><li><p><strong>性能结果</strong>：</p><ul><li><strong>事件每秒</strong>：817.07 <ul><li>这个数值表示 CPU 每秒可以处理的事件数量，也就是每秒完成了 817 次计算任务。这个数值越高，表示 CPU 的处理速度越快。</li></ul></li><li><strong>总时间</strong>：10.0005 秒 <ul><li>测试运行了总共 10 秒，这是 Sysbench 默认的测试时间。</li></ul></li><li><strong>总事件数量</strong>：8175 <ul><li>在 10 秒内，系统完成了 8175 次计算任务。</li></ul></li></ul></li><li><p><strong>延迟（Latency）</strong>：</p><ul><li><strong>最小延迟</strong>：1.22毫秒</li><li><strong>平均延迟</strong>：1.22毫秒</li><li><strong>最大延迟</strong>：1.85毫秒</li><li><strong>95th 百分位延迟</strong>：1.23毫秒 <ul><li><strong><span style="color:orange;">延迟指的是完成一次计算所需要的时间。这里的延迟非常低，说明 CPU 响应速度快，能够迅速处理计算任务。最大延迟略高，可能是由于偶发的系统调度或其他非 CPU 密集型进程的干扰。</span></strong></li></ul></li></ul></li><li><p><strong>线程公平性</strong>：</p><ul><li><strong><span style="color:orange;">平均事件数量和执行时间的标准差都是 0，这表明在单线程测试中，CPU 的表现非常一致，没有显著的波动。</span></strong></li></ul></li></ol><p><strong>评价</strong>：</p><ul><li>根据测试结果，OrangePi 设备在处理单线程计算密集型任务时表现良好，具有快速的处理速度和低延迟。这表明对于不涉及高并发的任务，OrangePi 设备能够提供稳定的性能。</li><li>如果应用场景包括更多并发处理或者更高的计算需求，我建议进行多线程的 Sysbench 测试，这可以提供更多关于 CPU 在高负载下表现的信息。「有需要测试方法的，评论区交流」</li></ul><p>根据这些结果，如果我们使用场景主要涉及单线程计算任务，这款设备应该能够满足基本需求。对于更复杂或需求更高的场景，考虑进行更多样化的测试以全面评估性能。</p><h3 id="_3-2-stress-ng" tabindex="-1"><a class="header-anchor" href="#_3-2-stress-ng"><span>3.2 Stress-ng</span></a></h3><h4 id="_3-2-1-简介" tabindex="-1"><a class="header-anchor" href="#_3-2-1-简介"><span>3.2.1 简介</span></a></h4><ul><li>Stress-ng 同样不是 Python 工具，但它能够对系统进行压力测试，涵盖超过 240 种测试方式。它可以用来测试 CPU、内存以及其他系统组件。</li><li>安装命令：<code>sudo apt install stress-ng</code></li><li>使用例子：<code>stress-ng --cpu 4 --io 2 --vm 2 --vm-bytes 128M --timeout 10s</code> 来进行综合压力测试。</li></ul><h4 id="_3-2-2-实际测试" tabindex="-1"><a class="header-anchor" href="#_3-2-2-实际测试"><span>3.2.2 实际测试</span></a></h4><ol><li>安装命令：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">sudo</span><span style="color:#E6DB74;"> apt</span><span style="color:#E6DB74;"> install</span><span style="color:#E6DB74;"> stress-ng</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>运行综合压力测试：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">stress-ng</span><span style="color:#AE81FF;"> --cpu</span><span style="color:#AE81FF;"> 4</span><span style="color:#AE81FF;"> --io</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm-bytes</span><span style="color:#E6DB74;"> 128M</span><span style="color:#AE81FF;"> --timeout</span><span style="color:#E6DB74;"> 10s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>结果观察：</li></ol><ul><li>结果会显示每种资源的测试统计，包括处理速度和错误数。注意系统的稳定性和是否有过热或重启的现象。</li></ul><p>我的实际输出如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai has-focused-lines vp-code"><code>
<span class="line has-focus"><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">base</span><span style="color:#F8F8F2;">) </span><span style="color:#A6E22E;">HwHiAiUser@orangepiaipro:~$</span><span style="color:#E6DB74;"> stress-ng</span><span style="color:#AE81FF;"> --cpu</span><span style="color:#AE81FF;"> 4</span><span style="color:#AE81FF;"> --io</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm-bytes</span><span style="color:#E6DB74;"> 128M</span><span style="color:#AE81FF;"> --timeout</span><span style="color:#E6DB74;"> 10s</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11400] setting to a 10 second run per stressor</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11400] dispatching hogs: 4 cpu, 2 io, 2 vm</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11400] successful run completed in 10.20s</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">base</span><span style="color:#F8F8F2;">) </span><span style="color:#A6E22E;">HwHiAiUser@orangepiaipro:~$</span><span style="color:#E6DB74;"> stress-ng</span><span style="color:#AE81FF;"> --cpu</span><span style="color:#AE81FF;"> 4</span><span style="color:#AE81FF;"> --io</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm-bytes</span><span style="color:#E6DB74;"> 128M</span><span style="color:#AE81FF;"> --timeout</span><span style="color:#E6DB74;"> 10s</span></span>
<span class="line"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11417] setting to a 10 second run per stressor</span></span>
<span class="line"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11417] dispatching hogs: 4 cpu, 2 io, 2 vm</span></span>
<span class="line"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11417] successful run completed in 10.14s</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">base</span><span style="color:#F8F8F2;">) </span><span style="color:#A6E22E;">HwHiAiUser@orangepiaipro:~$</span><span style="color:#E6DB74;"> stress-ng</span><span style="color:#AE81FF;"> --cpu</span><span style="color:#AE81FF;"> 4</span><span style="color:#AE81FF;"> --io</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --vm-bytes</span><span style="color:#E6DB74;"> 128M</span><span style="color:#AE81FF;"> --timeout</span><span style="color:#E6DB74;"> 10s</span></span>
<span class="line"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11430] setting to a 10 second run per stressor </span></span>
<span class="line"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11430] dispatching hogs: 4 cpu, 2 io, 2 vm</span></span>
<span class="line"><span style="color:#A6E22E;">stress-ng:</span><span style="color:#E6DB74;"> info:</span><span style="color:#F8F8F2;">  [11430] successful run completed in 10.15s</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">base</span><span style="color:#F8F8F2;">) </span><span style="color:#A6E22E;">HwHiAiUser@orangepiaipro:~$</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作截图：</p><figure><img src="`+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-2-3-评价" tabindex="-1"><a class="header-anchor" href="#_3-2-3-评价"><span>3.2.3 评价</span></a></h4><p>上面我运行了 <code>stress-ng</code> 测试，是在同时对香橙派的 CPU、IO（输入/输出）和虚拟内存（VM）进行压力测试。</p><ol><li>测试参数解析：</li></ol><ul><li><strong>CPU：</strong> 使用了 4 个压力测试线程，这意味着同时启动了 4 个线程来尽可能多地占用 CPU 资源。</li><li><strong>IO：</strong> 启动了 2 个线程进行磁盘 I/O 操作，这可能包括对文件的读写。</li><li><strong>VM：</strong> 启动了 2 个线程，每个线程使用 128MB 的内存来执行内存压力测试。</li></ul><ol start="2"><li>测试结果：</li></ol><ul><li>所有三次测试均在约 10 秒后完成，显示为 <code>10.20s</code>, <code>10.14s</code>, 和 <code>10.15s</code>。这表明香橙派在持续的负载下表现出相对稳定的性能。</li></ul><ol start="3"><li><p>性能评价：</p><ol><li><p><strong>稳定性：</strong></p><p>香橙派在三次测试中表现出良好的稳定性。持续时间的微小差异（最长10.20秒，最短10.14秒）表明即使在较高负载下，性能也保持一致。</p></li><li><p><strong>响应时间：</strong></p><p>完成时间接近设定的10秒，说明系统能够在预定时间内有效管理和完成任务。完成时间略长于10秒可能是由于系统调度或者在执行结束时清理资源所需的额外时间。</p></li><li><p><strong>系统负载承受能力：</strong></p><p>通过此测试，我们可以看出，香橙派能够同时处理较大的 CPU 和内存负载，以及进行 I/O 操作，而没有出现崩溃或重大错误，这是对其多任务处理能力的一个积极指标。</p></li><li><p>看到这里你肯定在想更大的负载测试命令怎么写呢？我这里也为你提供了一下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">stress-ng</span><span style="color:#AE81FF;"> --cpu</span><span style="color:#AE81FF;"> 8</span><span style="color:#AE81FF;"> --io</span><span style="color:#AE81FF;"> 4</span><span style="color:#AE81FF;"> --vm</span><span style="color:#AE81FF;"> 4</span><span style="color:#AE81FF;"> --vm-bytes</span><span style="color:#E6DB74;"> 256M</span><span style="color:#AE81FF;"> --hdd</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> --timeout</span><span style="color:#E6DB74;"> 60s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>参数解释： <ul><li><strong><code>--cpu 8</code></strong>: 使用 8 个线程执行 CPU 压力测试，这会更加强烈地测试 CPU 的处理能力。</li><li><strong><code>--io 4</code></strong>: 使用 4 个线程进行 IO 操作，增加对文件系统的压力。</li><li><strong><code>--vm 4 --vm-bytes 256M</code></strong>: 每个 VM 线程尝试使用 256MB 内存，共 1GB 内存，增加内存使用和管理的压力。</li><li><strong><code>--hdd 2</code></strong>: 进行两个磁盘写入线程，以测试磁盘的写入速度和稳定性。</li><li><strong><code>--timeout 60s</code></strong>: 设置测试运行时间为 60 秒，较长的测试时间可以更全面地评估香橙派（OrangePi）在持续高负载下的性能表现。</li></ul></li></ul></li></ol></li><li><p>建议：</p><ul><li><p><strong>监控温度和功耗、稳定性：</strong> 在进行此类测试时，建议监控设备的温度和电源使用情况，以确保没有过热或电源不足的问题发生。并且在增加测试负载的时候，可能会导致香橙派温度升高。我们需要确保良好的散热措施，并密切观察是否有性能下降或系统不稳定的迹象。</p><blockquote><p>我在测试的时候，排插借口部分，就有些<strong>过热</strong>。不仅仅要注意用电安全，还要注意运行状况等。机身因为有散热风扇的存在，所以整体温度还好，但是如果再高估计就不行了。</p></blockquote></li><li><p><strong>长时间运行测试：</strong> 考虑长时间运行测试（如数小时），观察在长期高负载下香橙派的表现，检查是否有性能下降或稳定性问题。</p></li><li><p><strong>电源要求</strong>：确保使用足够的电源供应，因为高负载可能增加电力消耗。</p></li><li><p><strong>数据安全</strong>：高强度的磁盘写入测试可能对 SD 卡寿命产生影响，如果是在生产环境中使用，需要谨慎进行。</p></li><li><p><strong>比较不同配置：</strong> 如果可能，试着改变压力测试的配置（如增加内存用量，增加CPU或IO压力测试的线程数），这可以帮助了解在不同负载下设备的性能极限。</p></li></ul></li></ol><p>总的来说香橙派在这项基准测试中表现良好，没有表现出性能问题，这表明香橙派可以处理相当复杂的任务和压力。如果我的粉丝有兴趣，可以查看你们自己的系统日志和硬件监控数据。</p><h3 id="_3-3-pyperformance" tabindex="-1"><a class="header-anchor" href="#_3-3-pyperformance"><span>3.3 PyPerformance</span></a></h3><h4 id="_3-3-1-简介" tabindex="-1"><a class="header-anchor" href="#_3-3-1-简介"><span>3.3.1 简介</span></a></h4><p>PyPerformance 是一个 Python 基准测试套件，用于测量 Python 实现的性能。虽然它主要是测试 Python 解释器的性能，但也间接反映了运行它的硬件性能。</p><p>安装命令：<code>python3 -m pip install pyperformance</code></p><p>运行测试：<code>pyperformance run -b [benchmark]</code></p><h4 id="_3-3-2-实际测试" tabindex="-1"><a class="header-anchor" href="#_3-3-2-实际测试"><span>3.3.2 实际测试</span></a></h4><ol><li>安装命令：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">python3</span><span style="color:#AE81FF;"> -m</span><span style="color:#E6DB74;"> pip</span><span style="color:#E6DB74;"> install</span><span style="color:#E6DB74;"> pyperformance</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>运行 Python 性能测试：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">pyperformance</span><span style="color:#E6DB74;"> run</span><span style="color:#AE81FF;"> --benchmarks</span><span style="color:#E6DB74;"> all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>结果观察：</li></ol><p>测试完成后，将生成一份报告，显示不同测试的运行时间和比较。这有助于评估 Python 环境在当前硬件上的执行效率。</p><p>这个测试需要非常久，需要你有耐心。我测试了将近 3h 左右（预估），我一开始也没想到会这么久。</p><div class="language-bash line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai has-focused-lines vp-code"><code><span class="line"><span style="color:#F8F8F2;">[74/74] xml_etree...</span></span>
<span class="line"><span style="color:#88846F;"># /home/HwHiAiUser/venv/cpython3.9-bafaf170d952-compat-af96b9431081/bin/python -u /home/HwHiAiUser/.local/lib/python3.9/site-packages/pyperformance/data-files/benchmarks/bm_xml_etree/run_benchmark.py --output /tmp/tmpl3ifzqoj --inherit-environ PYPERFORMANCE_RUNID</span></span>
<span class="line"><span style="color:#66D9EF;">.....................</span></span>
<span class="line"><span style="color:#A6E22E;">xml_etree_parse:</span><span style="color:#E6DB74;"> Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 575</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 4</span><span style="color:#E6DB74;"> ms</span></span>
<span class="line"><span style="color:#66D9EF;">.....................</span></span>
<span class="line"><span style="color:#A6E22E;">xml_etree_iterparse:</span><span style="color:#E6DB74;"> Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 460</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 5</span><span style="color:#E6DB74;"> ms</span></span>
<span class="line"><span style="color:#66D9EF;">.....................</span></span>
<span class="line"><span style="color:#A6E22E;">xml_etree_generate:</span><span style="color:#E6DB74;"> Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 421</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 6</span><span style="color:#E6DB74;"> ms</span></span>
<span class="line"><span style="color:#66D9EF;">.....................</span></span>
<span class="line"><span style="color:#A6E22E;">xml_etree_process:</span><span style="color:#E6DB74;"> Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 340</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 9</span><span style="color:#E6DB74;"> ms</span></span>

<span class="line has-focus"><span style="color:#A6E22E;">Performance</span><span style="color:#E6DB74;"> version:</span><span style="color:#AE81FF;"> 1.11.0</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Report</span><span style="color:#E6DB74;"> on</span><span style="color:#E6DB74;"> Linux-5.10.0+-aarch64-with-glibc2.35</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Number</span><span style="color:#E6DB74;"> of</span><span style="color:#E6DB74;"> logical</span><span style="color:#E6DB74;"> CPUs:</span><span style="color:#AE81FF;"> 4</span></span>
<span class="line highlighted has-focus"><span style="color:#A6E22E;">Start</span><span style="color:#E6DB74;"> date:</span><span style="color:#E6DB74;"> 2024-06-04</span><span style="color:#E6DB74;"> 19:12:13.216928</span></span>
<span class="line highlighted has-focus"><span style="color:#A6E22E;">End</span><span style="color:#E6DB74;"> date:</span><span style="color:#E6DB74;"> 2024-06-04</span><span style="color:#E6DB74;"> 22:09:04.695813</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### 2to3 ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 1.34</span><span style="color:#E6DB74;"> sec</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 0.00</span><span style="color:#E6DB74;"> sec</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### async_generators ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 1.52</span><span style="color:#E6DB74;"> sec</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 0.02</span><span style="color:#E6DB74;"> sec</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### async_tree_none ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 3.18</span><span style="color:#E6DB74;"> sec</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 0.16</span><span style="color:#E6DB74;"> sec</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### async_tree_cpu_io_mixed ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 4.32</span><span style="color:#E6DB74;"> sec</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 0.16</span><span style="color:#E6DB74;"> sec</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#66D9EF;">...</span></span>
<span class="line has-focus"><span style="color:#66D9EF;">...</span></span>
<span class="line has-focus"><span style="color:#66D9EF;">...</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### unpickle_list ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 15.0</span><span style="color:#E6DB74;"> us</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#E6DB74;"> us</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### unpickle_pure_python ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 1.53</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 0.01</span><span style="color:#E6DB74;"> ms</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### xml_etree_parse ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 575</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 4</span><span style="color:#E6DB74;"> ms</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### xml_etree_iterparse ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 460</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 5</span><span style="color:#E6DB74;"> ms</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### xml_etree_generate ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 421</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 6</span><span style="color:#E6DB74;"> ms</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#88846F;">### xml_etree_process ###</span></span>
<span class="line has-focus"><span style="color:#A6E22E;">Mean</span><span style="color:#E6DB74;"> +-</span><span style="color:#E6DB74;"> std</span><span style="color:#E6DB74;"> dev:</span><span style="color:#AE81FF;"> 340</span><span style="color:#E6DB74;"> ms</span><span style="color:#E6DB74;"> +-</span><span style="color:#AE81FF;"> 9</span><span style="color:#E6DB74;"> ms</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_3-3-3-评价" tabindex="-1"><a class="header-anchor" href="#_3-3-3-评价"><span>3.3.3 评价</span></a></h4><p>从上面的 PyPerformance 测试结果中，我们可以观察到一系列不同类型的 Python 任务及其执行时间，这有助于我们评估香橙派「OrangePi AI Pro」的性能特征。这些测试结果覆盖了从 I/O 操作到 CPU 密集型任务的各种场景，以及不同的 Python 功能，如异步编程、数据处理和加密等。</p><ol><li><p><strong>总体分析：</strong></p><ol><li><p><strong>CPU 密集型任务：</strong></p><ul><li>例如，<code>nbody</code>, <code>fannkuch</code>, <code>pidigits</code>，这些涉及大量数学计算和算法逻辑，执行时间在几百毫秒到几秒钟之间。香橙派在处理这些任务时的表现中等偏上，表明其对于教育和一般编程任务足够强大。</li></ul></li><li><p><strong>内存和数据处理：</strong></p><ul><li>测试如<code>json_dumps</code>, <code>pickle</code>, <code>unpickle</code> 显示较低的延迟（微秒级到毫秒级），这说明香橙派处理较小数据量的序列化和反序列化操作是高效的。</li></ul></li><li><p><strong>I/O操作：</strong></p><ul><li><code>asyncio_tcp</code>, <code>asyncio_tcp_ssl</code>, <code>asyncio_websockets</code> 展示了香橙派处理网络 I/O 的能力。SSL连接较普通TCP连接耗时更长，这可能是由于加密解密操作增加了额外的计算负担。</li></ul></li><li><p><strong>异步编程：</strong></p><ul><li>测试结果如 <code>async_generators</code>, <code>async_tree_none</code>, <code>async_tree_cpu_io_mixed</code> 表示在处理异步编程时，香橙派可以有效地处理并发任务，尽管在混合型任务中耗时较长。</li></ul></li><li><p><strong>文件和文本处理：</strong></p><ul><li><code>chameleon</code>, <code>genshi_text</code>, <code>html5lib</code> 等测试涉及HTML和文本的解析，执行速度较快，显示香橙派能够有效处理模板渲染和HTML解析任务。</li></ul></li><li><p><strong>科学计算和数值分析：</strong></p><ul><li><code>scimark</code> 系列（如 <code>scimark_fft</code>, <code>scimark_lu</code> 等）反映出香橙派在执行科学计算基准测试时的表现。这些测试通常需要较好的CPU和内存性能，结果显示香橙派在此类应用中的适用性较为有限，更适合教育和入门级科学项目。</li></ul></li></ol></li><li><p><strong>结论：</strong></p></li></ol><p>香橙派在您的测试中表现出了处理各种任务的能力，尤其是在I/O操作、轻量级数据处理和一些网络通信任务中表现良好。对于更复杂的科学计算和高密度的CPU任务，香橙派的性能可能会受限，但仍足以支持教育和一般编程用途。对于预算有限且空间受限的环境，香橙派依然是一个极具价值的选择。</p><p>根据这些结果，您可以根据实际应用需求进一步优化或选择合适的香橙派模型，或者考虑适当的性能优化策略，如代码优化、使用更轻量级的库等措施。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发、Linux、Web 全栈」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',99)]))}const b=l(y,[["render",u],["__file","01-orangepi-aipro-quick-start-guide.html.vue"]]),g=JSON.parse('{"path":"/OrangePi-Ai-Pro/01-orangepi-aipro-quick-start-guide.html","title":"香橙派 AIpro 的系统评测","lang":"zh-CN","frontmatter":{"title":"香橙派 AIpro 的系统评测","date":"2024-05-25T16:06:29.000Z","author":"AI悦创","isOriginal":true,"icon":"rengongzhineng","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"0. 前言 你好，我是悦创。 今天受邀测评 Orange Pi AIpro开发板，我将准备用这个测试简单的代码来看看这块开发版的性能体验。 分别从：Sysbench、Stress-ng、PyPerformance、RPi.GPIO Benchmark、Geekbench 等方面来测试和分析结果。 下面就是我收到的开发板子： 香橙派 AIpro 启动后支...","head":[["meta",{"property":"og:url","content":"https://bornforthis.cn/OrangePi-Ai-Pro/01-orangepi-aipro-quick-start-guide.html"}],["meta",{"property":"og:site_name","content":"AI悦创-Python一对一辅导"}],["meta",{"property":"og:title","content":"香橙派 AIpro 的系统评测"}],["meta",{"property":"og:description","content":"0. 前言 你好，我是悦创。 今天受邀测评 Orange Pi AIpro开发板，我将准备用这个测试简单的代码来看看这块开发版的性能体验。 分别从：Sysbench、Stress-ng、PyPerformance、RPi.GPIO Benchmark、Geekbench 等方面来测试和分析结果。 下面就是我收到的开发板子： 香橙派 AIpro 启动后支..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://bornforthis.cn/gzh.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-05T01:13:34.000Z"}],["meta",{"property":"article:author","content":"AI悦创"}],["meta",{"property":"article:published_time","content":"2024-05-25T16:06:29.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-05T01:13:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"香橙派 AIpro 的系统评测\\",\\"image\\":[\\"https://bornforthis.cn/gzh.jpg\\",\\"https://bornforthis.cn/zsxq.jpg\\"],\\"datePublished\\":\\"2024-05-25T16:06:29.000Z\\",\\"dateModified\\":\\"2024-06-05T01:13:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AI悦创\\"}]}"]]},"headers":[{"level":2,"title":"0. 前言","slug":"_0-前言","link":"#_0-前言","children":[]},{"level":2,"title":"1. 设备介绍","slug":"_1-设备介绍","link":"#_1-设备介绍","children":[]},{"level":2,"title":"2. 使用 VNC","slug":"_2-使用-vnc","link":"#_2-使用-vnc","children":[]},{"level":2,"title":"3. 开始测试","slug":"_3-开始测试","link":"#_3-开始测试","children":[{"level":3,"title":"3.1 Sysbench","slug":"_3-1-sysbench","link":"#_3-1-sysbench","children":[{"level":4,"title":"3.1.1 简介","slug":"_3-1-1-简介","link":"#_3-1-1-简介","children":[]},{"level":4,"title":"3.1.2 实际测试","slug":"_3-1-2-实际测试","link":"#_3-1-2-实际测试","children":[]},{"level":4,"title":"3.1.3 评价","slug":"_3-1-3-评价","link":"#_3-1-3-评价","children":[]}]},{"level":3,"title":"3.2 Stress-ng","slug":"_3-2-stress-ng","link":"#_3-2-stress-ng","children":[{"level":4,"title":"3.2.1 简介","slug":"_3-2-1-简介","link":"#_3-2-1-简介","children":[]},{"level":4,"title":"3.2.2 实际测试","slug":"_3-2-2-实际测试","link":"#_3-2-2-实际测试","children":[]},{"level":4,"title":"3.2.3 评价","slug":"_3-2-3-评价","link":"#_3-2-3-评价","children":[]}]},{"level":3,"title":"3.3 PyPerformance","slug":"_3-3-pyperformance","link":"#_3-3-pyperformance","children":[{"level":4,"title":"3.3.1 简介","slug":"_3-3-1-简介","link":"#_3-3-1-简介","children":[]},{"level":4,"title":"3.3.2 实际测试","slug":"_3-3-2-实际测试","link":"#_3-3-2-实际测试","children":[]},{"level":4,"title":"3.3.3 评价","slug":"_3-3-3-评价","link":"#_3-3-3-评价","children":[]}]}]}],"git":{"createdTime":1717550014000,"updatedTime":1717550014000,"contributors":[{"name":"AndersonHJB","email":"aiyuechuang@gmail.com","commits":1}]},"readingTime":{"minutes":13.14,"words":3941},"filePathRelative":"OrangePi-Ai-Pro/01-orangepi-aipro-quick-start-guide.md","localizedDate":"2024年5月25日","copyright":{"author":"AI悦创"},"autoDesc":true}');export{b as comp,g as data};
