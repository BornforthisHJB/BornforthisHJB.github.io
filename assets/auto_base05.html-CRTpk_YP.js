import{_ as e}from"./gzh-DnOBNg6W.js";import{_ as a}from"./zsxq-BcdwOI-_.js";import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as o,o as i}from"./app-CXDmrB7a.js";const p="/assets/%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96-Excel%E6%B5%81%E7%A8%8B-4V8Nhrqb.png",t="/assets/image-20220712002219935-VWRcVZK9.png",r="/assets/image-20220712005318357-CWY1VLOy.png",c={};function d(F,s){return i(),l("div",null,s[0]||(s[0]=[o('<p>你好，我是悦创。</p><h2 id="写入-excel-文件" tabindex="-1"><a class="header-anchor" href="#写入-excel-文件"><span>写入 Excel 文件</span></a></h2><p>本节课，我们来熟悉下 Excel 的读和写操作。</p><p>首先来学习下，随机生成数据，写入一个Excel文件并保存，所使用到的库，是 xlwt，安装命令 <code>pip install xlwt</code> ，安装简单方便，无依赖，很快。</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pip install xlwt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>常规的创建 Excel 流程：</p><figure><img src="'+p+`" alt="办公自动化-Excel流程" tabindex="0" loading="lazy"><figcaption>办公自动化-Excel流程</figcaption></figure><p>新建 Python 文件，第一个代码块，先导入 xlwt 这个库，并新建一个 WorkBook 对象。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> xlwt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">wb </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> xlwt.Workbook()  </span><span style="color:#88846F;"># 新建一个 workbook 对象</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Excel 的每个文件，里面可以有很多 sheet，所以有了 workbook，还需要新建 sheet：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">sheet </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> wb.add_sheet(</span><span style="color:#E6DB74;">&#39;第一个sheet&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>有了 sheet，就可以开始写入数据了。sheet 里面是一个二维的表格，并且索引是从 0 开始的，所以第一步，先写头部数据。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">head_data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;姓名&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;地址&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;手机号&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;城市&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> head </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> head_data:</span></span>
<span class="line"><span style="color:#F8F8F2;">    sheet.write(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, head_data.index(head), head)</span></span>
<span class="line"><span style="color:#88846F;">    # sheet.write(行, 列, 写入数据)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>write 函数写入，分别是 <code>x 行, x 列, 数据</code>，头部数据永远是第一行，所以第 0 行。数据的列，则是当前数据所在列表的索引，直接使用index 函数即可。</p><p>另外两种写入方法：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, head </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(head_data):</span></span>
<span class="line"><span style="color:#88846F;">    # print(head)</span></span>
<span class="line"><span style="color:#F8F8F2;">    sheet.write(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, index, head)</span></span>
<span class="line"><span style="color:#88846F;">    # sheet.write(行, 列, 插入的数据)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> head </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> head_data:</span></span>
<span class="line"><span style="color:#F8F8F2;">    sheet.write(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, i, head)</span></span>
<span class="line"><span style="color:#F8F8F2;">    i </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>有了头部数据，现在就开始写入内容了，分别是：随机姓名、随机地址、随机号码、随机城市，数据的来源都是 faker 库，一个专门创建虚假数据用来测试的库，安装命令：<code>pip install faker</code>。</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pip install faker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>因为头部信息已经写好，所以接下来是从第 1 行开始写数据，每行四个数据，准备写 99 个用户数据，所以用循环，循环 99 次，代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> faker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">fake </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> faker.Faker()</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    sheet.write(i, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, fake.first_name() </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39; &#39;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> fake.last_name())</span></span>
<span class="line"><span style="color:#F8F8F2;">    sheet.write(i, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, fake.address())</span></span>
<span class="line"><span style="color:#F8F8F2;">    sheet.write(i, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, fake.phone_number())</span></span>
<span class="line"><span style="color:#F8F8F2;">    sheet.write(i, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, fake.city())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据全部写好了，但是此时数据保存在 wb 这个对象中，wb 就是最开始的 Workbook。</p><p><strong>但是 wb 中的数据，不是永久的；保存成文件，才是永久的。</strong></p><p>Workbook 对象，提供 save 函数，可以直接保存成 xls 文件，代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span>wb.save(&#39;虚假用户数据.xls&#39;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后找到文件，文件的位置就是你 Python 代码文件的旁边。使用 office 或者 wps 打开这个 xls 文件，如下截图：</p><figure><img src="`+t+`" alt="image-20220712002219935" tabindex="0" loading="lazy"><figcaption>image-20220712002219935</figcaption></figure><p>一共有 100 行，其中头部一行，虚假用户信息 99 行。</p><h2 id="读取-excel-文件" tabindex="-1"><a class="header-anchor" href="#读取-excel-文件"><span>读取 Excel 文件</span></a></h2><p>写文件已经搞定，接下来就要学习下 Excel 的读操作。</p><ul><li>写入 Excel 的库是 xlwt，对应 write；</li><li>读取 Excel 的库是 xlrd，对应 read；</li></ul><p>xlrd 的安装命令：<code>pip install xlrd</code></p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pip install xlrd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>首先导入 xlrd，然后打开前面写好的 “<strong>虚假用户数据.xls</strong>”，代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> xlrd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">wb </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> xlrd.open_workbook(</span><span style="color:#E6DB74;">&#39;虚假用户数据.xls&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开了文件之后，wb 代表当前文件。读取数据，需要指定具体的 sheet，有两种方式，分别是通过索引和名称，如下代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">sheets </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> wb.sheets()  </span><span style="color:#88846F;"># 获取文件中全部的 sheet，返回结构是 list。</span></span>
<span class="line"><span style="color:#88846F;"># print(sheets)  # [Sheet  0:&lt;第一个sheet&gt;]</span></span>
<span class="line"><span style="color:#F8F8F2;">sheet </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sheets[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># 通过索引顺序获取。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">sheet </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> wb.sheet_by_index(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 直接通过索引顺序获取。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">sheet </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> wb.sheet_by_name(</span><span style="color:#E6DB74;">&#39;第一个sheet&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 通过名称获取。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时获取到了 sheet 对象，然后从这里取出数据就可以。</p><p>sheet 的内容是二维表格，取数据全靠行数和列数，定位具体的格子，然后拿到格子里面的内容。</p><p><strong>如果我们要取出全部的内容咋办？</strong>——获取 sheet 的总行数和列数，然后循环就行。</p><p>取出总行数和列数的代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">rows </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sheet.nrows  </span><span style="color:#88846F;"># 行</span></span>
<span class="line"><span style="color:#F8F8F2;">cols </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sheet.ncols  </span><span style="color:#88846F;"># 列</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>rows 就是总行数，cols 是总列数。有这两值，然后两层循环，取数据就行，如下代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> row </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(rows):</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> col </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(cols):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(sheet.cell(row, col).value, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39; , &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果图【只截图头部】：</p><figure><img src="`+r+'" alt="image-20220712005318357" tabindex="0" loading="lazy"><figcaption>image-20220712005318357</figcaption></figure><p>读数据，指定某行某列，定位到具体方格，取出里面的值即可，代码是 <code>sheet.cell(row, col).value</code> 。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',52)]))}const v=n(c,[["render",d],["__file","auto_base05.html.vue"]]),b=JSON.parse('{"path":"/Python/pyauto/auto_base05.html","title":"05-Python 实现 Excel 的读写操作","lang":"zh-CN","frontmatter":{"title":"05-Python 实现 Excel 的读写操作","date":"2022-06-19T00:11:25.000Z","author":"AI悦创","isOriginal":true,"category":"Python 办公自动化","tag":["Python 办公自动化"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"prev":"auto_base03.md","next":"auto_base05.md","backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"写入 Excel 文件","slug":"写入-excel-文件","link":"#写入-excel-文件","children":[]},{"level":2,"title":"读取 Excel 文件","slug":"读取-excel-文件","link":"#读取-excel-文件","children":[]}],"git":{"createdTime":1706497934000,"updatedTime":1706497934000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":1}]},"readingTime":{"minutes":4.42,"words":1327},"filePathRelative":"Python/pyauto/auto_base05.md","localizedDate":"2022年6月19日","copyright":{"author":"AI悦创"}}');export{v as comp,b as data};
