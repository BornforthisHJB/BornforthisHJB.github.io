import{_ as t}from"./gzh.d6f5697d.js";import{_ as e}from"./zsxq.200e4a27.js";import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c as l,a as n,b as c,e as i,d as s,r as u}from"./app.f9f7eba5.js";const r={},k=i(`<h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Grade</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> letter<span class="token punctuation">,</span> mark<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>letter <span class="token operator">=</span> letter
        self<span class="token punctuation">.</span>mark <span class="token operator">=</span> mark

studentMarks <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;Ann&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;Bo&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;Cam&#39;</span><span class="token punctuation">:</span>Grade<span class="token punctuation">(</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;Dee&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a> \u95EE\u9898\uFF1A</h2><ol><li>\u627E\u51FA\u5B66\u751F\u4E2D\u7684\u6700\u9AD8\u5206\u662F\u8C01\uFF1F</li><li>\u627E\u51FA\u5B66\u751F\u4EEC\u7684\u5E73\u5747\u5206\uFF1F</li><li>\u8D85\u51FA ABCDF \u51FA\u73B0\u7684\u9891\u7387\uFF1F</li></ol><h2 id="\u7B54\u6848" tabindex="-1"><a class="header-anchor" href="#\u7B54\u6848" aria-hidden="true">#</a> \u7B54\u6848</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Grade</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> letter<span class="token punctuation">,</span> mark<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        first:\u5B58\u81EA\u5DF1\u672C\u8EAB\u7684\u6570\u636E
        rest:\u5B58\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u4E5F\u5C31\u4E0B\u4E00\u4E2A\u8282\u70B9\u662F\u8C01
        &quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>letter <span class="token operator">=</span> letter
        self<span class="token punctuation">.</span>mark <span class="token operator">=</span> mark
        self<span class="token punctuation">.</span>rest <span class="token operator">=</span> <span class="token boolean">None</span>
    
    <span class="token keyword">def</span> <span class="token function">size</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;\u83B7\u53D6\u94FE\u8868\u957F\u5EA6&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rest <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token number">1</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">max_value</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;\u5BFB\u627E\u6700\u5927\u503C&quot;&quot;&quot;</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;\u6210\u529Fsuccessful&quot;&quot;&quot;</span>
        p <span class="token operator">=</span> self
        max_value <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">while</span> p <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> max_value <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>mark<span class="token punctuation">:</span>
                max_value <span class="token operator">=</span> p<span class="token punctuation">.</span>mark
            p <span class="token operator">=</span> p<span class="token punctuation">.</span>rest
        <span class="token keyword">return</span> max_value
        <span class="token triple-quoted-string string">&quot;&quot;&quot;successful&quot;&quot;&quot;</span>
        
        <span class="token comment"># max_value = self.mark</span>
        <span class="token comment"># max_value = self.mark</span>
        <span class="token comment"># if self.rest is None:</span>
        <span class="token comment">#     if self.mark &gt; max_value:</span>
        <span class="token comment">#         max_value = self.mark</span>
        <span class="token comment">#         return max_value</span>
        <span class="token comment"># elif max_value &lt; self.rest.mark:</span>
        <span class="token comment">#     max_value = self.rest.mark</span>
        <span class="token comment">#     return self.rest.max_value(max_value)</span>
        <span class="token comment"># else:</span>
        <span class="token comment">#     return self.rest.max_value(max_value)</span>
    
    <span class="token keyword">def</span> <span class="token function">average</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> total_num<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;\u5E73\u5747\u6570&quot;&quot;&quot;</span>
        p <span class="token operator">=</span> self
        sum_num <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> p <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            sum_num <span class="token operator">+=</span> p<span class="token punctuation">.</span>mark
            p <span class="token operator">=</span> p<span class="token punctuation">.</span>rest
        <span class="token keyword">return</span> sum_num <span class="token operator">/</span> total_num
    
    <span class="token keyword">def</span> <span class="token function">frequency</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        p <span class="token operator">=</span> self
        letter_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">while</span> p <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> p<span class="token punctuation">.</span>letter <span class="token keyword">in</span> letter_dict<span class="token punctuation">:</span>
                letter_dict<span class="token punctuation">[</span>p<span class="token punctuation">.</span>letter<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                letter_dict<span class="token punctuation">[</span>p<span class="token punctuation">.</span>letter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
            p <span class="token operator">=</span> p<span class="token punctuation">.</span>rest
        <span class="token keyword">return</span> letter_dict
        
studentMarks <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Ann&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Bo&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Cam&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Dee&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment"># studentMarks[&quot;Ann&quot;].rest = studentMarks[&quot;Bo&quot;]</span>
<span class="token comment"># studentMarks[&quot;Bo&quot;].rest = studentMarks[&quot;Cam&quot;]</span>
<span class="token comment"># studentMarks[&quot;Cam&quot;].rest = studentMarks[&quot;Dee&quot;]</span>
<span class="token comment"># print(studentMarks[&quot;Cam&quot;].size())</span>
l1 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Ann&quot;</span><span class="token punctuation">]</span>
l2 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Bo&quot;</span><span class="token punctuation">]</span>
l3 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Cam&quot;</span><span class="token punctuation">]</span>
l4 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Dee&quot;</span><span class="token punctuation">]</span>
l1<span class="token punctuation">.</span>rest <span class="token operator">=</span> l2
l2<span class="token punctuation">.</span>rest <span class="token operator">=</span> l3
l3<span class="token punctuation">.</span>rest <span class="token operator">=</span> l4
<span class="token keyword">print</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>max_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>average<span class="token punctuation">(</span>l1<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>frequency<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;l1:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> l1<span class="token punctuation">.</span>mark<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;l2:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> l1<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>mark<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;l3:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> l1<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>mark<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;l4:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> l1<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>mark<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E0A\u8BFE\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u8BFE\u4EE3\u7801" aria-hidden="true">#</a> \u4E0A\u8BFE\u4EE3\u7801</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Grade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> letter<span class="token punctuation">,</span> mark<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>letter <span class="token operator">=</span> letter
        self<span class="token punctuation">.</span>mark <span class="token operator">=</span> mark
        self<span class="token punctuation">.</span>rest <span class="token operator">=</span> <span class="token boolean">None</span>
    
    <span class="token keyword">def</span> <span class="token function">size</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rest <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token number">1</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>rest<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">max_value</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        p <span class="token operator">=</span> self
        <span class="token comment"># p.mark == self.mark</span>
        max_value <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> p <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> max_value <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>mark<span class="token punctuation">:</span>  <span class="token comment"># p.rest.mark &gt;&gt;&gt; self.rest.mark</span>
                max_value <span class="token operator">=</span> p<span class="token punctuation">.</span>mark
            <span class="token comment"># p.rest.mark</span>
            p <span class="token operator">=</span> p<span class="token punctuation">.</span>rest
        <span class="token keyword">return</span> max_value
    
    <span class="token keyword">def</span> <span class="token function">average</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> total_num<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;\u5E73\u5747\u6570&quot;&quot;&quot;</span>
        p <span class="token operator">=</span> self
        sum_num <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> p <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            sum_num <span class="token operator">+=</span> p<span class="token punctuation">.</span>mark
            p <span class="token operator">=</span> p<span class="token punctuation">.</span>rest
        <span class="token keyword">return</span> sum_num <span class="token operator">/</span> total_num
    
    <span class="token keyword">def</span> <span class="token function">frequency</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        p <span class="token operator">=</span> self
        letter_frequency <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">while</span> p <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> p<span class="token punctuation">.</span>letter <span class="token keyword">in</span> letter_frequency<span class="token punctuation">:</span>
                letter_frequency<span class="token punctuation">[</span>p<span class="token punctuation">.</span>letter<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                letter_frequency<span class="token punctuation">[</span>p<span class="token punctuation">.</span>letter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">return</span> letter_frequency


studentMarks <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Ann&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Bo&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Cam&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Dee&#39;</span><span class="token punctuation">:</span> Grade<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment"># \u94FE\u8868</span>
l1 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Ann&quot;</span><span class="token punctuation">]</span>
l2 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Bo&quot;</span><span class="token punctuation">]</span>
l3 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Cam&quot;</span><span class="token punctuation">]</span>
l4 <span class="token operator">=</span> studentMarks<span class="token punctuation">[</span><span class="token string">&quot;Dee&quot;</span><span class="token punctuation">]</span>
l1<span class="token punctuation">.</span>rest <span class="token operator">=</span> l2
l2<span class="token punctuation">.</span>rest <span class="token operator">=</span> l3
l3<span class="token punctuation">.</span>rest <span class="token operator">=</span> l4
<span class="token keyword">print</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l1<span class="token punctuation">.</span>max_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+t+'" alt=""></p></details>',10),d={class:"custom-container info"},v=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),m=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),b=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),f=s("\u65B9\u6CD5\u4E00\uFF1A"),q={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},_=s("QQ"),y=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),g=n("p",null,[n("img",{src:e,alt:""})],-1);function w(h,x){const a=u("ExternalLinkIcon");return o(),l("div",null,[k,n("div",d,[v,m,b,n("p",null,[f,n("a",q,[_,c(a)])]),y]),g])}var N=p(r,[["render",w],["__file","37.html.vue"]]);export{N as default};
