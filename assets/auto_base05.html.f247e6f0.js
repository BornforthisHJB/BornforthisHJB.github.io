import{_ as e}from"./gzh.b03adfd2.js";import{_ as t}from"./zsxq.77f6dc86.js";import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,d as s,b as i,e as l,r as u}from"./app.fd12d607.js";const d="/assets/办公自动化-Excel流程.af88e00e.png",r="/assets/image-20220712002219935.0ad0df18.png",k="/assets/image-20220712005318357.e66224b9.png",m={},v=l(`<p>你好，我是悦创。</p><h2 id="写入-excel-文件" tabindex="-1"><a class="header-anchor" href="#写入-excel-文件" aria-hidden="true">#</a> 写入 Excel 文件</h2><p>本节课，我们来熟悉下 Excel 的读和写操作。</p><p>首先来学习下，随机生成数据，写入一个Excel文件并保存，所使用到的库，是 xlwt，安装命令 <code>pip install xlwt</code> ，安装简单方便，无依赖，很快。</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pip install xlwt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常规的创建 Excel 流程：</p><p><img src="`+d+`" alt="办公自动化-Excel流程" loading="lazy"></p><p>新建 Python 文件，第一个代码块，先导入 xlwt 这个库，并新建一个 WorkBook 对象。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> xlwt

wb <span class="token operator">=</span> xlwt<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 新建一个 workbook 对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Excel 的每个文件，里面可以有很多 sheet，所以有了 workbook，还需要新建 sheet：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>add_sheet<span class="token punctuation">(</span><span class="token string">&#39;第一个sheet&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有了 sheet，就可以开始写入数据了。sheet 里面是一个二维的表格，并且索引是从 0 开始的，所以第一步，先写头部数据。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>head_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;地址&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;手机号&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;城市&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> head <span class="token keyword">in</span> head_data<span class="token punctuation">:</span>
    sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> head_data<span class="token punctuation">.</span>index<span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span>
    <span class="token comment"># sheet.write(行, 列, 写入数据)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>write 函数写入，分别是 <code>x 行, x 列, 数据</code>，头部数据永远是第一行，所以第 0 行。数据的列，则是当前数据所在列表的索引，直接使用index 函数即可。</p><p>另外两种写入方法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> index<span class="token punctuation">,</span> head <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>head_data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># print(head)</span>
    sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> head<span class="token punctuation">)</span>
    <span class="token comment"># sheet.write(行, 列, 插入的数据)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> head <span class="token keyword">in</span> head_data<span class="token punctuation">:</span>
    sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> head<span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>有了头部数据，现在就开始写入内容了，分别是：随机姓名、随机地址、随机号码、随机城市，数据的来源都是 faker 库，一个专门创建虚假数据用来测试的库，安装命令：<code>pip install faker</code>。</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pip install faker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因为头部信息已经写好，所以接下来是从第 1 行开始写数据，每行四个数据，准备写 99 个用户数据，所以用循环，循环 99 次，代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> faker

fake <span class="token operator">=</span> faker<span class="token punctuation">.</span>Faker<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> fake<span class="token punctuation">.</span>first_name<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> fake<span class="token punctuation">.</span>last_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> fake<span class="token punctuation">.</span>address<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> fake<span class="token punctuation">.</span>phone_number<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> fake<span class="token punctuation">.</span>city<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据全部写好了，但是此时数据保存在 wb 这个对象中，wb 就是最开始的 Workbook。</p><p><strong>但是 wb 中的数据，不是永久的；保存成文件，才是永久的。</strong></p><p>Workbook 对象，提供 save 函数，可以直接保存成 xls 文件，代码如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wb.save(&#39;虚假用户数据.xls&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后找到文件，文件的位置就是你 Python 代码文件的旁边。使用 office 或者 wps 打开这个 xls 文件，如下截图：</p><p><img src="`+r+`" alt="image-20220712002219935" loading="lazy"></p><p>一共有 100 行，其中头部一行，虚假用户信息 99 行。</p><h2 id="读取-excel-文件" tabindex="-1"><a class="header-anchor" href="#读取-excel-文件" aria-hidden="true">#</a> 读取 Excel 文件</h2><p>写文件已经搞定，接下来就要学习下 Excel 的读操作。</p><ul><li>写入 Excel 的库是 xlwt，对应 write；</li><li>读取 Excel 的库是 xlrd，对应 read；</li></ul><p>xlrd 的安装命令：<code>pip install xlrd</code></p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pip install xlrd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>首先导入 xlrd，然后打开前面写好的 “<strong>虚假用户数据.xls</strong>”，代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> xlrd

wb <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span><span class="token string">&#39;虚假用户数据.xls&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开了文件之后，wb 代表当前文件。读取数据，需要指定具体的 sheet，有两种方式，分别是通过索引和名称，如下代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sheets <span class="token operator">=</span> wb<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取文件中全部的 sheet，返回结构是 list。</span>
<span class="token comment"># print(sheets)  # [Sheet  0:&lt;第一个sheet&gt;]</span>
sheet <span class="token operator">=</span> sheets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 通过索引顺序获取。</span>

sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>sheet_by_index<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 直接通过索引顺序获取。</span>

sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>sheet_by_name<span class="token punctuation">(</span><span class="token string">&#39;第一个sheet&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 通过名称获取。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时获取到了 sheet 对象，然后从这里取出数据就可以。</p><p>sheet 的内容是二维表格，取数据全靠行数和列数，定位具体的格子，然后拿到格子里面的内容。</p><p><strong>如果我们要取出全部的内容咋办？</strong>——获取 sheet 的总行数和列数，然后循环就行。</p><p>取出总行数和列数的代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>rows <span class="token operator">=</span> sheet<span class="token punctuation">.</span>nrows  <span class="token comment"># 行</span>
cols <span class="token operator">=</span> sheet<span class="token punctuation">.</span>ncols  <span class="token comment"># 列</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>rows 就是总行数，cols 是总列数。有这两值，然后两层循环，取数据就行，如下代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39; , &#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果图【只截图头部】：</p><p><img src="`+k+'" alt="image-20220712005318357" loading="lazy"></p><p>读数据，指定某行某列，定位到具体方格，取出里面的值即可，代码是 <code>sheet.cell(row, col).value</code> 。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="'+e+'" alt="" loading="lazy"></p></details>',50),b={class:"custom-container info"},h=n("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),g=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),x=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),y={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"方法二：微信：Jiabcdefh",-1),w=n("p",null,[n("img",{src:t,alt:"",loading:"lazy"})],-1);function f(E,I){const a=u("ExternalLinkIcon");return o(),c("div",null,[v,n("div",b,[h,g,x,n("p",null,[s("方法一："),n("a",y,[s("QQ"),i(a)])]),_]),w])}const B=p(m,[["render",f],["__file","auto_base05.html.vue"]]);export{B as default};
