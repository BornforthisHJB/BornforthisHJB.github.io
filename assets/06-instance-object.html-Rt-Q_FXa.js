import{_ as n}from"./gzh-DnOBNg6W.js";import{_ as a}from"./zsxq-BcdwOI-_.js";import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as t,o}from"./app-BbigmQF7.js";const i={};function p(r,s){return o(),l("div",null,s[0]||(s[0]=[t(`<h2 id="_1-object-对象" tabindex="-1"><a class="header-anchor" href="#_1-object-对象"><span>1. Object（对象）</span></a></h2><ul><li><p><strong>定义</strong>：<code>Object</code> 指的是根据某个类创建出来的具体实例，存在于内存中。</p></li><li><p><strong>特点</strong>：</p><ul><li><p>它是类的具体实现。</p></li><li><p>通过 <code>new</code> 关键字（或其他方式，如反射、克隆等）创建。</p></li><li><p>例如：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    String</span><span style="color:#F8F8F2;"> name;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Main</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        Person</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Person</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 这里的 p 就是一个对象</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述代码中，<code>p</code> 是 <code>Person</code> 类的对象。</p></li></ul></li></ul><h2 id="_2-instance-实例" tabindex="-1"><a class="header-anchor" href="#_2-instance-实例"><span>2. Instance（实例）</span></a></h2><ul><li><p><strong>定义</strong>：<code>Instance</code> 表示某个类的一个特定实现，是一个更语义化的概念。一个对象是某个类的实例。</p></li><li><p><strong>特点</strong>：</p><ul><li><p>它是类和对象之间的关系描述。</p></li><li><p>更强调“<strong>某个类的实例化对象</strong>”这个过程或结果。</p></li><li><p>例如：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Main</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        Person</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Person</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (p </span><span style="color:#F92672;">instanceof</span><span style="color:#F8F8F2;"> Person) { </span><span style="color:#88846F;">// 判断 p 是否是 Person 的实例</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;p 是 Person 的一个实例&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面代码中，<code>p</code> 是一个对象，同时也是 <code>Person</code> 的实例。</p></li></ul></li></ul><h2 id="_3-主要区别" tabindex="-1"><a class="header-anchor" href="#_3-主要区别"><span>3. 主要区别</span></a></h2><table><thead><tr><th>属性</th><th>Object（对象）</th><th>Instance（实例）</th></tr></thead><tbody><tr><td><strong>含义</strong></td><td>内存中的具体存在</td><td>类的实现，更多是“属于”关系的概念</td></tr><tr><td><strong>使用场景</strong></td><td>强调对象本身</td><td>强调对象与类的关系或类型检查</td></tr><tr><td><strong>实例化关系</strong></td><td>每个实例化的对象是一个 Object</td><td>每个 Object 是某个类的 Instance</td></tr></tbody></table><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',10)]))}const u=e(i,[["render",p],["__file","06-instance-object.html.vue"]]),m=JSON.parse('{"path":"/Java/FQA/06-instance-object.html","title":"06-instance 和 object 完全是一种东西吗？","lang":"zh-CN","frontmatter":{"title":"06-instance 和 object 完全是一种东西吗？","date":"2024-11-28T21:04:07.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课","Java FQA"],"tag":["Java体系课","Java FQA"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. Object（对象）","slug":"_1-object-对象","link":"#_1-object-对象","children":[]},{"level":2,"title":"2. Instance（实例）","slug":"_2-instance-实例","link":"#_2-instance-实例","children":[]},{"level":2,"title":"3. 主要区别","slug":"_3-主要区别","link":"#_3-主要区别","children":[]}],"git":{"createdTime":1732800042000,"updatedTime":1732800042000,"contributors":[{"name":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1}]},"readingTime":{"minutes":2.02,"words":607},"filePathRelative":"Java/FQA/06-instance-object.md","localizedDate":"2024年11月28日","copyright":{"author":"AI悦创"}}');export{u as comp,m as data};
