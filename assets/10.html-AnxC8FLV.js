import{_ as p}from"./gzh-DnOBNg6W.js";import{_ as r}from"./zsxq-BcdwOI-_.js";import{_ as F}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as y,a as i,d as c,e as a,b as s,r as d,o as u,f as l}from"./app-DBrnZ2hi.js";const v={};function b(m,n){const t=d("CodeTabs");return u(),y("div",null,[n[14]||(n[14]=i(`<h2 id="_0-目录" tabindex="-1"><a class="header-anchor" href="#_0-目录"><span>0. 目录</span></a></h2><ul><li>变量要先赋值后使用</li><li>计算并赋值运算符</li><li>数据类型自动转换</li><li>强制类型转换和数字溢出</li><li>从数值计算溢出，理解程序员和编程语言</li></ul><h2 id="_1-变量要先赋值后使用" tabindex="-1"><a class="header-anchor" href="#_1-变量要先赋值后使用"><span>1. 变量要先赋值后使用</span></a></h2><ul><li>不给变量赋值代表什么</li><li>不赋值就使用会怎么样</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">AssignFirst</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> a;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 其实就是没有初始化</span></span>
<span class="line"><span style="color:#88846F;">        /*java: 可能尚未初始化变量a</span></span>
<span class="line"><span style="color:#88846F;">        * 初始化，就是你要给他赋值，你创建变量的时候要给它一个值。</span></span>
<span class="line"><span style="color:#88846F;">        * 如果你不用这个变量 a 直接声明变量也是可以的*/</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)),c(t,{id:"46",data:[{id:"解决方法1："},{id:"解决方法2："},{id:"解决方法3："}]},{title0:a(({value:e,isActive:o})=>n[0]||(n[0]=[l("解决方法1：")])),title1:a(({value:e,isActive:o})=>n[1]||(n[1]=[l("解决方法2：")])),title2:a(({value:e,isActive:o})=>n[2]||(n[2]=[l("解决方法3：")])),tab0:a(({value:e,isActive:o})=>n[3]||(n[3]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Solution_AssignFirst"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," a "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(b);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:e,isActive:o})=>n[4]||(n[4]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Solution_AssignFirst"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," a;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," a "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(b);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:e,isActive:o})=>n[5]||(n[5]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Solution_AssignFirst"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," a;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[15]||(n[15]=i(`<h2 id="_2-计算并赋值运算符" tabindex="-1"><a class="header-anchor" href="#_2-计算并赋值运算符"><span>2. 计算并赋值运算符</span></a></h2><h3 id="_2-1-计算并赋值运算符" tabindex="-1"><a class="header-anchor" href="#_2-1-计算并赋值运算符"><span>2.1 计算并赋值运算符</span></a></h3><ul><li>作用是为了让代码更简洁。比如 a = a +10，可以简化为 a += 10；</li><li><code>+=</code></li><li><code>-=</code></li><li><code>/=</code></li><li><code>*=</code></li><li><code>%=</code></li><li><code>&amp;=</code></li><li><code>^=</code></li><li><code>|=</code></li><li><code>&lt;&lt;=</code></li><li><code>&gt;&gt;=</code></li><li><code>&gt;&gt;&gt;=</code></li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CalcAndAssign</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 8</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        a </span><span style="color:#F92672;">&gt;&gt;=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-数据类型自动转换" tabindex="-1"><a class="header-anchor" href="#_3-数据类型自动转换"><span>3. 数据类型自动转换</span></a></h2><h3 id="_3-1-自动类型转换" tabindex="-1"><a class="header-anchor" href="#_3-1-自动类型转换"><span>3.1 自动类型转换</span></a></h3><ul><li>不会出现问题的类型转换，编程语言可以做自动类型转换，比如低精度的数字向高精度的数字转换。</li><li>自动类型转换可以发生在算数运算，也可以发生在赋值。</li><li>「之前的 <code>1/3.0</code> 其实也是自动类型转换，自动转到浮点数」</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">AutoConvert</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 99</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#88846F;">        //        int b = 5;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> b);</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-数值精度顺序-double-float-long-int-short-byte" tabindex="-1"><a class="header-anchor" href="#_3-2-数值精度顺序-double-float-long-int-short-byte"><span>3.2 数值精度顺序：double&gt;float&gt;long&gt;int&gt;short&gt;byte</span></a></h3><p><code>int&gt;char</code>：char 可以无损到 int</p><h3 id="_3-3-char-可以转换为-int" tabindex="-1"><a class="header-anchor" href="#_3-3-char-可以转换为-int"><span>3.3 char 可以转换为 int</span></a></h3><ul><li>char 可以转换为 int</li><li>虽然同样是两个 byte，但是因为 char 是无符号数，值域超出了 short 可以表示的范围，所以不可以自动转为 short。</li></ul>`,12)),c(t,{id:"171",data:[{id:"AutoConvert"},{id:"demo"}],"tab-id":"java"},{title0:a(({value:e,isActive:o})=>n[6]||(n[6]=[l("AutoConvert")])),title1:a(({value:e,isActive:o})=>n[7]||(n[7]=[l("demo")])),tab0:a(({value:e,isActive:o})=>n[8]||(n[8]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"AutoConvert"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        /*int 是 4 byte，long 是 8 byte，所以对于计算机来说，")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        虽然不合适，但是 long 可以包容 int 这个 4 byte 所以可以自动转换。")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        下面几个代码都是一样的，就是要告诉你 Java 会自动帮我们把数据从低精度")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        转到高精度——隐性转换*/")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," intVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 99"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        long"),s("span",{style:{color:"#F8F8F2"}}," longVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," intVal;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        long"),s("span",{style:{color:"#F8F8F2"}}," longVal2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," intVal "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(longVal2);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        float"),s("span",{style:{color:"#F8F8F2"}}," floatVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 11.32f"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," doubleVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," floatVal;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," doubleVal2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," floatVal "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(doubleVal2);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        doubleVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," longVal;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        doubleVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," intVal;")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        floatVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," intVal;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        floatVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," longVal;")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," ch "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," chNum "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ch;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," chNumCalc "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ch "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 10"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(ch);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(chNum);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 99"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        int b = 5;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(a "),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," b);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:e,isActive:o})=>n[9]||(n[9]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"demo"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," ch "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'a'"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," intCh "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ch;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(ch);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(intCh);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        int a = 97;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        char ch1 = a; // java: 不兼容的类型: 从int转换到char可能会有损失")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," ch1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'a'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(ch1);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'a'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},");")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[16]||(n[16]=s("h2",{id:"_4-强制数据类型转换",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-强制数据类型转换"},[s("span",null,"4. 强制数据类型转换")])],-1)),n[17]||(n[17]=s("h3",{id:"_4-1-强制类型转换",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-1-强制类型转换"},[s("span",null,"4.1 强制类型转换")])],-1)),n[18]||(n[18]=s("ul",null,[s("li",null,"可能出现问题的类型转换，需要使用强制类型转换，比如高精度数值向低精度数值转换；"),s("li",null,"强制类型转换也是操作符；"),s("li",null,"语法是用小括号括起来的目标类型放在被转换的值前面；"),s("li",null,"强制转换会造成数据精度丢失。「比如 8 byte 到 4 byte ，那这样就会丢失」")],-1)),c(t,{id:"207",data:[{id:"ForceConvert"},{id:"ForceConvertValueLoss"}],"tab-id":"java"},{title0:a(({value:e,isActive:o})=>n[10]||(n[10]=[l("ForceConvert")])),title1:a(({value:e,isActive:o})=>n[11]||(n[11]=[l("ForceConvertValueLoss")])),tab0:a(({value:e,isActive:o})=>n[12]||(n[12]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ForceConvert"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," intVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 99"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        long"),s("span",{style:{color:"#F8F8F2"}}," longVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 19999"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        intVal = longVal;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        /*直接赋值会出错")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        报错内容：java: 不兼容的类型: 从long转换到int可能会有损失")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        Java计算机表示：这个损失，我决定不了，得你来决定；")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        程序员：得我们自己来决定是否转换，所以需要强制转换")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        (int) longVal-> 我知道，可以转的。——我允许你强制转换了*/")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        intVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},") longVal;")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        float"),s("span",{style:{color:"#F8F8F2"}}," floatVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 11.32f"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," doubleVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 3344556.789"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        floatVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"float"),s("span",{style:{color:"#F8F8F2"}},") doubleVal;")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 65"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"char"),s("span",{style:{color:"#F8F8F2"}},") a;")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:e,isActive:o})=>n[13]||(n[13]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ForceConvertValueLoss"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," intVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 99"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        long"),s("span",{style:{color:"#F8F8F2"}}," longVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5555555555555L"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // long: 101 0000 1101 1000 0000 1110 1010 0101 1000 1110 0011")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // int:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        /* 1 字节（byte） = 8 位（bit）")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        * 比如：long 是 8 byte，int 是 4 byte")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        * 你说好巧不巧，后面 4 个 byte 的开头不恰巧就是 1，也就成了负数。*/")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        intVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},") longVal;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(intVal);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        float"),s("span",{style:{color:"#F8F8F2"}}," floatVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 11.32f"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," doubleVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1234567890.123456"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        floatVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"float"),s("span",{style:{color:"#F8F8F2"}},") doubleVal;")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(floatVal);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(doubleVal);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[19]||(n[19]=i(`<p>输出：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2132125469</span></span>
<span class="line"><span style="color:#AE81FF;">1.23456794E9</span></span>
<span class="line"><span style="color:#AE81FF;">1.234567890123456E9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>E 代表 10，E9 代表 10的9次方</p></blockquote><h3 id="_4-2-小试牛刀-大小写转换" tabindex="-1"><a class="header-anchor" href="#_4-2-小试牛刀-大小写转换"><span>4.2 小试牛刀：大小写转换</span></a></h3><ol><li>前置知识：</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">test</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        char</span><span style="color:#F8F8F2;"> ch </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;a&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> intCh </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">) ch;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(intCh);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">((</span><span style="color:#66D9EF;font-style:italic;">char</span><span style="color:#F8F8F2;">) </span><span style="color:#AE81FF;">65</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>实现用户给定的变量 ch，进行实现小写转大写的转换：</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">        char</span><span style="color:#F8F8F2;"> ch </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;a&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        char</span><span style="color:#F8F8F2;"> upper_char </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">  (</span><span style="color:#66D9EF;font-style:italic;">char</span><span style="color:#F8F8F2;">) (ch </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 32</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 强制转换语法，功能是小写转大写</span></span>
<span class="line"><span style="color:#88846F;">//        (类型) 表达式</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(upper_char);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        char</span><span style="color:#F8F8F2;"> ch2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        char</span><span style="color:#F8F8F2;"> lower_char </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">  (</span><span style="color:#66D9EF;font-style:italic;">char</span><span style="color:#F8F8F2;">) (ch2 </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 32</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 强制转换语法，功能是大写转小写</span></span>
<span class="line"><span style="color:#88846F;">//        (类型) 表达式</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(lower_char);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-数值溢出" tabindex="-1"><a class="header-anchor" href="#_4-3-数值溢出"><span>4.3 数值溢出</span></a></h3><ul><li>数值计算一旦溢出，结果将失去其原有意义。比如，两个正数会加出负数。</li><li>要对能够处理的值有大概的估计「也就是要对我们要处理的值，有个期待。就算你拿 byte 去表示第几月都是可以的，最多就 12个月，byte 有 128 也是足够了（一个月第几号也是够的）当然，我们一般也是用 int 表示，后面有去深入理解的话，你用 byte 也不会省什么内存。」。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CalcValueLoss</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> intVal </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2000000000</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(intVal </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> intVal);</span></span>
<span class="line"><span style="color:#88846F;">        /*1 int = 4 byte</span></span>
<span class="line"><span style="color:#88846F;">        * 1 byte = 8 bit</span></span>
<span class="line"><span style="color:#88846F;">        * 2^31 = 4294967296</span></span>
<span class="line"><span style="color:#88846F;">        * In [6]: 2 ** 31 &gt; 2000000000 * 2</span></span>
<span class="line"><span style="color:#88846F;">          Out[6]: False</span></span>
<span class="line"><span style="color:#88846F;">        * int + int 得到的就是 int 无论你有没有溢出「int + long = long」</span></span>
<span class="line"><span style="color:#88846F;">        * */</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于，存款——你用 int 表示合不合适呢？</p><p>可能，就不是很合适了。有些人小目标很多，几百个小目标，就超出 int 表示的范围了。这个时候，你就要考虑，如果你做的事跟钱相关的东西的话，那你可以考虑用 long，或者用 double 。<strong>大家选择哪种数据类型的时候，要对它展示（存储）的数据要有一个大概的范围和预估。</strong></p><h2 id="_5-从数值计算溢出-理解程序员和编程语言责任的分界线" tabindex="-1"><a class="header-anchor" href="#_5-从数值计算溢出-理解程序员和编程语言责任的分界线"><span>5. 从数值计算溢出，理解程序员和编程语言责任的分界线</span></a></h2><h3 id="_5-1-编程语言的作用" tabindex="-1"><a class="header-anchor" href="#_5-1-编程语言的作用"><span>5.1 编程语言的作用</span></a></h3><ul><li>编程语言负责按照语法执行</li><li>编程语言负责和计算机交互</li></ul><h3 id="_5-2-程序员的任务" tabindex="-1"><a class="header-anchor" href="#_5-2-程序员的任务"><span>5.2 程序员的任务</span></a></h3><ul><li>程序员负责理解问题</li><li>程序员负责理解程序，并将问题转换为程序。「程序员是问题和程序的桥梁，编程语言是工具。」</li><li>编程语言不负责解决问题，程序员才负责解决问题</li></ul><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',22))])}const A=F(v,[["render",b],["__file","10.html.vue"]]),D=JSON.parse('{"path":"/Java/chapter01/10.html","title":"10-基本数据类型的更多语法点","lang":"zh-CN","frontmatter":{"title":"10-基本数据类型的更多语法点","date":"2023-01-09T08:46:29.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课"],"tag":["Java体系课"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"footer":"长期招收编程一对一学员！微信：Jiabcdefh, <a href=\\"https://beian.miit.gov.cn/\\" target=\\"_blank\\">闽ICP备19021486号-6</a>","feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"0. 目录","slug":"_0-目录","link":"#_0-目录","children":[]},{"level":2,"title":"1. 变量要先赋值后使用","slug":"_1-变量要先赋值后使用","link":"#_1-变量要先赋值后使用","children":[]},{"level":2,"title":"2. 计算并赋值运算符","slug":"_2-计算并赋值运算符","link":"#_2-计算并赋值运算符","children":[{"level":3,"title":"2.1 计算并赋值运算符","slug":"_2-1-计算并赋值运算符","link":"#_2-1-计算并赋值运算符","children":[]}]},{"level":2,"title":"3. 数据类型自动转换","slug":"_3-数据类型自动转换","link":"#_3-数据类型自动转换","children":[{"level":3,"title":"3.1 自动类型转换","slug":"_3-1-自动类型转换","link":"#_3-1-自动类型转换","children":[]},{"level":3,"title":"3.2 数值精度顺序：double>float>long>int>short>byte","slug":"_3-2-数值精度顺序-double-float-long-int-short-byte","link":"#_3-2-数值精度顺序-double-float-long-int-short-byte","children":[]},{"level":3,"title":"3.3 char 可以转换为 int","slug":"_3-3-char-可以转换为-int","link":"#_3-3-char-可以转换为-int","children":[]}]},{"level":2,"title":"4. 强制数据类型转换","slug":"_4-强制数据类型转换","link":"#_4-强制数据类型转换","children":[{"level":3,"title":"4.1 强制类型转换","slug":"_4-1-强制类型转换","link":"#_4-1-强制类型转换","children":[]},{"level":3,"title":"4.2 小试牛刀：大小写转换","slug":"_4-2-小试牛刀-大小写转换","link":"#_4-2-小试牛刀-大小写转换","children":[]},{"level":3,"title":"4.3 数值溢出","slug":"_4-3-数值溢出","link":"#_4-3-数值溢出","children":[]}]},{"level":2,"title":"5. 从数值计算溢出，理解程序员和编程语言责任的分界线","slug":"_5-从数值计算溢出-理解程序员和编程语言责任的分界线","link":"#_5-从数值计算溢出-理解程序员和编程语言责任的分界线","children":[{"level":3,"title":"5.1 编程语言的作用","slug":"_5-1-编程语言的作用","link":"#_5-1-编程语言的作用","children":[]},{"level":3,"title":"5.2 程序员的任务","slug":"_5-2-程序员的任务","link":"#_5-2-程序员的任务","children":[]}]}],"git":{"createdTime":1732028288000,"updatedTime":1732028288000,"contributors":[{"name":"AndersonHJB","username":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1,"url":"https://github.com/AndersonHJB"}]},"readingTime":{"minutes":6.53,"words":1959},"filePathRelative":"Java/chapter01/10.md","localizedDate":"2023年1月9日","copyright":{"author":"AI悦创"}}');export{A as comp,D as data};
