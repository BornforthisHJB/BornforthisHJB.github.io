import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,c as r,b as E,w as n,a as p,o as i,e as l,d as s}from"./app-CUkCTKa8.js";const F="/assets/image-20230630161016459-D0-NtsOI.png",y={},C=p(`<h2 id="_1-数字型「int、float」" tabindex="-1"><a class="header-anchor" href="#_1-数字型「int、float」"><span>1. 数字型「int、float」</span></a></h2><h3 id="_1-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_1-1-代码示例"><span>1.1 代码示例</span></a></h3><ol><li>整型</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">int_num </span><span style="color:#81A1C1;">=</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#D8DEE9FF;">t </span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">int_num</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">int_num</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">int num type is:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">直接检测数据类型，并输出:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">int_num</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#B48EAD;">1</span></span>
<span class="line"><span style="color:#88C0D0;">int</span><span style="color:#D8DEE9FF;"> num </span><span style="color:#88C0D0;">type</span><span style="color:#81A1C1;"> is</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">int</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">直接检测数据类型，并输出</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">int</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>浮点数</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">float_num </span><span style="color:#81A1C1;">=</span><span style="color:#B48EAD;"> 1.5</span></span>
<span class="line"><span style="color:#D8DEE9FF;">t </span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">float_num</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">float_num</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">float num type is:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">直接检测数据类型，并输出:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">float_num</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#B48EAD;">1.5</span></span>
<span class="line"><span style="color:#88C0D0;">float</span><span style="color:#D8DEE9FF;"> num </span><span style="color:#88C0D0;">type</span><span style="color:#81A1C1;"> is</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">float</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">直接检测数据类型，并输出</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">float</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-字符串「str」" tabindex="-1"><a class="header-anchor" href="#_2-字符串「str」"><span>2. 字符串「str」</span></a></h2><h3 id="_2-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_2-1-代码示例"><span>2.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">string </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Hello Bornforthis</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">t </span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">string</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">string</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">string type is:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">直接检测数据类型，并输出:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">string</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#D8DEE9FF;">Hello Bornforthis</span></span>
<span class="line"><span style="color:#D8DEE9FF;">string </span><span style="color:#88C0D0;">type</span><span style="color:#81A1C1;"> is</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">str</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">直接检测数据类型，并输出</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">str</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-字符串三大特性" tabindex="-1"><a class="header-anchor" href="#_2-2-字符串三大特性"><span>2.2 字符串三大特性</span></a></h3><ol><li>有序性 <ol><li>「从左到右，下标是从 0 开始」；</li><li>「从右到左，下标是从 -1 开始」；</li><li>引号里面出现的，都算一个下标；</li></ol></li><li>不可变性 <ol><li>字符串被创建出来之后，就不能被改变；</li><li>注意⚠️：我们说的不可变，是在<strong>代码运行</strong>的过程当中，不能有对字符串修改、添加、删除之类的操作；</li></ol></li><li>任意字符： <ol><li>键盘⌨️上可以输入的字符，都可以是字符串的元素；</li><li>字符放到字符串中，都将成为字符串类型。「也就是：里面的每一个元素都可以称为：子字符」；</li></ol></li></ol><h2 id="_3-列表「list」" tabindex="-1"><a class="header-anchor" href="#_3-列表「list」"><span>3. 列表「list」</span></a></h2><h3 id="_3-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_3-1-代码示例"><span>3.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">lst </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Hello Bornforthis</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> (</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">look</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">book</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">),</span><span style="color:#ECEFF4;"> [</span><span style="color:#B48EAD;">12</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">汉堡包</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">],</span><span style="color:#81A1C1;"> True</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> False</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#D8DEE9FF;">t </span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lst</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lst</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">lst type is:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">直接检测数据类型，并输出:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">lst</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">Hello Bornforthis</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> (</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">look</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">book</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">),</span><span style="color:#ECEFF4;"> [</span><span style="color:#B48EAD;">12</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">汉堡包</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">],</span><span style="color:#81A1C1;"> True</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> False</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#D8DEE9FF;">lst </span><span style="color:#88C0D0;">type</span><span style="color:#81A1C1;"> is</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">list</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">直接检测数据类型，并输出</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">list</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-列表的三大特性" tabindex="-1"><a class="header-anchor" href="#_3-2-列表的三大特性"><span>3.2 列表的三大特性</span></a></h3><ol><li>有序性 <ol><li>「从左到右，下标是从 0 开始」；</li><li>「从右到左，下标是从 -1 开始」；</li><li>列表里的每个元素算一个； <ol><li>比如：<code>lst = [&quot;aiyuechuang&quot;, 12]</code>；</li><li>上面👆lst 有两个元素，下标分别是： <ol><li><code>aiyuechuang</code> 是下标 0（从左到右），也是下标 -2（从右到左）；</li><li><code>12</code> 是下标 1（从左到右），也是下标 -1（从右到左）；</li></ol></li></ol></li></ol></li><li>可变性：在程序运行的过程当中，列表可以改变「添加、删除、修改」</li><li>任意数据类型：注意⚠️，这里所说的任意数据类型，指的是 Python 所拥有的数据类型；</li></ol><details class="hint-container details"><summary>Python 所拥有的数据类型「下面只包含基础类型」</summary><figure><img src="`+F+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><h2 id="_4-元组「tuple」" tabindex="-1"><a class="header-anchor" href="#_4-元组「tuple」"><span>4. 元组「tuple」</span></a></h2><h3 id="_4-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_4-1-代码示例"><span>4.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">tup </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> (</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> [</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">])</span></span>
<span class="line"><span style="color:#D8DEE9FF;">t </span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">tup</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">tup</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">tup type is:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">直接检测数据类型，并输出:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">tup</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> [</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">])</span></span>
<span class="line"><span style="color:#D8DEE9FF;">tup </span><span style="color:#88C0D0;">type</span><span style="color:#81A1C1;"> is</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">tuple</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">直接检测数据类型，并输出</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">tuple</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-元组的三大特性" tabindex="-1"><a class="header-anchor" href="#_4-2-元组的三大特性"><span>4.2 元组的三大特性</span></a></h3><ol><li><p>有序性</p><ol><li>「从左到右，下标是从 0 开始」；</li><li>「从右到左，下标是从 -1 开始」； <ol><li>元组里的每个元素算一个； <ol><li>比如：<code>tup = (&quot;aiyuechuang&quot;, 12)</code>；</li><li>上面👆tup 有两个元素，下标分别是： <ol><li><code>aiyuechuang</code> 是下标 0（从左到右），也是下标 -2（从右到左）；</li><li><code>12</code> 是下标 1（从左到右），也是下标 -1（从右到左）；</li></ol></li></ol></li></ol></li></ol></li><li><p>不可变性</p><ol><li>元组被创建出来之后，就不能被改变；</li><li>注意⚠️：我们说的不可变，是在代码运行的过程当中，不能有对元组修改、添加、删除之类的操作；</li></ol></li><li><p>任意数据类型：注意⚠️，这里所说的任意数据类型，指的是 Python 所拥有的数据类型；</p></li></ol><h2 id="_5-探究👀「列表-元组」" tabindex="-1"><a class="header-anchor" href="#_5-探究👀「列表-元组」"><span>5. 探究👀「列表 &amp; 元组」</span></a></h2><div class="hint-container info"><p class="hint-container-title">为什么🧐有列表后，还需要元组</p><p>列表和元组到底用哪一个呢？</p></div><ol><li>如果存储的数据或数量是可变的，比如社交平台上的一个日志功能，是统计一个用户在一周之内看了哪些用户的帖子——那么则用列表更合适。</li><li>如果存储的数据和数量不变，比如你有一个系统（软件），需要返回的是一个地点的经纬度，然后直接传给用户查看——那么肯定选用元组更合适。</li></ol><ul><li><p><strong>假设</strong></p><ul><li><p>假设1：现在有一个仓库，你要向仓库添加物品。仓库很大，现有的物品也很多，你不知道还有没有位置可以存放。此时我们是不是需要聘请一个仓库管理员，这样我们就可以直接问仓库管理员：里面还有哪个位置（是否有位置？）仓库管理员会告诉你，并且你可以直接把你的物品，添加进去。</p><p>问题来了，仓库管理员为什么知道仓库是否有位置？——因为仓库管理员会一直跟踪这个仓库的状态；</p></li><li><p>假设2：现在有一个原子弹的仓库，仓库创建之后，只能存放一个原子弹。那么，我们需要设立一个专门的人员跟踪：原子弹仓库的状态吗？——不需要，此时在聘请一个就显得浪费了。（不然，领导没油水了～hhhhh）</p></li></ul></li><li><p><strong>Why？</strong></p><ul><li>用户日志📔，是不是会一直变动（记录📝看了哪些帖子），我们是不是需要有一个类似仓库管理员的“人”，来跟踪并且知道：是否有位置（是否有空间/内存），还需要知道在哪里添加。——列表更合适，因为列表可变。「可变意味着：添加、删除、修改」 <ul><li>元组为什么不合适？——因为，你每当需要添加数据的时候，就得重新创建一个新的元组。（就类似于：你创建原子弹的仓库，肯定是刚刚好可以存放一个，那么你想存放两个的时候，只能重新再创建一个仓库。）</li></ul></li><li>经纬度会改变吗？显然是不会的，那么就不需要一个多余的“人”去跟踪状态。——用列表可以吗？可以！但是没必要。「因为我们不需要仓库管理员」用列表有点浪费资源了。元组的功能刚刚好够用。</li><li><strong><span style="color:orange;">我们讲究：不浪费，合适就好。</span></strong></li></ul></li></ul><h2 id="_6-字典「dict」" tabindex="-1"><a class="header-anchor" href="#_6-字典「dict」"><span>6. 字典「dict」</span></a></h2><h3 id="_6-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_6-1-代码示例"><span>6.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">d </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">name</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">age</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 18</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">int</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">tup</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> (</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">)}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">t </span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">d</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">d</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">d type is:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">直接检测数据类型，并输出:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">d</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">name</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">age</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 18</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">int</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">tup</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> (</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">)}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">d </span><span style="color:#88C0D0;">type</span><span style="color:#81A1C1;"> is</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">dict</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">直接检测数据类型，并输出</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">dict</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-字典的特性" tabindex="-1"><a class="header-anchor" href="#_6-2-字典的特性"><span>6.2 字典的特性</span></a></h3><ol><li>无序性「Python 3.6+ 之后有序」 <ol><li>先以无序理解即可；</li><li>有些前期基本用不到；</li></ol></li><li>字典的组成：是由一系列的 key 和 value 组成。<code>d = {&quot;key1&quot;: &quot;value1&quot;, &quot;key2&quot;: &quot;value2&quot;.....}</code></li><li>key： <ol><li>不可变的数据类型，才可以当作字典的 key；</li><li>比如：字符串、数字、布尔、元组；</li></ol></li><li>value：任意数据类型，Python 所拥有的数据类型；</li><li>可变性：可以添加、修改、删除键对值；</li></ol><h2 id="_7-集合「set」" tabindex="-1"><a class="header-anchor" href="#_7-集合「set」"><span>7. 集合「set」</span></a></h2><h3 id="_7-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_7-1-代码示例"><span>7.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">set1 </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">book</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> (</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">),</span><span style="color:#81A1C1;"> False</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">t </span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">set1 type is:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">直接检测数据类型，并输出:&gt;&gt;&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set1</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span><span style="color:#81A1C1;">False</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">book</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> (</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">)}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">set1 </span><span style="color:#88C0D0;">type</span><span style="color:#81A1C1;"> is</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">set</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">直接检测数据类型，并输出</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> &lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">set</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-集合的特性" tabindex="-1"><a class="header-anchor" href="#_7-2-集合的特性"><span>7.2 集合的特性</span></a></h3><ol><li>无序性：集合是没有顺序的，也就是：没有下标；</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">set1 </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">book</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> (</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">),</span><span style="color:#81A1C1;"> False</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span><span style="color:#81A1C1;">False</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1.1</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">book</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">aiyc</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> (</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">)}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果你运行集合很多次，或者其中某一次，集合顺序没有改变，我们也不能说集合是有序的。</p><p>Why？你掷骰子，500次都是 6 点，你能说掷骰子是确定性事件吗？——显然是不行的🙅。</p></div><ol start="2"><li>确定性： <ol><li>集合的每一个值都是确定的；「也就是需要不可变的数据类型」</li><li>比如：数字型、布尔、元组、字符串；</li><li>举个例子🌰：列表为什么不行？——列表可变，所以造成不确定性，故：不行🙅。</li></ol></li></ol>`,39),d=s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#2e3440ff",color:"#d8dee9ff"}},[s("pre",{class:"shiki nord vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"set1 "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#ECEFF4"}}," {"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#ECEFF4"}},' "'),s("span",{style:{color:"#A3BE8C"}},"aiyc"),s("span",{style:{color:"#ECEFF4"}},'"'),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 1.1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#ECEFF4"}},' "'),s("span",{style:{color:"#A3BE8C"}},"book"),s("span",{style:{color:"#ECEFF4"}},'"'),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#ECEFF4"}}," ("),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 3"),s("span",{style:{color:"#ECEFF4"}},"),"),s("span",{style:{color:"#81A1C1"}}," False"),s("span",{style:{color:"#ECEFF4"}},"}")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88C0D0"}},"print"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"set1"),s("span",{style:{color:"#ECEFF4"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#616E88"}},"# output")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ECEFF4"}},"{"),s("span",{style:{color:"#81A1C1"}},"False"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 1.1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#ECEFF4"}}," '"),s("span",{style:{color:"#A3BE8C"}},"book"),s("span",{style:{color:"#ECEFF4"}},"'"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#ECEFF4"}}," ("),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 3"),s("span",{style:{color:"#ECEFF4"}},"),"),s("span",{style:{color:"#ECEFF4"}}," '"),s("span",{style:{color:"#A3BE8C"}},"aiyc"),s("span",{style:{color:"#ECEFF4"}},"'"),s("span",{style:{color:"#ECEFF4"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),u=s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#2e3440ff",color:"#d8dee9ff"}},[s("pre",{class:"shiki nord vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"set1 "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#ECEFF4"}}," {"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#ECEFF4"}}," ["),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 3"),s("span",{style:{color:"#ECEFF4"}},"]}")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88C0D0"}},"print"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"set1"),s("span",{style:{color:"#ECEFF4"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#616E88"}},"# output")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88C0D0"}},"Traceback"),s("span",{style:{color:"#ECEFF4"}}," ("),s("span",{style:{color:"#D8DEE9FF"}},"most recent call last"),s("span",{style:{color:"#ECEFF4"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"  File "),s("span",{style:{color:"#ECEFF4"}},'"'),s("span",{style:{color:"#A3BE8C"}},"/Users/huangjiabao/GitHub/SourceCode/MacBookPro16-Code/PythonCoder/StudentCoder/53-xuguanchen/r.py"),s("span",{style:{color:"#ECEFF4"}},'"'),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#D8DEE9FF"}}," line "),s("span",{style:{color:"#B48EAD"}},"7"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#81A1C1"}}," in"),s("span",{style:{color:"#81A1C1"}}," <"),s("span",{style:{color:"#D8DEE9FF"}},"module"),s("span",{style:{color:"#81A1C1"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"    set1 "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#ECEFF4"}}," {"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#ECEFF4"}}," ["),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}}," 3"),s("span",{style:{color:"#ECEFF4"}},"]}")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#8FBCBB"}},"TypeError"),s("span",{style:{color:"#ECEFF4"}},":"),s("span",{style:{color:"#D8DEE9FF"}}," unhashable "),s("span",{style:{color:"#88C0D0"}},"type"),s("span",{style:{color:"#ECEFF4"}},":"),s("span",{style:{color:"#ECEFF4"}}," '"),s("span",{style:{color:"#A3BE8C"}},"list"),s("span",{style:{color:"#ECEFF4"}},"'")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),D=p(`<ol start="3"><li>互异性：出现重复的不会报错，会自动去掉重复的；</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">set1 </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>可变性：可以对集合添加、删除数据，但是不能修改输出。「注意⚠️：删除是无法指定下标删除的元素」</li></ol><h2 id="_8-布尔型「bool」" tabindex="-1"><a class="header-anchor" href="#_8-布尔型「bool」"><span>8. 布尔型「bool」</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">condition </span><span style="color:#81A1C1;">=</span><span style="color:#81A1C1;"> True</span><span style="color:#616E88;">  # False</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">condition</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#88C0D0;">type</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">condition</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;"># output</span></span>
<span class="line"><span style="color:#81A1C1;">True</span></span>
<span class="line"><span style="color:#81A1C1;">&lt;class</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">bool</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function v(h,A){const e=c("CodeTabs");return i(),r("div",null,[C,E(e,{id:"427",data:[{id:"不可变测试"},{id:"可变测试"}]},{title0:n(({value:a,isActive:o})=>[l("不可变测试")]),title1:n(({value:a,isActive:o})=>[l("可变测试")]),tab0:n(({value:a,isActive:o})=>[d]),tab1:n(({value:a,isActive:o})=>[u]),_:1}),D])}const b=t(y,[["render",v],["__file","02-Introduction-to-Data-Types.html.vue"]]),B=JSON.parse('{"path":"/Python/NoteBook/02-Introduction-to-Data-Types.html","title":"02-Introduction to Data Types","lang":"zh-CN","frontmatter":{"title":"02-Introduction to Data Types","icon":"yongyan","date":"2023-06-30T15:38:26.000Z","author":"AI悦创","isOriginal":true,"category":["Python notebook"],"tag":["Python 1v1"],"sticky":false,"star":false,"article":true,"timeline":true,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 数字型「int、float」","slug":"_1-数字型「int、float」","link":"#_1-数字型「int、float」","children":[{"level":3,"title":"1.1 代码示例","slug":"_1-1-代码示例","link":"#_1-1-代码示例","children":[]}]},{"level":2,"title":"2. 字符串「str」","slug":"_2-字符串「str」","link":"#_2-字符串「str」","children":[{"level":3,"title":"2.1 代码示例","slug":"_2-1-代码示例","link":"#_2-1-代码示例","children":[]},{"level":3,"title":"2.2 字符串三大特性","slug":"_2-2-字符串三大特性","link":"#_2-2-字符串三大特性","children":[]}]},{"level":2,"title":"3. 列表「list」","slug":"_3-列表「list」","link":"#_3-列表「list」","children":[{"level":3,"title":"3.1 代码示例","slug":"_3-1-代码示例","link":"#_3-1-代码示例","children":[]},{"level":3,"title":"3.2 列表的三大特性","slug":"_3-2-列表的三大特性","link":"#_3-2-列表的三大特性","children":[]}]},{"level":2,"title":"4. 元组「tuple」","slug":"_4-元组「tuple」","link":"#_4-元组「tuple」","children":[{"level":3,"title":"4.1 代码示例","slug":"_4-1-代码示例","link":"#_4-1-代码示例","children":[]},{"level":3,"title":"4.2 元组的三大特性","slug":"_4-2-元组的三大特性","link":"#_4-2-元组的三大特性","children":[]}]},{"level":2,"title":"5. 探究👀「列表 & 元组」","slug":"_5-探究👀「列表-元组」","link":"#_5-探究👀「列表-元组」","children":[]},{"level":2,"title":"6. 字典「dict」","slug":"_6-字典「dict」","link":"#_6-字典「dict」","children":[{"level":3,"title":"6.1 代码示例","slug":"_6-1-代码示例","link":"#_6-1-代码示例","children":[]},{"level":3,"title":"6.2 字典的特性","slug":"_6-2-字典的特性","link":"#_6-2-字典的特性","children":[]}]},{"level":2,"title":"7. 集合「set」","slug":"_7-集合「set」","link":"#_7-集合「set」","children":[{"level":3,"title":"7.1 代码示例","slug":"_7-1-代码示例","link":"#_7-1-代码示例","children":[]},{"level":3,"title":"7.2 集合的特性","slug":"_7-2-集合的特性","link":"#_7-2-集合的特性","children":[]}]},{"level":2,"title":"8. 布尔型「bool」","slug":"_8-布尔型「bool」","link":"#_8-布尔型「bool」","children":[]}],"git":{"createdTime":1705452888000,"updatedTime":1705452888000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":1}]},"readingTime":{"minutes":7.37,"words":2210},"filePathRelative":"Python/NoteBook/02-Introduction-to-Data-Types.md","localizedDate":"2023年6月30日","copyright":{"author":"AI悦创"}}');export{b as comp,B as data};
