const e=JSON.parse('{"key":"v-583cf3fb","path":"/Python/Python-core-technology-and-practice/Casual-essay/01-binary-tree.html","title":"二叉树基础","lang":"zh-CN","frontmatter":{"title":"二叉树基础","icon":"tree1","date":"2023-08-27T23:05:47.000Z","author":"AI悦创","isOriginal":true,"category":"Python 进阶","tag":["Python 进阶"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"1. 初识二叉树 你好，我是悦创。 二叉树是一个有限元素的集合，这个集合要么是空集，要么是由一个称为根的元素以及两个不相交的、分别称为左子树和右子树的二叉树组成。 让我们使用文本来表示一个二叉树。 考虑这样一个简单的二叉树： 这棵树的根是 1。; 1 的左子树是以 2 为根的二叉树，右子树是以 3 为根的二叉树。; 2 的左子节点是 4，右子节点是 5...","head":[["meta",{"property":"og:url","content":"https://bornforthis.cn/Python/Python-core-technology-and-practice/Casual-essay/01-binary-tree.html"}],["meta",{"property":"og:site_name","content":"AI悦创-Python一对一辅导"}],["meta",{"property":"og:title","content":"二叉树基础"}],["meta",{"property":"og:description","content":"1. 初识二叉树 你好，我是悦创。 二叉树是一个有限元素的集合，这个集合要么是空集，要么是由一个称为根的元素以及两个不相交的、分别称为左子树和右子树的二叉树组成。 让我们使用文本来表示一个二叉树。 考虑这样一个简单的二叉树： 这棵树的根是 1。; 1 的左子树是以 2 为根的二叉树，右子树是以 3 为根的二叉树。; 2 的左子节点是 4，右子节点是 5..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-14T06:57:54.000Z"}],["meta",{"property":"article:author","content":"AI悦创"}],["meta",{"property":"article:tag","content":"Python 进阶"}],["meta",{"property":"article:published_time","content":"2023-08-27T23:05:47.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-14T06:57:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-27T23:05:47.000Z\\",\\"dateModified\\":\\"2024-01-14T06:57:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AI悦创\\"}]}"]]},"headers":[{"level":2,"title":"1. 初识二叉树","slug":"_1-初识二叉树","link":"#_1-初识二叉树","children":[]},{"level":2,"title":"2. 探究前中后序遍历","slug":"_2-探究前中后序遍历","link":"#_2-探究前中后序遍历","children":[]},{"level":2,"title":"3. 二叉树的基本实现","slug":"_3-二叉树的基本实现","link":"#_3-二叉树的基本实现","children":[{"level":3,"title":"3.1 构建 Node 类","slug":"_3-1-构建-node-类","link":"#_3-1-构建-node-类","children":[]},{"level":3,"title":"3.2 创建 BinaryTree 类","slug":"_3-2-创建-binarytree-类","link":"#_3-2-创建-binarytree-类","children":[]},{"level":3,"title":"3.3 编写插入函数 insert","slug":"_3-3-编写插入函数-insert","link":"#_3-3-编写插入函数-insert","children":[]},{"level":3,"title":"3.4 编写递归插入子树 _insert_recursive","slug":"_3-4-编写递归插入子树-insert-recursive","link":"#_3-4-编写递归插入子树-insert-recursive","children":[]},{"level":3,"title":"3.5 编写可遍历的 inorder","slug":"_3-5-编写可遍历的-inorder","link":"#_3-5-编写可遍历的-inorder","children":[]},{"level":3,"title":"3.6 实现中序遍历 _inorder_recursive","slug":"_3-6-实现中序遍历-inorder-recursive","link":"#_3-6-实现中序遍历-inorder-recursive","children":[]},{"level":3,"title":"3.7 主程序","slug":"_3-7-主程序","link":"#_3-7-主程序","children":[]},{"level":3,"title":"3.8 完整代码","slug":"_3-8-完整代码","link":"#_3-8-完整代码","children":[]}]}],"git":{"createdTime":1705215474000,"updatedTime":1705215474000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":1}]},"readingTime":{"minutes":5.83,"words":1749},"filePathRelative":"Python/Python-core-technology-and-practice/Casual-essay/01-binary-tree.md","localizedDate":"2023年8月27日","copyright":{"author":"AI悦创"},"autoDesc":true}');export{e as data};
