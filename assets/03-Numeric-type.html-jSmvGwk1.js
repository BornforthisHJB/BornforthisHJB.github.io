import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as d,c as r,a as n,d as p,w as a,e as o,b as s}from"./app-zVID-zfX.js";const u="/assets/image-20230926104225427-f4M9iRSp.png",k="/assets/image-20240103212534170-ACS92xWg.png",m={},b=o('<h2 id="_1-数字型的特点" tabindex="-1"><a class="header-anchor" href="#_1-数字型的特点" aria-hidden="true">#</a> 1. 数字型的特点</h2><figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span>
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>

In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1.0</span>
Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span>
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span>

In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1.0</span>
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1</span>
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>

In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1.0</span>
Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>

In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1</span>
Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>

In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">9</span> <span class="token operator">/</span> <span class="token number">3</span>
Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">规律</p><ul><li><p>如果其中有一个浮点数，结果就会得到浮点数「优先级最高」</p></li><li><p>除法涉及精度问题，所以最后的结果类型：就是浮点数</p></li></ul></div><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_2-算术运算符" tabindex="-1"><a class="header-anchor" href="#_2-算术运算符" aria-hidden="true">#</a> 2. 算术运算符</h2><p><strong>算术运算符：</strong> 用于算术计算。</p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>+</code></td><td>加法运算符</td><td><code>1 + 1 = 2</code></td></tr><tr><td><code>-</code></td><td>减法运算符</td><td><code>2 - 1 = 1</code></td></tr><tr><td><code>*</code></td><td>乘法运算符</td><td><code>2 * 3 = 6</code></td></tr><tr><td><code>/</code></td><td>除法运算符</td><td><code>9 / 3 = 3.0</code></td></tr><tr><td><code>**</code></td><td>指数运算符</td><td><code>2 ** 3 = 8</code></td></tr><tr><td><code>%</code></td><td>取余运算符，计算余数</td><td><code>9 % 2 = 1</code></td></tr><tr><td><code>//</code></td><td>除法取整运算符，计算商并去除其小数部分</td><td><code>9 // 2 = 4</code></td></tr></tbody></table><blockquote><p>tips: 9 / 2 = 4......1</p></blockquote><h2 id="_3-小试牛刀-数字变换" tabindex="-1"><a class="header-anchor" href="#_3-小试牛刀-数字变换" aria-hidden="true">#</a> 3. 小试牛刀：数字变换</h2><p>假设你有一个两位的整数，我们需要通过以下规则产生两个新的数字：</p><ul><li>第一个新数字是原数字的两位数中的各个数字的和；</li><li>第二个新数字是原数字的反转（如原数字为 21，反转后的数字为 12）。</li></ul><p>请你编写 Python 代码，实现以上要求。</p><p><strong>输入：</strong></p><p>一个整数 <code>num</code> （10 ≤ num ≤ 99）</p><p><strong>输出：</strong></p><p>两个整数，或者一个错误信息字符串。</p><p><strong>示例：</strong></p><p>假设输入的数字 <code>num</code> 为 91，那么你的代码应当输出两个数字：10（9和1的和）和19（91的反转）。</p><p>假设输入的数字 <code>num</code> 为 26，那么你的代码应当输出两个数字：8（2和6的和）和62（26的反转）。</p><p>假设输入的数字 <code>num</code> 为 18，那么你的代码应当输出两个数字：9（1和8的和）和81（18的反转）。</p>',21),v={class:"hint-container details"},h=n("summary",null,"Solution",-1),_=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 给定输入数字"),s(`
num `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"91"),s("  "),n("span",{class:"token comment"},"# 示例输入，可以更改为其他两位数"),s(`

`),n("span",{class:"token comment"},"# 计算数字的十位和个位"),s(`
first_digit `),n("span",{class:"token operator"},"="),s(" num "),n("span",{class:"token operator"},"//"),s(),n("span",{class:"token number"},"10"),s("  "),n("span",{class:"token comment"},"# 使用整除运算符（//）获取十位数字"),s(`
second_digit `),n("span",{class:"token operator"},"="),s(" num "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"10"),s("  "),n("span",{class:"token comment"},"# 使用模运算符（%）获取个位数字"),s(`

`),n("span",{class:"token comment"},"# 计算两个数字的和"),s(`
sum_of_digits `),n("span",{class:"token operator"},"="),s(" first_digit "),n("span",{class:"token operator"},"+"),s(" second_digit  "),n("span",{class:"token comment"},"# 将十位和个位数字相加"),s(`

`),n("span",{class:"token comment"},"# 反转数字"),s(`
reversed_number `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("second_digit "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(" first_digit  "),n("span",{class:"token comment"},"# 将个位数字放到十位，十位数字放到个位来反转数字"),s(`

`),n("span",{class:"token comment"},"# 将计算结果保存在变量result中"),s(`
result `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("sum_of_digits"),n("span",{class:"token punctuation"},","),s(" reversed_number"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# 输出结果"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 给定输入数字"),s(`
num `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"91"),s("  "),n("span",{class:"token comment"},"# 示例输入，可以更改为其他两位数"),s(`

`),n("span",{class:"token comment"},"# 首先检查输入的数字是否为两位数（即是否在10到99之间）"),s(`
`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token number"},"10"),s(),n("span",{class:"token operator"},"<="),s(" num "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"99"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# 计算数字的十位和个位"),s(`
    first_digit `),n("span",{class:"token operator"},"="),s(" num "),n("span",{class:"token operator"},"//"),s(),n("span",{class:"token number"},"10"),s("  "),n("span",{class:"token comment"},"# 使用整除运算符（//）获取十位数字"),s(`
    second_digit `),n("span",{class:"token operator"},"="),s(" num "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"10"),s("  "),n("span",{class:"token comment"},"# 使用模运算符（%）获取个位数字"),s(`

    `),n("span",{class:"token comment"},"# 计算两个数字的和"),s(`
    sum_of_digits `),n("span",{class:"token operator"},"="),s(" first_digit "),n("span",{class:"token operator"},"+"),s(" second_digit  "),n("span",{class:"token comment"},"# 将十位和个位数字相加"),s(`

    `),n("span",{class:"token comment"},"# 反转数字"),s(`
    reversed_number `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("second_digit "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(" first_digit  "),n("span",{class:"token comment"},"# 将个位数字放到十位，十位数字放到个位来反转数字"),s(`

    `),n("span",{class:"token comment"},"# 将计算结果保存在变量result中"),s(`
    result `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("sum_of_digits"),n("span",{class:"token punctuation"},","),s(" reversed_number"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# 如果输入的数字不是两位数，返回错误信息"),s(`
    result `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Error: Input is not a two-digit number"'),s(`

`),n("span",{class:"token comment"},"# 输出结果"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=o('<h2 id="_4-比较运算符-比较值的大小" tabindex="-1"><a class="header-anchor" href="#_4-比较运算符-比较值的大小" aria-hidden="true">#</a> 4. 比较运算符：比较值的大小</h2><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>&gt;</code></td><td>判断第一个运算对象是否大于第二个运算对象</td><td><code>print(1 &gt; 2)</code></td></tr><tr><td><code>&lt;</code></td><td>判断第一个运算对象是否小于第二个运算对象</td><td><code>print(1 &lt; 2)</code></td></tr><tr><td><code>&gt;=</code></td><td>判断第一个运算对象是否大于或等于第二个运算对象</td><td><code>print(3 &gt;= 3)</code></td></tr><tr><td><code>&lt;=</code></td><td>判断第一个运算对象是否小于或等于第二个运算对象</td><td><code>print(3 &lt;= 4)</code></td></tr><tr><td><code>==</code></td><td>判断两个运算对象是否相同</td><td><code>print(2 == 2)</code></td></tr><tr><td><code>!=</code></td><td>判断两个运算对象是否不相同</td><td><code>print(2 != 1)</code></td></tr></tbody></table><blockquote><p>试一试上面的例子，看看会输出上面结果？</p></blockquote>',3),f=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),s(),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# ---output---"),s(`
`),n("span",{class:"token boolean"},"False"),s(`
`),n("span",{class:"token boolean"},"True"),s(`
`),n("span",{class:"token boolean"},"True"),s(`
`),n("span",{class:"token boolean"},"True"),s(`
`),n("span",{class:"token boolean"},"True"),s(`
`),n("span",{class:"token boolean"},"True"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=o('<h2 id="_5-赋值运算符" tabindex="-1"><a class="header-anchor" href="#_5-赋值运算符" aria-hidden="true">#</a> 5. 赋值运算符</h2><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>=</code></td><td>把右侧的运算对象赋值给左侧的运算对象</td><td><code>a = 1</code></td></tr><tr><td><code>+=</code></td><td><code>a += b</code> 等同于 <code>a = a + b</code></td><td><code>a += 10</code></td></tr><tr><td><code>-=</code></td><td><code>a -= b</code> 等同于 <code>a = a - b</code></td><td><code>a -= 10</code></td></tr><tr><td><code>*=</code></td><td><code>a *= b</code> 等同于 <code>a = a * b</code></td><td><code>a *= 10</code></td></tr><tr><td><code>/=</code></td><td><code>a /= b</code> 等同于 <code>a = a / b</code></td><td><code>a /= 10</code></td></tr><tr><td><code>**=</code></td><td><code>a **= b</code> 等同于 <code>a = a ** b</code></td><td><code>a **= 10</code></td></tr><tr><td><code>//=</code></td><td><code>a //= b</code> 等同于 <code>a = a // b</code></td><td><code>a //= 10</code></td></tr></tbody></table>',2),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 赋值运算符形式"),s(`
a `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
a `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"10"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 输出 11"),s(`

`),n("span",{class:"token comment"},"# 常规形式"),s(`
a `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
a `),n("span",{class:"token operator"},"="),s(" a "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"10"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 输出 11"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
a `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"10"),s(`
a `),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"10"),s(`
a `),n("span",{class:"token operator"},"*="),s(),n("span",{class:"token number"},"10"),s(`
a `),n("span",{class:"token operator"},"/="),s(),n("span",{class:"token number"},"10"),s(`
a `),n("span",{class:"token operator"},"**="),s(),n("span",{class:"token number"},"10"),s(`
a `),n("span",{class:"token operator"},"//="),s(),n("span",{class:"token number"},"10"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 输出 0.0"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=o(`<h2 id="_6-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_6-小试牛刀" aria-hidden="true">#</a> 6. 小试牛刀</h2><p>下面程序输出上面结果？</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">4.5</span>
y <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x <span class="token operator">//</span> y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 2.0</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 2</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 2.25</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 0.25</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 0.5</label></li></ul><h2 id="_7-练习" tabindex="-1"><a class="header-anchor" href="#_7-练习" aria-hidden="true">#</a> 7. 练习</h2><h3 id="_7-1-选择题" tabindex="-1"><a class="header-anchor" href="#_7-1-选择题" aria-hidden="true">#</a> 7.1 选择题</h3><ol><li><p>在 Python 中，执行 <code>3.5 + 4</code> 的结果是什么类型？</p><p>A. 整数</p><p>B. 浮点数</p><p>C. 字符串</p><p>D. 布尔值</p></li><li><p>以下哪个运算符用于取余？</p><p>A. <code>+</code></p><p>B. <code>-</code></p><p>C. <code>*</code></p><p>D. <code>%</code></p></li><li><p>在 Python 中，执行 <code>9 // 2</code> 的结果是多少？</p><p>A. 4.5</p><p>B. 4</p><p>C. 5</p><p>D. 4.0</p></li><li><p><code>1.0 == 1</code> 在 Python 中的结果是什么？</p><p>A. True</p><p>B. False</p><p>C. 报错</p><p>D. 无法确定</p></li><li><p><code>2 + 3 * 4</code> 的结果是多少？</p><p>A. 20</p><p>B. 14</p><p>C. 24</p><p>D. 12</p></li><li><p>在 Python 中，<code>10 / 3</code> 的结果是什么？</p><p>A. 3</p><p>B. 3.3333</p><p>C. 4</p><p>D. 3.3</p></li><li><p>执行 <code>7 // 2</code> 的结果是多少？</p><p>A. 3</p><p>B. 3.5</p><p>C. 4</p><p>D. 2</p></li><li><p>在 Python 中，以下哪个操作会返回浮点数？</p><p>A. <code>2 * 3</code></p><p>B. <code>4 + 2</code></p><p>C. <code>9 / 2</code></p><p>D. <code>5 // 2</code></p></li><li><p><code>4 ** 0.5</code> 的结果是多少？</p><p>A. 2</p><p>B. 4</p><p>C. 16</p><p>D. 0.5</p><p>E. 2.0</p></li><li><p>执行 <code>3 &gt;= 3</code> 的结果是什么？</p><p>A. True</p><p>B. False</p><p>C. 报错</p><p>D. 无法确定</p></li><li><p>执行 <code>4 != 4</code> 的结果是什么？</p><p>A. True</p><p>B. False</p><p>C. 报错</p><p>D. 无法确定</p></li><li><p>在 Python 中，<code>5 + 2 * 3</code> 的结果是什么？</p><p>A. 21</p><p>B. 11</p><p>C. 14</p><p>D. 7</p></li><li><p>执行 <code>6 / 2</code> 的结果是什么类型？</p><p>A. 整数</p><p>B. 浮点数</p><p>C. 字符串</p><p>D. 布尔值</p></li></ol><h3 id="_7-2-填空" tabindex="-1"><a class="header-anchor" href="#_7-2-填空" aria-hidden="true">#</a> 7.2 填空</h3><ol><li>在 Python 中，执行 <code>2 ** 3</code> 的结果是 <code>______</code>。</li><li>执行表达式 <code>9 % 4</code> 会得到 <code>______</code> 作为结果。</li><li>如果 <code>a = 5</code>，那么执行 <code>a *= 2</code> 之后，<code>a</code> 的值是 <code>______</code>。</li><li>在 Python 中，<code>3 == 2.9999</code> 的结果是 <code>______</code>。</li><li>执行 <code>5 &lt;= 5</code> 的结果是 <code>______</code>。</li><li>如果 <code>b = 3</code>，执行 <code>b /= 2</code> 后，<code>b</code> 的值是 <code>______</code>。</li><li>执行 <code>4 % 3</code> 的结果是 <code>______</code>。</li><li>如果 <code>c = 10</code>，执行 <code>c //= 3</code> 后，<code>c</code> 的值是 <code>______</code>。</li><li>在 Python 中，<code>7 == 7.0</code> 的结果是 <code>______</code>。</li><li>执行 <code>8 / 2</code> 的结果是 <code>______</code>。</li></ol><h3 id="_7-3-编程题" tabindex="-1"><a class="header-anchor" href="#_7-3-编程题" aria-hidden="true">#</a> 7.3 编程题</h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>测试部分代码，没有任何输出没有报错，则视为作答正确。</p><p>但是要编写符合题目要求的输出。</p></div><h4 id="_7-3-1-数字和与差" tabindex="-1"><a class="header-anchor" href="#_7-3-1-数字和与差" aria-hidden="true">#</a> 7.3.1 数字和与差：</h4><p>编写一段 Python 代码，创建两个数字 <code>a</code> 和 <code>b</code>，计算并打印出它们的和以及 <code>a</code> 减去 <code>b</code> 的结果。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>


<span class="token comment"># 测试</span>
<span class="token keyword">assert</span> sum_result <span class="token operator">==</span> a <span class="token operator">+</span> b
<span class="token keyword">assert</span> difference <span class="token operator">==</span> a <span class="token operator">-</span> b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Sum<span class="token punctuation">:</span> <span class="token number">8</span>
Difference<span class="token punctuation">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-3-2-数字的乘法和除法" tabindex="-1"><a class="header-anchor" href="#_7-3-2-数字的乘法和除法" aria-hidden="true">#</a> 7.3.2 数字的乘法和除法</h4><p>编写一段 Python 代码，创建两个数字 <code>x</code> 和 <code>y</code>，计算并打印出它们的乘积和除法结果。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>


<span class="token comment"># 测试</span>
<span class="token keyword">assert</span> product <span class="token operator">==</span> x <span class="token operator">*</span> y
<span class="token keyword">assert</span> division <span class="token operator">==</span> x <span class="token operator">/</span> y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Product<span class="token punctuation">:</span> <span class="token number">12</span>
Division<span class="token punctuation">:</span> <span class="token number">3.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-3-3-求余和幂运算" tabindex="-1"><a class="header-anchor" href="#_7-3-3-求余和幂运算" aria-hidden="true">#</a> 7.3.3 求余和幂运算</h4><p>编写一段 Python 代码，创建两个数字 <code>m</code> 和 <code>n</code>，计算并打印出 <code>m</code> 对 <code>n</code> 取余的结果和 <code>m</code> 的 <code>n</code> 次幂。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>


<span class="token comment"># 测试</span>
<span class="token keyword">assert</span> remainder <span class="token operator">==</span> m <span class="token operator">%</span> n
<span class="token keyword">assert</span> power <span class="token operator">==</span> m <span class="token operator">**</span> n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Remainder<span class="token punctuation">:</span> <span class="token number">1</span>
Power<span class="token punctuation">:</span> <span class="token number">81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-3-4-比较运算" tabindex="-1"><a class="header-anchor" href="#_7-3-4-比较运算" aria-hidden="true">#</a> 7.3.4 比较运算</h4><p>编写一段 Python 代码，输入两个数字 <code>p</code> 和 <code>q</code>，比较它们的大小并打印出相应的比较结果（大于、小于、等于）。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>

<span class="token keyword">if</span> ______<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p<span class="token punctuation">}</span></span><span class="token string"> is greater than </span><span class="token interpolation"><span class="token punctuation">{</span>q<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> p <span class="token operator">&gt;</span> q
<span class="token keyword">elif</span> ______<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p<span class="token punctuation">}</span></span><span class="token string"> is less than </span><span class="token interpolation"><span class="token punctuation">{</span>q<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> p <span class="token operator">&lt;</span> q
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p<span class="token punctuation">}</span></span><span class="token string"> is equal to </span><span class="token interpolation"><span class="token punctuation">{</span>q<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> p <span class="token operator">==</span> q

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">4</span> <span class="token keyword">is</span> less than <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,35);function q(B,P){const c=i("CodeTabs");return d(),r("div",null,[b,n("details",v,[h,p(c,{id:"175",data:[{id:"Code1"},{id:"Code2"}]},{title0:a(({value:e,isActive:t})=>[s("Code1")]),title1:a(({value:e,isActive:t})=>[s("Code2")]),tab0:a(({value:e,isActive:t})=>[_]),tab1:a(({value:e,isActive:t})=>[g]),_:1})]),y,p(c,{id:"275",data:[{id:"代码示例"}]},{title0:a(({value:e,isActive:t})=>[s("代码示例")]),tab0:a(({value:e,isActive:t})=>[f]),_:1}),x,p(c,{id:"377",data:[{id:"代码示例"},{id:"例子🌰"}]},{title0:a(({value:e,isActive:t})=>[s("代码示例")]),title1:a(({value:e,isActive:t})=>[s("例子🌰")]),tab0:a(({value:e,isActive:t})=>[w]),tab1:a(({value:e,isActive:t})=>[A]),_:1}),C])}const I=l(m,[["render",q],["__file","03-Numeric-type.html.vue"]]);export{I as default};
