import{_ as s}from"./gzh.1edf1a02.js";import{_ as t}from"./zsxq.e43ad827.js";import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as p,a as e,d as a,b as d,e as l,r as i}from"./app.f3ea0e93.js";const m={},r=l(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>网页包含了大量的文字，浏览器必须知道这些文字的编码方法，才能把文字还原出来。</p><p>一般情况下，服务器向浏览器发送 HTML 网页文件时，会通过 HTTP 头信息，声明网页的编码方式。</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">text/html; charset=UTF-8</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面代码中，HTTP 头信息的<code>Content-Type</code>字段先声明，服务器发送的数据类型是<code>text/html</code>（即 HTML 网页），然后声明网页的文字编码是<code>UTF-8</code>。</p><p>网页内部也会再用<code>&lt;meta&gt;</code>标签，再次声明网页的编码。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="字符的数字表示法" tabindex="-1"><a class="header-anchor" href="#字符的数字表示法" aria-hidden="true">#</a> 字符的数字表示法</h2><p>网页可以使用不同语言的编码方式，但是最常用的编码是 UTF-8。UTF-8 编码是 Unicode 字符集的一种表达方式。这个字符集的设计目标是包含世界上的所有字符，目前已经收入了十多万个字符。</p><p>每个字符有一个 Unicode 号码，称为码点（code point）。如果知道码点，就能查到这是什么字符。举例来说，英文字母<code>a</code>的码点是十进制的<code>97</code>（十六进制的<code>61</code>），汉字“中”的码点是十进制的<code>20013</code>（十六进制的<code>4e2d</code>）。</p><p>由于下面的原因，不是每一个 Unicode 字符都能直接在 HTML 语言里面显示。</p><p>（1）不是每个 Unicode 字符都可以打印出来，有些没有可打印形式，比如换行符的码点是十进制的<code>10</code>（十六进制的<code>A</code>），就没有对应的字面形式。</p><p>（2）小于号（<code>&lt;</code>）和大于号（<code>&gt;</code>）用来定义 HTML 标签，其他需要用到这两个符号的场合，必须防止它们被解释成标签。</p><p>（3）由于 Unicode 字符太多，无法找到一种输入法，可以直接输入所有这些字符。换言之，没有一种键盘，有办法输入所有符号。</p><p>（4）网页不允许混合使用多种编码，如果使用 UTF-8 编码的同时，又想插入其他编码的字符，就会很困难。</p><p>HTML 为了解决上面这些问题，允许使用 Unicode 码点表示字符，浏览器会自动将码点转成对应的字符。</p><p>字符的码点表示法是<code>&amp;#N;</code>（十进制，<code>N</code>代表码点）或者<code>&amp;#xN;</code>（十六进制，<code>N</code>代表码点），比如，字符<code>a</code>可以写成<code>&amp;#97;</code>（十进制）或者<code>&amp;#x61;</code>（十六进制），字符<code>中</code>可以写成<code>&amp;#20013;</code>（十进制）或者<code>&amp;#x4e2d;</code>（十六进制），浏览器会自动转换它们。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 等同于 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token entity" title="h">&amp;#104;</span><span class="token entity" title="e">&amp;#101;</span><span class="token entity" title="l">&amp;#108;</span><span class="token entity" title="l">&amp;#108;</span><span class="token entity" title="o">&amp;#111;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 等同于 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token entity" title="h">&amp;#x68;</span><span class="token entity" title="e">&amp;#x65;</span><span class="token entity" title="l">&amp;#x6c;</span><span class="token entity" title="l">&amp;#x6c;</span><span class="token entity" title="o">&amp;#x6f;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，字符可以直接表示，也可以使用十进制码点或十六进制码点表示。</p><p>注意，HTML 标签本身不能使用码点表示，否则浏览器会认为这是所要显示的文本内容，而不是标签。比如，<code>&lt;p&gt;</code>一旦写成<code>&lt;&amp;#112;&gt;</code>或者<code>&amp;#60;&amp;#112;&amp;#62;</code>，浏览器就不再认为这是标签了，而会当作文本内容将其显示为<code>&lt;p&gt;</code>。</p><h2 id="字符的实体表示法" tabindex="-1"><a class="header-anchor" href="#字符的实体表示法" aria-hidden="true">#</a> 字符的实体表示法</h2><p>数字表示法的不方便之处，在于必须知道每个字符的码点，很难记忆。为了能够快速输入，HTML 为一些特殊字符，规定了容易记忆的名字，允许通过名字来表示它们，这称为实体表示法（entity）。</p><p>实体的写法是<code>&amp;name;</code>，其中的<code>name</code>是字符的名字。下面是其中一些特殊字符，及其对应的实体。</p><ul><li><code>&lt;</code>：<code>&amp;lt;</code></li><li><code>&gt;</code>：<code>&amp;gt;</code></li><li><code>&quot;</code>：<code>&amp;quot;</code></li><li><code>&#39;</code>：<code>&amp;apos;</code></li><li><code>&amp;</code>：<code>&amp;amp;</code></li><li><code>©</code>：<code>&amp;copy;</code></li><li><code>#</code>：<code>&amp;num;</code></li><li><code>§</code>：<code>&amp;sect;</code></li><li><code>¥</code>：<code>&amp;yen;</code></li><li><code>$</code>：<code>&amp;dollar;</code></li><li><code>£</code>：<code>&amp;pound;</code></li><li><code>¢</code>：<code>&amp;cent;</code></li><li><code>%</code>：<code>&amp;percnt;</code></li><li><code>*</code>：<code>$ast;</code></li><li><code>@</code>：<code>&amp;commat;</code></li><li><code>^</code>：<code>&amp;Hat;</code></li><li><code>±</code>：<code>&amp;plusmn;</code></li><li>空格：<code>&amp;nbsp;</code></li></ul><p>注意，上面最后一个特殊字符是空格，它也有对应的实体表示法。</p><p>字符的数字表示法和实体表示法，都可以表示正常情况无法输入的字符，逃脱了浏览器的限制，所以英语里面称为“escape”，中文翻译为“字符的转义”。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="`+s+'" alt="" loading="lazy"></p></details>',28),u={class:"custom-container info"},h=e("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),k=e("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发，Web，Linux」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),g=e("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),_={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},v=e("p",null,"方法二：微信：Jiabcdefh",-1),b=e("p",null,[e("img",{src:t,alt:"",loading:"lazy"})],-1);function x(y,f){const n=i("ExternalLinkIcon");return c(),p("div",null,[r,e("div",u,[h,k,g,e("p",null,[a("方法一："),e("a",_,[a("QQ"),d(n)])]),v]),b])}const q=o(m,[["render",x],["__file","encode.html.vue"]]);export{q as default};
