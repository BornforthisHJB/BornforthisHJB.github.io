import{_ as e}from"./gzh.b03adfd2.js";import{_ as t}from"./zsxq.77f6dc86.js";import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as i,a as n,d as s,b as l,e as c,r}from"./app.e5c8e1d9.js";const u="/assets/image-20221031161310234.638ab2cf.png",d="/assets/image-20221031161256042.92c8f7ae.png",k={},h=c(`<h2 id="question1" tabindex="-1"><a class="header-anchor" href="#question1" aria-hidden="true">#</a> Question1</h2><p>Construct a <strong>single</strong> Python expression which evaluates to the following values, and incorporates the specified operations in each case (executed in any order).</p><blockquote><p>\u6784\u9020\u4E00\u4E2A Python \u8868\u8FBE\u5F0F\uFF0C\u6C42\u503C\u4E3A\u4EE5\u4E0B\u503C\uFF0C\u5E76\u5728\u6BCF\u79CD\u60C5\u51B5\u4E0B\u5408\u5E76\u6307\u5B9A\u7684\u64CD\u4F5C(\u4EE5\u4EFB\u4F55\u987A\u5E8F\u6267\u884C)\u3002</p></blockquote><p><strong>(a) Output value: &#39;grin&#39;</strong></p><p>Required operations:</p><blockquote><p>\u8981\u6C42\u64CD\u4F5C:</p></blockquote><ol><li>string slicing</li></ol><blockquote><p>\u5B57\u7B26\u4E32\u5206\u5272</p></blockquote><ol start="2"><li>string indexing</li></ol><blockquote><p>\u5B57\u7B26\u4E32\u7D22\u5F15</p></blockquote><p><strong>(b) Output value: True</strong></p><p>Required operations:</p><ol><li><p>range() function</p></li><li><p>in</p></li></ol><p><strong>(c) Output value: 2</strong></p><p>Required operations:</p><ol><li><p>(float) division</p></li><li><p>integer division</p></li></ol><p><strong>(d) Output value: 0</strong></p><p>Required operations:</p><ol><li>dictionary lookup</li></ol><blockquote><p>\u5B57\u5178\u67E5\u627E</p></blockquote><ol start="2"><li><p>.pop() method</p></li><li><p>list indexing</p></li></ol><p><strong>(e) Output value: &#39;ace&#39;</strong></p><p>Required operations:</p><ol><li><p>items method</p></li><li><p>list indexing</p></li><li><p>tuple indexing</p></li></ol><h2 id="question-2" tabindex="-1"><a class="header-anchor" href="#question-2" aria-hidden="true">#</a> Question 2</h2><p>The following function is intended to calculate the similarity between two names by calculating what proportion of &quot;n-grams&quot; (substrings of n characters) from the first name can be found in the second name, and averaging across the resulting values for each value of n from 2 up to maxn (by default, 3). If the first name has fewer characters than any tested value of n, the function should return 0.0.</p><blockquote><p>\u4E0B\u9762\u7684\u51FD\u6570\u65E8\u5728\u8BA1\u7B97\u4E24\u4E2A\u540D\u79F0\u4E4B\u95F4\u7684\u76F8\u4F3C\u5EA6\uFF0C\u65B9\u6CD5\u662F\u8BA1\u7B97\u7B2C\u4E00\u4E2A\u540D\u79F0\u7684\u201Cn-grams\u201D(n\u4E2A\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32)\u5728\u7B2C\u4E8C\u4E2A\u540D\u79F0\u4E2D\u6240\u5360\u7684\u6BD4\u4F8B\uFF0C\u5E76\u5BF9n\u4ECE2\u5230maxn(\u9ED8\u8BA4\u4E3A3)\u7684\u6BCF\u4E2A\u503C\u7684\u7ED3\u679C\u503C\u8FDB\u884C\u5E73\u5747\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u540D\u79F0\u7684\u5B57\u7B26\u6570\u5C11\u4E8En\u7684\u4EFB\u4F55\u6D4B\u8BD5\u503C\uFF0C\u51FD\u6570\u5E94\u8BE5\u8FD4\u56DE0.0\u3002</p></blockquote><p>Example function calls are:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;toto&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;totoro&#39;</span><span class="token punctuation">)</span>
<span class="token number">1.0</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;tim&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;totoro&#39;</span><span class="token punctuation">)</span>
<span class="token number">0.0</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;totoro&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;toto&#39;</span><span class="token punctuation">)</span>
<span class="token number">0.55</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;totoro&#39;</span><span class="token punctuation">)</span>
<span class="token number">0.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All the required lines of the function are available, out of order, in the editor panel. Drag each line across to the solution area to the right, put them in the correct order, and introduce appropriate indentation. Note that ALL lines must be used in your solution.</p><blockquote><p>\u5728\u7F16\u8F91\u5668\u9762\u677F\u4E2D\uFF0C\u51FD\u6570\u6240\u9700\u7684\u6240\u6709\u884C\u90FD\u662F\u53EF\u7528\u7684\uFF0C\u4F46\u987A\u5E8F\u4E0D\u540C\u3002\u5C06\u6BCF\u4E00\u884C\u62D6\u5230\u89E3\u51B3\u65B9\u6848\u533A\u57DF\u7684\u53F3\u4FA7\uFF0C\u5C06\u5B83\u4EEC\u6309\u6B63\u786E\u7684\u987A\u5E8F\u6392\u5217\uFF0C\u5E76\u5F15\u5165\u9002\u5F53\u7684\u7F29\u8FDB\u3002\u6CE8\u610F\uFF0C\u89E3\u51B3\u65B9\u6848\u4E2D\u5FC5\u987B\u4F7F\u7528ALL\u884C\u3002</p></blockquote><p><img src="`+u+'" alt="image-20221031161310234" loading="lazy"></p><p><img src="'+d+`" alt="image-20221031161256042" loading="lazy"></p><h2 id="question3" tabindex="-1"><a class="header-anchor" href="#question3" aria-hidden="true">#</a> Question3</h2><p>\u53D8\u6210 while loop</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>SUIT <span class="token operator">=</span> <span class="token number">1</span>
BLACK <span class="token operator">=</span> <span class="token number">0</span>
RED <span class="token operator">=</span> <span class="token number">1</span>

SUIT_COLOURS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">,</span>
                <span class="token string">&#39;H&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">same_colour</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            colour <span class="token operator">=</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span>
        <span class="token keyword">elif</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span> colour<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="question-4" tabindex="-1"><a class="header-anchor" href="#question-4" aria-hidden="true">#</a> Question 4</h2><p>Sandy has enrolled in a Bachelor of Magical Arts. In order to graduate, they must complete the subject WIZ90001 Advanced Wizardry. However, this subject has a number of prerequisites, each of which must be completed before they can take WIZ90001. Each of those subjects in turn may have its own prerequisites, and so on.</p><blockquote><p>\u6851\u8FEA\u5DF2\u7ECF\u6CE8\u518C\u4E86\u9B54\u6CD5\u827A\u672F\u5B66\u58EB\u5B66\u4F4D\u3002\u4E3A\u4E86\u6BD5\u4E1A\uFF0C\u4ED6\u4EEC\u5FC5\u987B\u5B8C\u6210 WIZ90001 \u9AD8\u7EA7\u9B54\u6CD5\u8BFE\u7A0B\u3002\u4F46\u662F\uFF0C\u672C\u4E3B\u9898\u6709\u8BB8\u591A\u5148\u51B3\u6761\u4EF6\uFF0C\u5728\u5B66\u4E60WIZ90001\u4E4B\u524D\u5FC5\u987B\u5B8C\u6210\u6BCF\u4E00\u4E2A\u5148\u51B3\u6761\u4EF6\u3002\u8FD9\u4E9B\u5B66\u79D1\u4E2D\u7684\u6BCF\u4E00\u95E8\u90FD\u53EF\u80FD\u6709\u81EA\u5DF1\u7684\u5148\u51B3\u6761\u4EF6\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</p></blockquote><p>Given a particular list of prerequisite requirements, the function <code>wiz_study_length(prereq_list, final=&#39;WIZ90001&#39;)</code> is intended to calculate the minimum number of semesters it will take Sandy to graduate. The arguments are:</p><blockquote><p>\u7ED9\u5B9A\u4E00\u4E2A\u7279\u5B9A\u7684\u5148\u51B3\u6761\u4EF6\u8981\u6C42\u5217\u8868\uFF0C\u51FD\u6570 <code>wiz_study_length(prereq_list, final=&#39;WIZ90001&#39;)</code> \u7528\u4E8E\u8BA1\u7B97 Sandy \u6BD5\u4E1A\u6240\u9700\u7684\u6700\u5C0F\u5B66\u671F\u6570\u3002\u7684\u53C2\u6570\u662F:</p></blockquote><ul><li><code>prereq_list</code> , a list of <code>(subject, prerequisite)</code> tuples specifying that prerequisite must be completed before enrolling in subject. Note that a subject may have more than one prerequisite.</li></ul><blockquote><p>Prereq_list\uFF0C\u4E00\u4E2A(subject\uFF0Cprerequisite)\u5143\u7EC4\u5217\u8868\uFF0C\u6307\u5B9A\u5728\u6CE8\u518C subject \u4E4B\u524D\u5FC5\u987B\u5B8C\u6210\u5148\u51B3\u6761\u4EF6\u3002\u6CE8\u610F\uFF0C\u4E00\u4E2A\u4E3B\u9898\u53EF\u80FD\u6709\u591A\u4E2A\u5148\u51B3\u6761\u4EF6\u3002</p></blockquote><ul><li>final, the target subject to complete, with a default value of &#39;WIZ90001&#39;.</li></ul><blockquote><p>final \u662F\u8981\u5B8C\u6210\u7684\u76EE\u6807\u4E3B\u9898\uFF0C\u9ED8\u8BA4\u503C\u4E3A&#39;WIZ90001&#39;\u3002</p></blockquote><p>Any subject that appears as a prerequisite in a prereq_list tuple but does not appear as a subject can be assumed to have no prerequisites. Furthermore, we assume that Sandy has capacity to take as many subjects as required each semester, as long as they have completed their prerequisites.</p><blockquote><p>\u5728 prereq_list \u5143\u7EC4\u4E2D\u4F5C\u4E3A\u5148\u51B3\u6761\u4EF6\u51FA\u73B0\u4F46\u4E0D\u4F5C\u4E3A\u4E3B\u9898\u51FA\u73B0\u7684\u4EFB\u4F55\u4E3B\u9898\u90FD\u53EF\u4EE5\u5047\u5B9A\u4E3A\u6CA1\u6709\u5148\u51B3\u6761\u4EF6\u3002\u6B64\u5916\uFF0C\u6211\u4EEC\u5047\u8BBESandy\u6709\u80FD\u529B\u6BCF\u5B66\u671F\u9009\u4FEE\u8981\u6C42\u7684\u8BFE\u7A0B\uFF0C\u53EA\u8981\u4ED6\u4EEC\u5B8C\u6210\u4E86\u4ED6\u4EEC\u7684\u5148\u51B3\u6761\u4EF6\u3002</p></blockquote><p>For example:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> wiz_study_length<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ40027&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ20003&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Here, both WIZ40027 and WIZ20003 are prerequisites of WIZ90001, and so must be completed before studying WIZ90001. Neither of these two subjects have any prerequisites. Therefore it will take two semesters of study for Sandy to graduate</p><blockquote><p>\u5728\u8FD9\u91CC\uFF0CWIZ40027 \u548C WIZ20003 \u90FD\u662F WIZ90001 \u7684\u5148\u51B3\u6761\u4EF6\uFF0C\u56E0\u6B64\u5728\u5B66\u4E60 WIZ90001 \u4E4B\u524D\u5FC5\u987B\u5B8C\u6210\u3002\u8FD9\u4E24\u4E2A\u79D1\u76EE\u90FD\u6CA1\u6709\u4EFB\u4F55\u5148\u51B3\u6761\u4EF6\u3002\u56E0\u6B64\uFF0C\u6851\u8FEA\u9700\u8981\u4E24\u4E2A\u5B66\u671F\u7684\u5B66\u4E60\u624D\u80FD\u6BD5\u4E1A</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> wiz_study_length<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ40027&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ20003&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                      <span class="token punctuation">(</span><span class="token string">&#39;WIZ40027&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ30015&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;WIZ20003&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ20001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                      <span class="token punctuation">(</span><span class="token string">&#39;WIZ20003&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ10015&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;WIZ20001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ10001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this case, it will take 4 semesters for Sandy graduate, due to the prerequisite chain: WIZ10001 -&gt; WIZ20001 -&gt; WIZ20003 -&gt; WIZ90001.</p><blockquote><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0CSandy\u6BD5\u4E1A\u9700\u89814\u4E2A\u5B66\u671F\uFF0C\u56E0\u4E3A\u5148\u51B3\u6761\u4EF6\u94FE:WIZ10001 -&gt;WIZ20001\u2192WIZ20003\u2192WIZ90001\u3002</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>\u2022	<span class="token keyword">from</span> collections <span class="token keyword">import</span> defaultdict
\u2022	semesters <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> cur_prereqs <span class="token operator">=</span> <span class="token punctuation">[</span>final<span class="token punctuation">]</span>
\u2022	prereqs <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
\u2022	<span class="token keyword">for</span> subject <span class="token keyword">in</span> prereq_list<span class="token punctuation">:</span>
\u2022	cur_prereqs <span class="token operator">=</span> new_prereqs<span class="token punctuation">;</span> semesters <span class="token operator">+=</span> <span class="token number">1</span>
\u2022	prereqs<span class="token punctuation">[</span>subject<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>subject<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
\u2022	<span class="token keyword">def</span> <span class="token function">wiz_study_length</span><span class="token punctuation">(</span>prereq_list<span class="token punctuation">,</span> final<span class="token operator">=</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
\u2022	<span class="token keyword">for</span> subject <span class="token keyword">in</span> cur_prereqs<span class="token punctuation">:</span>
\u2022	new_prereqs <span class="token operator">+=</span> prereqs<span class="token punctuation">[</span>subject<span class="token punctuation">]</span>
\u2022	<span class="token keyword">if</span> subject <span class="token keyword">in</span> prereqs<span class="token punctuation">:</span>
\u2022	<span class="token keyword">while</span> cur_prereqs<span class="token punctuation">:</span>
\u2022	new_prereqs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
\u2022	<span class="token keyword">return</span> semesters
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="question-5" tabindex="-1"><a class="header-anchor" href="#question-5" aria-hidden="true">#</a> Question 5</h2><p>A school of minnows swims in the sea. Sharks eat minnows, according to the following strict rules. Sharks swim, one at a time, from left to right and eat each minnow they encounter, starting at the height of the first minnow that remains uneaten. Each time a shark eats a minnow it gets heavier and sinks one metre lower in the water. Once a shark reaches the sea floor, it is no longer able to eat minnows.</p><blockquote><p>\u4E00\u7FA4\u5C0F\u9C7C\u5728\u6D77\u91CC\u6E38\u6CF3\u3002\u9CA8\u9C7C\u5403\u9CA6\u9C7C\uFF0C\u8981\u9075\u5B88\u4EE5\u4E0B\u4E25\u683C\u7684\u89C4\u5219\u3002\u9CA8\u9C7C\u4E00\u6B21\u6E38\u4E00\u6761\uFF0C\u4ECE\u5DE6\u5230\u53F3\uFF0C\u5403\u6389\u5B83\u4EEC\u9047\u5230\u7684\u6BCF\u4E00\u6761\u9CA6\u9C7C\uFF0C\u4ECE\u7B2C\u4E00\u6761\u6CA1\u6709\u88AB\u5403\u6389\u7684\u9C7C\u7684\u9AD8\u5EA6\u5F00\u59CB\u3002\u9CA8\u9C7C\u6BCF\u5403\u4E00\u6761\u9CA6\u9C7C\u5C31\u4F1A\u53D8\u91CD\uFF0C\u6C89\u5165\u6C34\u4E0B\u4E00\u7C73\u3002\u4E00\u65E6\u9CA8\u9C7C\u5230\u8FBE\u6D77\u5E95\uFF0C\u5B83\u5C31\u4E0D\u80FD\u518D\u5403\u9CA6\u9C7C\u4E86\u3002</p></blockquote><p>For example, minnows are located at the following heights (in metres) above the sea floor (e.g. a height of 3 indicates that the minnow is 3m above the sea floor) in sequence, left to right:</p><blockquote><p>\u4F8B\u5982\uFF0C\u7C73\u8BFA\u9C7C\u4F4D\u4E8E\u4EE5\u4E0B\u9AD8\u5EA6(\u4EE5\u7C73\u4E3A\u5355\u4F4D)(\u4F8B\u5982\uFF0C\u9AD8\u5EA6\u4E3A3\u8868\u793A\u7C73\u8BFA\u9C7C\u4F4D\u4E8E\u6D77\u5E73\u9762\u4EE5\u4E0A3\u7C73)\uFF0C\u4ECE\u5DE6\u5230\u53F3\u4F9D\u6B21\u4E3A:</p></blockquote><p><code>[4, 3, 1, 2, 4]</code></p><p>The first shark will start at height 4 and eat the minnow at that height (element 0), then sink to height 3 where it will eat the second minnow (element 1), and sink to height 2. It will pass above the third minnow (because it is at a lower height), before eating the fourth minnow (element 3) at height 2, and passing under the final minnow (element 4). At this point, the following minnows will remain:</p><blockquote><p>\u7B2C\u4E00\u6761\u9CA8\u9C7C\u4ECE\u9AD8\u5EA64\u5F00\u59CB\uFF0C\u5403\u6389\u8FD9\u4E2A\u9AD8\u5EA6\u7684\u7C73\u8BFA\u9C7C(\u5143\u7D200)\uFF0C\u7136\u540E\u6C89\u5230\u9AD8\u5EA63\uFF0C\u518D\u5403\u7B2C\u4E8C\u6761\u7C73\u8BFA\u9C7C(\u5143\u7D201)\uFF0C\u6C89\u5230\u9AD8\u5EA62\u3002\u5B83\u4F1A\u4ECE\u7B2C\u4E09\u6761\u7C73\u8BFA\u9C7C\u7684\u4E0A\u65B9\u7ECF\u8FC7(\u56E0\u4E3A\u5B83\u7684\u9AD8\u5EA6\u8F83\u4F4E)\uFF0C\u7136\u540E\u5728\u9AD8\u5EA6\u4E3A2\u7684\u5730\u65B9\u5403\u6389\u7B2C4\u6761\u7C73\u8BFA\u9C7C(\u5143\u7D203)\uFF0C\u5E76\u4ECE\u6700\u540E\u4E00\u6761\u7C73\u8BFA\u9C7C(\u5143\u7D204)\u7684\u4E0B\u65B9\u7ECF\u8FC7\u3002\u6B64\u65F6\uFF0C\u4EE5\u4E0B\u51E0\u6761\u7C73\u8BFA\u9C7C\u5C06\u7EE7\u7EED\u5B58\u5728:</p></blockquote><p><code>[None, None, 1, None, 4]</code></p><p>The second shark will start at height 1 and eat the minnow at that height (element 2), then sink to the sea floor (height 0) and eat no further minnows. This will result in the following minnows:</p><blockquote><p>\u7B2C\u4E8C\u6761\u9CA8\u9C7C\u4ECE1\u7684\u9AD8\u5EA6\u5F00\u59CB\u5403\u7C73\u8BFA\u9C7C(\u5143\u7D202)\uFF0C\u7136\u540E\u6C89\u5230\u6D77\u5E95(\u9AD8\u5EA60)\uFF0C\u4E0D\u518D\u5403\u7C73\u8BFA\u9C7C\u3002\u8FD9\u5C06\u5BFC\u81F4\u4EE5\u4E0B\u5C0F\u9C7C:</p></blockquote><p><code>[None, None, None, None, 4]</code></p><p>The third shark will start at height 4 and eat the minnow at that height (element 4), after which no minnows will remain.</p><blockquote><p>\u7B2C\u4E09\u6761\u9CA8\u9C7C\u4F1A\u4ECE\u9AD8\u5EA64\u5F00\u59CB\uFF0C\u5403\u6389\u8FD9\u4E2A\u9AD8\u5EA6\u7684\u7C73\u8BFA\u9C7C(\u5143\u7D204)\uFF0C\u4E4B\u540E\u5C31\u6CA1\u6709\u7C73\u8BFA\u9C7C\u4E86\u3002</p></blockquote><p>The function sharks_minnows(minnows, sharks) is intended to determine whether a given number of sharks will be sufficient to eat all of the minnows in the sea, positioned based on minnows. The function takes the following parameters:</p><blockquote><p>\u51FD\u6570sharks_minnows(minnows\uFF0C\u9CA8\u9C7C)\u7684\u76EE\u7684\u662F\u786E\u5B9A\u7ED9\u5B9A\u6570\u91CF\u7684\u9CA8\u9C7C\u662F\u5426\u8DB3\u4EE5\u5403\u6389\u6D77\u91CC\u6240\u6709\u7684minnows\uFF0C\u6839\u636Eminnows\u5B9A\u4F4D\u3002\u8BE5\u51FD\u6570\u63A5\u53D7\u4EE5\u4E0B\u53C2\u6570:</p></blockquote><ul><li>minnows, a list of positive integers indicating the height of each minnow, as in the example above.</li></ul><blockquote><p>Minnows\uFF0C\u4E00\u4E2A\u6B63\u6574\u6570\u5217\u8868\uFF0C\u8868\u793A\u6BCF\u6761\u9CA6\u9C7C\u7684\u9AD8\u5EA6\uFF0C\u5982\u4E0A\u4F8B\u6240\u793A\u3002</p></blockquote><ul><li>sharks, a positive integer number of sharks.</li></ul><blockquote><p>\u9CA8\u9C7C\u7684\u6570\u91CF\u662F\u6B63\u6574\u6570\u3002</p></blockquote><p>The function should return True if the specified number of sharks is sufficient to eat all the minnows, and False otherwise.</p><blockquote><p>\u5982\u679C\u6307\u5B9A\u7684\u9CA8\u9C7C\u6570\u91CF\u8DB3\u591F\u5403\u6389\u6240\u6709\u7684\u9CA6\u9C7C\uFF0C\u51FD\u6570\u5E94\u8BE5\u8FD4\u56DETrue\uFF0C\u5426\u5219\u8FD4\u56DEFalse\u3002</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">sharks_minnows</span><span class="token punctuation">(</span>minnows<span class="token punctuation">,</span> sharks<span class="token punctuation">)</span><span class="token punctuation">:</span>
    shark_count <span class="token operator">=</span> <span class="token number">0</span>
    minnow_count <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>minnows<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>minnow_count<span class="token punctuation">)</span><span class="token punctuation">:</span>
        curr_shark_height <span class="token operator">=</span> minnows<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> curr_shark_height <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            minnows<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> minnow_count<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> minnows<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> curr_shark_height<span class="token punctuation">:</span>
                    minnows<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
                    curr_shark_height <span class="token operator">-=</span> <span class="token number">1</span>
            shark_count <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> shark_count <span class="token operator">&lt;=</span> sharks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The provided code is imperfect, in that it sometimes returns <code>True</code> when it should return <code>False</code>, and sometimes returns <code>False</code> when it should return <code>True</code>.</p><blockquote><p>\u6240\u63D0\u4F9B\u7684\u4EE3\u7801\u662F\u4E0D\u5B8C\u7F8E\u7684\uFF0C\u56E0\u4E3A\u5B83\u6709\u65F6\u5728\u5E94\u8BE5\u8FD4\u56DE&#39; False &#39;\u65F6\u8FD4\u56DE&#39; True &#39;\uFF0C\u6709\u65F6\u5728\u5E94\u8BE5\u8FD4\u56DE&#39; True &#39;\u65F6\u8FD4\u56DE&#39; False &#39;\u3002</p></blockquote><p>(a) Provide an example of a function call where the provided code will correctly return <code>True</code> (i.e. a True Positive)</p><blockquote><p>\u63D0\u4F9B\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\u7684\u4F8B\u5B50\uFF0C\u5176\u4E2D\u6240\u63D0\u4F9B\u7684\u4EE3\u7801\u5C06\u6B63\u786E\u8FD4\u56DE&#39; True &#39;(\u5373True Positive)</p></blockquote><p>(b) Provide an example of a function call where the provided code will correctly return <code>False</code> (i.e. a True Negative)</p><blockquote><p>\u63D0\u4F9B\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\u7684\u4F8B\u5B50\uFF0C\u5176\u4E2D\u6240\u63D0\u4F9B\u7684\u4EE3\u7801\u5C06\u6B63\u786E\u8FD4\u56DE&#39; False &#39;(\u5373True Negative)</p></blockquote><p>(c) Provide an example of a function call where the provided code will <em>incorrectly</em> return <code>True</code> (i.e. a False Positive)</p><blockquote><p>\u63D0\u4F9B\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\u7684\u4F8B\u5B50\uFF0C\u5176\u4E2D\u63D0\u4F9B\u7684\u4EE3\u7801\u5C06<em>\u9519\u8BEF\u5730</em>\u8FD4\u56DE&#39; True &#39;(\u5373\u5047\u9633\u6027)</p></blockquote><p>(d) Provide an example of a function call where the provided code will <em>incorrectly</em> return <code>False</code> (i.e. a False Negative)</p><blockquote><p>\u63D0\u4F9B\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\u7684\u4F8B\u5B50\uFF0C\u5176\u4E2D\u63D0\u4F9B\u7684\u4EE3\u7801\u5C06<em>\u9519\u8BEF\u5730</em>\u8FD4\u56DE&#39; False &#39;(\u5373\u5047\u9634\u6027)</p></blockquote><h2 id="question-6" tabindex="-1"><a class="header-anchor" href="#question-6" aria-hidden="true">#</a> Question 6</h2><p>Construct a <strong>single</strong> Python expression which evaluates to the following values, and incorporates the specified operations in each case (executed in any order).</p><blockquote><p>\u6784\u9020\u4E00\u4E2A Python \u8868\u8FBE\u5F0F\uFF0C\u6C42\u503C\u4E3A\u4EE5\u4E0B\u503C\uFF0C\u5E76\u5728\u6BCF\u79CD\u60C5\u51B5\u4E0B\u5408\u5E76\u6307\u5B9A\u7684\u64CD\u4F5C(\u4EE5\u4EFB\u4F55\u987A\u5E8F\u6267\u884C)\u3002</p></blockquote><p><strong>(a) Output value: &#39;eeezy&#39;</strong></p><p>Required operations:</p><ol><li><p>string indexing</p></li><li><p><code>*</code></p></li></ol><p><strong>(b) Output value: True</strong></p><p>Required operations:</p><ol><li><p>in</p></li><li><p><code>range()</code></p></li></ol><p><strong>(c) Output value: &#39;100% pythonic&#39;</strong></p><p>Required operations:</p><ol><li><p><code>f-string</code></p></li><li><p><code>/</code></p></li></ol><p><strong>(d) Output value: &#39;comp10001&#39;</strong></p><p>Required operations:</p><ol><li><p>tuple indexing</p></li><li><p>dictionary lookup</p></li><li><p><code>.lower()</code></p></li></ol><p><strong>(e) Output value: &#39;42&#39;</strong></p><p>Required operations:</p><ol><li><p>list indexing</p></li><li><p><code>.keys()</code></p></li><li><p>string slicing</p></li></ol><h2 id="question-7" tabindex="-1"><a class="header-anchor" href="#question-7" aria-hidden="true">#</a> Question 7</h2><p>The following function is meant to take a lowercase string as input and return a reordered version of that string in which all of the vowels appear first (in the order in which they appear in the original string), followed by all of the consonants (again, in the order in which they appear in the original string), discarding any non-alphabetic characters in the process.</p><blockquote><p>\u4E0B\u9762\u7684\u51FD\u6570\u5C06\u63A5\u53D7\u4E00\u4E2A\u5C0F\u5199\u5B57\u7B26\u4E32\u4F5C\u4E3A\u8F93\u5165\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u5B57\u7B26\u4E32\u7684\u91CD\u65B0\u6392\u5E8F\u7248\u672C\uFF0C\u5176\u4E2D\u6240\u6709\u5143\u97F3\u90FD\u5728\u524D\u9762\u51FA\u73B0(\u6309\u7167\u5B83\u4EEC\u5728\u539F\u59CB\u5B57\u7B26\u4E32\u4E2D\u51FA\u73B0\u7684\u987A\u5E8F)\uFF0C\u7136\u540E\u662F\u6240\u6709\u8F85\u97F3(\u540C\u6837\uFF0C\u6309\u7167\u5B83\u4EEC\u5728\u539F\u59CB\u5B57\u7B26\u4E32\u4E2D\u51FA\u73B0\u7684\u987A\u5E8F)\uFF0C\u5728\u6B64\u8FC7\u7A0B\u4E2D\u4E22\u5F03\u6240\u6709\u975E\u5B57\u6BCD\u5B57\u7B26\u3002</p></blockquote><p>For example:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> reorder<span class="token punctuation">(</span><span class="token string">&#39;stay at home&#39;</span><span class="token punctuation">)</span>
<span class="token string">&#39;aaoestythm&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> reorder<span class="token punctuation">(</span><span class="token string">&#39;the cat in the hat&#39;</span><span class="token punctuation">)</span>
<span class="token string">&#39;eaieathctnthht&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> reorder<span class="token punctuation">(</span><span class="token string">&#39;rhythm&#39;</span><span class="token punctuation">)</span>
<span class="token string">&#39;rhythm&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>However, there are several errors in the given function definition.</p><blockquote><p>\u7136\u800C\uFF0C\u5728\u7ED9\u5B9A\u7684\u51FD\u6570\u5B9A\u4E49\u4E2D\u6709\u51E0\u4E2A\u9519\u8BEF\u3002</p></blockquote><p>Identify <strong>exactly</strong> three (3) errors and specify: (a) the line number where the error occurs; (b) the type of error, as <em>syntax</em>, <em>run-time</em>, or logic; and (c) how you would fix each error, in the form of the corrected (single) line of code.</p><blockquote><p>\u51C6\u786E\u8BC6\u522B \u4E09(3)\u4E2A\u9519\u8BEF\uFF0C\u5E76\u6307\u5B9A:(a)\u9519\u8BEF\u53D1\u751F\u7684\u884C\u53F7;(b)\u9519\u8BEF\u7C7B\u578B\uFF0C\u5982<em>\u8BED\u6CD5</em>\u3001<em>\u8FD0\u884C\u65F6</em>\u6216\u903B\u8F91;\u548C(c)\u4F60\u5C06\u5982\u4F55\u4FEE\u590D\u6BCF\u4E2A\u9519\u8BEF\uFF0C\u4EE5\u7EA0\u6B63\u7684(\u5355\u884C)\u4EE3\u7801\u7684\u5F62\u5F0F\u3002</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">reorder</span><span class="token punctuation">(</span>my_string<span class="token punctuation">)</span><span class="token punctuation">:</span>               <span class="token comment">#  1</span>
    v_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>aeiou<span class="token punctuation">)</span>              <span class="token comment">#  2</span>
    vowels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                       <span class="token comment">#  3</span>
    consonants <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                   <span class="token comment">#  4</span>
    <span class="token keyword">for</span> c <span class="token keyword">in</span> my_string<span class="token punctuation">:</span>               <span class="token comment">#  5</span>
        <span class="token keyword">if</span> c <span class="token keyword">not</span> <span class="token keyword">in</span> v_list<span class="token punctuation">:</span>           <span class="token comment">#  6</span>
            vowels<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c<span class="token punctuation">)</span>          <span class="token comment">#  7</span>
        <span class="token keyword">else</span> c<span class="token punctuation">:</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             <span class="token comment">#  8</span>
            consonants<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c<span class="token punctuation">)</span>      <span class="token comment">#  9</span>
    <span class="token keyword">return</span> join<span class="token punctuation">(</span>vowels <span class="token operator">+</span> consonants<span class="token punctuation">)</span>  <span class="token comment"># 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u627E\u51FA\u4E09\u4E2A\u9519\u8BEF\u5E76\u8BF4\u51FA\u662F\u90A3\u79CD\u9519\u8BEF\uFF08as syntax, run-time, or logic\uFF09\u5E76\u4E14\u6539\u6B63</p><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+e+'" alt="" loading="lazy"></p></details>',119),m={class:"custom-container info"},b=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),g=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),v=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),f={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),y=n("p",null,[n("img",{src:t,alt:"",loading:"lazy"})],-1);function q(_,I){const a=r("ExternalLinkIcon");return p(),i("div",null,[h,n("div",m,[b,g,v,n("p",null,[s("\u65B9\u6CD5\u4E00\uFF1A"),n("a",f,[s("QQ"),l(a)])]),w]),y])}const j=o(k,[["render",q],["__file","exam-2022-online.html.vue"]]);export{j as default};
