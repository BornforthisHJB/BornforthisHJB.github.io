import{_ as e}from"./gzh.b03adfd2.js";import{_ as t}from"./zsxq.77f6dc86.js";import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as l,a as s,d as n,b as o,e as c,r as d}from"./app.ca28fcda.js";const u="/assets/image-20220717143802293.b9f7b321.png",r="/assets/image-20220717144442354.2376e42b.png",m="/assets/image-20220717150958014.3bfa3c9c.png",k="/assets/image-20220717152956276.941a1bf1.png",b="/assets/image-20220717154945628.00d8dc29.png",v={},h=c(`<h2 id="链接和查询代码" tabindex="-1"><a class="header-anchor" href="#链接和查询代码" aria-hidden="true">#</a> 链接和查询代码</h2><p>Python 自身携带 sqlite 库，不需要额外安装，直接使用即可。导入代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sqlite3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>导入代码之后，将 <code>first.db</code> 文件，放到代码文件旁边。这里用的是 py，所以是把 py 和 <code>first.db</code> 文件放一起，不放一起就只能使用绝对路径。如下图：</p><p><img src="`+u+`" alt="image-20220717143802293" loading="lazy"></p><p>然后使用 sqlite3 库，链接 <code>first.db</code> 文件，代码 <code>firstdb = sqlite3.connect(&#39;first.db&#39;)</code></p><p>正常运行后，写查询语句，从数据库中读取全部数据，如下代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 查询语句</span>
query_sql <span class="token operator">=</span> <span class="token string">&quot;select * from info&quot;</span>
<span class="token keyword">for</span> result <span class="token keyword">in</span> firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query_sql<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># @Time    : 2022/7/17 14:36</span>
<span class="token comment"># @Author  : AI悦创</span>
<span class="token comment"># @FileName: main.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># @Blog    ：http://www.aiyc.top</span>
<span class="token comment"># @公众号   ：AI悦创</span>
<span class="token keyword">import</span> sqlite3

firstdb <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">&quot;first.db&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 查询语句</span>
query_sql <span class="token operator">=</span> <span class="token string">&quot;select * from info&quot;</span>
<span class="token keyword">for</span> result <span class="token keyword">in</span> firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query_sql<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token comment"># firstdb.execute(): Executes an SQL statement./执行 SQL 语句。</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query_sql<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结构效果图：</p><p><img src="`+r+`" alt="image-20220717144442354" loading="lazy"></p><p>这是最简单的查询语句。数据库都是支持查询、删除、增加、更新操作的。</p><h2 id="删除数据操作" tabindex="-1"><a class="header-anchor" href="#删除数据操作" aria-hidden="true">#</a> 删除数据操作</h2><p>删除操作，将数据从数据库中移除，关键词 delete，先删除一条数据，如下代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 删除特定数据</span>
delete_sql <span class="token operator">=</span> <span class="token string">&quot;delete from info where id = 1&quot;</span>

firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>delete_sql<span class="token punctuation">)</span>
firstdb<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 查询并输出</span>
query_sql <span class="token operator">=</span> <span class="token string">&quot;select * from info&quot;</span>
<span class="token keyword">for</span> result <span class="token keyword">in</span> firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query_sql<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果如下图：</p><p><img src="`+m+`" alt="image-20220717150958014" loading="lazy"></p><h2 id="插入更多数据" tabindex="-1"><a class="header-anchor" href="#插入更多数据" aria-hidden="true">#</a> 插入更多数据</h2><p>增加的操作，关键词 add，使用 for 循环，先批量的增加一些数据：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 插入数据</span>
insert_sql <span class="token operator">=</span> <span class="token string">&quot;insert into info(title, content, author) values (&#39;第{}个标题&#39;, &#39;随机的第{}个内容&#39;, &#39;匿名&#39;)&quot;</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sql <span class="token operator">=</span> insert_sql<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
    firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
    firstdb<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 查询并输出</span>
query_sql <span class="token operator">=</span> <span class="token string">&quot;select * from info&quot;</span>
<span class="token keyword">for</span> result <span class="token keyword">in</span> firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query_sql<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>for 循环，从 10 循环到 20，不含 20，然后全部执行 sql 语句和提交到数据库。最后查询全部数据，看下有没有增多，如下结果图：</p><p><img src="`+k+`" alt="image-20220717152956276" loading="lazy"></p><h2 id="更新数据操作" tabindex="-1"><a class="header-anchor" href="#更新数据操作" aria-hidden="true">#</a> 更新数据操作</h2><p>数据有增加，最后更新数据，关键词 update，做个条件更新，id 大于等于 4 的数据，设置 author 为“不匿名”，如下代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 更新数据</span>
update_sql <span class="token operator">=</span> <span class="token string">&quot;update info set author = &#39;不匿名&#39; where id &gt;= 4&quot;</span>
firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>update_sql<span class="token punctuation">)</span>

<span class="token comment"># 查询并输出</span>
query_sql <span class="token operator">=</span> <span class="token string">&quot;select * from info&quot;</span>
<span class="token keyword">for</span> result <span class="token keyword">in</span> firstdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query_sql<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后的结果图如下：</p><p><img src="`+b+'" alt="image-20220717154945628" loading="lazy"></p><p>以上就是 Python 操作 sqlite 的全部代码了。</p><p><strong>【多选题】小练习</strong></p><p>数据库支持哪些操作？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 查询数据</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 新增数据</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 更新数据</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 删除数据</label></li></ul><blockquote><p>该数据库是单数据库操作，不要打开多个，这样有可能会锁死。</p></blockquote><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="'+e+'" alt="" loading="lazy"></p></details>',35),y={class:"custom-container info"},f=s("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),g=s("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),_=s("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),q={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},x=s("p",null,"方法二：微信：Jiabcdefh",-1),w=s("p",null,[s("img",{src:t,alt:"",loading:"lazy"})],-1);function I(z,A){const a=d("ExternalLinkIcon");return p(),l("div",null,[h,s("div",y,[f,g,_,s("p",null,[n("方法一："),s("a",q,[n("QQ"),o(a)])]),x]),w])}const C=i(v,[["render",I],["__file","auto_base10.html.vue"]]);export{C as default};
