import{_ as F}from"./gzh-DnOBNg6W.js";import{_ as y}from"./zsxq-BcdwOI-_.js";import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as u,f as t,h as i,g as s,i as e,r as p,o as v,j as n}from"./app-5cYfBtZ-.js";const m={};function b(E,l){const c=p("CodeTabs"),r=p("Tabs");return v(),u("div",null,[l[42]||(l[42]=t(`<details class="hint-container details"><summary>原文</summary><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">## </span><span style="color:#AE81FF;">1.</span><span style="color:#66D9EF;font-style:italic;"> Introduction</span><span style="color:#F8F8F2;"> to </span><span style="color:#66D9EF;font-style:italic;">Views</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">So</span><span style="color:#F8F8F2;"> far we’ve worked on designing </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">models</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> to represent the data relevant to a problem domain, in a form that encapsulates the data behind an </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">that</span><span style="color:#F8F8F2;"> clients can use without having to know any implementation details. The model is responsible for ensuring that it can’t get stuck in a bogus or invalid state, and exposes whatever appropriate observations and operations are needed while still preserving this integrity constraint.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">We’ve also worked on simple synchronous *controllers* that allow users to interact with a model, in a form that encapsulates the user interactions and can provide feedback to users without having to redundantly ensure any integrity constraints. Moreover, controllers can be customized or enhanced without needing to change the model, making the model more convenient to use without making it any more complex.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Now, it’s time to introduce the third part of the MVC trio: *views*. Views are renderings of the data in the model, and can be as simple as printing debug output to a console, as complex as fancy graphical user interfaces, or anything in between. Dealing with GUIs also brings additional challenges, and we will discuss some of them.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">### 1.1 Outline</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">This lecture starts by adding a text-based, interactive view to the program. This is closest to our earlier design for the controller, but it carves out a view cleanly. This example also illustrates the typical interactions between the model, view and controller in a simple manner.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">We then progressively transition to graphical user interfaces. We start with *poorly-designed but working* code, and improve it in three stages. Initially, the code for the view will directly manipulate the model. Our first incremental improvement will decouple the view from the model so that it need not — and in fact *cannot* — do so. Our second improvement will add a new feature to the view, and add the ability to control that in the controller. Finally, our third improvement will generalize the controller to make its UI triggers more customizable.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">The code for this lecture is available at the top of this page, as the [MVC code](https:</span><span style="color:#88846F;">//course.ccs.neu.edu/cs3500/lec/gui_basics/code.zip) link. The second link provides code for a program with an incomplete GUI. It is recommended that you complete this exercise to practice with GUIs. Finally the third link provides a solution for this GUI.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## 2. Design</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">All examples in this lecture follow a common design. The model state (interface \`IModel\` and implementation \`Model\`) consists of a single \`String\` and offers methods to get and update it. All views (coupled with controllers wherever applicable) expose functionality to interactively show this string, and to update it.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">### 3\` \`Text-based UI</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In the TextUI directory we show a text-based user interface. The IView </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">encapsulates</span><span style="color:#F8F8F2;"> all the methods that a view’s client would need to call: note how they correspond roughly to the “things” that a controller would need to tell the view to do. The TextView </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">implements</span><span style="color:#F8F8F2;"> this interface. It transmits all messages to a PrintStream object provided to it through its constructor. Similar to the design in [Lecture 8](https:</span><span style="color:#88846F;">//course.ccs.neu.edu/cs3500/lec_controllers_mocks_notes.html) this allows us to test the view using any suitable PrintStream object.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">The IController </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">represents</span><span style="color:#F8F8F2;"> a controller: it has only method which is called to give control of the application to the controller. The TextController </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">implements</span><span style="color:#F8F8F2;"> the controller. It works with IModel, IView and Scanner objects to handle model, view and data input functionality respectively. At its heart, the controller goes through a loop that provides users with some options, takes further inputs depending on the chosen options and delegates to the model and view accordingly. Since the sequence of operations is largely fixed, this qualifies as a *synchronous* controller.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## 4. Stage 1: Introduction to GUIs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In the BadDesignButFunctional directory, we have a poorly written implementation of a simple program that uses the same model, but a graphical user interface.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Our \`main()\` method constructs a \`Model\`, and constructs a view that is given a reference to the model. The view interface (\`IView\`) has only three methods: to obtain the text the user has typed in to the text box, to clear that text box, and to echo a string to the label in the UI. The implementation of the view, \`JFrameView\`, is markedly more complicated in appearance than expected, but it breaks down into several simpler parts.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">### 4.1 Frames and controls</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Our program uses the Swing framework to show its UI. In Swing, an individual window is known as a *frame*, which can contain controls known as *components*. To create our own window, we design a </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">that</span><span style="color:#F8F8F2;"> subclasses from \`JFrame\`, do some work to establish the components in it, and then call \`setVisible\` to display the window. Within the constructor of our frame, we create four components: a *label* to show some text, a *text box* to edit text, and two *buttons*. Adding several controls to a frame requires that we give them a *layout*, which describes the spatial relationships between the controls. In this example, we’re using a \`FlowLayout\`, which allows the controls to wrap around as we resize the window. (Try running the project and resizing the window to be narrower than the controls are.) Different layout managers allow adding controls in [different ways](https:</span><span style="color:#88846F;">//docs.oracle.com/javase/tutorial/uiswing/layout/visual.html). Once controls are added to the UI, the \`pack()\` method is used tell the layout manager to determine the actual positions and sizes of all the controls.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In order for the controls to do anything, however, we need to add an *event handler* to them. An event handler, or *callback*, is simply a function that gets called when something interesting occurs. In our case, the clicking of different buttons should trigger a callback. In the jargon of Swing, clicking on buttons triggers their *action*, and so we must supply a function object that </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> the [\`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">ActionListener</span><span style="color:#F8F8F2;">\`](https:</span><span style="color:#88846F;">//docs.oracle.com/javase/8/docs/api/java/awt/event/ActionListener.html) interface. (Other controls have additional events besides “actions”.) For convenience, Swing allows us to label each button with a so-called *action command*, which is a \`String\` of our choosing: when the \`ActionListener\`’s callback is invoked, it will be given an [\`ActionEvent\`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/ActionEvent.html) object that knows the action command of the button that was clicked. In this way, we can use a single listener to listen to multiple buttons at once, and distinguish them by means of this command string. See the calls to \`setActionCommand\` and \`setActionListener\` and the implementation of \`actionPerformed\` in JFrameView.java for an example:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#F8F8F2;">class </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">JFrameView</span><span style="color:#F92672;"> extends</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">JFrame</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">ActionListener</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> JFrameView</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> caption</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">IModel</span><span style="color:#FD971F;font-style:italic;"> model</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    ...</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JButton</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Echo&quot;</span><span style="color:#F8F8F2;">);           </span><span style="color:#88846F;">// Create a button,</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton.</span><span style="color:#A6E22E;">setActionCommand</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Echo Button&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// set its command,</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton.</span><span style="color:#A6E22E;">addActionListener</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">);         </span><span style="color:#88846F;">// set the callback,</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(echoButton);                       </span><span style="color:#88846F;">// and add it to the UI</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JButton</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Exit&quot;</span><span style="color:#F8F8F2;">);           </span><span style="color:#88846F;">// ditto, for another button</span></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton.</span><span style="color:#A6E22E;">setActionCommand</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Exit Button&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton.</span><span style="color:#A6E22E;">addActionListener</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(exitButton);</span></span>
<span class="line"><span style="color:#F8F8F2;">    ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">    switch</span><span style="color:#F8F8F2;"> (e.</span><span style="color:#A6E22E;">getActionCommand</span><span style="color:#F8F8F2;">()) {</span></span>
<span class="line"><span style="color:#F92672;">    case</span><span style="color:#E6DB74;"> &quot;Echo Button&quot;</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> ...</span></span>
<span class="line"><span style="color:#F92672;">    case</span><span style="color:#E6DB74;"> &quot;Exit Button&quot;</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> ...</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  ...</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">**</span><span style="color:#F8F8F2;">Note</span><span style="color:#F92672;">:**</span><span style="color:#66D9EF;font-style:italic;"> Combining</span><span style="color:#F8F8F2;"> the event handlers of multiple buttons into a single function is only temporarily convenient</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> often, the code we want to run </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> one button is completely different from the code we want to run </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> a different button, so there’s not much benefit from merging them all. Instead, it is more common to create anonymous objects, </span><span style="color:#A6E22E;">or</span><span style="color:#F8F8F2;"> (even terser) lambda expressions, so that each button gets its own custom handler. We’ll see other idioms of setting up listeners below.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## </span><span style="color:#AE81FF;">5.</span><span style="color:#F8F8F2;"> Stage </span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> Decoupling</span><span style="color:#F8F8F2;"> the view from the model</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">The</span><span style="color:#F8F8F2;"> code above technically works, but it is very poorly designed</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> the view is responsible </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> mutating the model, which means there’s no separation of concerns between </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> view and any controller, and </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> we wanted to use the model with another sort of view, we’d be out of luck. In the </span><span style="color:#66D9EF;font-style:italic;">BasicMVC</span><span style="color:#F8F8F2;"> directory, we start to remedy </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">. In particular, we want to separate out all the parts of the code that mutate the model, and isolate them within a controller.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">To</span><span style="color:#F92672;"> do</span><span style="color:#FD971F;"> this</span><span style="color:#F8F8F2;">, we create a \`Controller\` </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">that</span><span style="color:#F8F8F2;"> takes in the model and the view — at their </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">types</span><span style="color:#F8F8F2;">, not at their concrete </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">types</span><span style="color:#F8F8F2;">. We revise the view so that it no longer has access to the model at all. (This is overly drastic; we merely want to ensure that the view does not have *mutable* access to the model. We can revisit this later.) We next add a method to the view interface, \`void setListener(ActionListener)\`, which is the key indirection needed here. Instead of the view directly implementing the response to events, this method allows the view to take in a listener object and *forward* any events it receives to that listener.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">JFrameView</span><span style="color:#F92672;"> extends</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">JFrame</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">IView</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> JFrameView</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> caption</span><span style="color:#F8F8F2;">) { </span><span style="color:#88846F;">// NOTE: No model!</span></span>
<span class="line"><span style="color:#F8F8F2;">    ...</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JButton</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Echo&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// NOTE: No action listener</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton.</span><span style="color:#A6E22E;">setActionCommand</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Echo Button&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(echoButton);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JButton</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Exit&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton.</span><span style="color:#A6E22E;">setActionCommand</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Exit Button&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(exitButton);</span></span>
<span class="line"><span style="color:#F8F8F2;">    ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> setListener</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionListener</span><span style="color:#FD971F;font-style:italic;"> listener</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton.</span><span style="color:#A6E22E;">addActionListener</span><span style="color:#F8F8F2;">(listener); </span><span style="color:#88846F;">// Rather than adding *this* as a listener,</span></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton.</span><span style="color:#A6E22E;">addActionListener</span><span style="color:#F8F8F2;">(listener); </span><span style="color:#88846F;">// add the provided one instead.</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  ...</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Controller</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">ActionListener</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> Controller</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">IModel</span><span style="color:#FD971F;font-style:italic;"> m</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">IView</span><span style="color:#FD971F;font-style:italic;"> v</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.model </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> m;</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.view </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> v;</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setListener</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">display</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">    switch</span><span style="color:#F8F8F2;"> (e.</span><span style="color:#A6E22E;">getActionCommand</span><span style="color:#F8F8F2;">()) {</span></span>
<span class="line"><span style="color:#F92672;">      case</span><span style="color:#E6DB74;"> &quot;Echo Button&quot;</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> ...  </span><span style="color:#88846F;">// same code as before, but now</span></span>
<span class="line"><span style="color:#F92672;">      case</span><span style="color:#E6DB74;"> &quot;Exit Button&quot;</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> ...  </span><span style="color:#88846F;">// it&#39;s extracted out of the view</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">The</span><span style="color:#F8F8F2;"> controller is now the only part of the system that has mutable access to the model. Because it requested that the view register itself as the listener </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> the buttons, the controller gets called exactly when necessary, and it can decide what mutations to perform on the model. The view doesn’t even know that it’s received a controller object</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> as far as it’s aware, the controller is simply a random \`ActionListener\`. (</span><span style="color:#F92672;">**</span><span style="color:#F8F8F2;">Note</span><span style="color:#F92672;">:**</span><span style="color:#66D9EF;font-style:italic;"> It</span><span style="color:#F8F8F2;"> is overly simplified to have the \`Controller\` directly implement \`ActionListener\` — after all, there might be many controls inside the view that could raise action events, and so having a </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">single</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> \`ActionListener\` isn’t a scalable approach. A better approach would be to have the \`Controller\` </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">have</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> one or more \`ActionListener\`s — i.e., preferring composition over inheritance — but we use </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> simplified form </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> now to reduce the number of classes in </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> example.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">**</span><span style="color:#F8F8F2;">Note</span><span style="color:#F92672;">:**</span><span style="color:#F8F8F2;"> there is a subtle difference between the \`setListener\` method we’ve defined on our \`IView\` interface, and the \`addActionListener\` method present on the </span><span style="color:#66D9EF;font-style:italic;">Swing</span><span style="color:#F8F8F2;"> components</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> our method’s name implicitly intends </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> only </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">one</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> listener at a time, but </span><span style="color:#66D9EF;font-style:italic;">Swing</span><span style="color:#F8F8F2;"> components allow </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> multiple listeners. When we have multiple listeners, we’ll sometimes say that the control </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">broadcasts</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> its event to whoever’s listening, or that it </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">publishes</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> its event to whoever’s </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">subscribed</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> to it. There’s nothing limiting us from implementing </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> more general approach, but that generality wasn’t needed here.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## </span><span style="color:#AE81FF;">6.</span><span style="color:#F8F8F2;"> Stage </span><span style="color:#AE81FF;">3</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> Enhancing</span><span style="color:#F8F8F2;"> the view with keyboard support</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Our</span><span style="color:#F8F8F2;"> next addition of functionality is shown in the </span><span style="color:#66D9EF;font-style:italic;">KeyboardEvents</span><span style="color:#F8F8F2;"> directory</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> we want to add some keyboard</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">triggered behaviors. Specifically, we’ll add two fancy features to our UI</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> the ability to toggle the color of the text from black to red and back, and the ability to temporarily show the text in all</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">caps. We’ll </span><span style="color:#F92672;">switch</span><span style="color:#F8F8F2;"> colors every time we type the \`</span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">\` key, and we’ll temporarily capitalize the text </span><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> we’re pressing and holding the \`</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">\` key. Interestingly, only one of these two </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> features requires adding a new method to our view interface.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">First, we’ll need to generalize our \`setListener\` method, to take in a [\`KeyListener\`](https</span><span style="color:#F92672;">:</span><span style="color:#88846F;">//docs.oracle.com/javase/8/docs/api/java/awt/event/KeyListener.html) as well as an \`ActionListener\`. A \`KeyListener\` is analogous to a \`ActionListener\`, but as the name suggests, it listens for keyboard-related events. There are *three* such events: when a key is pressed, when a key is typed, and when a key is released. Pressing and holding down a key for a while will typically generate one key-pressed event, several key-typed events, and one key-released event. Just as \`ActionListener\`s accept \`ActionEvent\`s, \`KeyListener\`s accept [\`KeyEvent\`s](https://docs.oracle.com/javase/8/docs/api/java/awt/event/KeyEvent.html) containing information about which key was involved. We’ll use the \`keyTyped\` event to toggle the color of the text, use the \`keyPressed\` event to capitalize the text, and use the \`keyReleased\` event to un-capitalize the text.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">For</span><span style="color:#F8F8F2;"> now, we’ll simply have our controller implement the \`KeyListener\` </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">also</span><span style="color:#F8F8F2;">, and pass itself along as the second argument to \`view.setListeners\`. Again, note that the view doesn’t know or care that the exact same object is being passed in as the two distinct listeners: the types ensure that it doesn’t matter. (**Note:** And again, this is overly simplified, and we ought to have a distinct </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">implement</span><span style="color:#F8F8F2;"> this \`KeyListener\` interface, rather than have the \`Controller\` </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">do</span><span style="color:#F8F8F2;"> everything itself.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">To implement the color changing, we’ll need to add a method to our view </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">to</span><span style="color:#F8F8F2;"> toggle the color of the text. This is intrinsically a view-specific thing, since the controller cannot know exactly how the text is displayed or which control it needs to change color. (That would leak internal implementation details of the view, and in any case, the controller only knows it has an \`IView\` rather than a particular view class.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">To implement the capitalization, note that we *do not* actually mutate the model! This is both a good thing and a necessary thing: suppose the model text contained a mixture of upper- and lower-case letters. If we mutated the model and capitalized everything, then we would not be able to undo that change later. Instead, we ask the model for its content, and inform the view that it should display a capitalized version of the that content. (This view-only change is analogous to “zooming in” while editing a picture in Photoshop or some other image editor: the view is technically displaying only a subset of the pixels of the document, and moreover is displaying them at far more than one screen pixel per document pixel! If “zooming in” actually mutated the document, then we’d lose information and be unable to “zoom out” again.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## 7. Aside 1: Low-level and high-level events</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Within the \`KeyListener\` interface, there is a qualitative difference between the key-pressed and key-released events, and the key-typed event. Individual key events are incredibly, tediously low-level. Just trying to type a capital \`&#39;A&#39;\` generates *five* events: the Shift key was pressed; the A key was pressed; the letter \`&#39;A&#39;\` was typed; the A key was released; the Shift key was released. (The last two events might happen in either order, depending on which key was released first.) Notice that only one key-typed event occurred, though, and it contained exactly the text that was typed.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">If we had to deduce which keys were typed, merely from the key-pressed and key-released events, we’d quickly lose track. Java (and most GUI toolkits) thankfully translate those sequences into higher-level key-typed events. And this translation has an addtional benefit: consider typing non-English text on a typical QWERTY keyboard. We clearly need to type mutliple physical keys to produce one logical character (this is sometimes known as “chord” input, by analogy with pressing multiple keys on a piano keyboard), and this translation lets us ignore the individual key-pressed and key-released events if we only want to consider what text was typed.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">On the other hand, if we want to keep track of which keys are pressed (e.g. to control a player’s motion while a key is held down), we need to resort to the lower-level events.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">This low-level/high-level distinction is not clearly defined, and depends on perspective. Would we consider \`ActionEvent\`s to be low-level or high-level? On the one hand, they’re clearly much *higher-level* than individual [\`MouseEvent\`s](https:</span><span style="color:#88846F;">//docs.oracle.com/javase/8/docs/api/java/awt/event/MouseEvent.html), which are analogous to \`KeyEvent\`s and indicate when a mouse button is pressed, released, or clicked, or when it enters or exits some area. Indeed, \`JButton\`s register themselves as \`MouseListener\`s, and translate the relevant mouse-clicked event into an \`ActionEvent\`! (They also register themselves as \`KeyListener\`s, and generate \`ActionEvent\`s when the Enter key is pressed.) But at the same time, the *user* of our view might not care which particular buttons we happened to use to implement the view, and there might well be multiple buttons that trigger identical actions: from that perspective, action events are too *low-level* and should be implementation details hidden behind some abstraction barrier.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Designing a view and controller properly requires considering what level of detail we want to expose in the events that the view forwards to the controller. Our current designs expose far too low-level detail: “something happened with the following action command”, or “some key was pressed/typed/released”. These events are very general, and have no specific semantics for our application. Let’s consider the different enhancements we can make, using either low-level or high-level events. We’ll find that we might want to translate generic low-level events into application-specific high-level ones.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## 8. Stage 4: Making the controller more flexible using low-level events</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Many applications run on multiple systems (e.g. Windows, Mac and Linux), and have hotkeys to perform various common actions — but the exact hotkey differs on each platform. It would be a shame to have to recompile the code in order to support these different keys. Similarly, many applications allow the user to customize the hotkeys that control the application. Here, it’s outright impossible for users to recompile the program to customize its behavior! Our next generalization aims to alleviate this lack of flexibility.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Our prior attempt hard-coded the keys in the various key event-listeners. In the KeyboardMaps directory, we generalize this so that we can reconfigure hotkeys at runtime. To accomplish this, we design a new \`KeyListener\` implementation that uses dictionaries of \`Runnable\`s instead of \`switch\` statements in its event handlers. Specifically, our \`KeyboardListener\` will contain a \`Map&lt;</span><span style="color:#66D9EF;font-style:italic;">Integer</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">Runnable</span><span style="color:#F8F8F2;">&gt;\` dictionary for its key-pressed event handler, another such dictionary for its key-released handler, and a \`Map&lt;</span><span style="color:#66D9EF;font-style:italic;">Character</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">Runnable</span><span style="color:#F8F8F2;">&gt;\` dictionary for its key-typed handler. (These \`Runnable\`s are examples of the command pattern, which we talked about several lectures ago.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">The handlers are pleasingly straightforward:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#88846F;">// In the KeyboardListener class</span></span>
<span class="line"><span style="color:#F8F8F2;">@Override</span></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F8F8F2;"> void keyTyped(KeyEvent e) {</span></span>
<span class="line"><span style="color:#A6E22E;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">keyTypedMap</span><span style="color:#F8F8F2;">.</span><span style="color:#FD971F;font-style:italic;">containsKey</span><span style="color:#F8F8F2;">(e.</span><span style="color:#A6E22E;">getKeyChar</span><span style="color:#F8F8F2;">()))</span></span>
<span class="line"><span style="color:#F8F8F2;">    keyTypedMap.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">e</span><span style="color:#F8F8F2;">.</span><span style="color:#FD971F;font-style:italic;">getKeyChar</span><span style="color:#F8F8F2;">()).</span><span style="color:#A6E22E;">run</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// analogously for the other two events</span></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Because</span><span style="color:#F8F8F2;"> the dictionaries are data, we can mutate them at runtime </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> we so choose, and therefore change which keys are mapped to which responses. (</span><span style="color:#66D9EF;font-style:italic;">For</span><span style="color:#F8F8F2;"> variety’s sake, we show three different syntaxes </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> creating \`Runnable\`s</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> explicit classes, anonymous classes, and lambda expressions.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#88846F;">// In the Controller class</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> configureKeyBoardListener</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Map</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Character</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">Runnable</span><span style="color:#F8F8F2;">&gt; keyTypes </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> HashMap</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Map</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Integer</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">Runnable</span><span style="color:#F8F8F2;">&gt; keyPresses </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> HashMap</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Map</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Integer</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">Runnable</span><span style="color:#F8F8F2;">&gt; keyReleases </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> HashMap</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Uses an explicit function-object class to provide the implementation</span></span>
<span class="line"><span style="color:#F8F8F2;">    keyReleases.</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(KeyEvent.VK_C, </span><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> MakeOriginalCase</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#88846F;">    // Uses an anonymous object to provide the implementation</span></span>
<span class="line"><span style="color:#F8F8F2;">    keyPresses.</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(KeyEvent.VK_C, </span><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Runnable</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">      public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> run</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;"> text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model.</span><span style="color:#A6E22E;">getString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> text.</span><span style="color:#A6E22E;">toUpperCase</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        view.</span><span style="color:#A6E22E;">setEchoOutput</span><span style="color:#F8F8F2;">(text);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#88846F;">    // Uses lambda-syntax to provide the implementation</span></span>
<span class="line"><span style="color:#F8F8F2;">    keyTypes.</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;r&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> { view.</span><span style="color:#A6E22E;">toggleColor</span><span style="color:#F8F8F2;">(); });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    KeyboardListener</span><span style="color:#F8F8F2;"> kbd </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> KeyboardListener</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    kbd.</span><span style="color:#A6E22E;">setKeyTypedMap</span><span style="color:#F8F8F2;">(keyTypes);</span></span>
<span class="line"><span style="color:#F8F8F2;">    kbd.</span><span style="color:#A6E22E;">setKeyPressedMap</span><span style="color:#F8F8F2;">(keyPresses);</span></span>
<span class="line"><span style="color:#F8F8F2;">    kbd.</span><span style="color:#A6E22E;">setKeyReleasedMap</span><span style="color:#F8F8F2;">(keyReleases);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.view.</span><span style="color:#A6E22E;">addKeyListener</span><span style="color:#F8F8F2;">(kbd);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">In</span><span style="color:#F8F8F2;"> the same manner as </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> \`KeyboardListener\`, our implementation also generalizes the \`ActionListener\` implementation into a dictionary that maps action commands to \`Runnable\`s.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">This</span><span style="color:#F8F8F2;"> transformation, which converts </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">explicit control flow</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> (the \`</span><span style="color:#F92672;">switch</span><span style="color:#F8F8F2;">\` statements we had earlier) into </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">data</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> (the keys of the \`Map\`) is a very common one in programming. We’ve clearly improved things somewhat, but we’re not finished</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> after all, </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> we hard</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">code the keys of the \`Map\` (as we did in the calls to \`keyPresses.put\` above), we haven’t really fixed anything, right</span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> Fortunately, we know a way around </span><span style="color:#FD971F;">this</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> by using a combination of a </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">reader</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> and </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">builder</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">, we could read in a “user preferences file” to figure out what keys to put in the maps, and then our code is completely agnostic to exactly which keys are needed </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> which handlers.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## </span><span style="color:#AE81FF;">9.</span><span style="color:#F8F8F2;"> Stage </span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> Decoupling</span><span style="color:#F8F8F2;"> the view from the controller using high</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level events</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">The</span><span style="color:#F8F8F2;"> previous generalization relied on the view exposing its low</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level events to the controller. However, we might reasonably want to trigger the same behavior from multiple </span><span style="color:#66D9EF;font-style:italic;">UI</span><span style="color:#F8F8F2;"> controls. In the </span><span style="color:#66D9EF;font-style:italic;">GeneralCommandCallbacks</span><span style="color:#F8F8F2;"> directory, we take </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> approach</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> our view can toggle the color of the text either via a button, or via typing the \`</span><span style="color:#E6DB74;">&#39;t&#39;</span><span style="color:#F8F8F2;">\` key. (</span><span style="color:#66D9EF;font-style:italic;">This</span><span style="color:#F8F8F2;"> is a simplified example, but is a stand</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">in </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> typical toolbar buttons doing the same thing as hotkey shortcuts.)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">The</span><span style="color:#F8F8F2;"> key innovation in </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> design is that we’ve eliminated the \`ActionListener\`s and \`KeyListener\`s from the controller and </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">also</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> from the \`IView\` interface. Instead, we have a </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> \`addFeatures\` method that takes in a new interface, \`Features\`, whose methods are the various high</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level features and abilities of our view. Our </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">prior</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> interfaces exposed low</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level events saying, </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> instance, “Hey, a button with </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> action command has been clicked; what should be done</span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;">” These </span><span style="color:#F92672;">*new*</span><span style="color:#F8F8F2;"> callbacks say, </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> example, “</span><span style="color:#66D9EF;font-style:italic;">The</span><span style="color:#F8F8F2;"> user has requested to make the display uppercase; what should be done</span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;">” This </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">is</span><span style="color:#F8F8F2;"> bigger than the \`ActionListener\` interface, but it’s also much more application-specific, and it advertises exactly the responsibilities a controller has to uphold for this view. It also successfully encapsulates the action commands that we leaked in prior designs: the view is now free to change those commands without breaking the controller at all.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">This design is quite elegant, and does the best job of loosening the coupling between the view and the controller: by encapsulating the details of which physical controls do what, the view is much more abstracted away, and the logical </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">that</span><span style="color:#F8F8F2;"> it presents to the controller is much more application-specific. Note that the \`Controller\` </span><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">and</span><span style="color:#F8F8F2;"> the \`Features\` </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">know</span><span style="color:#F8F8F2;"> absolutely nothing about Swing: they don’t even \`import\` the packages! Just like our model doesn’t need to know about how it’s being displayed, so too our controller doesn’t really need to know how the views are implemented. When possible, aspire to interfaces like this one, but be prepared to fall back to lower-level events when necessary.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">**Note:** It might seem odd that the \`toggleColor\` method is both a callback on the \`Features\` interface *and* a method on the \`IView\` interface — why can’t the view handle this internally? Indeed, it possibly could! (And in some circumstances, the view definitely *should* handle some events entirely internally: for instance, when implementing a text editor, the view should probably internally handle the sequence of low-level events that indicate the user has selected a stretch of text. Once the user does something with that text — deletes it, replaces it, copies it, etc. — the view can raise a semantically relevant high-level event with the selected content.) But consider a “bigger” version of our current program, where we have *two* views that we want to keep </span><span style="color:#F92672;">synchronized</span><span style="color:#F8F8F2;">: if either of them has toggled its color, both should toggle their colors together. The only way to ensure this synchronization is for the view to forward the event to the controller, which can in turn decide to tell *both* views how to update themselves.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">**Note:** Once again, in the sample code and in the snippets below, we write that the \`Controller\` \`implements\` \`Features\` directly: we use an is-a relationship. A better approach is to use a has-a relationship, and have a dedicated object that </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface instead. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">We</span><span style="color:#F8F8F2;"> omit this variant here, because there are enough other details to focus on right now!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## 10. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Aside</span><span style="color:#F8F8F2;"> 2: </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Designing</span><span style="color:#F8F8F2;"> a </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;"> interface</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">In</span><span style="color:#F8F8F2;"> the previous section we introduced a \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface, that hid the *</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Swing</span><span style="color:#F8F8F2;">*-specific event listeners and instead exposed *application*-specific events. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">But</span><span style="color:#F8F8F2;"> how are we to know what sort of application-specific events we should have? </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">It</span><span style="color:#F8F8F2;">’s difficult to give a one-size-fits-all answer here, since by definition this will be rather application-specific. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Instead</span><span style="color:#F8F8F2;">, we can articulate some guidelines to follow:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">- </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Avoid</span><span style="color:#F8F8F2;"> any view-specific classes in the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface wherever possible. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Above</span><span style="color:#F8F8F2;">, we said to eliminate any mention of </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Swing</span><span style="color:#F8F8F2;">-specific events, and generalized it further so that the controller did not need to depend on the </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Swing</span><span style="color:#F8F8F2;"> library at all. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">We</span><span style="color:#F8F8F2;"> can easily come up with a plausible counterexample to this generality: suppose we were building a drawing program, and the view allows the user to choose a color to draw with. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Surely</span><span style="color:#F8F8F2;"> the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface should expose the \`java.awt.</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Color</span><span style="color:#F8F8F2;">\` that the user picked? </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">In</span><span style="color:#F8F8F2;"> this case, though, the *model* also depends on \`java.awt.</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Color</span><span style="color:#F8F8F2;">\`, and so the view isn’t introducing any new dependencies. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">If</span><span style="color:#F8F8F2;"> the model chose a different class to represent its colors, then the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface ought to expose *that*, rather than the </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Swing</span><span style="color:#F8F8F2;"> color directly.</span></span>
<span class="line"><span style="color:#F8F8F2;">- </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Treat</span><span style="color:#F8F8F2;"> the methods in the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface as *requests from the user*. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">In</span><span style="color:#F8F8F2;"> particular, a view might allow a user to attempt various editing operations that the controller might prohibit, or that the model might reject as invalid. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">In</span><span style="color:#F8F8F2;"> our example above, “requesting an uppercase display” fits into this mindset. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Additionally</span><span style="color:#F8F8F2;">, brainstorming “what might the user try to do?” can help articulate all the possible features a user might want from the program, which in turn can help design the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` methods needed.</span></span>
<span class="line"><span style="color:#F8F8F2;">- </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Not</span><span style="color:#F8F8F2;"> all view-specific events need to turn into \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` requests. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">However</span><span style="color:#F8F8F2;">, events that never make it to the controller are therefore intrinsically uncontrollable. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">In</span><span style="color:#F8F8F2;"> sophisticated </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">GUIs</span><span style="color:#F8F8F2;">, a single controller might need to synchronize multiple views: for instance, a [split-screen text editor](https:</span><span style="color:#88846F;">//camo.githubusercontent.com/c535bd502fea4873724e2bebc144d3e2f4fe075e/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f32352f3131393038312f37333938343237612d366339362d313165322d393464632d3839363462333237333131332e706e67) could have two views of the same file, whose contents should be changed in tandem. A [video editor](https://helpx.adobe.com/content/dam/help/en/after-effects/how-to/camera-animation/jcr_content/main-pars/image_1685031719/camera-animation_step2.jpg) might have a timeline view at the bottom of the screen, as well as controls for the effects and a preview window, all of which must stay consistent. A [spreadsheet](https://www.exceldashboardtemplates.com/wp-content/uploads/2017/05/Copy-an-Excel-Chart-on-Same-Worksheet-Keeps-Same-Data-Reference-Final-Copied-Charts.png) might have a grid showing many cells of data, a textbox to edit a single cell, and a graph of multiple cells’ data, again which all must stay consistent. When implementing event handlers inside a particular view, consider whether the change being handled might need to be synchronized with multiple views: if so, then it should be raised as a \`Features\` request. If not, then it *might* be entirely handled within the view. For instance, scrolling a single text file might not need to inform the controller that the file has been scrolled, and so scrolling could be handled entirely within the view. On the other hand, a [diff viewer](https://www.git-tower.com/blog/media/pages/posts/diff-tools-windows/037ea85d83-1690885042/meld.png) that compares two files might wnat to scroll both files in unison, and so any scroll changes would need to be raised to the controller’s attention so that it can synchronize both views.</span></span>
<span class="line"><span style="color:#F8F8F2;">- </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">When</span><span style="color:#F8F8F2;"> a \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` event is raised to the controller’s attention, the view *probably* shouldn’t mutate itself, but rather wait for the controller to tell it to do so — this is in keeping with thinking of features as requests rather than demands. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">We</span><span style="color:#F8F8F2;"> noted this above, where \`toggleColor\` was both a method in the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface and also a method on the view, and the controller’s implementation of the \`toggleColor\` method turned around and called the view’s method, and we said this might seem overly roundabout. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">We</span><span style="color:#F8F8F2;"> gave one example where this was needed for synchronization of multiple views. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Another</span><span style="color:#F8F8F2;"> might be triggering some resource-limited effect (where the resource might be tracked by the model, like in-game bonuses, or the resource might be controller-specific, like live-streaming a video of a gameplay). </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">The</span><span style="color:#F8F8F2;"> view shouldn’t modify itself until the controller (and possibly model too) has confirmed that the request can go through.</span></span>
<span class="line"><span style="color:#F8F8F2;">- </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Any</span><span style="color:#F8F8F2;"> event that is handled entirely within the view is intrinsically more difficult to test. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">We</span><span style="color:#F8F8F2;"> would have to synthesize the low-level </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">UI</span><span style="color:#F8F8F2;"> events, which may be impractical or even impossible to do sufficiently. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">By</span><span style="color:#F8F8F2;"> decoupling the particular </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">UI</span><span style="color:#F8F8F2;"> event that triggers behavior from the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` implementation that actually provides the behavior, we limit the hard-to-test code to just the “wiring” between the event listeners and the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` object. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Since</span><span style="color:#F8F8F2;"> all the interesting behavior is now in the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` object, and since its methods depend only on application-specific concepts and types, we can easily create a mock view that triggers \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` methods without needing the actual </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Swing</span><span style="color:#F8F8F2;"> events. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">This</span><span style="color:#F8F8F2;"> allows for test cases analogous to those we saw in [</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Lecture</span><span style="color:#F8F8F2;"> 8](https:</span><span style="color:#88846F;">//course.ccs.neu.edu/cs3500/lec_controllers_mocks_notes.html), with all the benefits they bring.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## 11. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Stage</span><span style="color:#F8F8F2;"> 6: </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Further</span><span style="color:#F8F8F2;"> enhancements using \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">InputMap</span><span style="color:#F8F8F2;">\`s and \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">ActionMap</span><span style="color:#F8F8F2;">\`s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Our</span><span style="color:#F8F8F2;"> last revision eliminated the flexibility of dynamically changing hotkeys and reverted to hard-coding the keys in the view’s implementation of its own key listener. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Combining</span><span style="color:#F8F8F2;"> the flexibility of the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">KeyboardListener</span><span style="color:#F8F8F2;">\` and its dictionaries, with the high-level events of the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;">\` interface, is aesthetically tricky: who should control which keys do what? </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">In</span><span style="color:#F8F8F2;"> some sense, it almost feels like the choice should be made not by our current controller, which is controlling a particular model and view, but rather to some hypothetical “application controller”, that controls the overall application. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">We</span><span style="color:#F8F8F2;">’ve already encountered this in practice: in </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">IntelliJ</span><span style="color:#F8F8F2;">, there are both project-specific settings and application-wide settings, and different dialogs control those different features.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Additionally</span><span style="color:#F8F8F2;">, implementing the keyboard-listening dictionaries is tedious: surely this functionality could be implemented once and for all, and we wouldn’t need to redo it in every single application?</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">The</span><span style="color:#F8F8F2;"> solution, once again, is a layer of indirection. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">We</span><span style="color:#F8F8F2;">’ve seen above that </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Swing</span><span style="color:#F8F8F2;"> components have a notion of an *action command*, and that we can cause code to run depending on which action was triggered. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Combining</span><span style="color:#F8F8F2;"> several of these actions together should seem reminiscent of the \`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">KeyboardListener</span><span style="color:#F8F8F2;">\` dictionaries we just built. </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">In</span><span style="color:#F8F8F2;"> fact, </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Swing</span><span style="color:#F8F8F2;"> has a concept of an [\`</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">ActionMap</span><span style="color:#F8F8F2;">\`](https:</span><span style="color:#88846F;">//docs.oracle.com/javase/8/docs/api/javax/swing/ActionMap.html), which is essentially just such a dictionary from action commands to actions.[1](https://course.ccs.neu.edu/cs3500/lec_gui_basics_notes.html#(counter-()._(gentag._23._lecturegui_basics))) An \`Action\` in Swing has many potential subclasses; we’ll focus on the \`AbstractAction\` class, which we can subclass ourselves to create new action handlers. For instance, we might write</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Action</span><span style="color:#F8F8F2;"> makeOriginalCase = new </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">AbstractAction</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    String</span><span style="color:#F8F8F2;"> text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model.</span><span style="color:#A6E22E;">getString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setEchoOutput</span><span style="color:#F8F8F2;">(text);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Action</span><span style="color:#F8F8F2;"> makeCaps </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> AbstractAction</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    String</span><span style="color:#F8F8F2;"> text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model.</span><span style="color:#A6E22E;">getString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> text.</span><span style="color:#A6E22E;">toUpperCase</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setEchoOutput</span><span style="color:#F8F8F2;">(text);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Action</span><span style="color:#F8F8F2;"> toggleColor </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> AbstractAction</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">toggleColor</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">This</span><span style="color:#F8F8F2;"> is all well and good, and now we have yet one more way of representing runnable bits of code, but how should we actually associate these actions with their keyboard triggers</span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> First, we associate these \`Action\`s with their action commands</span><span style="color:#F92672;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#88846F;">// Somewhere in our View class:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">aComponent.</span><span style="color:#A6E22E;">getActionMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;restoreLowercase&quot;</span><span style="color:#F8F8F2;">, makeOriginalCase);</span></span>
<span class="line"><span style="color:#F8F8F2;">aComponent.</span><span style="color:#A6E22E;">getActionMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;makeCaps&quot;</span><span style="color:#F8F8F2;">, makeCaps);</span></span>
<span class="line"><span style="color:#F8F8F2;">aComponent.</span><span style="color:#A6E22E;">getActionMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;toggleColor&quot;</span><span style="color:#F8F8F2;">, toggleColor);</span></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">We</span><span style="color:#F8F8F2;"> then need the second piece of the indirection</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> an [\`InputMap\`](https</span><span style="color:#F92672;">:</span><span style="color:#88846F;">//docs.oracle.com/javase/8/docs/api/javax/swing/InputMap.html). \`InputMap\`s associate [\`KeyStroke\`s](https://docs.oracle.com/javase/8/docs/api/javax/swing/KeyStroke.html) with action commands. A \`KeyStroke\` describes our key-press, key-release, and key-type low-level events in a uniform manner. When a low-level key event matches something in an \`InputMap\`, the associated action command is looked up in the \`ActionMap\` and fired. So we can continue our code as follows:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#88846F;">// Somewhere in our View class:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Use simplest constructor to describe a key-press</span></span>
<span class="line"><span style="color:#F8F8F2;">aComponent.</span><span style="color:#A6E22E;">getInputMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(KeyStroke.</span><span style="color:#A6E22E;">getKeyStroke</span><span style="color:#F8F8F2;">(KeyEvent.VK_C), </span><span style="color:#E6DB74;">&quot;makeCaps&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// Use another constructor to describe key-releases</span></span>
<span class="line"><span style="color:#F8F8F2;">aComponent.</span><span style="color:#A6E22E;">getInputMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(KeyStroke.</span><span style="color:#A6E22E;">getKeyStroke</span><span style="color:#F8F8F2;">(KeyEvent.VK_C, </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">), </span><span style="color:#E6DB74;">&quot;restoreLowercase&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// Yet another constructor lets us describe key-typed events</span></span>
<span class="line"><span style="color:#F8F8F2;">aComponent.</span><span style="color:#A6E22E;">getInputMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(KeyStroke.</span><span style="color:#A6E22E;">getKeyStroke</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;typed r&quot;</span><span style="color:#F8F8F2;">), </span><span style="color:#E6DB74;">&quot;toggleColor&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">**</span><span style="color:#F8F8F2;">Note</span><span style="color:#F92672;">:**</span><span style="color:#F8F8F2;"> \`InputMap\`s and \`ActionMap\`s apply only to \`JComponent\`s, and not to \`JFrame\`s directly. However, we can easily add a component to our frame </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> the sole purpose of handling key events, and we [can specify](https</span><span style="color:#F92672;">:</span><span style="color:#88846F;">//docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html) that its \`InputMap\` be used whenever the frame has focus at all.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">This</span><span style="color:#F8F8F2;"> seems like a lot of machinery to introduce, and it would be unwieldy </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> it weren’t so reusable. The critical design patterns here are</span><span style="color:#F92672;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">-</span><span style="color:#66D9EF;font-style:italic;"> We</span><span style="color:#F8F8F2;"> have a mechanism </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> translating low</span><span style="color:#F92672;">-</span><span style="color:#A6E22E;">level</span><span style="color:#F8F8F2;"> (\`KeyEvent\`s) into mid</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level action commands.</span></span>
<span class="line"><span style="color:#F92672;">-</span><span style="color:#66D9EF;font-style:italic;"> We</span><span style="color:#F8F8F2;"> have transformed control </span><span style="color:#A6E22E;">flow</span><span style="color:#F8F8F2;"> (of what code to run based on what key was pressed) into </span><span style="color:#A6E22E;">data</span><span style="color:#F8F8F2;"> (a map of \`KeyStroke\`s).</span></span>
<span class="line"><span style="color:#F92672;">-</span><span style="color:#66D9EF;font-style:italic;"> We</span><span style="color:#F8F8F2;"> have a mechanism from translating mid</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level action commands into actual runnable actions.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">The</span><span style="color:#F8F8F2;"> code still suffers from one problem</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> the \`Action\`s themselves feel like they belong in the </span><span style="color:#A6E22E;">controller</span><span style="color:#F8F8F2;"> (since they refer to \`model\` and \`view\`), but are referenced directly in the </span><span style="color:#A6E22E;">view</span><span style="color:#F8F8F2;"> (in the \`</span><span style="color:#A6E22E;">getActionMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(...)\` lines). We can combine these maps with our \`Features\` design, to get one </span><span style="color:#F92672;">final</span><span style="color:#F8F8F2;"> translation from mid</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level action commands to high</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">level events</span><span style="color:#F92672;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`java</span></span>
<span class="line"><span style="color:#88846F;">// NOTE: this class makes no mention of Actions or Controllers.</span></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">JFrameView</span><span style="color:#F92672;"> extends</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">JFrame</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">IView</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  KeyComponent</span><span style="color:#F8F8F2;"> keyComponent;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> JFrameView</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> caption</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    super</span><span style="color:#F8F8F2;">(caption);</span></span>
<span class="line"><span style="color:#F8F8F2;">    ...</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.keyComponent </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> KeyComponent</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(keyComponent);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> setHotKey</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">KeyStroke</span><span style="color:#FD971F;font-style:italic;"> key</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> featureName</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.keyComponent.</span><span style="color:#A6E22E;">getInputMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(key, featureName);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> addFeatures</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Features</span><span style="color:#FD971F;font-style:italic;"> features</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.keyComponent.</span><span style="color:#A6E22E;">addFeatures</span><span style="color:#F8F8F2;">(features);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// NOTE: Neither does this class!  It only refers to Features.</span></span>
<span class="line"><span style="color:#F92672;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">KeyComponent</span><span style="color:#F92672;"> extends</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">JPanel</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  List</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Features</span><span style="color:#F8F8F2;">&gt; featureListeners </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  // Includes this new feature listener in responding to keys</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  void</span><span style="color:#A6E22E;"> addFeatures</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Features</span><span style="color:#FD971F;font-style:italic;"> f</span><span style="color:#F8F8F2;">) { </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.featureListeners.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(f); }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">  KeyComponent</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#88846F;">    // Install action command -&gt; Feature callback associations</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getActionMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;makeCaps&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> AbstractAction</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">      public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">Features</span><span style="color:#F8F8F2;"> f </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> featureListeners)</span></span>
<span class="line"><span style="color:#F8F8F2;">          f.</span><span style="color:#A6E22E;">makeUppercase</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getActionMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;restoreLowercase&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> AbstractAction</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">      public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">Features</span><span style="color:#F8F8F2;"> f </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> featureListeners)</span></span>
<span class="line"><span style="color:#F8F8F2;">          f.</span><span style="color:#A6E22E;">restoreLowercase</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getActionMap</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;toggleColor&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> AbstractAction</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">      public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">Features</span><span style="color:#F8F8F2;"> f </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> featureListeners)</span></span>
<span class="line"><span style="color:#F8F8F2;">          f.</span><span style="color:#A6E22E;">toggleColor</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">    ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// NOTE: Only the Controller needs to know how to implement Features.</span></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Controller</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Features</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#66D9EF;font-style:italic;"> IModel</span><span style="color:#F8F8F2;"> model;</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#66D9EF;font-style:italic;"> IView</span><span style="color:#F8F8F2;"> view;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  // These are the high-level event handlers we care about:</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> toggleColor</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">toggleColor</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> makeUppercase</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    String</span><span style="color:#F8F8F2;"> text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model.</span><span style="color:#A6E22E;">getString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> text.</span><span style="color:#A6E22E;">toUpperCase</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setEchoOutput</span><span style="color:#F8F8F2;">(text);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> restoreLowercase</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    String</span><span style="color:#F8F8F2;"> text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model.</span><span style="color:#A6E22E;">getString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setEchoOutput</span><span style="color:#F8F8F2;">(text);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  // This attaches this controller as our features listener</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> setView</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">IView</span><span style="color:#FD971F;font-style:italic;"> v</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.view </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> v;</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">addFeatures</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Choose the keys we want</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setHotKey</span><span style="color:#F8F8F2;">(KeyStroke.</span><span style="color:#A6E22E;">getKeyStroke</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;pressed c&quot;</span><span style="color:#F8F8F2;">), </span><span style="color:#E6DB74;">&quot;makeCaps&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setHotKey</span><span style="color:#F8F8F2;">(KeyStroke.</span><span style="color:#A6E22E;">getKeyStroke</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;released c&quot;</span><span style="color:#F8F8F2;">), </span><span style="color:#E6DB74;">&quot;restoreLowercase&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">setHotKey</span><span style="color:#F8F8F2;">(KeyStroke.</span><span style="color:#A6E22E;">getKeyStroke</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;typed r&quot;</span><span style="color:#F8F8F2;">), </span><span style="color:#E6DB74;">&quot;toggleColor&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  ...</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">\\\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">## </span><span style="color:#AE81FF;">12.</span><span style="color:#66D9EF;font-style:italic;"> Exercises</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">At</span><span style="color:#F8F8F2;"> the top of </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> lecture are starter files </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> a </span><span style="color:#66D9EF;font-style:italic;">GUI</span><span style="color:#F8F8F2;"> version of the </span><span style="color:#66D9EF;font-style:italic;">Turtles</span><span style="color:#F8F8F2;"> example we worked through in [Lecture </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">](https</span><span style="color:#F92672;">:</span><span style="color:#88846F;">//course.ccs.neu.edu/cs3500/lec_commands_notes.html). The \`TurtleGraphicsView\` does not currently do anything. Enhance this code with a new \`TurtlePanel\` class that \`extends JPanel\`, and override its \`paintComponent\` method to draw whatever you want, just to confirm that it works.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Next, enhance the \`IView\` </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">so</span><span style="color:#F8F8F2;"> you can pass the relevant information from the model, through the controller, into the view and into your \`TurtlePanel\` class. Once you’ve connected the pieces, use this information in your \`paintComponent\` implementation to draw the turtle’s trace.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">The links at the top of the lecture include a “solution” implementation; do not to look at that until you’ve tried to implement this yourself.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">The \`IView\` </span><span style="color:#F92672;">interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">contains</span><span style="color:#F8F8F2;"> one method for setting up an event listener. What is its signature? Does it seem like a high-level event to you, or a low-level one? If you think it’s too low-level, can you think of a better, higher-level signature to use? If you think it’s sufficiently high-level, why do you think so?</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">1\`Action\`s themselves are more generally useful in Swing than just for keyboard interaction, but we’ll focus on just the keyboard part here.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></details><h2 id="_1-主要内容" tabindex="-1"><a class="header-anchor" href="#_1-主要内容"><span>1. 主要内容</span></a></h2><ol><li><strong>Model</strong>： 负责存储和封装数据逻辑；</li><li><strong>View</strong>： 负责展示数据，可以是文本界面，也可以是图形界面；</li><li><strong>Controller</strong>： 负责协调用户输入与对 Model 的操作，并通知 View 做出相应更新；</li></ol><p>我们会先展示一个<strong>文本界面</strong>版本，随后演示如何切换到<strong>图形界面</strong>（GUI），以及如何一步步改进、解耦视图和控制器、处理键盘事件等。</p><h2 id="stage-1-实现基础-model" tabindex="-1"><a class="header-anchor" href="#stage-1-实现基础-model"><span>Stage 1: 实现基础 Model</span></a></h2><h3 id="_1-model-接口" tabindex="-1"><a class="header-anchor" href="#_1-model-接口"><span>1. Model 接口</span></a></h3><ul><li><strong>代码名称</strong>： <code>IModel.java</code></li><li><strong>功能</strong>： 定义了一个最简单的模型接口，只有 <code>get/set</code> 字符串的方法，供后续 view 和 Controller 调用。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">IModel</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 获取当前存储的字符串</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@return</span><span style="color:#88846F;"> 模型中的字符串</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  String</span><span style="color:#A6E22E;"> getString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 设置新的字符串</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@param</span><span style="color:#FD971F;font-style:italic;"> str</span><span style="color:#88846F;"> 要设置的新字符串</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  void</span><span style="color:#A6E22E;"> setString</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> str</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>代码逐行注释</strong>：</p><ol><li><code>public interface IModel { ... }</code>：定义一个接口，命名为 <code>IModel</code>。</li><li><code>String getString();</code>：声明一个方法用于读取当前字符串。</li><li><code>void setString(String str);</code>：声明一个方法用于更新当前字符串。</li></ol><h3 id="_2-model-类" tabindex="-1"><a class="header-anchor" href="#_2-model-类"><span>2. Model 类</span></a></h3><ul><li><p><strong>代码名称</strong>：<code>Model.java</code></p></li><li><p><strong>功能</strong>：<code>IModel</code> 接口的具体实现，内部用一个 <code>String</code> 来存储数据。</p></li></ul><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Model</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">IModel</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#66D9EF;font-style:italic;"> String</span><span style="color:#F8F8F2;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 构造函数，初始化字符串为空或给定初值</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> Model</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.data </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> String</span><span style="color:#A6E22E;"> getString</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#FD971F;"> this</span><span style="color:#F8F8F2;">.data;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> setString</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> str</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> str;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>代码逐行注释</strong>：</p><ol><li><code>public class Model implements IModel</code>：类 <code>Model</code> 实现了 <code>IModel</code> 接口。</li><li><code>private String data;</code>：私有字段 <code>data</code> 用于实际存储字符串内容。</li><li><code>public Model()</code>：构造函数，将 <code>data</code> 初始化为空字符串（当然也可改为接受一个初始值）。</li><li><code>public String getString()</code>：实现接口方法，返回当前存储的字符串。</li><li><code>public void setString(String str)</code>：实现接口方法，修改存储的字符串。</li></ol><h2 id="stage-2-实现文本方式的-view" tabindex="-1"><a class="header-anchor" href="#stage-2-实现文本方式的-view"><span>Stage 2: 实现文本方式的 View</span></a></h2><h3 id="_1-iview-接口" tabindex="-1"><a class="header-anchor" href="#_1-iview-接口"><span>1. IView 接口</span></a></h3><ul><li><p><strong>代码名称</strong>：<code>IView.java</code></p></li><li><p><strong>功能</strong>：定义了一个最简单的视图接口，能够显示信息，以及（可选）展示错误消息等。这里只做最基本的打印操作。</p></li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">IView</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 显示给用户看的输出</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@param</span><span style="color:#FD971F;font-style:italic;"> message</span><span style="color:#88846F;"> 要显示的内容</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  void</span><span style="color:#A6E22E;"> showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> message</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 显示错误信息</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@param</span><span style="color:#FD971F;font-style:italic;"> error</span><span style="color:#88846F;"> 要显示的错误信息</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  void</span><span style="color:#A6E22E;"> showError</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> error</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>代码逐行注释</strong>：</p><ol><li><code>public interface IView { ... }</code>：定义视图接口 <code>IView</code>。</li><li><code>void showMessage(String message);</code>：向用户显示普通文本消息。</li><li><code>void showError(String error);</code>：向用户显示错误信息或提示。</li></ol><h3 id="_2-textview-类" tabindex="-1"><a class="header-anchor" href="#_2-textview-类"><span>2. TextView 类</span></a></h3><ul><li><strong>代码名称</strong>：<code>TextView.java</code></li><li><strong>功能</strong>：<code>IView</code> 的具体实现，把消息打印到给定的输出流（如控制台）。</li></ul><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.io.PrintStream</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TextView</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">IView</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> PrintStream</span><span style="color:#F8F8F2;"> out;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 构造函数</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@param</span><span style="color:#FD971F;font-style:italic;"> out</span><span style="color:#88846F;"> 指定要输出的流，比如 System.out</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> TextView</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">PrintStream</span><span style="color:#FD971F;font-style:italic;"> out</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.out </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> out;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> message</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(message);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> showError</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> error</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;ERROR: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> error);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>代码逐行注释</strong>：</p><ol><li><code>private final PrintStream out;</code>：用来存放输出流（比如 <code>System.out</code>，也可以是测试时的假输出）。</li><li>构造函数：接受一个 <code>PrintStream out</code> 并保存，方便后续统一打印。</li><li><code>showMessage</code>：实现接口方法，直接打印普通信息。</li><li><code>showError</code>：实现接口方法，在打印时加上 <code>&quot;ERROR: &quot;</code> 前缀以示区别。</li></ol><h2 id="stage-3-实现文本方式的-controller" tabindex="-1"><a class="header-anchor" href="#stage-3-实现文本方式的-controller"><span>Stage 3: 实现文本方式的 Controller</span></a></h2><h3 id="_1-icontroller-接口" tabindex="-1"><a class="header-anchor" href="#_1-icontroller-接口"><span>1. IController 接口</span></a></h3><ul><li><strong>代码名称</strong>：<code>IController.java</code></li><li><strong>功能</strong>：定义了控制器的最小接口，即一个 <code>start()</code> 方法，开始接管程序流程。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">IController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 开始执行程序逻辑</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">  void</span><span style="color:#A6E22E;"> start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-textcontroller-类" tabindex="-1"><a class="header-anchor" href="#_2-textcontroller-类"><span>2. TextController 类</span></a></h3><ul><li><strong>代码名称</strong>：<code>TextController.java</code></li><li><strong>功能</strong>：文本控制器的实现，结合 <code>IModel</code>、<code>IView</code> 以及用户输入（通过 Scanner 读取）。循环读取用户命令，进行相应处理。</li></ul><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.Scanner</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TextController</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">IController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> IModel</span><span style="color:#F8F8F2;"> model;</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> IView</span><span style="color:#F8F8F2;"> view;</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> Scanner</span><span style="color:#F8F8F2;"> sc;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  /**</span></span>
<span class="line"><span style="color:#88846F;">   * 构造函数</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@param</span><span style="color:#FD971F;font-style:italic;"> model</span><span style="color:#88846F;"> 模型</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@param</span><span style="color:#FD971F;font-style:italic;"> view</span><span style="color:#88846F;">  视图</span></span>
<span class="line"><span style="color:#88846F;">   * </span><span style="color:#F92672;">@param</span><span style="color:#FD971F;font-style:italic;"> sc</span><span style="color:#88846F;">    用于读取用户输入的扫描器</span></span>
<span class="line"><span style="color:#88846F;">   */</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> TextController</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">IModel</span><span style="color:#FD971F;font-style:italic;"> model</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">IView</span><span style="color:#FD971F;font-style:italic;"> view</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">Scanner</span><span style="color:#FD971F;font-style:italic;"> sc</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.model </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model;</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.view </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> view;</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.sc </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sc;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> start</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    view.</span><span style="color:#A6E22E;">showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;欢迎使用文本版程序！&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    boolean</span><span style="color:#F8F8F2;"> running </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> (running) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      view.</span><span style="color:#A6E22E;">showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入操作：</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F92672;"> +</span></span>
<span class="line"><span style="color:#E6DB74;">                       &quot;1: 查看当前字符串</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F92672;"> +</span></span>
<span class="line"><span style="color:#E6DB74;">                       &quot;2: 设置新的字符串</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F92672;"> +</span></span>
<span class="line"><span style="color:#E6DB74;">                       &quot;q: 退出程序&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">      String</span><span style="color:#F8F8F2;"> input </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sc.</span><span style="color:#A6E22E;">nextLine</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">trim</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F92672;">      switch</span><span style="color:#F8F8F2;"> (input) {</span></span>
<span class="line"><span style="color:#F92672;">        case</span><span style="color:#E6DB74;"> &quot;1&quot;</span><span style="color:#F92672;">:</span><span style="color:#88846F;"> // 查看当前字符串</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">          String</span><span style="color:#F8F8F2;"> current </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model.</span><span style="color:#A6E22E;">getString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">          view.</span><span style="color:#A6E22E;">showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;当前字符串为: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> current);</span></span>
<span class="line"><span style="color:#F92672;">          break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        case</span><span style="color:#E6DB74;"> &quot;2&quot;</span><span style="color:#F92672;">:</span><span style="color:#88846F;"> // 设置新的字符串</span></span>
<span class="line"><span style="color:#F8F8F2;">          view.</span><span style="color:#A6E22E;">showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入新字符串：&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">          String</span><span style="color:#F8F8F2;"> newVal </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sc.</span><span style="color:#A6E22E;">nextLine</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">          model.</span><span style="color:#A6E22E;">setString</span><span style="color:#F8F8F2;">(newVal);</span></span>
<span class="line"><span style="color:#F8F8F2;">          view.</span><span style="color:#A6E22E;">showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;已更新字符串！&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">          break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        case</span><span style="color:#E6DB74;"> &quot;q&quot;</span><span style="color:#F92672;">:</span><span style="color:#88846F;"> // 退出</span></span>
<span class="line"><span style="color:#F8F8F2;">          running </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">          view.</span><span style="color:#A6E22E;">showMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;程序已退出。&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">          break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        default:</span></span>
<span class="line"><span style="color:#F8F8F2;">          view.</span><span style="color:#A6E22E;">showError</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;未知命令，请重新输入。&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>代码逐行注释</strong>：</p><ol><li>定义了 <code>model</code>, <code>view</code>, <code>sc</code> 三个私有字段，分别负责模型、视图和输入。</li><li><code>public TextController(IModel model, IView view, Scanner sc)</code>：构造函数中注入这三者。</li><li><code>start()</code>：核心方法，用 <code>while</code> 循环反复让用户输入命令。</li><li>根据用户输入的内容（<code>switch (input)</code>）来做不同的操作： <ul><li><code>&quot;1&quot;</code>：读取并打印当前字符串</li><li><code>&quot;2&quot;</code>：让用户输入新的字符串并更新到模型中</li><li><code>&quot;q&quot;</code>：退出循环并结束程序</li><li>其他：打印错误提示</li></ul></li></ol><h2 id="stage-4-测试并运行文本版-mvc" tabindex="-1"><a class="header-anchor" href="#stage-4-测试并运行文本版-mvc"><span>Stage 4: 测试并运行文本版 MVC</span></a></h2><ul><li><strong>代码名称</strong>：<code>MainText.java</code>（示例主类）</li><li><strong>功能</strong>：演示如何搭建并运行我们的文本版 MVC。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.Scanner</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MainText</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    IModel</span><span style="color:#F8F8F2;"> model </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Model</span><span style="color:#F8F8F2;">();                 </span><span style="color:#88846F;">// 创建模型</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    IView</span><span style="color:#F8F8F2;"> view </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> TextView</span><span style="color:#F8F8F2;">(System.out);      </span><span style="color:#88846F;">// 创建文本视图，输出到控制台</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Scanner</span><span style="color:#F8F8F2;"> sc </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Scanner</span><span style="color:#F8F8F2;">(System.in);        </span><span style="color:#88846F;">// 创建扫描器读取用户输入</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    IController</span><span style="color:#F8F8F2;"> controller </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> TextController</span><span style="color:#F8F8F2;">(model, view, sc);</span></span>
<span class="line"><span style="color:#F8F8F2;">    controller.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();                         </span><span style="color:#88846F;">// 启动文本版程序</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>代码逐行注释</strong>：</p><ol><li><code>IModel model = new Model();</code>：实例化我们刚才写的 <code>Model</code>。</li><li><code>IView view = new TextView(System.out);</code>：文本视图使用 <code>System.out</code> 输出到控制台。</li><li><code>Scanner sc = new Scanner(System.in);</code>：从控制台读取用户输入。</li><li><code>IController controller = new TextController(model, view, sc);</code>：组装 MVC 三要素。</li><li><code>controller.start();</code>：启动控制器，程序进入循环运行。</li></ol><p>运行该 <code>main</code> 方法后，您可以在控制台依照提示输入指令来操作模型的字符串。</p><h2 id="stage-5-初识-gui-不太好的写法示例" tabindex="-1"><a class="header-anchor" href="#stage-5-初识-gui-不太好的写法示例"><span>Stage 5: 初识 GUI（不太好的写法示例）</span></a></h2><p>下面我们开始引入图形界面（GUI）。先做一个“坏设计但能运行”的简单版本，让大家看到最基本的 Swing 用法。这个版本会让“视图”直接持有并修改 <code>Model</code>，从而破坏了 MVC 的解耦原则，但能让我们先快速见识到 Swing 编程的主要元素：<code>JFrame</code>, <code>JLabel</code>, <code>JButton</code>, <code>JTextField</code> 等。</p><h3 id="_1-简易的-gui-view-不推荐写法" tabindex="-1"><a class="header-anchor" href="#_1-简易的-gui-view-不推荐写法"><span>1. 简易的 GUI View（不推荐写法）</span></a></h3><ul><li><strong>代码名称</strong>：<code>JFrameView.java</code></li><li><strong>功能</strong>：创建一个窗口 (<code>JFrame</code>)，里面含有一个输入框、两个按钮和一个标签；当点击按钮时，直接操作 <code>Model</code>。</li></ul><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> javax.swing.</span><span style="color:#FD971F;">*</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.awt.</span><span style="color:#FD971F;">*</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.awt.event.ActionEvent</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.awt.event.ActionListener</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">JFrameView</span><span style="color:#F92672;"> extends</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">JFrame</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">ActionListener</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> IModel</span><span style="color:#F8F8F2;"> model;</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> JLabel</span><span style="color:#F8F8F2;"> display;      </span><span style="color:#88846F;">// 用于显示文本</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> JTextField</span><span style="color:#F8F8F2;"> input;    </span><span style="color:#88846F;">// 用户输入的文本框</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> JButton</span><span style="color:#F8F8F2;"> echoButton;  </span><span style="color:#88846F;">// Echo 按钮</span></span>
<span class="line"><span style="color:#F92672;">  private</span><span style="color:#F92672;"> final</span><span style="color:#66D9EF;font-style:italic;"> JButton</span><span style="color:#F8F8F2;"> exitButton;  </span><span style="color:#88846F;">// Exit 按钮</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> JFrameView</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> caption</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">IModel</span><span style="color:#FD971F;font-style:italic;"> model</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    super</span><span style="color:#F8F8F2;">(caption);</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.model </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model;</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">setLayout</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> FlowLayout</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Label</span></span>
<span class="line"><span style="color:#F8F8F2;">    display </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JLabel</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;初始状态&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(display);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // TextField</span></span>
<span class="line"><span style="color:#F8F8F2;">    input </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JTextField</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 宽度10列</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(input);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Echo 按钮</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JButton</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Echo&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton.</span><span style="color:#A6E22E;">setActionCommand</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Echo Button&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    echoButton.</span><span style="color:#A6E22E;">addActionListener</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">);   </span><span style="color:#88846F;">// 直接由自己处理监听</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(echoButton);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Exit 按钮</span></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JButton</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Exit&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton.</span><span style="color:#A6E22E;">setActionCommand</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Exit Button&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    exitButton.</span><span style="color:#A6E22E;">addActionListener</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(exitButton);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">pack</span><span style="color:#F8F8F2;">();           </span><span style="color:#88846F;">// 让布局生效</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">setVisible</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 显示窗口</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">setDefaultCloseOperation</span><span style="color:#F8F8F2;">(JFrame.EXIT_ON_CLOSE);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#66D9EF;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> actionPerformed</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">ActionEvent</span><span style="color:#FD971F;font-style:italic;"> e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">    switch</span><span style="color:#F8F8F2;"> (e.</span><span style="color:#A6E22E;">getActionCommand</span><span style="color:#F8F8F2;">()) {</span></span>
<span class="line"><span style="color:#F92672;">      case</span><span style="color:#E6DB74;"> &quot;Echo Button&quot;</span><span style="color:#F92672;">:</span></span>
<span class="line"><span style="color:#88846F;">        // 直接修改 model</span></span>
<span class="line"><span style="color:#F8F8F2;">        model.</span><span style="color:#A6E22E;">setString</span><span style="color:#F8F8F2;">(input.</span><span style="color:#A6E22E;">getText</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">        display.</span><span style="color:#A6E22E;">setText</span><span style="color:#F8F8F2;">(model.</span><span style="color:#A6E22E;">getString</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F92672;">        break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">      case</span><span style="color:#E6DB74;"> &quot;Exit Button&quot;</span><span style="color:#F92672;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.</span><span style="color:#A6E22E;">exit</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">      default:</span></span>
<span class="line"><span style="color:#88846F;">        // do nothing</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>代码逐行注释</strong>：</p><ol><li><code>extends JFrame implements ActionListener</code>：让类本身既是一个窗口，又直接处理按钮点击事件。</li><li><code>this.setLayout(new FlowLayout());</code>：使用流式布局，让控件依次放置。</li><li>创建 <code>JLabel</code>, <code>JTextField</code>, 两个 <code>JButton</code>，并将它们添加到框架中。</li><li><code>echoButton.setActionCommand(&quot;Echo Button&quot;);</code>：设置按钮的“命令字符串”，后面在 <code>actionPerformed</code> 里区分。</li><li><code>echoButton.addActionListener(this);</code>：将当前对象本身作为监听器。</li><li>在 <code>actionPerformed</code> 中，通过 <code>switch</code> 判断是哪个按钮被点击： <ul><li><code>&quot;Echo Button&quot;</code>：把输入框的内容写入模型，再将模型里的新值更新到标签显示。</li><li><code>&quot;Exit Button&quot;</code>：退出程序。</li></ul></li></ol><h3 id="_2-启动这个不推荐的-gui" tabindex="-1"><a class="header-anchor" href="#_2-启动这个不推荐的-gui"><span>2. 启动这个不推荐的 GUI</span></a></h3><ul><li><strong>代码名称</strong>：<code>MainBadGUI.java</code></li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MainBadGUI</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    IModel</span><span style="color:#F8F8F2;"> model </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Model</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#88846F;">    // 直接把 Model 传给 View，违反了解耦原则，但可用</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    JFrameView</span><span style="color:#F8F8F2;"> view </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JFrameView</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Bad GUI Demo&quot;</span><span style="color:#F8F8F2;">, model);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就能弹出一个窗口，点击 Echo 会直接改模型，点击 Exit 会关闭程序。</p><h2 id="stage-6-解耦-view-与-model" tabindex="-1"><a class="header-anchor" href="#stage-6-解耦-view-与-model"><span>Stage 6: 解耦 View 与 Model</span></a></h2><p>为了让我们的 MVC 架构更清晰，我们希望视图<strong>不要</strong>直接调用 <code>model.setString</code>。而是把对模型的修改统一交给 Controller 来处理。</p><p>思路：</p><ol><li><strong>View</strong> 不再持有 <code>model</code>；只提供获取文本、显示文本等方法。</li><li><strong>Controller</strong> 拥有 <code>model</code> 和 <code>view</code>，并把自己注册给 <code>view</code>，让 <code>view</code> 把事件再转给 <code>controller</code>。</li></ol>`,56)),i(c,{id:"426",data:[{id:"1. 新的 IView"},{id:"2. 新的 JFrameView"},{id:"3. Controller"},{id:"主类运行"}]},{title0:e(({value:a,isActive:o})=>l[0]||(l[0]=[n("1. 新的 IView")])),title1:e(({value:a,isActive:o})=>l[1]||(l[1]=[n("2. 新的 JFrameView")])),title2:e(({value:a,isActive:o})=>l[2]||(l[2]=[n("3. Controller")])),title3:e(({value:a,isActive:o})=>l[3]||(l[3]=[n("主类运行")])),tab0:e(({value:a,isActive:o})=>l[4]||(l[4]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," interface"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 返回用户在文本框中输入的字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 清空文本框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 在界面上显示一个字符串（比如更新某个 label）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#88846F"}}," 要显示的内容")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 显示窗口")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 提供给外部设置按钮监听器")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#88846F"}}," 控制器传入的 ActionListener")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:e(({value:a,isActive:o})=>l[5]||(l[5]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," javax.swing."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"JFrameView"),s("span",{style:{color:"#F92672"}}," extends"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"JFrame"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}}," display;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}}," input;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," echoButton;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," exitButton;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," JFrameView"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," caption"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    super"),s("span",{style:{color:"#F8F8F2"}},"(caption);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setLayout"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#F92672"}},"new"),s("span",{style:{color:"#A6E22E"}}," FlowLayout"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 不再持有 IModel")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"初始状态"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(display);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(input);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(echoButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(exitButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"pack"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setDefaultCloseOperation"),s("span",{style:{color:"#F8F8F2"}},"(JFrame.EXIT_ON_CLOSE);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," input."),s("span",{style:{color:"#A6E22E"}},"getText"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"(s);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setVisible"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 由外部传入的监听器统一处理")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:e(({value:a,isActive:o})=>l[6]||(l[6]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Controller"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"ActionListener"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IModel"),s("span",{style:{color:"#F8F8F2"}}," model;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IView"),s("span",{style:{color:"#F8F8F2"}}," view;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," Controller"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IModel"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," m"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IView"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," v"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".model "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," m;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," v;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 让视图把事件都交给当前这个对象")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," start"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 显示视图")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    view."),s("span",{style:{color:"#A6E22E"}},"display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," actionPerformed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    switch"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getActionCommand"),s("span",{style:{color:"#F8F8F2"}},"()) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      case"),s("span",{style:{color:"#E6DB74"}},' "Echo Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 从视图拿到用户输入，更新到模型，再让视图显示")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        String"),s("span",{style:{color:"#F8F8F2"}}," input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," view."),s("span",{style:{color:"#A6E22E"}},"getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        model."),s("span",{style:{color:"#A6E22E"}},"setString"),s("span",{style:{color:"#F8F8F2"}},"(input);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 也可选择清空输入框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      case"),s("span",{style:{color:"#E6DB74"}},' "Exit Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System."),s("span",{style:{color:"#A6E22E"}},"exit"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      default:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // do nothing")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab3:e(({value:a,isActive:o})=>l[7]||(l[7]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"MainGoodGUI"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    IModel"),s("span",{style:{color:"#F8F8F2"}}," model "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," Model"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    IView"),s("span",{style:{color:"#F8F8F2"}}," view "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JFrameView"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Good GUI Demo"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    Controller"),s("span",{style:{color:"#F8F8F2"}}," controller "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," Controller"),s("span",{style:{color:"#F8F8F2"}},"(model, view);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    controller."),s("span",{style:{color:"#A6E22E"}},"start"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[43]||(l[43]=t('<p><strong>Controller 说明</strong>：</p><ul><li><p>现在 <code>JFrameView</code> 不再直接操作 <code>model</code>，而是把按钮的点击事件通过 <code>ActionListener</code> 转给 <code>Controller</code>。</p></li><li><p><code>Controller</code> 持有 <code>model</code>，因此可以安全地进行 <code>model.setString(...)</code>，然后再告诉 <code>view</code> 更新界面。</p></li></ul><h3 id="_1-报错解决方案" tabindex="-1"><a class="header-anchor" href="#_1-报错解决方案"><span>1. 报错解决方案</span></a></h3><p>回顾我们在<strong>文本版</strong>和<strong>图形版</strong>的示例时，会发现两套 <code>IView</code>/<code>View</code> 的接口和实现不同：</p><ul><li><strong>文本版 IView</strong> 通常会有 <code>showMessage(...)</code>、<code>showError(...)</code> 方法。</li><li><strong>图形版 IView</strong> 在最简化的设计中，只有比如 <code>getInputString()</code>、<code>clearInputString()</code>、<code>setEchoOutput()</code>、<code>display()</code> 等方法，可能<strong>并未</strong>包含 <code>showMessage(...)</code>。</li></ul><p>如果你的<strong>控制器</strong>里还保留了对 <code>view.showMessage(...)</code> 的调用（大概率是从文本版代码沿用过来的），那就会和新的图形版 <code>IView</code> 接口冲突，编译时报错。</p><h3 id="_2-解决思路" tabindex="-1"><a class="header-anchor" href="#_2-解决思路"><span>2. 解决思路</span></a></h3><h4 id="_2-1-方案-1-在图形版-iview-中补充-showmessage-方法" tabindex="-1"><a class="header-anchor" href="#_2-1-方案-1-在图形版-iview-中补充-showmessage-方法"><span>2.1 方案 1：在图形版 <code>IView</code> 中补充 <code>showMessage(...)</code> 方法</span></a></h4>',8)),i(c,{id:"485",data:[{id:"1. 更新后的 IView 接口"},{id:"2. 更新后的 JFrameView 实现"},{id:"3. 控制器调用示例（如有需要）"},{id:"Message"}]},{title0:e(({value:a,isActive:o})=>l[8]||(l[8]=[n("1. 更新后的 IView 接口")])),title1:e(({value:a,isActive:o})=>l[9]||(l[9]=[n("2. 更新后的 JFrameView 实现")])),title2:e(({value:a,isActive:o})=>l[10]||(l[10]=[n("3. 控制器调用示例（如有需要）")])),title3:e(({value:a,isActive:o})=>l[11]||(l[11]=[n("Message")])),tab0:e(({value:a,isActive:o})=>l[12]||(l[12]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," interface"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 返回用户在文本框中输入的字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 清空文本框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 在界面上显示一个字符串（例如更新某个标签）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#88846F"}}," 要显示的内容")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 在窗口上显示该视图")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 提供给外部设置按钮监听器（通常是控制器）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#88846F"}}," 控制器传入的 ActionListener")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"   * 在界面上显示一条普通信息（弹窗或标签等）")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," msg"),s("span",{style:{color:"#88846F"}}," 要显示的内容")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," showMessage"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," msg"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line highlighted"},[s("wbr")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"   * 在界面上显示一条错误信息（弹窗或标签等）")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," err"),s("span",{style:{color:"#88846F"}}," 要显示的错误内容")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," showError"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," err"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:e(({value:a,isActive:o})=>l[13]||(l[13]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," javax.swing."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"JFrameView"),s("span",{style:{color:"#F92672"}}," extends"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"JFrame"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}}," display;      "),s("span",{style:{color:"#88846F"}},"// 用于显示字符串的标签")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}}," input;    "),s("span",{style:{color:"#88846F"}},"// 用户输入的文本框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," echoButton;  "),s("span",{style:{color:"#88846F"}},"// Echo 按钮")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," exitButton;  "),s("span",{style:{color:"#88846F"}},"// Exit 按钮")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," JFrameView"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," caption"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    super"),s("span",{style:{color:"#F8F8F2"}},"(caption);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setLayout"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#F92672"}},"new"),s("span",{style:{color:"#A6E22E"}}," FlowLayout"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 初始化界面组件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"初始状态"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(display);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(input);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(echoButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(exitButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"pack"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setDefaultCloseOperation"),s("span",{style:{color:"#F8F8F2"}},"(JFrame.EXIT_ON_CLOSE);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," input."),s("span",{style:{color:"#A6E22E"}},"getText"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"(s);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setVisible"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," showMessage"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," msg"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"    // 通过对话框（MessageDialog）显示普通消息")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"    JOptionPane."),s("span",{style:{color:"#A6E22E"}},"showMessageDialog"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},", msg, "),s("span",{style:{color:"#E6DB74"}},'"Message"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"                                  JOptionPane.INFORMATION_MESSAGE);")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line highlighted"},[s("wbr")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," showError"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," err"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#88846F"}},"    // 通过对话框（MessageDialog）显示错误消息")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"    JOptionPane."),s("span",{style:{color:"#A6E22E"}},"showMessageDialog"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},", err, "),s("span",{style:{color:"#E6DB74"}},'"Error"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"                                  JOptionPane.ERROR_MESSAGE);")]),n(`
`),s("span",{class:"line highlighted"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:e(({value:a,isActive:o})=>l[14]||(l[14]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"// 如果你的控制器中需要调用：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"view."),s("span",{style:{color:"#A6E22E"}},"showMessage"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"操作成功！"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"// 或者")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"view."),s("span",{style:{color:"#A6E22E"}},"showError"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"出现了一些错误！"'),s("span",{style:{color:"#F8F8F2"}},");")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>l[15]||(l[15]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"// 只要控制器持有的是这个更新后的 IView 接口对象，并且底层是用 JFrameView 来实例化，就能正常调用并看到对话框弹出。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"// 例子（只展示核心片段）：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"@"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," actionPerformed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionEvent"),s("span",{style:{color:"#F8F8F2"}}," e) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  switch"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getActionCommand"),s("span",{style:{color:"#F8F8F2"}},"()) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    case"),s("span",{style:{color:"#E6DB74"}},' "Echo Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"      String"),s("span",{style:{color:"#F8F8F2"}}," inputVal "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," view."),s("span",{style:{color:"#A6E22E"}},"getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      if"),s("span",{style:{color:"#F8F8F2"}}," (inputVal."),s("span",{style:{color:"#A6E22E"}},"isEmpty"),s("span",{style:{color:"#F8F8F2"}},"()) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 如果用户没输入内容，就调用 showError 提示")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"showError"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"请输入有效的内容！"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      } "),s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        model."),s("span",{style:{color:"#A6E22E"}},"setString"),s("span",{style:{color:"#F8F8F2"}},"(inputVal);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 也可以调用 showMessage 表示操作成功")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"showMessage"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"更新成功！"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    case"),s("span",{style:{color:"#E6DB74"}},' "Exit Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      System."),s("span",{style:{color:"#A6E22E"}},"exit"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    default:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"      // 其他情况")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"showError"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"未知命令："'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," e."),s("span",{style:{color:"#A6E22E"}},"getActionCommand"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),l[44]||(l[44]=t('<p><strong>IView 要点</strong>：</p><ul><li>新增了 <code>showMessage(String msg)</code> 和 <code>showError(String err)</code> 这两个方法。</li><li>其他方法（如 <code>getInputString()</code>, <code>setEchoOutput()</code> 等）保持原状。</li></ul><hr><p><strong>JFrameView 要点</strong>：</p><ul><li>通过 <code>JOptionPane.showMessageDialog(...)</code> 来弹出对话框显示信息。</li><li><code>showMessage(...)</code> 使用 <code>INFORMATION_MESSAGE</code> 图标，<code>showError(...)</code> 使用 <code>ERROR_MESSAGE</code> 图标。</li><li>这样一来，如果控制器中调用了 <code>view.showMessage(&quot;xxxxx&quot;)</code> 或 <code>view.showError(&quot;xxxxx&quot;)</code>，就不会再出现“找不到符号”错误，而且能在 GUI 中弹出相应的消息对话框。</li></ul><h3 id="_2-2-方案-2-删除对-view-showmessage-的调用「推荐」" tabindex="-1"><a class="header-anchor" href="#_2-2-方案-2-删除对-view-showmessage-的调用「推荐」"><span>2.2 方案 2：删除对 <code>view.showMessage(...)</code> 的调用「推荐」</span></a></h3><p>如果<strong>图形版</strong>并不需要再以文字形式输出消息（比如不想弹对话框，也不想写到某个文本区），那就可以把<strong>控制器</strong>里的 <code>view.showMessage(...)</code> 相关行删掉或替换成其他逻辑。这样就不会再调用一个没有定义的方法，自然也就消除了“找不到符号”的问题。</p><h2 id="stage-7-加入键盘事件" tabindex="-1"><a class="header-anchor" href="#stage-7-加入键盘事件"><span>Stage 7: 加入键盘事件</span></a></h2><p>现在我们想让用户按键盘某些按键时也能触发事件，例如：</p><ul><li>按下 <code>&#39;d&#39;</code> 键就切换文字颜色；</li><li>按住 <code>&#39;c&#39;</code> 键时暂时把文本大写等。</li></ul><h3 id="_1-让-view-提供键盘监听接口" tabindex="-1"><a class="header-anchor" href="#_1-让-view-提供键盘监听接口"><span>1. 让 View 提供键盘监听接口</span></a></h3><p>在 <code>IView</code> 里加入：</p>',12)),i(c,{id:"568",data:[{id:"简单版"},{id:"all-code"}]},{title0:e(({value:a,isActive:o})=>l[16]||(l[16]=[n("简单版")])),title1:e(({value:a,isActive:o})=>l[17]||(l[17]=[n("all-code")])),tab0:e(({value:a,isActive:o})=>l[18]||(l[18]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," interface"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  ...")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 在视图上注册键盘监听")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#88846F"}}," 要注册的 KeyListener")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>l[19]||(l[19]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * 视图接口，定义 GUI 视图所需的最基本方法。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," interface"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 返回用户在文本框中输入的字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 清空文本框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 在界面上显示一个字符串（比如更新某个 label）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#88846F"}}," 要显示的内容")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 显示窗口")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 提供给外部设置按钮监听器（用于处理按钮点击事件）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#88846F"}}," 控制器传入的 ActionListener")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 新增：在视图上注册键盘监听")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#88846F"}}," 要注册的 KeyListener")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),l[45]||(l[45]=s("h3",{id:"_2-jframeview-中实现",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-jframeview-中实现"},[s("span",null,"2. JFrameView 中实现")])],-1)),i(c,{id:"582",data:[{id:"简单"},{id:"all-code"}]},{title0:e(({value:a,isActive:o})=>l[20]||(l[20]=[n("简单")])),title1:e(({value:a,isActive:o})=>l[21]||(l[21]=[n("all-code")])),tab0:e(({value:a,isActive:o})=>l[22]||(l[22]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"JFrameView"),s("span",{style:{color:"#F92672"}}," extends"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"JFrame"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  ...")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 要求聚焦才能监听键盘，所以一般需要设置")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setFocusable"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"requestFocus"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    super"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"(kbd);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  ...")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>l[23]||(l[23]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," javax.swing."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * JFrame 实现的具体视图类。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"JFrameView"),s("span",{style:{color:"#F92672"}}," extends"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"JFrame"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}}," display;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}}," input;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," echoButton;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," exitButton;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 构造函数")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," caption"),s("span",{style:{color:"#88846F"}}," 窗口标题")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," JFrameView"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," caption"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    super"),s("span",{style:{color:"#F8F8F2"}},"(caption);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setLayout"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#F92672"}},"new"),s("span",{style:{color:"#A6E22E"}}," FlowLayout"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 初始化组件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"初始状态"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(display);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(input);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(echoButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(exitButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 布局完毕后打包")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"pack"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setDefaultCloseOperation"),s("span",{style:{color:"#F8F8F2"}},"(JFrame.EXIT_ON_CLOSE);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," input."),s("span",{style:{color:"#A6E22E"}},"getText"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"(s);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setVisible"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 把外部传进来的 ActionListener 添加到按钮上")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 允许外部注册键盘监听器")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 通过 setFocusable(true) 和 requestFocus() 确保能捕获键盘事件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setFocusable"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},");  "),s("span",{style:{color:"#88846F"}},"// 允许当前组件获得键盘焦点")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"requestFocus"),s("span",{style:{color:"#F8F8F2"}},"();      "),s("span",{style:{color:"#88846F"}},"// 主动请求焦点")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    super"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"(kbd);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),l[46]||(l[46]=t('<h3 id="_3-在-controller-中实现-keylistener" tabindex="-1"><a class="header-anchor" href="#_3-在-controller-中实现-keylistener"><span>3. 在 Controller 中实现 KeyListener</span></a></h3><p>我们可以让 <code>Controller</code> 同时 <code>implements KeyListener</code>，或者写一个单独的类 <code>KeyboardHandler</code> 并在 Controller 中组合使用。下面是让 <code>Controller</code> 直接实现的例子。</p><p>在原有的 <code>Controller</code> 基础上，增加 <code>implements KeyListener</code>，并实现相关方法（<code>keyTyped</code>, <code>keyPressed</code>, <code>keyReleased</code>）。以一个简单示例为演示：</p><ul><li>当用户敲击 <code>&#39;d&#39;</code> 键：切换文字颜色（这里仅在控制台打印提示，可自行改进到视图上）。</li><li>当用户按下 <code>&#39;c&#39;</code> 键：把 Model 中的字符串大写显示到 View。</li><li>当用户松开 <code>&#39;c&#39;</code> 键：恢复原有字符串。</li></ul>',4)),i(c,{id:"619",data:[{id:"简单"},{id:"all-code"}]},{title0:e(({value:a,isActive:o})=>l[24]||(l[24]=[n("简单")])),title1:e(({value:a,isActive:o})=>l[25]||(l[25]=[n("all-code")])),tab0:e(({value:a,isActive:o})=>l[26]||(l[26]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Controller"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"ActionListener"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"KeyListener"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IModel"),s("span",{style:{color:"#F8F8F2"}}," model;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IView"),s("span",{style:{color:"#F8F8F2"}}," view;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," boolean"),s("span",{style:{color:"#F8F8F2"}}," colorRed "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," false"),s("span",{style:{color:"#F8F8F2"}},"; "),s("span",{style:{color:"#88846F"}},"// 用于示例：是否已切换成红色")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," Controller"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IModel"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," m"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IView"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," v"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".model "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," m;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," v;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," start"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    view."),s("span",{style:{color:"#A6E22E"}},"display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  // 按钮事件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," actionPerformed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ...")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  // 键盘事件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyTyped"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 如果用户敲击 'd'，则切换颜色")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getKeyChar"),s("span",{style:{color:"#F8F8F2"}},"() "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'd'"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"      // 这里仅做简单演示，可以让 view 提供 toggleColor() 等方法")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      colorRed "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," !"),s("span",{style:{color:"#F8F8F2"}},"colorRed;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      if"),s("span",{style:{color:"#F8F8F2"}}," (colorRed) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 比如让标签设置成红色文字（需在 View 中提供一个接口或直接拿到 JLabel）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 此处只是示例，不代表完整实现")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"切换为红色文字！"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      } "),s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"切换回黑色文字！"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyPressed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 如果按下 'c' 键，把 model 中的字符串转大写并显示")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getKeyCode"),s("span",{style:{color:"#F8F8F2"}},"() "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," KeyEvent.VK_C) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"      String"),s("span",{style:{color:"#F8F8F2"}}," text "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(text."),s("span",{style:{color:"#A6E22E"}},"toUpperCase"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyReleased"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 如果松开 'c' 键，则恢复原有字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getKeyCode"),s("span",{style:{color:"#F8F8F2"}},"() "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," KeyEvent.VK_C) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"      String"),s("span",{style:{color:"#F8F8F2"}}," text "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(text);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:e(({value:a,isActive:o})=>l[27]||(l[27]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * GUI 控制器，负责响应按钮和键盘事件，并更新模型与视图。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Controller"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"ActionListener"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"KeyListener"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IModel"),s("span",{style:{color:"#F8F8F2"}}," model;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IView"),s("span",{style:{color:"#F8F8F2"}}," view;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  // 用于示例：文字是否切换为红色")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," boolean"),s("span",{style:{color:"#F8F8F2"}}," isRed "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," false"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 构造函数")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," m"),s("span",{style:{color:"#88846F"}}," 模型")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," v"),s("span",{style:{color:"#88846F"}}," 视图")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," Controller"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IModel"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," m"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IView"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," v"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".model "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," m;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," v;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 把自己注册为视图的按钮监听器")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 把自己注册为视图的键盘监听器")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 启动程序")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," start"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    view."),s("span",{style:{color:"#A6E22E"}},"display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 按钮点击事件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," actionPerformed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    switch"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getActionCommand"),s("span",{style:{color:"#F8F8F2"}},"()) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      case"),s("span",{style:{color:"#E6DB74"}},' "Echo Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 读取视图的输入设置到模型，再让视图回显")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        String"),s("span",{style:{color:"#F8F8F2"}}," input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," view."),s("span",{style:{color:"#A6E22E"}},"getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        model."),s("span",{style:{color:"#A6E22E"}},"setString"),s("span",{style:{color:"#F8F8F2"}},"(input);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 可自行决定要不要清空输入框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      case"),s("span",{style:{color:"#E6DB74"}},' "Exit Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System."),s("span",{style:{color:"#A6E22E"}},"exit"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      default:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // do nothing")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 键盘事件 - keyTyped")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 当用户敲击某个键并释放（能输入字符的键），会触发 keyTyped")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyTyped"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 用户敲击 'd' 时，示例：切换文字颜色")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getKeyChar"),s("span",{style:{color:"#F8F8F2"}},"() "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'd'"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      isRed "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," !"),s("span",{style:{color:"#F8F8F2"}},"isRed;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      if"),s("span",{style:{color:"#F8F8F2"}}," (isRed) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"切换为红色文字（示例，可改为真实 GUI 操作）"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      } "),s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"切换回黑色文字（示例，可改为真实 GUI 操作）"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 键盘事件 - keyPressed")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 当用户按下某个键时触发")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyPressed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 如果按下 'c' 键，把 model 中字符串转大写显示到 view")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getKeyCode"),s("span",{style:{color:"#F8F8F2"}},"() "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," KeyEvent.VK_C) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"      String"),s("span",{style:{color:"#F8F8F2"}}," text "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(text."),s("span",{style:{color:"#A6E22E"}},"toUpperCase"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 键盘事件 - keyReleased")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 当用户松开某个键时触发")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyReleased"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 如果松开 'c' 键，则恢复原有字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getKeyCode"),s("span",{style:{color:"#F8F8F2"}},"() "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," KeyEvent.VK_C) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"      String"),s("span",{style:{color:"#F8F8F2"}}," text "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(text);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),l[47]||(l[47]=t(`<h3 id="_4-maingui" tabindex="-1"><a class="header-anchor" href="#_4-maingui"><span>4. MainGUI</span></a></h3><p>这样，当用户按 <code>d</code>、<code>c</code> 键时，就能触发特定逻辑。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> controller.Controller</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> model.IModel</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> model.Model</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> view.IView</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> view.JFrameView</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MainGUI</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    IModel</span><span style="color:#F8F8F2;"> model </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Model</span><span style="color:#F8F8F2;">();                 </span><span style="color:#88846F;">// 创建模型</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    IView</span><span style="color:#F8F8F2;"> view </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> JFrameView</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;GUI with KeyListener&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 创建视图</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Controller</span><span style="color:#F8F8F2;"> controller </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Controller</span><span style="color:#F8F8F2;">(model, view); </span><span style="color:#88846F;">// 创建控制器</span></span>
<span class="line"><span style="color:#F8F8F2;">    controller.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();                         </span><span style="color:#88846F;">// 启动应用</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="stage-8-使用-map-来映射更多键盘-按钮动作" tabindex="-1"><a class="header-anchor" href="#stage-8-使用-map-来映射更多键盘-按钮动作"><span>Stage 8: 使用 Map 来映射更多键盘/按钮动作</span></a></h2><p>若想灵活地让用户自定义热键，可以把键值和对应动作用 <code>Map</code>（或 <code>ActionMap</code>, <code>InputMap</code>）来维护。核心思想是：</p><ol><li><strong>将原本 <code>switch</code>/<code>if</code> 里的逻辑转换为“数据”</strong>（如 map，把 <code>KeyEvent</code> 或 <code>char</code> 映射到具体要执行的 <code>Runnable</code>）。</li><li>这样能够在运行时根据配置文件或用户选项改变“按键 → 动作”的映射。</li></ol>`,6)),i(r,{id:"655",data:[{id:"1. IModel.java"},{id:"Model.java"},{id:"IView.java"},{id:"JFrameView.java"},{id:"KeyboardHandler.java"},{id:"Controller.java"},{id:"MainStage8.java"}]},{title0:e(({value:a,isActive:o})=>l[28]||(l[28]=[n("1. IModel.java")])),title1:e(({value:a,isActive:o})=>l[29]||(l[29]=[n("Model.java")])),title2:e(({value:a,isActive:o})=>l[30]||(l[30]=[n("IView.java")])),title3:e(({value:a,isActive:o})=>l[31]||(l[31]=[n("JFrameView.java")])),title4:e(({value:a,isActive:o})=>l[32]||(l[32]=[n("KeyboardHandler.java")])),title5:e(({value:a,isActive:o})=>l[33]||(l[33]=[n("Controller.java")])),title6:e(({value:a,isActive:o})=>l[34]||(l[34]=[n("MainStage8.java")])),tab0:e(({value:a,isActive:o})=>l[35]||(l[35]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * 模型接口，定义对字符串的基本操作")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," interface"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"IModel"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 获取当前存储的字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@return"),s("span",{style:{color:"#88846F"}}," 模型中的字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  String"),s("span",{style:{color:"#A6E22E"}}," getString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 设置新的字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," str"),s("span",{style:{color:"#88846F"}}," 要设置的新字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setString"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," str"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:e(({value:a,isActive:o})=>l[36]||(l[36]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * IModel 的具体实现，内部用一个 String 来存储数据")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Model"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"IModel"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," String"),s("span",{style:{color:"#F8F8F2"}}," data;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 无参构造函数，初始化为空字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," Model"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".data "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' ""'),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," String"),s("span",{style:{color:"#A6E22E"}}," getString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#FD971F"}}," this"),s("span",{style:{color:"#F8F8F2"}},".data;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setString"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," str"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".data "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," str;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:e(({value:a,isActive:o})=>l[37]||(l[37]=[s("p",null,"这里的视图接口需要支持以下功能：",-1),s("ol",null,[s("li",null,"获取文本框内容"),s("li",null,"清空文本框"),s("li",null,"设置并显示标签上的文本"),s("li",null,"显示窗口"),s("li",null,"设置按钮监听（ActionListener）"),s("li",null,"注册键盘监听（KeyListener）")],-1),s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * 视图接口，定义界面可提供的操作")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," interface"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@return"),s("span",{style:{color:"#88846F"}}," 用户在文本框中输入的字符串")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 清空文本框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 设置界面上标签显示的内容")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#88846F"}}," 要显示的内容")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 显示整个窗口")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 为按钮设置监听器（在 Controller 里实现处理逻辑）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#88846F"}}," 要注册的监听器")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 在视图上注册键盘监听器")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * "),s("span",{style:{color:"#F92672"}},"@param"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#88846F"}}," 要注册的 KeyListener")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 切换颜色（本示例仅演示，实际可用来改变文字/背景等）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 在配合键盘事件时用于演示颜色切换")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"  void"),s("span",{style:{color:"#A6E22E"}}," toggleColor"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab3:e(({value:a,isActive:o})=>l[38]||(l[38]=[s("p",null,[n("这是一个基于 Swing 的简单视图实现。支持两个按钮、一个文本框和一个标签，同时提供对键盘监听的支持，并在示例中提供了 "),s("code",null,"toggleColor"),n(" 方法用于演示颜色切换（把标签文字在红色和黑色之间切换）。")],-1),s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," javax.swing."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt."),s("span",{style:{color:"#FD971F"}},"*"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * JFrame 视图的具体实现")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"JFrameView"),s("span",{style:{color:"#F92672"}}," extends"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"JFrame"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"IView"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}}," display;       "),s("span",{style:{color:"#88846F"}},"// 用于显示文本")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}}," input;     "),s("span",{style:{color:"#88846F"}},"// 用户输入的文本框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," echoButton;   "),s("span",{style:{color:"#88846F"}},"// Echo 按钮")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," JButton"),s("span",{style:{color:"#F8F8F2"}}," exitButton;   "),s("span",{style:{color:"#88846F"}},"// Exit 按钮")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  // 为了演示 toggleColor，记录当前是否为红色")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," boolean"),s("span",{style:{color:"#F8F8F2"}}," isRed "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," false"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," JFrameView"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," caption"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    super"),s("span",{style:{color:"#F8F8F2"}},"(caption);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setLayout"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#F92672"}},"new"),s("span",{style:{color:"#A6E22E"}}," FlowLayout"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 标签")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JLabel"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"初始状态"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(display);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 文本输入框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JTextField"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(input);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // Echo 按钮")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Echo Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(echoButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // Exit 按钮")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JButton"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"setActionCommand"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Exit Button"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"add"),s("span",{style:{color:"#F8F8F2"}},"(exitButton);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 设置窗口大小、默认关闭操作等")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"pack"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setDefaultCloseOperation"),s("span",{style:{color:"#F8F8F2"}},"(JFrame.EXIT_ON_CLOSE);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," String"),s("span",{style:{color:"#A6E22E"}}," getInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," input."),s("span",{style:{color:"#A6E22E"}},"getText"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," clearInputString"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    input."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," s"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    display."),s("span",{style:{color:"#A6E22E"}},"setText"),s("span",{style:{color:"#F8F8F2"}},"(s);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setVisible"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," listener"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    echoButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    exitButton."),s("span",{style:{color:"#A6E22E"}},"addActionListener"),s("span",{style:{color:"#F8F8F2"}},"(listener);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyListener"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," kbd"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 必须先让当前组件可以聚焦并请求焦点，否则无法接收键盘事件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"setFocusable"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"requestFocus"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    super"),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#A6E22E"}},"addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"(kbd);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," toggleColor"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (isRed) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      display."),s("span",{style:{color:"#A6E22E"}},"setForeground"),s("span",{style:{color:"#F8F8F2"}},"(Color.BLACK);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    } "),s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      display."),s("span",{style:{color:"#A6E22E"}},"setForeground"),s("span",{style:{color:"#F8F8F2"}},"(Color.RED);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    isRed "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," !"),s("span",{style:{color:"#F8F8F2"}},"isRed;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab4:e(({value:a,isActive:o})=>l[39]||(l[39]=[s("p",null,[n("通过 "),s("code",null,"Map"),n(" 将键盘事件与相应的逻辑（"),s("code",null,"Runnable"),n(") 映射起来，避免在 "),s("code",null,"keyPressed / keyReleased / keyTyped"),n(" 中写大量 "),s("code",null,"if"),n(" / "),s("code",null,"switch"),n(" 语句。")],-1),s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.HashMap"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.Map"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * 一个通用的键盘监听器，可以通过 Map 配置各个按键对应的动作")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"KeyboardHandler"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"KeyListener"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  // keyTyped 用 char 做 key")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Character"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> keyTypedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashMap"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  // keyPressed/keyReleased 用 int 做 key")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> keyPressedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashMap"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> keyReleasedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashMap"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setKeyTypedMap"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Character"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"map"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".keyTypedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," map;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setKeyPressedMap"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"map"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".keyPressedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," map;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," setKeyReleasedMap"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"map"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".keyReleasedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," map;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyTyped"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    char"),s("span",{style:{color:"#F8F8F2"}}," c "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," e."),s("span",{style:{color:"#A6E22E"}},"getKeyChar"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (keyTypedMap."),s("span",{style:{color:"#A6E22E"}},"containsKey"),s("span",{style:{color:"#F8F8F2"}},"(c)) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      keyTypedMap."),s("span",{style:{color:"#A6E22E"}},"get"),s("span",{style:{color:"#F8F8F2"}},"(c)."),s("span",{style:{color:"#A6E22E"}},"run"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyPressed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," e."),s("span",{style:{color:"#A6E22E"}},"getKeyCode"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (keyPressedMap."),s("span",{style:{color:"#A6E22E"}},"containsKey"),s("span",{style:{color:"#F8F8F2"}},"(code)) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      keyPressedMap."),s("span",{style:{color:"#A6E22E"}},"get"),s("span",{style:{color:"#F8F8F2"}},"(code)."),s("span",{style:{color:"#A6E22E"}},"run"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," keyReleased"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"KeyEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," e."),s("span",{style:{color:"#A6E22E"}},"getKeyCode"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (keyReleasedMap."),s("span",{style:{color:"#A6E22E"}},"containsKey"),s("span",{style:{color:"#F8F8F2"}},"(code)) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      keyReleasedMap."),s("span",{style:{color:"#A6E22E"}},"get"),s("span",{style:{color:"#F8F8F2"}},"(code)."),s("span",{style:{color:"#A6E22E"}},"run"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab5:e(({value:a,isActive:o})=>l[40]||(l[40]=[s("ol",null,[s("li",null,[s("p",null,[n("继承/实现 "),s("code",null,"ActionListener"),n(" 用于处理按钮点击事件。")])]),s("li",null,[s("p",null,[n("使用 "),s("code",null,"KeyboardHandler"),n(" 来管理键盘事件映射。")])]),s("li",null,[s("p",null,[n("将输入框内容设置到 "),s("code",null,"model"),n(" 或让 "),s("code",null,"view"),n(" 执行对应操作。")])])],-1),s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.ActionListener"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.awt.event.KeyEvent"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.HashMap"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.util.Map"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"/**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," * Controller 负责连接 Model 和 View，处理用户交互")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Controller"),s("span",{style:{color:"#F92672"}}," implements"),s("span",null," "),s("span",{style:{color:"#A6E22E","font-style":"italic","text-decoration":"underline"}},"ActionListener"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IModel"),s("span",{style:{color:"#F8F8F2"}}," model;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#F92672"}}," final"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," IView"),s("span",{style:{color:"#F8F8F2"}}," view;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  // 构造时注入 model 和 view")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#A6E22E"}}," Controller"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IModel"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," model"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"IView"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," view"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".model "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," model;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," view;")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 告诉 View：按钮事件交给当前 Controller 来处理")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"setListener"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"this"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 配置键盘事件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E"}},"    configureKeyboard"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 最后显示视图")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"display"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"  /**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   * 为键盘事件配置对应的 Runnable 动作")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"   */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  private"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," configureKeyboard"),s("span",{style:{color:"#F8F8F2"}},"() {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 创建并配置 KeyboardHandler")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    KeyboardHandler"),s("span",{style:{color:"#F8F8F2"}}," kbd "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," KeyboardHandler"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 1) keyTyped 映射（char）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Character"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> typedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashMap"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 当用户输入 'r' 字符时，切换颜色")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    typedMap."),s("span",{style:{color:"#A6E22E"}},"put"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'r'"),s("span",{style:{color:"#F8F8F2"}},", () "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"->"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"toggleColor"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    });")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 2) keyPressed 映射（int）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> pressedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashMap"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 当按下 C 时，将模型中的字符串转为大写显示")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    pressedMap."),s("span",{style:{color:"#A6E22E"}},"put"),s("span",{style:{color:"#F8F8F2"}},"(KeyEvent.VK_C, () "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"->"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"      String"),s("span",{style:{color:"#F8F8F2"}}," text "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(text."),s("span",{style:{color:"#A6E22E"}},"toUpperCase"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    });")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 3) keyReleased 映射（int）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    Map"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Runnable"),s("span",{style:{color:"#F8F8F2"}},"> releasedMap "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," HashMap"),s("span",{style:{color:"#F8F8F2"}},"<>();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 当松开 C 时，恢复原始大小写")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    releasedMap."),s("span",{style:{color:"#A6E22E"}},"put"),s("span",{style:{color:"#F8F8F2"}},"(KeyEvent.VK_C, () "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"->"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"      String"),s("span",{style:{color:"#F8F8F2"}}," text "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(text);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    });")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 将这三类映射传给 KeyboardHandler")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    kbd."),s("span",{style:{color:"#A6E22E"}},"setKeyTypedMap"),s("span",{style:{color:"#F8F8F2"}},"(typedMap);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    kbd."),s("span",{style:{color:"#A6E22E"}},"setKeyPressedMap"),s("span",{style:{color:"#F8F8F2"}},"(pressedMap);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    kbd."),s("span",{style:{color:"#A6E22E"}},"setKeyReleasedMap"),s("span",{style:{color:"#F8F8F2"}},"(releasedMap);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 将这个 KeyboardHandler 注册到 view")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"    this"),s("span",{style:{color:"#F8F8F2"}},".view."),s("span",{style:{color:"#A6E22E"}},"addKeyListener"),s("span",{style:{color:"#F8F8F2"}},"(kbd);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  @"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Override")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," actionPerformed"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ActionEvent"),s("span",{style:{color:"#FD971F","font-style":"italic"}}," e"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    switch"),s("span",{style:{color:"#F8F8F2"}}," (e."),s("span",{style:{color:"#A6E22E"}},"getActionCommand"),s("span",{style:{color:"#F8F8F2"}},"()) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      case"),s("span",{style:{color:"#E6DB74"}},' "Echo Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 将输入框内容写入 Model，并让 View 显示")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        String"),s("span",{style:{color:"#F8F8F2"}}," input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," view."),s("span",{style:{color:"#A6E22E"}},"getInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        model."),s("span",{style:{color:"#A6E22E"}},"setString"),s("span",{style:{color:"#F8F8F2"}},"(input);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"setEchoOutput"),s("span",{style:{color:"#F8F8F2"}},"(model."),s("span",{style:{color:"#A6E22E"}},"getString"),s("span",{style:{color:"#F8F8F2"}},"());")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 清空输入框")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        view."),s("span",{style:{color:"#A6E22E"}},"clearInputString"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      case"),s("span",{style:{color:"#E6DB74"}},' "Exit Button"'),s("span",{style:{color:"#F92672"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System."),s("span",{style:{color:"#A6E22E"}},"exit"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        break"),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"      default:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 未识别的命令，不做处理")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab6:e(({value:a,isActive:o})=>l[41]||(l[41]=[s("p",null,[n("最后是一个演示用的 "),s("code",null,"main"),n(" 函数，创建 "),s("code",null,"Model"),n(", "),s("code",null,"View"),n(", "),s("code",null,"Controller"),n("，并运行程序。")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"MainStage8"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    IModel"),s("span",{style:{color:"#F8F8F2"}}," model "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," Model"),s("span",{style:{color:"#F8F8F2"}},"();")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    IView"),s("span",{style:{color:"#F8F8F2"}}," view "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#A6E22E"}}," JFrameView"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Stage 8 Demo (Keyboard Maps)"'),s("span",{style:{color:"#F8F8F2"}},");")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 创建 Controller，即可自动配置好键盘、按钮等逻辑，并显示窗口")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    new"),s("span",{style:{color:"#A6E22E"}}," Controller"),s("span",{style:{color:"#F8F8F2"}},"(model, view);")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},'    // 程序将保持运行，直到用户点击 "Exit" 按钮或手动关闭窗口')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,null,-1)])),_:1}),l[48]||(l[48]=t(`<h2 id="question-1" tabindex="-1"><a class="header-anchor" href="#question-1"><span>Question 1</span></a></h2><p>在这段代码中：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">JFrameView</span><span style="color:#F92672;"> extends</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">JFrame</span><span style="color:#F92672;"> implements</span><span> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">ActionListener</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">  public</span><span style="color:#A6E22E;"> JFrameView</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#FD971F;font-style:italic;"> caption</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">IModel</span><span style="color:#FD971F;font-style:italic;"> model</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FD971F;">    super</span><span style="color:#F8F8F2;">(caption);               </span><span style="color:#88846F;">// ①</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.model </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> model;           </span><span style="color:#88846F;">// ②</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">setLayout</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> FlowLayout</span><span style="color:#F8F8F2;">()); </span><span style="color:#88846F;">// ③</span></span>
<span class="line"><span style="color:#F8F8F2;">    ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>super(caption);</code></strong> 调用的是 <strong>父类构造函数</strong>。</li><li>这里的父类就是 <strong><code>javax.swing.JFrame</code></strong>。</li><li><code>JFrameView extends JFrame</code> 表示 <code>JFrameView</code> 继承了 <code>JFrame</code>，因此可以调用 <code>super(caption)</code> 来执行 <code>JFrame</code> 的构造方法（<code>JFrame(String title)</code>）。</li><li><code>this.setLayout(...)</code> 也是从父类（以及其父类链：<code>Container</code>）继承而来，<code>JFrame</code> 继承了 AWT/Swing 框架中一系列类（<code>Frame</code> → <code>Window</code> → <code>Container</code> → <code>Component</code> 等），所以能够直接调用 <code>setLayout(...)</code>。</li></ul><h3 id="继承关系示意" tabindex="-1"><a class="header-anchor" href="#继承关系示意"><span>继承关系示意</span></a></h3><p>在 Java Swing 层次结构中，<code>JFrame</code> 继承自 <code>Frame</code>，然后一直往上可以追溯到 <code>Window</code>、<code>Container</code>、<code>Component</code> 等：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Object</span></span>
<span class="line"><span style="color:#F8F8F2;">  └─ </span><span style="color:#66D9EF;font-style:italic;">Component</span></span>
<span class="line"><span style="color:#F8F8F2;">       └─ </span><span style="color:#66D9EF;font-style:italic;">Container</span></span>
<span class="line"><span style="color:#F8F8F2;">            └─ </span><span style="color:#66D9EF;font-style:italic;">Window</span></span>
<span class="line"><span style="color:#F8F8F2;">                 └─ </span><span style="color:#66D9EF;font-style:italic;">Frame</span></span>
<span class="line"><span style="color:#F8F8F2;">                      └─ </span><span style="color:#66D9EF;font-style:italic;">JFrame</span></span>
<span class="line"><span style="color:#F8F8F2;">                           └─ </span><span style="color:#A6E22E;">JFrameView</span><span style="color:#F8F8F2;"> (我们自定义的类)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>JFrameView</code></strong> 是我们定义的类，继承自 <strong><code>JFrame</code></strong>；</li><li><strong><code>JFrame</code></strong> 在其构造方法中允许传入一个字符串（窗口标题 <code>caption</code>），也就是 <code>super(caption)</code> 调用的那个构造；</li><li><strong><code>setLayout(...)</code></strong> 是 <code>Container</code> 类提供的方法，<code>JFrame</code> 通过继承链将其暴露出来，因此在 <code>JFrameView</code> 里也能使用。</li></ul><p>因此，这三行代码分别代表着：</p><ol><li><code>super(caption)</code>：调用父类 <code>JFrame</code> 的构造函数，给窗口设置标题。</li><li><code>this.model = model</code>：将构造函数里传进来的 <code>model</code> 参数赋给当前对象的 <code>model</code> 字段。</li><li><code>this.setLayout(new FlowLayout())</code>：对这个 <code>JFrame</code> 窗口使用 <strong>流式布局（FlowLayout）</strong>。该方法来自祖先类 <code>Container</code>。</li></ol><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发、Web、Linux」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',13))])}const A=d(m,[["render",b],["__file","Lecture13-GUI-Basics.html.vue"]]),D=JSON.parse('{"path":"/1v1/MenJiaQi/Lecture13-GUI-Basics.html","title":"Lecture 13 GUI Basics","lang":"zh-CN","frontmatter":{"title":"Lecture 13 GUI Basics","date":"2025-03-05T23:22:59.000Z","author":"AI悦创","isOriginal":true,"icon":"blog","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"watermark":true,"description":"原文 1. 主要内容 Model： 负责存储和封装数据逻辑； View： 负责展示数据，可以是文本界面，也可以是图形界面； Controller： 负责协调用户输入与对 Model 的操作，并通知 View 做出相应更新； 我们会先展示一个文本界面版本，随后演示如何切换到图形界面（GUI），以及如何一步步改进、解耦视图和控制器、处理键盘事件等。 Sta...","head":[["meta",{"property":"og:url","content":"https://bornforthis.cn/1v1/MenJiaQi/Lecture13-GUI-Basics.html"}],["meta",{"property":"og:site_name","content":"AI悦创-Python一对一辅导"}],["meta",{"property":"og:title","content":"Lecture 13 GUI Basics"}],["meta",{"property":"og:description","content":"原文 1. 主要内容 Model： 负责存储和封装数据逻辑； View： 负责展示数据，可以是文本界面，也可以是图形界面； Controller： 负责协调用户输入与对 Model 的操作，并通知 View 做出相应更新； 我们会先展示一个文本界面版本，随后演示如何切换到图形界面（GUI），以及如何一步步改进、解耦视图和控制器、处理键盘事件等。 Sta..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://bornforthis.cn/gzh.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-06T23:58:39.000Z"}],["meta",{"property":"article:author","content":"AI悦创"}],["meta",{"property":"article:published_time","content":"2025-03-05T23:22:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-06T23:58:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Lecture 13 GUI Basics\\",\\"image\\":[\\"https://bornforthis.cn/gzh.jpg\\",\\"https://bornforthis.cn/zsxq.jpg\\"],\\"datePublished\\":\\"2025-03-05T23:22:59.000Z\\",\\"dateModified\\":\\"2025-03-06T23:58:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AI悦创\\"}]}"]]},"git":{"createdTime":1741274612000,"updatedTime":1741305519000,"contributors":[{"name":"AndersonHJB","username":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":3,"url":"https://github.com/AndersonHJB"}]},"readingTime":{"minutes":43.38,"words":13014},"filePathRelative":"1v1/MenJiaQi/Lecture13-GUI-Basics.md","localizedDate":"2025年3月5日","copyright":{"author":"AI悦创"},"autoDesc":true}');export{A as comp,D as data};
