import{_ as e}from"./gzh.b03adfd2.js";import{_ as o}from"./zsxq.77f6dc86.js";import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,a as n,d as s,b as t,e as p,r as u}from"./app.4486f4b2.js";const k="/assets/image-20221002115755664.8b0f67d6.png",r={},d=p('<h2 id="assignment-3" tabindex="-1"><a class="header-anchor" href="#assignment-3" aria-hidden="true">#</a> Assignment # 3</h2><p><strong>Introduction to Computer Science</strong></p><p><strong>CSC1-UA- 0101</strong></p><p><strong>Due date is 10/10 by 11:55 PM</strong></p><p><strong>Re-design Assignment #2 and implement user-defined methods for part1 and Part2.</strong></p><blockquote><p>\u91CD\u65B0\u8BBE\u8BA1\u4EFB\u52A1#2\u5E76\u5B9E\u73B0\u7528\u6237\u5B9A\u4E49\u7684\u65B9\u6CD5 \u9605\u8BFB\u7B2C1\u548C\u7B2C2\u90E8\u5206\u3002</p></blockquote><p><strong>Try to modalized your program and re-use code to make the program more efficient.</strong></p><blockquote><p>\u5C1D\u8BD5\u6A21\u5757\u5316\u60A8\u7684\u7A0B\u5E8F\uFF0C\u5E76\u91CD\u7528\u4EE3\u7801\uFF0C\u4F7F\u7A0B\u5E8F\u66F4\u6709\u6548\u3002</p></blockquote><p><strong>If you don\u2019t use methods then you will receive a zero in this assignment!</strong></p><blockquote><p>\u5982\u679C\u60A8\u4E0D\u4F7F\u7528\u65B9\u6CD5\uFF0C\u90A3\u4E48\u60A8\u5C06\u5728\u8FD9\u4E2A\u8D4B\u503C\u4E2D\u5F97\u5230\u4E00\u4E2A\u96F6!</p></blockquote><h2 id="code-of-conduct" tabindex="-1"><a class="header-anchor" href="#code-of-conduct" aria-hidden="true">#</a> Code of Conduct</h2><p>All assignments are graded, meaning we expect you to adhere to the academic integrity standards of NYU. To avoid any confusion regarding this, we will briefly state what is and isn\u2019t allowed when working on an assignment.</p><p>Any document and program code that you submit must be fully written by yourself. You can, of course, discuss your work with fellow students, as long as these discussions are restricted to general solution techniques. Put differently, these discussions should not be about concrete code you are writing, nor about specific results you wish to submit. When discussing an assignment with others, this should never lead to you possessing the complete or partial solution of others, regardless of whether the solution is in paper or digital form, and independent of who made the solution. That means, you are also not allowed to possess solutions by someone from a different year or course, by someone from another university, or code from the Internet, etc. This also implies that there is never a valid reason to share your code with fellow students, and that there is no valid reason to publish your code online in any form.</p>',13),m={href:"https://cs.nyu.edu/home/undergrad/policy.html",target:"_blank",rel:"noopener noreferrer"},v=p('<h2 id="assignment-2-details" tabindex="-1"><a class="header-anchor" href="#assignment-2-details" aria-hidden="true">#</a> Assignment # 2 Details</h2><p>Redesign same requirements but implement user-defined methods! You will notice that the rug might not be a perfect symmetry, but that\u2019s ok. Just try your best.</p><blockquote><p>\u91CD\u65B0\u8BBE\u8BA1\u76F8\u540C\u7684\u9700\u6C42\uFF0C\u4F46\u5B9E\u73B0\u7528\u6237\u5B9A\u4E49\u7684\u65B9\u6CD5!\u4F60\u4F1A\u6CE8\u610F\u5230\u5730\u6BEF\u53EF\u80FD\u4E0D\u662F\u5B8C\u7F8E\u7684\u5BF9\u79F0\uFF0C\u4F46\u6CA1\u5173\u7CFB\u3002\u5C3D\u4F60\u6700\u5927\u7684\u52AA\u529B\u3002</p></blockquote><h2 id="part-1-50-points-weaving-a-kilim-carpet-application-weaving-a-kilim-carpet-application-using-loops-and-nested-loops-save-as-part1-java" tabindex="-1"><a class="header-anchor" href="#part-1-50-points-weaving-a-kilim-carpet-application-weaving-a-kilim-carpet-application-using-loops-and-nested-loops-save-as-part1-java" aria-hidden="true">#</a> Part 1 (50 points): Weaving a Kilim Carpet Application Weaving a Kilim Carpet Application using loops and nested loops: Save as Part1.java</h2><blockquote><p>\u7B2C1\u90E8\u5206(50\u5206):\u7F16\u7EC7 Kilim \u5730\u6BEF\u7684\u5E94\u7528\u4F7F\u7528\u5FAA\u73AF\u548C\u5D4C\u5957\u5FAA\u73AF\u7F16\u7EC7Kilim Carpet Application: \u53E6\u5B58\u4E3APart1.java</p></blockquote><p>Kilims are woven carpets which generally use symmetrical designs. For this assignment, instead of using a loom, wool, and a shuttle, we are asking you to produce a pattern of your own design using loops and nested loops.</p><blockquote><p>Kilims\u662F\u4E00\u79CD\u7F16\u7EC7\u5730\u6BEF\uFF0C\u901A\u5E38\u91C7\u7528\u5BF9\u79F0\u7684\u8BBE\u8BA1\u3002\u5728\u8FD9\u4E2A\u4F5C\u4E1A\u4E2D\uFF0C\u6211\u4EEC\u4E0D\u662F\u4F7F\u7528\u7EC7\u5E03\u673A\u3001\u7F8A\u6BDB\u548C\u68AD\u5B50\uFF0C\u800C\u662F\u8981\u6C42\u4F60\u4F7F\u7528\u5FAA\u73AF\u548C\u5D4C\u5957\u5FAA\u73AF\u6765\u5236\u4F5C\u4F60\u81EA\u5DF1\u8BBE\u8BA1\u7684\u56FE\u6848\u3002</p></blockquote><p>Write a program to weave <strong>your own Kilim carpet</strong> with 30 rows by 30 columns. The patterns should be <strong>designed by you (it should be different than the design of carpet below</strong>). <strong>Your</strong> <strong>carpet though MUST include at least one diamond shape, checkerboards, and squares</strong> (See example below for these patterns). <strong>Also, use other characters such as $ or % or + or @ rather</strong> <strong>than a \u201C*\u201D to weave the rug. Make sure not to copy the entire pattern from the below rug</strong> <strong>or copy patterns from another student</strong>! Show your creativity by weaving a different design while meeting the requirements mentioned above. You will get extra credit for excellent design and added features.</p><blockquote><p>\u7F16\u5199\u4E00\u4E2A\u7A0B\u5E8F\u6765\u7F16\u7EC7\u4F60\u81EA\u5DF1\u768430\u884C30\u67F1\u7684Kilim\u5730\u6BEF\u3002\u7684\u6A21\u5F0F\u5E94\u8BE5\u662F\u4F60\u81EA\u5DF1\u8BBE\u8BA1\u7684(\u5E94\u8BE5\u548C\u4E0B\u9762\u5730\u6BEF\u7684\u8BBE\u8BA1\u4E0D\u4E00\u6837)\u3002\u4F60\u7684\u4F46\u5730\u6BEF\u81F3\u5C11\u8981\u6709\u4E00\u79CD\u83F1\u5F62\u3001\u68CB\u76D8\u683C\u548C\u6B63\u65B9\u5F62(\u89C1\u4E0B\u9762\u662F\u8FD9\u4E9B\u56FE\u6848\u7684\u4F8B\u5B50\u3002\u540C\u6837\uFF0C\u4F7F\u7528\u5176\u4ED6\u5B57\u7B26\uFF0C\u5982$\u6216%\u6216+\u6216@\u800C\u4E0D\u662F\u7528\u201C*\u201D\u6765\u7EC7\u5730\u6BEF\u3002\u4E00\u5B9A\u4E0D\u8981\u4ECE\u4E0B\u9762\u7684\u5730\u6BEF\u4E0A\u590D\u5236\u6574\u4E2A\u56FE\u6848\u6216\u8005\u590D\u5236\u5176\u4ED6\u5B66\u751F\u7684\u56FE\u6848!\u901A\u8FC7\u7F16\u7EC7\u4E0D\u540C\u7684\u56FE\u6848\u6765\u5C55\u793A\u4F60\u7684\u521B\u9020\u529B\u5728\u6EE1\u8DB3\u4E0A\u8FF0\u8981\u6C42\u7684\u540C\u65F6\u3002\u4F18\u79C0\u7684\u8BBE\u8BA1\u5C06\u83B7\u5F97\u989D\u5916\u7684\u5B66\u5206\u5E76\u6DFB\u52A0\u529F\u80FD\u3002</p></blockquote><p>Here is a 12 th Century Moroccan Kilim Carpet sample pattern made of 25 rows and36 columns: (This design is made up of stars (asterisks) and spaces, please ignore the border, color, and the shading effect):</p><blockquote><p>\u8FD9\u662F\u4E00\u5F2012\u4E16\u7EAA\u7684\u6469\u6D1B\u54E5\u57FA\u91CC\u59C6\u5730\u6BEF\u6837\u54C1\u56FE\u6848\uFF0C\u753125\u884C\u548C36\u5217:(\u672C\u8BBE\u8BA1\u7531\u661F\u53F7(\u661F\u53F7)\u548C\u7A7A\u683C\u7EC4\u6210\uFF0C\u8BF7\u5FFD\u7565\u8FB9\u6846\uFF0C \u989C\u8272\uFF0C\u4EE5\u53CA\u5E95\u7EB9\u6548\u679C):</p></blockquote><p><img src="'+k+`" alt="image-20221010091358229" loading="lazy"></p><h2 id="here-are-the-requirements" tabindex="-1"><a class="header-anchor" href="#here-are-the-requirements" aria-hidden="true">#</a> Here are the requirements:</h2><ul><li>Every print statement should print no more than one character such as &#39;<em>&#39; or one space &#39; &#39;. Do not use statements such as: print(&quot;</em>***********************************&quot;) but rather use loops for every repetition.</li></ul><blockquote><p>\u6BCF\u4E2A\u6253\u5370\u8BED\u53E5\u5E94\u8BE5\u6253\u5370\u4E0D\u8D85\u8FC7\u4E00\u4E2A\u5B57\u7B26\uFF0C\u4F8B\u5982&#39;<em>&#39;\u6216\u4E00\u4E2A\u7A7A\u683C&#39; &#39;\u3002\u4E0D\u8981\u4F7F\u7528\u8BED\u53E5\u5982:\u6253\u5370\u5417 (&quot;</em>***********************************&quot;) \u800C\u662F\u6BCF\u4E2A\u91CD\u590D\u5FAA\u73AF\u4F7F\u7528\u3002</p></blockquote><p><strong>Here are the requirements:</strong></p><blockquote><p>\u8981\u6C42\u5982\u4E0B:</p></blockquote><ul><li>Every print statement should print no more than one character such as &#39;<em>&#39; or one space &#39; &#39;. Do not use statements such as: print(&quot;</em>***********************************&quot;) but rather use loops for every repetition.</li></ul><blockquote><p>\u6BCF\u4E2A\u6253\u5370\u8BED\u53E5\u5E94\u8BE5\u6253\u5370\u4E0D\u8D85\u8FC7\u4E00\u4E2A\u5B57\u7B26\uFF0C\u4F8B\u5982&#39;<em>&#39;\u6216\u4E00\u4E2A\u7A7A\u683C&#39; &#39;\u3002\u4E0D\u8981\u4F7F\u7528\u8BED\u53E5\u5982:\u6253\u5370\u5417 (&quot;</em>***********************************&quot;) \u4F46\u6BCF\u6B21\u91CD\u590D\u90FD\u8981\u4F7F\u7528\u5FAA\u73AF\u3002</p></blockquote><ul><li>Use loops and nested loops to produce these patterns.</li></ul><blockquote><p>\u4F7F\u7528\u5FAA\u73AF\u548C\u5D4C\u5957\u5FAA\u73AF\u6765\u751F\u6210\u8FD9\u4E9B\u6A21\u5F0F\u3002</p></blockquote><p>You can&#39;t use control structure such as switch or if/ else if /else in your program.</p><blockquote><p>\u4E0D\u80FD\u5728\u7A0B\u5E8F\u4E2D\u4F7F\u7528switch\u6216if/ else if/ else\u7B49\u63A7\u5236\u7ED3\u6784\u3002</p></blockquote><ul><li>You have to design your own carpet (different than the carpet from above).</li></ul><blockquote><p>\u4F60\u5FC5\u987B\u81EA\u5DF1\u8BBE\u8BA1\u5730\u6BEF(\u4E0E\u4E0A\u9762\u7684\u5730\u6BEF\u4E0D\u540C)\u3002</p></blockquote><ul><li>Your carpet MUST include at least one diamond shape, checkerboards, and squares. (see example from above for these patterns).</li></ul><blockquote><p>\u4F60\u7684\u5730\u6BEF\u81F3\u5C11\u8981\u6709\u4E00\u79CD\u83F1\u5F62\u3001\u68CB\u76D8\u683C\u548C\u6B63\u65B9\u5F62\u3002(\u53C2\u89C1\u4E0A\u9762\u7684\u4F8B\u5B50\u4E86\u89E3\u8FD9\u4E9B\u6A21\u5F0F)\u3002</p></blockquote><ul><li>Some of the patterns are repeated; you might want to first isolate the elements in the design (eg. the first two rows, the &quot;checkerboard&quot; elements, the triangle) and then combine them to form the &quot;rug&quot;.</li></ul><blockquote><p>\u6709\u4E9B\u6A21\u5F0F\u662F\u91CD\u590D\u7684;\u4F60\u53EF\u80FD\u60F3\u8981\u9996\u5148\u5206\u79BB\u8BBE\u8BA1\u4E2D\u7684\u5143\u7D20(\u4F8B\u5982\u3002\u524D\u4E24\u884C\uFF0C\u201C\u68CB\u76D8\u201D\u5143\u7D20\uFF0C\u4E09\u89D2\u5F62)\uFF0C\u7136\u540E\u5C06\u5B83\u4EEC\u7EC4\u5408\u6210\u201C\u5730\u6BEF\u201D\u3002</p></blockquote><ul><li>If the Dimond is too difficult to produce as one pattern, you can break it into 4 triangles or apply any solution you see fit as long you comply with the assignment\u2019s requirements.</li></ul><blockquote><p>\u5982\u679C\u83F1\u5F62\u5F88\u96BE\u5236\u4F5C\u6210\u4E00\u4E2A\u56FE\u6848\uFF0C\u4F60\u53EF\u4EE5\u628A\u5B83\u5206\u62104\u4E2A\u4E09\u89D2\u5F62\uFF0C\u6216\u8005\u5E94\u7528\u4EFB\u4F55\u4F60\u8BA4\u4E3A\u9002\u5408\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u53EA\u8981\u4F60\u7B26\u5408\u4F5C\u4E1A\u7684\u8981\u6C42\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        demo lx = new demo();</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// -------------------------------</span>
<span class="token comment">//        36 / 3 = 12</span>
<span class="token comment">//        lx.min_rhombus_up();</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        System.out.println(&quot;&quot;);</span>
<span class="token comment">//        demo.min_rhombus_middle();</span>
<span class="token comment">//        demo.min_rhombus_down();</span>


    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_up</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0A</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                System.out.print(&quot; &quot;);</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;--*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;*&quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-- &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;   &quot;);</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0B</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;   &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-0-\u4E0A\u4E0B\u5355\u4E2A\u83F1\u5F62\u5408\u5E76\u65B9\u6CD5-\u5305\u62EC\u7B11\u8138" tabindex="-1"><a class="header-anchor" href="#_2-0-\u4E0A\u4E0B\u5355\u4E2A\u83F1\u5F62\u5408\u5E76\u65B9\u6CD5-\u5305\u62EC\u7B11\u8138" aria-hidden="true">#</a> 2.0 \u4E0A\u4E0B\u5355\u4E2A\u83F1\u5F62\u5408\u5E76\u65B9\u6CD5\uFF1A\u5305\u62EC\u7B11\u8138</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        demo lx = new demo();</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// -------------------------------</span>
<span class="token comment">//        36 / 3 = 12</span>
<span class="token comment">//        lx.min_rhombus_up();</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0A</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                System.out.print(&quot; &quot;);</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-^*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;--*&quot;);</span>
<span class="token comment">//            System.out.print(&quot;*&quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;^- &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;   &quot;);</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public static void min_rhombus_down() {</span>
<span class="token comment">//        // \u5C0F\u83F1\u5F62 \u4E0B</span>
<span class="token comment">//        for (int i = 0; i &lt; 6; i++) {</span>
<span class="token comment">//            for (int j = 0; j &lt; 2; j++) {</span>
<span class="token comment">//                System.out.print(&quot; &quot;);</span>
<span class="token comment">//            }</span>
<span class="token comment">//            System.out.print(&quot;*&quot;);</span>
<span class="token comment">//            System.out.print(&quot;   &quot;);</span>
<span class="token comment">//        }</span>
<span class="token comment">//    }</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6B63\u65B9\u5F62" tabindex="-1"><a class="header-anchor" href="#\u6B63\u65B9\u5F62" aria-hidden="true">#</a> \u6B63\u65B9\u5F62</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        demo lx = new demo();</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// -------------------------------</span>
<span class="token comment">//        36 / 3 = 12</span>
<span class="token comment">//        lx.min_rhombus_up();</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u6B63\u65B9\u5F62</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0A</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                System.out.print(&quot; &quot;);</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-^*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;--*&quot;);</span>
<span class="token comment">//            System.out.print(&quot;*&quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;^- &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;   &quot;);</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public static void min_rhombus_down() {</span>
<span class="token comment">//        // \u5C0F\u83F1\u5F62 \u4E0B</span>
<span class="token comment">//        for (int i = 0; i &lt; 6; i++) {</span>
<span class="token comment">//            for (int j = 0; j &lt; 2; j++) {</span>
<span class="token comment">//                System.out.print(&quot; &quot;);</span>
<span class="token comment">//            }</span>
<span class="token comment">//            System.out.print(&quot;*&quot;);</span>
<span class="token comment">//            System.out.print(&quot;   &quot;);</span>
<span class="token comment">//        }</span>
<span class="token comment">//    }</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F00\u5934\u7F16\u5199\u6210\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5F00\u5934\u7F16\u5199\u6210\u65B9\u6CD5" aria-hidden="true">#</a> \u5F00\u5934\u7F16\u5199\u6210\u65B9\u6CD5\uFF1A</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// -------------------------------</span>
<span class="token comment">//        36 / 3 = 12</span>
<span class="token comment">//        lx.min_rhombus_up();</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u6B63\u65B9\u5F62</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0A</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                System.out.print(&quot; &quot;);</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-^*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;--*&quot;);</span>
<span class="token comment">//            System.out.print(&quot;*&quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;^- &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;   &quot;);</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao_first<span class="token punctuation">,</span> <span class="token class-name">String</span> fuhao_second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6700\u7EC8\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u6700\u7EC8\u4EE3\u7801" aria-hidden="true">#</a> \u6700\u7EC8\u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// -------------------------------</span>
<span class="token comment">//        36 / 3 = 12</span>
<span class="token comment">//        lx.min_rhombus_up();</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u6B63\u65B9\u5F62</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0A</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                System.out.print(&quot; &quot;);</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-^*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;--*&quot;);</span>
<span class="token comment">//            System.out.print(&quot;*&quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;^- &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;   &quot;);</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao_first<span class="token punctuation">,</span> <span class="token class-name">String</span> fuhao_second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5220\u9664\u6CE8\u91CA\u7684\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u6CE8\u91CA\u7684\u4EE3\u7801" aria-hidden="true">#</a> \u5220\u9664\u6CE8\u91CA\u7684\u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// -------------------------------</span>
<span class="token comment">//        36 / 3 = 12</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u6B63\u65B9\u5F62</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0A</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-^*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;^- &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao_first<span class="token punctuation">,</span> <span class="token class-name">String</span> fuhao_second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E3A\u4E86\u7B26\u5408\u8001\u5E08\u7684\u6807\u51C6" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4E86\u7B26\u5408\u8001\u5E08\u7684\u6807\u51C6" aria-hidden="true">#</a> \u4E3A\u4E86\u7B26\u5408\u8001\u5E08\u7684\u6807\u51C6\uFF1A</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// -------------------------------</span>
<span class="token comment">//        36 / 3 = 12</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u6B63\u65B9\u5F62</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        demo<span class="token punctuation">.</span><span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_up_and_down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E0A</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
<span class="token comment">//            System.out.print(&quot;-^*&quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;^&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            System.out.print(&quot;^- &quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;^&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">min_rhombus_middle</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u83F1\u5F62 \u4E2D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">space_line</span><span class="token punctuation">(</span><span class="token class-name">String</span> fuhao_first<span class="token punctuation">,</span> <span class="token class-name">String</span> fuhao_second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>fuhao_second<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="numbersystem" tabindex="-1"><a class="header-anchor" href="#numbersystem" aria-hidden="true">#</a> NumberSystem</h2><h3 id="_1-0" tabindex="-1"><a class="header-anchor" href="#_1-0" aria-hidden="true">#</a> 1.0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ClassName: Part2
 * @Description: NumberSystem
 * @Author: AI\u60A6\u521B
 * <span class="token keyword">@date</span>: 2022/10/5 09:28
 * @Version: V1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NS</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NS</span> ns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7C7B\u7684\u662F\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u8F93\u5165</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u7CFB\u7EDF\u300C\u7528\u6237\u63CF\u8FF0\u7528\u6237\u8F93\u5165\u7684\u7C7B\u578B\u300D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u60F3\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>


        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* This is my code, oct to binary*/</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span>  <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236\uFF0C\u5229\u7528\u96642\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u516B\u8FDB\u5236\uFF0C\u5229\u7528\u96648\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u8FDB\u5236\u8F6C\u5341\u516D\u8FDB\u5236*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u5F53\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F7F\u7528 StringBuffer \u548C StringBuilder \u7C7B\u3002
        \u548C String \u7C7B\u4E0D\u540C\u7684\u662F\uFF0CStringBuffer \u548C StringBuilder \u7C7B\u7684\u5BF9\u8C61\u80FD\u591F\u88AB\u591A\u6B21\u7684\u4FEE\u6539\uFF0C\u5E76\u4E14\u4E0D\u4EA7\u751F\u65B0\u7684\u672A\u4F7F\u7528\u5BF9\u8C61\u3002*/</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u516D\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5168\u90E8\u53D8\u6210\u5927\u5199</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u516B\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u4E8C\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int binaryToDecimal(String radix) {</span>
<span class="token comment">//        /*\u4E8C\u8FDB\u5236\u5230\u5341\u8FDB\u5236*/</span>
<span class="token comment">//        // 1010</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">//        for (char c : radix.toCharArray())</span>
<span class="token comment">//            x = x * 2 + (c == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////        System.out.println(x);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-0" tabindex="-1"><a class="header-anchor" href="#_2-0" aria-hidden="true">#</a> 2.0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ClassName: Part2
 * @Description: NumberSystem
 * @Author: AI\u60A6\u521B
 * <span class="token keyword">@date</span>: 2022/10/5 09:28
 * @Version: V1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NS</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NS</span> ns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7C7B\u7684\u662F\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u8F93\u5165</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u7CFB\u7EDF\u300C\u7528\u6237\u63CF\u8FF0\u7528\u6237\u8F93\u5165\u7684\u7C7B\u578B\u300D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u60F3\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>


        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* This is my code, oct to binary*/</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236\uFF0C\u5229\u7528\u96642\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u516B\u8FDB\u5236\uFF0C\u5229\u7528\u96648\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u8FDB\u5236\u8F6C\u5341\u516D\u8FDB\u5236*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u5F53\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F7F\u7528 StringBuffer \u548C StringBuilder \u7C7B\u3002
        \u548C String \u7C7B\u4E0D\u540C\u7684\u662F\uFF0CStringBuffer \u548C StringBuilder \u7C7B\u7684\u5BF9\u8C61\u80FD\u591F\u88AB\u591A\u6B21\u7684\u4FEE\u6539\uFF0C\u5E76\u4E14\u4E0D\u4EA7\u751F\u65B0\u7684\u672A\u4F7F\u7528\u5BF9\u8C61\u3002*/</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u516D\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5168\u90E8\u53D8\u6210\u5927\u5199</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u516B\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u4E8C\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int binaryToDecimal(String radix) {</span>
<span class="token comment">//        /*\u4E8C\u8FDB\u5236\u5230\u5341\u8FDB\u5236*/</span>
<span class="token comment">//        // 1010</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">//        for (char c : radix.toCharArray())</span>
<span class="token comment">//            x = x * 2 + (c == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////        System.out.println(x);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-0-\u4FEE\u590D\u591A\u8F93\u51FA-bug" tabindex="-1"><a class="header-anchor" href="#_3-0-\u4FEE\u590D\u591A\u8F93\u51FA-bug" aria-hidden="true">#</a> 3.0 \u4FEE\u590D\u591A\u8F93\u51FA bug</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ClassName: Part2
 * @Description: NumberSystem
 * @Author: AI\u60A6\u521B
 * <span class="token keyword">@date</span>: 2022/10/5 09:28
 * @Version: V1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NS</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NS</span> ns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7C7B\u7684\u662F\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u8F93\u5165</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u7CFB\u7EDF\u300C\u7528\u6237\u63CF\u8FF0\u7528\u6237\u8F93\u5165\u7684\u7C7B\u578B\u300D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u60F3\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* This is my code, oct to binary*/</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236\uFF0C\u5229\u7528\u96642\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u516B\u8FDB\u5236\uFF0C\u5229\u7528\u96648\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u8FDB\u5236\u8F6C\u5341\u516D\u8FDB\u5236*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u5F53\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F7F\u7528 StringBuffer \u548C StringBuilder \u7C7B\u3002
        \u548C String \u7C7B\u4E0D\u540C\u7684\u662F\uFF0CStringBuffer \u548C StringBuilder \u7C7B\u7684\u5BF9\u8C61\u80FD\u591F\u88AB\u591A\u6B21\u7684\u4FEE\u6539\uFF0C\u5E76\u4E14\u4E0D\u4EA7\u751F\u65B0\u7684\u672A\u4F7F\u7528\u5BF9\u8C61\u3002*/</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u516D\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5168\u90E8\u53D8\u6210\u5927\u5199</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u516B\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u4E8C\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int binaryToDecimal(String radix) {</span>
<span class="token comment">//        /*\u4E8C\u8FDB\u5236\u5230\u5341\u8FDB\u5236*/</span>
<span class="token comment">//        // 1010</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">//        for (char c : radix.toCharArray())</span>
<span class="token comment">//            x = x * 2 + (c == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////        System.out.println(x);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-0-\u4FEE\u590D-dec-to-oct\u3001hex\u3001bin" tabindex="-1"><a class="header-anchor" href="#_4-0-\u4FEE\u590D-dec-to-oct\u3001hex\u3001bin" aria-hidden="true">#</a> 4.0 \u4FEE\u590D\uFF1Adec to oct\u3001hex\u3001bin</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ClassName: Part2
 * @Description: NumberSystem
 * @Author: AI\u60A6\u521B
 * <span class="token keyword">@date</span>: 2022/10/5 09:28
 * @Version: V1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NS</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NS</span> ns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7C7B\u7684\u662F\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u8F93\u5165</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u7CFB\u7EDF\u300C\u7528\u6237\u63CF\u8FF0\u7528\u6237\u8F93\u5165\u7684\u7C7B\u578B\u300D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u60F3\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* This is my code, oct to binary*/</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">ns<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236\uFF0C\u5229\u7528\u96642\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u516B\u8FDB\u5236\uFF0C\u5229\u7528\u96648\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u8FDB\u5236\u8F6C\u5341\u516D\u8FDB\u5236*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u5F53\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F7F\u7528 StringBuffer \u548C StringBuilder \u7C7B\u3002
        \u548C String \u7C7B\u4E0D\u540C\u7684\u662F\uFF0CStringBuffer \u548C StringBuilder \u7C7B\u7684\u5BF9\u8C61\u80FD\u591F\u88AB\u591A\u6B21\u7684\u4FEE\u6539\uFF0C\u5E76\u4E14\u4E0D\u4EA7\u751F\u65B0\u7684\u672A\u4F7F\u7528\u5BF9\u8C61\u3002*/</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u516D\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5168\u90E8\u53D8\u6210\u5927\u5199</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u516B\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u4E8C\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int binaryToDecimal(String radix) {</span>
<span class="token comment">//        /*\u4E8C\u8FDB\u5236\u5230\u5341\u8FDB\u5236*/</span>
<span class="token comment">//        // 1010</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">//        for (char c : radix.toCharArray())</span>
<span class="token comment">//            x = x * 2 + (c == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////        System.out.println(x);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-0" tabindex="-1"><a class="header-anchor" href="#_5-0" aria-hidden="true">#</a> 5.0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ClassName: Part2
 * @Description: NumberSystem
 * @Author: AI\u60A6\u521B
 * <span class="token keyword">@date</span>: 2022/10/5 09:28
 * @Version: V1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NS</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NS</span> ns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7C7B\u7684\u662F\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u8F93\u5165</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u7CFB\u7EDF\u300C\u7528\u6237\u63CF\u8FF0\u7528\u6237\u8F93\u5165\u7684\u7C7B\u578B\u300D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u60F3\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        ns<span class="token punctuation">.</span><span class="token function">switch_case</span><span class="token punctuation">(</span>digital_system<span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">switch_case</span><span class="token punctuation">(</span><span class="token class-name">String</span> digital_system<span class="token punctuation">,</span> <span class="token class-name">String</span> target<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token class-name">Opr_num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* This is my code, oct to binary*/</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236\uFF0C\u5229\u7528\u96642\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u516B\u8FDB\u5236\uFF0C\u5229\u7528\u96648\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u8FDB\u5236\u8F6C\u5341\u516D\u8FDB\u5236*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u5F53\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F7F\u7528 StringBuffer \u548C StringBuilder \u7C7B\u3002
        \u548C String \u7C7B\u4E0D\u540C\u7684\u662F\uFF0CStringBuffer \u548C StringBuilder \u7C7B\u7684\u5BF9\u8C61\u80FD\u591F\u88AB\u591A\u6B21\u7684\u4FEE\u6539\uFF0C\u5E76\u4E14\u4E0D\u4EA7\u751F\u65B0\u7684\u672A\u4F7F\u7528\u5BF9\u8C61\u3002*/</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u516D\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5168\u90E8\u53D8\u6210\u5927\u5199</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u516B\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u4E8C\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int binaryToDecimal(String radix) {</span>
<span class="token comment">//        /*\u4E8C\u8FDB\u5236\u5230\u5341\u8FDB\u5236*/</span>
<span class="token comment">//        // 1010</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">//        for (char c : radix.toCharArray())</span>
<span class="token comment">//            x = x * 2 + (c == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////        System.out.println(x);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="over" tabindex="-1"><a class="header-anchor" href="#over" aria-hidden="true">#</a> over</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ClassName: Part2
 * @Description: NumberSystem
 * @Author: AI\u60A6\u521B
 * <span class="token keyword">@date</span>: 2022/10/5 09:28
 * @Version: V1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NS</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        NS ns = new NS();  // \u7C7B\u7684\u662F\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u8F93\u5165</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u7CFB\u7EDF\u300C\u7528\u6237\u63CF\u8FF0\u7528\u6237\u8F93\u5165\u7684\u7C7B\u578B\u300D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u60F3\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token function">switch_case</span><span class="token punctuation">(</span>digital_system<span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">switch_case</span><span class="token punctuation">(</span><span class="token class-name">String</span> digital_system<span class="token punctuation">,</span> <span class="token class-name">String</span> target<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token class-name">Opr_num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NS</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* This is my code, oct to binary*/</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236\uFF0C\u5229\u7528\u96642\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u516B\u8FDB\u5236\uFF0C\u5229\u7528\u96648\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u8FDB\u5236\u8F6C\u5341\u516D\u8FDB\u5236*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u5F53\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F7F\u7528 StringBuffer \u548C StringBuilder \u7C7B\u3002
        \u548C String \u7C7B\u4E0D\u540C\u7684\u662F\uFF0CStringBuffer \u548C StringBuilder \u7C7B\u7684\u5BF9\u8C61\u80FD\u591F\u88AB\u591A\u6B21\u7684\u4FEE\u6539\uFF0C\u5E76\u4E14\u4E0D\u4EA7\u751F\u65B0\u7684\u672A\u4F7F\u7528\u5BF9\u8C61\u3002*/</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u516D\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5168\u90E8\u53D8\u6210\u5927\u5199</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u516B\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u4E8C\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int binaryToDecimal(String radix) {</span>
<span class="token comment">//        /*\u4E8C\u8FDB\u5236\u5230\u5341\u8FDB\u5236*/</span>
<span class="token comment">//        // 1010</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">//        for (char c : radix.toCharArray())</span>
<span class="token comment">//            x = x * 2 + (c == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////        System.out.println(x);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4FEE\u590D-dec-to-bin-bug" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u590D-dec-to-bin-bug" aria-hidden="true">#</a> \u4FEE\u590D dec to bin bug</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ClassName: Part2
 * @Description: NumberSystem
 * @Author: AI\u60A6\u521B
 * <span class="token keyword">@date</span>: 2022/10/5 09:28
 * @Version: V1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NS</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        NS ns = new NS();  // \u7C7B\u7684\u662F\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u8F93\u5165</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57\u7CFB\u7EDF\u300C\u7528\u6237\u63CF\u8FF0\u7528\u6237\u8F93\u5165\u7684\u7C7B\u578B\u300D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u60F3\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token function">switch_case</span><span class="token punctuation">(</span>digital_system<span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">switch_case</span><span class="token punctuation">(</span><span class="token class-name">String</span> digital_system<span class="token punctuation">,</span> <span class="token class-name">String</span> target<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token class-name">Opr_num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NS</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* This is my code, oct to binary*/</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
<span class="token comment">//                        System.out.println(&quot;xxx:&gt;&gt;&gt;&quot; + Integer.parseInt(Opr_num));</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToBin</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToOct</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sc<span class="token punctuation">.</span></span>DecToHex</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236\uFF0C\u5229\u7528\u96642\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
                intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* \u5341\u8FDB\u5236\u8F6C\u516B\u8FDB\u5236\uFF0C\u5229\u7528\u96648\u53D6\u4F59*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u8FDB\u5236\u8F6C\u5341\u516D\u8FDB\u5236*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u5F53\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F7F\u7528 StringBuffer \u548C StringBuilder \u7C7B\u3002
        \u548C String \u7C7B\u4E0D\u540C\u7684\u662F\uFF0CStringBuffer \u548C StringBuilder \u7C7B\u7684\u5BF9\u8C61\u80FD\u591F\u88AB\u591A\u6B21\u7684\u4FEE\u6539\uFF0C\u5E76\u4E14\u4E0D\u4EA7\u751F\u65B0\u7684\u672A\u4F7F\u7528\u5BF9\u8C61\u3002*/</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5341\u516D\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5168\u90E8\u53D8\u6210\u5927\u5199</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u516B\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u4E8C\u8FDB\u5236\u8F6C\u5341\u8FDB\u5236*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="kai-\u63D0\u4EA4\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#kai-\u63D0\u4EA4\u4EE3\u7801" aria-hidden="true">#</a> KAI \u63D0\u4EA4\u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jdk<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>interop<span class="token punctuation">.</span></span><span class="token class-name">SwingInterOpUtils</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Part2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Part2</span> ns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Part2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// setting an output</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system to convert from: bin, or dec, or oct or hex:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> digital_system <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number system, let user describe the datatype</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter number as a String:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Opr_num</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the name of the number system you want to convert to: bin, or dec, or oct or hex: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6237\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</span>
        <span class="token class-name">String</span> target <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// the purpose number system that user want to convert</span>
        ns<span class="token punctuation">.</span><span class="token function">switch_case</span><span class="token punctuation">(</span>digital_system<span class="token punctuation">,</span> <span class="token class-name">Opr_num</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//                if (target.equals(&quot;dec&quot;)) {</span>
<span class="token comment">//                    int bin_to_dec = ns.BinToDec(Opr_num);</span>
<span class="token comment">//                    System.out.println(bin_to_dec);</span>
<span class="token comment">//                break;</span>
<span class="token comment">//                } else if (target.equals(&quot;oct&quot;)) {</span>
<span class="token comment">//                    break;</span>
<span class="token comment">//                } else if (target.equals(&quot;hex&quot;)) {</span>
<span class="token comment">//                    break;</span>
<span class="token comment">//                } else if (target.equals(&quot;bin&quot;)) {</span>
<span class="token comment">//                    break;</span>
<span class="token comment">//                }</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//        if (digital_system.equals(&quot;dec&quot;) &amp;&amp; target.equals(&quot;bin&quot;)) {</span>
<span class="token comment">//            String dec_to_binary = ns.DecToBin(Integer.parseInt(inDec));</span>
<span class="token comment">//            System.out.print(dec_to_binary);</span>
<span class="token comment">//        } else if (digital_system.equals(&quot;dec&quot;) &amp;&amp; target.equals(&quot;oct&quot;)) {</span>
<span class="token comment">//            String dec_to_binary = ns.DecToOct(Integer.parseInt(inDec));</span>
<span class="token comment">//            System.out.print(dec_to_binary);</span>
<span class="token comment">//        } else if (digital_system.equals(&quot;dec&quot;) &amp;&amp; target.equals(&quot;hex&quot;)) {</span>
<span class="token comment">//            String dec_to_binary = ns.DecToHex(Integer.parseInt(inDec));</span>
<span class="token comment">//            System.out.print(dec_to_binary);</span>
<span class="token comment">//        }</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">switch_case</span><span class="token punctuation">(</span><span class="token class-name">String</span> digital_system<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token class-name">Opr_num</span><span class="token punctuation">,</span> <span class="token class-name">String</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>digital_system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringOct</span> <span class="token operator">=</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">StringBinary_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_to_StringHex</span> <span class="token operator">=</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringBinary_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_to_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringOct_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">/*
                 * This is my code about the transition of Octal
                 * by transfer the number system to Decimal first
                 * And we can easily reach any number system after when we were in Decimal
                 */</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token class-name">StringOct_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">int</span> <span class="token class-name">StringHex_To_IntDec</span> <span class="token operator">=</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_TO_StringBin</span> <span class="token operator">=</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_TO_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>

                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>

                        <span class="token class-name">String</span> <span class="token class-name">IntDec_TO_StringOct</span> <span class="token operator">=</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token class-name">StringHex_To_IntDec</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_TO_StringOct</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;dec&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;bin&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringBin</span> <span class="token operator">=</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringBin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;oct&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">StringDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">StringDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
                        <span class="token class-name">String</span> <span class="token class-name">IntDec_To_StringHex</span> <span class="token operator">=</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">Opr_num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntDec_To_StringHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToBin</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* decimal to binary and then use%2 */</span>
        <span class="token class-name">String</span> result_binary <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result_binary <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_binary<span class="token punctuation">;</span>
                intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> result_binary<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToOct</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* decimal to oct and then use%8*/</span>
        <span class="token class-name">String</span> result_oct <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result_oct <span class="token operator">=</span> <span class="token punctuation">(</span>intDec <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> result_oct<span class="token punctuation">;</span>
            intDec <span class="token operator">=</span> intDec <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result_oct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">DecToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> intDec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*decimal to hex*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intDec <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            System.out.println(0);</span>
<span class="token comment">//            System.exit(0);</span>
            <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">StringBuffer</span> stb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>intDec <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stb <span class="token operator">=</span> stb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>intDec <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intDec <span class="token operator">/=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int method(String inMsg) {</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">////        int mul = 1;</span>
<span class="token comment">//        int str_length = inMsg.length();</span>
<span class="token comment">//        for (int i = str_length - 1; i &gt; 0; i--) {</span>
<span class="token comment">////            x += mul * (inMsg.charAt(i) == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////            mul *= 2;</span>
<span class="token comment">//            System.out.println(inMsg.charAt(i));</span>
<span class="token comment">//            x += (int) Math.pow(2, str_length - 1) * (inMsg.charAt(i) == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////            System.out.println(x);</span>
<span class="token comment">//        }</span>
<span class="token comment">////        System.out.println(mul);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">HexToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*hexadecimal to decimal*/</span>
<span class="token comment">//        int hex_to_dec = 0, i = 0;</span>
<span class="token comment">//        int str_length = hex.length();</span>
<span class="token comment">//        while (str_length &gt; 0) {</span>
<span class="token comment">////            dec += ()</span>
<span class="token comment">//            char ch = hex.charAt(i);</span>
<span class="token comment">//            int base = (ch == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">//            hex_to_dec += base * Math.pow(16, str_length - 1);</span>
<span class="token comment">//            ++i;</span>
<span class="token comment">//            --str_length;</span>
<span class="token comment">//        }</span>
<span class="token comment">//        return hex_to_dec;</span>
        <span class="token class-name">String</span> digits <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEF&quot;</span><span class="token punctuation">;</span>
        hex <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// convert all it in uppercase</span>
        <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hex<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> hex<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> d <span class="token operator">=</span> digits<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            val <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">*</span> val <span class="token operator">+</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">OctToDec</span><span class="token punctuation">(</span><span class="token keyword">int</span> oct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*octal to decimal*/</span>
        <span class="token keyword">int</span> decimalNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oct <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            decimalNumber <span class="token operator">+=</span> <span class="token punctuation">(</span>oct <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            oct <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> decimalNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">BinToDec</span><span class="token punctuation">(</span><span class="token class-name">String</span> bin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*binary to decimal*/</span>
        <span class="token keyword">int</span> bin_to_dec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_length <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>str_length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            dec += ()</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> bin<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> base <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bin_to_dec <span class="token operator">+=</span> base <span class="token operator">*</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> str_length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">++</span>i<span class="token punctuation">;</span>
            <span class="token operator">--</span>str_length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bin_to_dec<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    public int binaryToDecimal(String radix) {</span>

<span class="token comment">//        // 1010</span>
<span class="token comment">//        int x = 0;</span>
<span class="token comment">//        for (char c : radix.toCharArray())</span>
<span class="token comment">//            x = x * 2 + (c == &#39;1&#39; ? 1 : 0);</span>
<span class="token comment">////        System.out.println(x);</span>
<span class="token comment">//        return x;</span>
<span class="token comment">//    }</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+e+'" alt="" loading="lazy"></p></details>',63),b={class:"custom-container info"},y=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),g=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),w=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),_={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),S=n("p",null,[n("img",{src:o,alt:"",loading:"lazy"})],-1);function f(q,D){const a=u("ExternalLinkIcon");return l(),i("div",null,[d,n("p",null,[s("Every student is responsible for the work they submit. If there is any doubt during the grading about whether a student created the assignment themselves (e.g. if the solution matches that of others), we reserve the option to let the student explain why this is the case. In case doubts remain, or we decide to directly escalate the issue, the suspected violations will be reported to the academic administration according to the policies of NYU (see "),n("a",m,[s("https://cs.nyu.edu/home/undergrad/policy.html"),t(a)]),s(").")]),v,n("div",b,[y,g,w,n("p",null,[s("\u65B9\u6CD5\u4E00\uFF1A"),n("a",_,[s("QQ"),t(a)])]),h]),S])}const B=c(r,[["render",f],["__file","07-Assignment-3-java.html.vue"]]);export{B as default};
