import{_ as a}from"./gzh-DnOBNg6W.js";import{_ as n}from"./zsxq-BcdwOI-_.js";import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as i,o as l}from"./app-CELdrjf8.js";const o={};function r(p,e){return l(),t("div",null,e[0]||(e[0]=[i('<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>平时导出依赖一般都是：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pip freeze </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;">  requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这种方式导出的是当前 Python 环境中所有的包，有些库不是必需的也跟着导出来，安装的时候也过于麻烦。</p><p>这种时候就要使用 <code>pipreqs</code> ，它只会导出当前项目运行所依赖的包。</p><p>下载命令：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pip install pipreqs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用命令如下，进入项目的根目录后输入如下命令：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pipreqs .</span><span style="color:#F92672;">/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后会在当前目录下生成 <strong>requirements.txt</strong> 文件。</p><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>UnicodeDecodeError: &#39;gbk&#39; codec can&#39;t decode byte 0x80 in position 175: illegal multibyte sequence</p></div><h2 id="解决方法-指定编码格式" tabindex="-1"><a class="header-anchor" href="#解决方法-指定编码格式"><span>解决方法：指定编码格式</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pipreqs .</span><span style="color:#F92672;">/</span><span style="color:#F44747;"> --</span><span style="color:#F8F8F2;">encoding</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">utf8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后便会生成 <code>requirements.txt</code> 文件，包含了此路径下项目中的依赖项。</p><h2 id="导入" tabindex="-1"><a class="header-anchor" href="#导入"><span>导入</span></a></h2><p>导入依赖包：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pip install </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">r .</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可安装所有依赖，另外还可以使用其他源来加速下载，如清华源：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">pip install </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">r .</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">requriements.txt </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">i https:</span><span style="color:#F92672;">//</span><span style="color:#F8F8F2;">pypi.tuna.tsinghua.edu.cn</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">simple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">细节</p><p>有些小细节也是值得一提的，那就是 <code>pip freeze &gt; requirements.txt</code> 指令必须用在整个工程项目完全跑通了（也就是项目依赖已经全部安装完成）的情况下，才能将所有的有关依赖库写入 <code>requirements.txt</code> 文件中去，而 <code>pip install -r requirements.txt</code> 指令则使用于服务器部署时较为合适。</p></div><h2 id="补充-python-项目环境迁移" tabindex="-1"><a class="header-anchor" href="#补充-python-项目环境迁移"><span>补充：Python 项目环境迁移</span></a></h2><p>将 Python 项目迁移到新电脑时，不可以直接复制虚拟环境，因为在建立虚拟环境时，虚拟环境中的 <code>python.exe</code> , <code>pip.exe</code> ......等一些文件会“<strong>硬编码</strong>”，记录的是绝对路径，放到其他电脑后，因为路径不同会出错！</p><p>正确的做法是在新电脑中创建新的虚拟环境：<code>python -m venv MyApp</code> ，接下来（方法可供选择）：</p><ol><li><p>复制之前的 lib 文件中的 packes 直接到新电脑的 lib 文件中</p></li><li><p><code>pip freeze &gt; requirements.txt</code> 将包目录存在 txt 中，复制 txt 到新环境，cmd 到新环境，执行 <code>pip install -r requirements.txt</code>。</p></li></ol><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',29)]))}const m=s(o,[["render",r],["__file","requirements.html.vue"]]),y=JSON.parse('{"path":"/Python/basequestion/requirements.html","title":"01-Python 导出/导入依赖包","lang":"zh-CN","frontmatter":{"title":"01-Python 导出/导入依赖包","date":"2022-05-22T23:44:00.000Z","author":"AI悦创","isOriginal":true,"category":"pip","tag":["pip","小知识"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"prev":false,"next":"skill_pycharm2.md","backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"解决方法：指定编码格式","slug":"解决方法-指定编码格式","link":"#解决方法-指定编码格式","children":[]},{"level":2,"title":"导入","slug":"导入","link":"#导入","children":[]},{"level":2,"title":"补充：Python 项目环境迁移","slug":"补充-python-项目环境迁移","link":"#补充-python-项目环境迁移","children":[]}],"git":{"createdTime":1704501196000,"updatedTime":1704501196000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":1}]},"readingTime":{"minutes":2.58,"words":773},"filePathRelative":"Python/basequestion/requirements.md","localizedDate":"2022年5月22日","copyright":{"author":"AI悦创"}}');export{m as comp,y as data};
