import{_ as e}from"./gzh-DnOBNg6W.js";import{_ as n}from"./zsxq-BcdwOI-_.js";import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as p,o as r}from"./app-BCW4c1LD.js";const s="/assets/6415e7ddb2a3b3d222b052569e8195c9-q7OuHBPv.jpg",o="/assets/2cfc18adf51b61ca8140561071d20c1d-BQH9HCQh.png",l={};function c(d,a){return r(),i("div",null,a[0]||(a[0]=[p('<figure><img src="'+s+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>你好，我是悦创。</p><p>工作中，我总听到很多程序员抱怨，说现在的计算机编程语言太多了，学不过来了。一些人 Java 用了很多年，但是最近的项目突然需要用 Python，就会不知所措，压力很大。</p><p>众所周知，Facebook 的主流语言是 Hack（PHP 的进化版本）。不过，我敢拍着胸脯说，就刚入职的工程师而言，100 个里至少有 95 个，以前都从未用过 Hack 或者 PHP。但是，这些人上手都特别快，基本上一两周后，日常编程便毫无压力了。</p><p>他们是怎么做到的呢？</p><p>事实上，他们遵循的，正是我在开篇词中提到的方法，也是本专栏学习的中心观点：“从工程的角度去学习 Python”。那么具体来说，到底要怎么学，学习的过程中又要特别注意哪些地方呢？</p><h2 id="_1-不同语言-需融会贯通" tabindex="-1"><a class="header-anchor" href="#_1-不同语言-需融会贯通"><span>1. 不同语言，需融会贯通</span></a></h2><p>其实，如果你在学一门语言的时候多阅读、多练习、多思考，你就会发现，不同语言都是类似的。编程语言本就是人类控制计算机的指令，语法规则等方面自然大同小异。</p><p>而在原有基础上，学习一门新的编程语言，其实也没有那么难，你首先要做到的是明确区分。比如，在学习 Python 的条件与循环语句时，多回忆一下其他语言的语法是怎样的。再如，遇到 Python 中的字符串相加时，你能分析出它的复杂度吗？再联想到其他语言，比如 Java 中字符串相加的复杂度，它们之间有什么相同点、又有什么区别呢？</p><p>除了能够明确区分语言的不同点，我们还要能联系起来灵活运用。比如，最典型的“编程语言两问”：</p><ul><li>你了解你学过的每种编程语言的特点吗？</li><li>你能根据不同的产品需求，选用合适的编程语言吗？</li></ul><p>举个例子，Python 的优点之一是特别擅长数据分析，所以广泛应用于人工智能、机器学习等领域，如机器学习中 TensorFlow 的框架，就是用 Python 写的。但是涉及到底层的矩阵运算等等，还是要依赖于 C++ 完成，因为 C++ 的速度快，运行效率更高。</p><p>事实上，很多公司都是这样，服务器端开发基于 Python，但底层的基础架构依赖于 C++。这就是典型的“不同需求选用不同语言”。毕竟，你要明白，哪怕只是几十到几百毫秒的速度差距，对于公司、对于用户体验来说都是决定性的。</p><h2 id="_2-唯一语言-可循序渐进" tabindex="-1"><a class="header-anchor" href="#_2-唯一语言-可循序渐进"><span>2. 唯一语言，可循序渐进</span></a></h2><p>当然，如果 Python 是你学的第一门编程语言，那也不必担心。我们知道，虽然同为人机交互的桥梁，Python 语言比起 C++、Java 等主流语言，语法更简洁，也更接近英语，对编程世界的新人还是很友好的，这也是其显著优点。这种情况下，你要做的就是专注于 Python 这一门语言，明确学习的重点，把握好节奏循序渐进地学习。</p><p>根据我多年的学习工作经验，我把编程语言的学习重点，总结成了下面这三步，无论你是否有其他语言的基础，都可以对照来做，稳步进阶。</p><h2 id="_3-第一步-大厦之基-勤加练习" tabindex="-1"><a class="header-anchor" href="#_3-第一步-大厦之基-勤加练习"><span>3. 第一步：大厦之基，勤加练习</span></a></h2><p>任何一门编程语言，其覆盖范围都是相当广泛的，从基本的变量赋值、条件循环，到并发编程、Web 开发等等，我想市面上几乎没有任何一本书能够罗列完全。</p><p>所以，我建议你，在掌握必要的基础时，就得多上手操作了。千万不要等到把教材上所有东西都学完了才开始，因为到那时候你会发现，前面好不容易记住的一堆东西似乎又忘记了。计算机科学是一门十分讲究实战的学科，因此越早上手练习，练得越多越勤，就越好。</p><p>不过，到底什么叫做必要的基础呢？以 Python 为例，如果你能够理解变量间的赋值、基本的数据类型、条件与循环语句、函数的用法，那么你就达到了第一步的底线标准，应该开始在课下多多练习了。</p><p>比方说，你可以自己动手编程做一个简易的计算器，这应该也是大多数程序员实操的第一个小项目。用户输入数字和运算符后，你的程序能够检查输入是否合法并且返回正确的结果吗？</p><p>在做这个小项目的过程中，你可能会遇到不少问题。我的建议是，遇到不懂的问题时，多去 <a href="https://stackoverflow.com/" target="_blank" rel="noopener noreferrer">Stack Overflow</a> 上查询，这样你还能阅读别人优秀的代码，借鉴别人的思路，对于你的学习肯定大有帮助。当然，实在解决不了的问题，也可以写在留言区，我们一起来解决。</p><h2 id="_3-第二步-代码规范-必不可少" tabindex="-1"><a class="header-anchor" href="#_3-第二步-代码规范-必不可少"><span>3. 第二步：代码规范，必不可少</span></a></h2><p>诚然，学习编程讲究快和高效。但是，与此同时，请一定不要忽略每一种语言必要的编程规范。在你自己刚开始写代码练习时，你可以不写单元测试，但总不能几百行的代码却没有一个函数，而是从头顺序写到尾吧？你可以省略一些可有可无的注释，但总不能把很多行代码全部并到一行吧？</p><p>比如，我们来看下面这行代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">v.A(param1, param2, param3).B(param4, param5).C(param6, param7).D()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>显然，这样写十分不科学，应该把它拆分成多行：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">v.A(param1, param2, param3) \\ </span><span style="color:#F44747;">#  字符&#39;\\&#39;表示换行</span></span>
<span class="line"><span style="color:#F8F8F2;"> .B(param4, param5) \\</span></span>
<span class="line"><span style="color:#F8F8F2;"> .C(param6, param7) \\</span></span>
<span class="line"><span style="color:#F8F8F2;"> .D()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再比如，变量和函数的命名虽有一定的随意性，但一定要有意义。如果你图省事，直接把变量依次命名为 v1、v2、v3 等，把函数依次命名为 func1、func2、func3 等等，不仅让其他人难理解，就算是你自己，日后维护起来都费劲儿。</p><p>一名优秀的程序员，一定遵守编程语言的代码规范。像 Facebook 的工程师，每次写完代码都必须经过别人的 review 才能提交。如果有不遵守代码规范的例子，哪怕只是一个函数或是一个变量的命名，我们都会要求原作者加以修改，严格规范才能保证代码库的代码质量。</p><h2 id="_4-第三步-开发经验-质的突破" tabindex="-1"><a class="header-anchor" href="#_4-第三步-开发经验-质的突破"><span>4. 第三步：开发经验，质的突破</span></a></h2><p>想要真正熟练地掌握 Python 或者是任何一门其他的编程语言，拥有大中型产品的开发经验是必不可少的。因为实战经验才能让你站得更高，望得更远。</p><p>比如我们每天都在用搜索引擎，但你了解一个搜索引擎的服务器端实现吗？这是一个典型的面向对象设计，你需要定义一系列相关的类和函数，需要从产品需求、代码复杂度、效率以及可读性等多个方面考虑，同时，上线后还要进行各种优化等等。</p><p>当然，在专栏里我没办法让你完成一个上亿用户级的实践产品，但是我会把自己这些年的开发经验倾囊相授，并通过量化交易这个实战案例，带你踏入“高级战场”，帮你掌握必要的开发知识。</p><p>最后，我专门为你绘制了一张 Python 学习的知识图谱，里面涵盖了 Python 最高频的核心知识，大部分内容我在专栏中都会讲到。你可以保存或者打印出来，作为学习参考。</p><figure><img src="`+o+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>今天，我跟你分享了 Python 的学习方法和注意事项，其实这些观点不只适用于 Python，也能帮助你学习任何一门其他计算机编程语言，希望你能牢记在心。在接下来的课程里，我会带你逐步突破，最终成为一名 Python 高手。</p><p>那么，对于学习 Python 或者是其他编程语言，你有什么困扰或是心得吗？欢迎在留言区与我交流！</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',42)]))}const y=t(l,[["render",c],["__file","01.html.vue"]]),f=JSON.parse('{"path":"/Python/Python-core-technology-and-practice/01.html","title":"01-如何逐步突破，成为Python高手？","lang":"zh-CN","frontmatter":{"title":"01-如何逐步突破，成为Python高手？","icon":"python","date":"2022-11-22T00:15:56.000Z","author":"AI悦创","isOriginal":true,"category":"Python 进阶","tag":["Python 进阶"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 不同语言，需融会贯通","slug":"_1-不同语言-需融会贯通","link":"#_1-不同语言-需融会贯通","children":[]},{"level":2,"title":"2. 唯一语言，可循序渐进","slug":"_2-唯一语言-可循序渐进","link":"#_2-唯一语言-可循序渐进","children":[]},{"level":2,"title":"3. 第一步：大厦之基，勤加练习","slug":"_3-第一步-大厦之基-勤加练习","link":"#_3-第一步-大厦之基-勤加练习","children":[]},{"level":2,"title":"3. 第二步：代码规范，必不可少","slug":"_3-第二步-代码规范-必不可少","link":"#_3-第二步-代码规范-必不可少","children":[]},{"level":2,"title":"4. 第三步：开发经验，质的突破","slug":"_4-第三步-开发经验-质的突破","link":"#_4-第三步-开发经验-质的突破","children":[]}],"git":{"createdTime":1705215474000,"updatedTime":1705215474000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":1}]},"readingTime":{"minutes":8.05,"words":2415},"filePathRelative":"Python/Python-core-technology-and-practice/01.md","localizedDate":"2022年11月22日","copyright":{"author":"AI悦创"}}');export{y as comp,f as data};
