import{_ as p}from"./gzh-DnOBNg6W.js";import{_ as c}from"./zsxq-BcdwOI-_.js";import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as F,a as r,b as t,d as n,f as s,e,r as y,o as u}from"./app-D_QbIXkb.js";const m="/assets/12d83d0b665d34479fb5023ad24bd146-DMZtnOo0.jpg",v="/assets/b93956302991443d440684d86d16199c-Tj7BaEPc.jpg",h={};function b(g,l){const i=y("CodeTabs");return u(),F("div",null,[l[28]||(l[28]=r('<figure><img src="'+m+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>你好，我是悦创。</p><p>环境配置好后，我们就来快速学习几个 Python 必会的基础语法。我假设你是 Python 零基础，但已经有一些其他编程语言的基础。下面我们一一来看。</p><h3 id="_2-1-输入与输出" tabindex="-1"><a class="header-anchor" href="#_2-1-输入与输出"><span>2.1 输入与输出</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_input(</span><span style="color:#E6DB74;">&quot;What&#39;s your name?&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">100</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;hello,</span><span style="color:#AE81FF;">%s</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F92672;"> %</span><span style="color:#F8F8F2;">name)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;sum = </span><span style="color:#AE81FF;">%d</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F92672;"> %</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>raw_input</code> 是 Python2.7 的输入函数，在 python3.x 里可以直接使用 input，赋值给变量 name，print 是输出函数，<code>%name</code> 代表变量的数值，因为是字符串类型，所以在前面用的 <code>%s</code> 作为代替。</p><p>这是运行结果：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">What</span><span style="color:#E6DB74;">&#39;s your name?cy</span></span>
<span class="line"><span style="color:#F8F8F2;">hello,cy</span></span>
<span class="line"><span style="color:#66D9EF;">sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 200</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-判断语句-if-else" tabindex="-1"><a class="header-anchor" href="#_2-2-判断语句-if-else"><span>2.2 判断语句：if … else …</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> score</span><span style="color:#F92672;">&gt;=</span><span style="color:#AE81FF;"> 90</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">       print</span><span style="color:#E6DB74;"> &#39;Excellent&#39;</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">       if</span><span style="color:#F8F8F2;"> score </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 60</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">           print</span><span style="color:#E6DB74;"> &#39;Fail&#39;</span></span>
<span class="line"><span style="color:#F92672;">       else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">           print</span><span style="color:#E6DB74;"> &#39;Good Job&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>if … else … 是经典的判断语句，需要注意的是在 if expression 后面有个冒号，同样在 else 后面也存在冒号。</p><p>另外需要注意的是，Python 不像其他语言一样使用{}或者 begin…end 来分隔代码块，而是采用代码缩进和冒号的方式来区分代码之间的层次关系。所以<strong>代码缩进在 Python 中是一种语法</strong>，如果代码缩进不统一，比如有的是 tab 有的是空格，会怎样呢？会产生错误或者异常。相同层次的代码一定要采用相同层次的缩进。</p><h3 id="_2-3-循环语句-for-in" tabindex="-1"><a class="header-anchor" href="#_2-3-循环语句-for-in"><span>2.3 循环语句：for … in</span></a></h3>`,13)),t(i,{id:"33",data:[{id:"Code"},{id:"运行结果"}]},{title0:n(({value:a,isActive:o})=>l[0]||(l[0]=[e("Code")])),title1:n(({value:a,isActive:o})=>l[1]||(l[1]=[e("运行结果")])),tab0:n(({value:a,isActive:o})=>l[2]||(l[2]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"sum"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," 0")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," number "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},"):")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    sum"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#66D9EF"}}," sum"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," number")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#66D9EF"}}," sum")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:n(({value:a,isActive:o})=>l[3]||(l[3]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"55")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1}),l[29]||(l[29]=s("p",null,[e("for 循环是一种迭代循环机制，迭代即重复相同的逻辑操作。如果规定循环的次数，我们可以使用 range 函数，它在 for 循环中比较常用。"),s("code",null,"range(11)"),e(" 代表从 0 到 10，不包括 11，也相当于 "),s("code",null,"range(0,11)"),e("，range 里面还可以增加步长，比如 "),s("code",null,"range(1,11,2)"),e(" 代表的是"),s("code",null,"[1,3,5,7,9]"),e("。")],-1)),l[30]||(l[30]=s("h3",{id:"_2-4-循环语句-while",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-4-循环语句-while"},[s("span",null,"2.4 循环语句: while")])],-1)),t(i,{id:"47",data:[{id:"Code"},{id:"运行结果"}]},{title0:n(({value:a,isActive:o})=>l[4]||(l[4]=[e("Code")])),title1:n(({value:a,isActive:o})=>l[5]||(l[5]=[e("运行结果")])),tab0:n(({value:a,isActive:o})=>l[6]||(l[6]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"sum"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," 0")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"number "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F8F8F2"}}," number "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 11"),s("span",{style:{color:"#F8F8F2"}},":")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"       sum"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#66D9EF"}}," sum"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," number")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"       number "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," number "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#66D9EF"}}," sum")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:n(({value:a,isActive:o})=>l[7]||(l[7]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"55")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1}),l[31]||(l[31]=s("p",null,"1 到 10 的求和也可以用 while 循环来写，这里 while 控制了循环的次数。while 循环是条件循环，在 while 循环中对于变量的计算方式更加灵活。因此 while 循环适合循环次数不确定的循环，而 for 循环的条件相对确定，适合固定次数的循环。",-1)),l[32]||(l[32]=s("h3",{id:"_2-5-数据类型-列表、元组、字典、集合",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-5-数据类型-列表、元组、字典、集合"},[s("span",null,"2.5 数据类型：列表、元组、字典、集合")])],-1)),l[33]||(l[33]=s("h4",{id:"_2-5-1-列表",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-5-1-列表"},[s("span",null,"2.5.1 列表：[]")])],-1)),t(i,{id:"64",data:[{id:"Code"},{id:"运行结果"}]},{title0:n(({value:a,isActive:o})=>l[8]||(l[8]=[e("Code")])),title1:n(({value:a,isActive:o})=>l[9]||(l[9]=[e("运行结果")])),tab0:n(({value:a,isActive:o})=>l[10]||(l[10]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lists "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"'a'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'b'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'c'"),s("span",{style:{color:"#F8F8F2"}},"]")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lists.append("),s("span",{style:{color:"#E6DB74"}},"'d'"),s("span",{style:{color:"#F8F8F2"}},")")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," lists")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"(lists)")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lists.insert("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'mm'"),s("span",{style:{color:"#F8F8F2"}},")")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lists.pop()")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," lists")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:n(({value:a,isActive:o})=>l[11]||(l[11]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#E6DB74"}},"'a'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'b'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'c'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'d'"),s("span",{style:{color:"#F8F8F2"}},"]")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#E6DB74"}},"'mm'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'a'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'b'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'c'"),s("span",{style:{color:"#F8F8F2"}},"]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[34]||(l[34]=s("p",null,[e("列表是 Python 中常用的数据结构，相当于数组，具有增删改查的功能，我们可以使用 "),s("code",null,"len()"),e(" 函数获得 lists 中元素的个数；使用 "),s("code",null,"append()"),e(" 在尾部添加元素，使用 "),s("code",null,"insert()"),e(" 在列表中插入元素，使用 "),s("code",null,"pop()"),e(" 删除尾部的元素。")],-1)),l[35]||(l[35]=s("h4",{id:"_2-5-2-元组-tuple",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-5-2-元组-tuple"},[s("span",null,"2.5.2 元组 (tuple)")])],-1)),t(i,{id:"78",data:[{id:"Code"},{id:"运行结果"}]},{title0:n(({value:a,isActive:o})=>l[12]||(l[12]=[e("Code")])),title1:n(({value:a,isActive:o})=>l[13]||(l[13]=[e("运行结果")])),tab0:n(({value:a,isActive:o})=>l[14]||(l[14]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"tuples "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#E6DB74"}},"'tupleA'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'tupleB'"),s("span",{style:{color:"#F8F8F2"}},")")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," tuples["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:n(({value:a,isActive:o})=>l[15]||(l[15]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"tupleA")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1}),l[36]||(l[36]=s("p",null,[e("元组 tuple 和 list 非常类似，但是 tuple 一旦初始化就不能修改。因为不能修改所以没有 "),s("code",null,"append()"),e(", "),s("code",null,"insert()"),e(" 这样的方法，可以像访问数组一样进行访问，比如 "),s("code",null,"tuples[0]"),e("，但不能赋值。")],-1)),l[37]||(l[37]=s("h4",{id:"_2-5-3-字典-dictionary",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-5-3-字典-dictionary"},[s("span",null,"2.5.3 字典 {dictionary}")])],-1)),t(i,{id:"92",data:[{id:"Code"},{id:"运行结果"}]},{title0:n(({value:a,isActive:o})=>l[16]||(l[16]=[e("Code")])),title1:n(({value:a,isActive:o})=>l[17]||(l[17]=[e("运行结果")])),tab0:n(({value:a,isActive:o})=>l[18]||(l[18]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# -*- coding: utf-8 -*")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#定义一个dictionary")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"score "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'guanyu'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"95"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'zhangfei'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"96"),s("span",{style:{color:"#F8F8F2"}},"}")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#添加一个元素")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"score["),s("span",{style:{color:"#E6DB74"}},"'zhaoyun'"),s("span",{style:{color:"#F8F8F2"}},"] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 98")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," score")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#删除一个元素")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"score.pop("),s("span",{style:{color:"#E6DB74"}},"'zhangfei'"),s("span",{style:{color:"#F8F8F2"}},")")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#查看key是否存在")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#E6DB74"}}," 'guanyu'"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," score")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#查看一个key对应的值")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," score.get("),s("span",{style:{color:"#E6DB74"}},"'guanyu'"),s("span",{style:{color:"#F8F8F2"}},")")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," score.get("),s("span",{style:{color:"#E6DB74"}},"'yase'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:n(({value:a,isActive:o})=>l[19]||(l[19]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'guanyu'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"95"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'zhaoyun'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'zhangfei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"96"),s("span",{style:{color:"#F8F8F2"}},"}")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"95")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"99")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[38]||(l[38]=s("p",null,[e("字典其实就是 "),s("code",null,"{key, value}"),e("，多次对同一个 key 放入 value，后面的值会把前面的值冲掉，同样字典也有增删改查。增加字典的元素相当于赋值，比如 "),s("code",null,"score['zhaoyun'] = 98"),e("，删除一个元素使用 pop，查询使用 get，如果查询的值不存在，我们也可以给一个默认值，比如 "),s("code",null,"score.get('yase', 99)"),e("。")],-1)),l[39]||(l[39]=s("h4",{id:"_2-5-4-集合-set",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-5-4-集合-set"},[s("span",null,"2.5.4 集合：set")])],-1)),t(i,{id:"106",data:[{id:"Code"},{id:"运行结果"}]},{title0:n(({value:a,isActive:o})=>l[20]||(l[20]=[e("Code")])),title1:n(({value:a,isActive:o})=>l[21]||(l[21]=[e("运行结果")])),tab0:n(({value:a,isActive:o})=>l[22]||(l[22]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"s "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," set"),s("span",{style:{color:"#F8F8F2"}},"(["),s("span",{style:{color:"#E6DB74"}},"'a'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'b'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'c'"),s("span",{style:{color:"#F8F8F2"}},"])")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"s.add("),s("span",{style:{color:"#E6DB74"}},"'d'"),s("span",{style:{color:"#F8F8F2"}},")")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"s.remove("),s("span",{style:{color:"#E6DB74"}},"'b'"),s("span",{style:{color:"#F8F8F2"}},")")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," s")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#E6DB74"}}," 'c'"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," s")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:n(({value:a,isActive:o})=>l[23]||(l[23]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"set"),s("span",{style:{color:"#F8F8F2"}},"(["),s("span",{style:{color:"#E6DB74"}},"'a'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'c'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'d'"),s("span",{style:{color:"#F8F8F2"}},"])")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[40]||(l[40]=r(`<p>集合 set 和字典 dictory 类似，不过它只是 key 的集合，不存储 value。同样可以增删查，增加使用 add，删除使用 remove，查询看某个元素是否在这个集合里，使用 in。</p><h4 id="_2-5-5-注释" tabindex="-1"><a class="header-anchor" href="#_2-5-5-注释"><span>2.5.5 注释：#</span></a></h4><p>注释在 python 中使用 <code>#</code>，如果注释中有中文，一般会在代码前添加 <code># -*- coding: utf-8 -*</code>。</p><p>如果是多行注释，使用三个单引号，或者三个双引号，比如：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;"># -*- coding: utf-8 -*</span></span>
<span class="line"><span style="color:#E6DB74;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#E6DB74;">这是多行注释，用三个单引号</span></span>
<span class="line"><span style="color:#E6DB74;">这是多行注释，用三个单引号 </span></span>
<span class="line"><span style="color:#E6DB74;">这是多行注释，用三个单引号</span></span>
<span class="line"><span style="color:#E6DB74;">&#39;&#39;&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-5-6-引用模块-包-import" tabindex="-1"><a class="header-anchor" href="#_2-5-6-引用模块-包-import"><span>2.5.6 引用模块 / 包：import</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;"># 导入一个模块</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> model_name</span></span>
<span class="line"><span style="color:#88846F;"># 导入多个模块</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> module_name1,module_name2</span></span>
<span class="line"><span style="color:#88846F;"># 导入包中指定模块 </span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> package_name </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> moudule_name</span></span>
<span class="line"><span style="color:#88846F;"># 导入包中所有模块 </span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> package_name </span><span style="color:#F92672;">import</span><span style="color:#F92672;"> *</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python 语言中 import 的使用很简单，直接使用 <code>import module_name</code> 语句导入即可。这里 import 的本质是什么呢？import 的本质是路径搜索。import 引用可以是模块 module，或者包 package。</p><p>针对 module，实际上是引用一个 <code>.py</code> 文件。而针对 package，可以采用 <code>from … import …</code> 的方式，这里实际上是从一个目录中引用模块，这时目录结构中必须带有一个 <code>__init__.py</code> 文件。</p><h4 id="_2-5-7-函数-def" tabindex="-1"><a class="header-anchor" href="#_2-5-7-函数-def"><span>2.5.7 函数：def</span></a></h4>`,10)),t(i,{id:"140",data:[{id:"Code"},{id:"运行结果"}]},{title0:n(({value:a,isActive:o})=>l[24]||(l[24]=[e("Code")])),title1:n(({value:a,isActive:o})=>l[25]||(l[25]=[e("运行结果")])),tab0:n(({value:a,isActive:o})=>l[26]||(l[26]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," addone"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"score"),s("span",{style:{color:"#F8F8F2"}},"):")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"   return"),s("span",{style:{color:"#F8F8F2"}}," score "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}}," addone("),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:n(({value:a,isActive:o})=>l[27]||(l[27]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"100")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1}),l[41]||(l[41]=r(`<p>函数代码块以 def 关键词开头，后接函数标识符名称和圆括号，在圆括号里是传进来的参数，然后通过 return 进行函数结果得反馈。</p><h4 id="_2-5-8-a-b-problem" tabindex="-1"><a class="header-anchor" href="#_2-5-8-a-b-problem"><span>2.5.8 A+B Problem</span></a></h4><p>上面的讲的这些基础语法，我们可以用 sumlime text 编辑器运行 Python 代码。另外，告诉你一个相当高效的方法，你可以充分利用一个刷题进阶的网址：<a href="https://pintia.cn/problem-sets/91827364500/exam/problems/type/7" target="_blank" rel="noopener noreferrer">https://pintia.cn/problem-sets/91827364500/exam/problems/type/7</a>，这是一个 OnlineJudge。</p><p>什么是 OnlineJudge 呢？它实际上是一个在线答题系统，做题后你可以在后台提交代码，然后 OnlineJudge 会告诉你运行的结果，如果结果正确就反馈：Accepted，如果错误就反馈：Wrong Answer。</p><p>不要小看这样的题目，也会存在编译错误、内存溢出、运行超时等等情况。所以题目对编码的质量要求还是挺高的。下面我就给你讲讲这道 A+B 的题目，你可以自己做练习，然后在后台提交答案。</p><h4 id="_2-5-9-题目-a-b" tabindex="-1"><a class="header-anchor" href="#_2-5-9-题目-a-b"><span>2.5.9 题目：A+B</span></a></h4><p>输入格式：有一系列的整数对 A 和 B，以空格分开。</p><p>输出格式：对于每个整数对 A 和 B，需要给出 A 和 B 的和。</p><p>输入输出样例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">INPUT</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 5</span></span>
<span class="line"><span style="color:#AE81FF;">OUTPUT</span></span>
<span class="line"><span style="color:#AE81FF;">6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>针对这道题，我给出了下面的答案：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">while</span><span style="color:#AE81FF;"> True</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    try</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        line </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_input()</span></span>
<span class="line"><span style="color:#F8F8F2;">        a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> line.split()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(a[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]) </span><span style="color:#F92672;">+</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(a[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]))</span></span>
<span class="line"><span style="color:#F92672;">    except</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        break</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然每个人可以有不同的解法，官方也有 Python 的答案，这里给你介绍这个 OnlineJudge 是因为：</p><ol><li>可以在线得到反馈，提交代码后，系统会告诉你对错。而且你能看到每道题的正确率，和大家提交后反馈的状态；</li><li>有社区论坛可以进行交流学习；</li><li>对算法和数据结构的提升大有好处，当然对数据挖掘算法的灵活运用和整个编程基础的提升都会有很大的帮助。</li></ol><h2 id="_3-总结" tabindex="-1"><a class="header-anchor" href="#_3-总结"><span>3. 总结</span></a></h2><p>现在我们知道，Python 毫无疑问是数据分析中最主流的语言。今天我们学习了这么多 Python 的基础语法，你是不是体会到了它的简洁。如果你有其他编程语言基础，相信你会非常容易地转换成 Python 语法的。那到此，Python 我们也就算入门了。有没有什么方法可以在此基础上快速提升 Python 编程水平呢？给你分享下我的想法。</p><p>在日常工作中，我们解决的问题都不属于高难度的问题，大部分人做的都是开发工作而非科研项目。所以我们要提升的主要是熟练度，而通往熟练度的唯一路径就是练习、练习、再练习！</p><p>如果你是第一次使用 Python，不用担心，最好的方式就是直接做题。把我上面的例子都跑一遍，自己在做题中体会。</p><p>如果你想提升自己的编程基础，尤其是算法和数据结构相关的能力，因为这个在后面的开发中都会用到。那么 ACM Online Judge 是非常好的选择，勇敢地打开这扇大门，把它当作你进阶的好工具。</p><p>你可以从 Accepted 比率高的题目入手，你做对的题目数越多，你的排名也会越来越往前，这意味着你的编程能力，包括算法和数据结构的能力都有了提升。另外这种在社区中跟大家一起学习，还能排名，就像游戏一样，让学习更有趣味，从此不再孤独。</p><figure><img src="`+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我在文章中多次强调练习的作用，这样可以增加你对数据分析相关内容的熟练度。所以我给你出了两道练习题，你可以思考下如何来做，欢迎把答案放到评论下面，我也会和你一起在评论区进行讨论。</p><ol><li>如果我想在 Python 中引用 <code>scikit-learn</code> 库该如何引用？</li><li>求 <code>1+3+5+7+…+99</code> 的求和，用 Python 该如何写？</li></ol><p>欢迎你把今天的内容分享给身边的朋友，和他一起掌握 Python 这门功能强大的语言。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',28))])}const D=d(h,[["render",b],["__file","03.html.vue"]]),B=JSON.parse('{"path":"/1v1/96-Four-dimensional/03.html","title":"速读 Python 语法","lang":"zh-CN","frontmatter":{"title":"速读 Python 语法","icon":"zhuzhuangtu","date":"2024-11-06T13:31:40.000Z","author":"AI悦创","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":3,"title":"2.1 输入与输出","slug":"_2-1-输入与输出","link":"#_2-1-输入与输出","children":[]},{"level":3,"title":"2.2 判断语句：if … else …","slug":"_2-2-判断语句-if-else","link":"#_2-2-判断语句-if-else","children":[]},{"level":3,"title":"2.3 循环语句：for … in","slug":"_2-3-循环语句-for-in","link":"#_2-3-循环语句-for-in","children":[]},{"level":3,"title":"2.4 循环语句: while","slug":"_2-4-循环语句-while","link":"#_2-4-循环语句-while","children":[]},{"level":3,"title":"2.5 数据类型：列表、元组、字典、集合","slug":"_2-5-数据类型-列表、元组、字典、集合","link":"#_2-5-数据类型-列表、元组、字典、集合","children":[{"level":4,"title":"2.5.1 列表：[]","slug":"_2-5-1-列表","link":"#_2-5-1-列表","children":[]},{"level":4,"title":"2.5.2 元组 (tuple)","slug":"_2-5-2-元组-tuple","link":"#_2-5-2-元组-tuple","children":[]},{"level":4,"title":"2.5.3 字典 {dictionary}","slug":"_2-5-3-字典-dictionary","link":"#_2-5-3-字典-dictionary","children":[]},{"level":4,"title":"2.5.4 集合：set","slug":"_2-5-4-集合-set","link":"#_2-5-4-集合-set","children":[]},{"level":4,"title":"2.5.5 注释：#","slug":"_2-5-5-注释","link":"#_2-5-5-注释","children":[]},{"level":4,"title":"2.5.6 引用模块 / 包：import","slug":"_2-5-6-引用模块-包-import","link":"#_2-5-6-引用模块-包-import","children":[]},{"level":4,"title":"2.5.7 函数：def","slug":"_2-5-7-函数-def","link":"#_2-5-7-函数-def","children":[]},{"level":4,"title":"2.5.8 A+B Problem","slug":"_2-5-8-a-b-problem","link":"#_2-5-8-a-b-problem","children":[]},{"level":4,"title":"2.5.9 题目：A+B","slug":"_2-5-9-题目-a-b","link":"#_2-5-9-题目-a-b","children":[]}]},{"level":2,"title":"3. 总结","slug":"_3-总结","link":"#_3-总结","children":[]}],"git":{"createdTime":1732274954000,"updatedTime":1732274954000,"contributors":[{"name":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1}]},"readingTime":{"minutes":8.93,"words":2678},"filePathRelative":"1v1/96-Four-dimensional/03.md","localizedDate":"2024年11月6日","copyright":{"author":"AI悦创"}}');export{D as comp,B as data};
