import{_ as t}from"./gzh.b03adfd2.js";import{_ as i}from"./zsxq.77f6dc86.js";import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as p,a as e,d as n,b as s,e as a,r as l}from"./app.ea2aadaf.js";const r="/assets/1596513066859-43b79d21-f2e0-4d4a-a241-49b4ef70cb5e.566f02ca.jpeg",u="/assets/1596513066859-80926084-403a-49bf-a08b-82509cc30b81.731e4560.jpeg",m="/assets/1596513066844-4ecf3d87-c9c9-4745-99ca-3a56d009b366.afd487b7.jpeg",h="/assets/1596513066885-e164f3f8-34bd-473a-90bd-0d86776fc059.442e0766.jpeg",y="/assets/1596513066961-a2f7d6f0-a3d5-4434-a333-09484434dc38.1622c5e8.gif",g="/assets/1596513066834-08a4d1c4-6a73-4bb3-a178-b262e997c8f2.326aacd0.png",b="/assets/1596513066967-eb21e060-7596-4c20-a8b3-9fc2b5ce5eea.17b865e1.gif",v="/assets/1596513066968-a900ee37-f603-408d-87f8-40a0b10e8657.90b030ea.gif",_="/assets/1596513066958-0bb662ed-8192-484d-8ccf-2d6904030ecb.7bdaf710.jpeg",k="/assets/1596513067059-8c715203-1566-4e5a-abe3-21e2a1f71d89.1747763f.jpeg",f={},P=a('<p><img src="'+r+'" alt="" loading="lazy"></p><blockquote><p>没有智慧的头脑，就象没有腊烛的灯笼。 ——列夫·托尔斯泰</p></blockquote><p>你好，我是悦创。</p><p>自学一门编程语言着实不易。从我自己的经历看，你需要翻越好几个障碍，从心态，到体力，再到思维，最终才能成为一名优秀的程序员。所以说掌握一门语言，需要你用心去感悟，去认真体会你和“她”的那一丝默契。</p><p>但是遗憾的是，太多的朋友们，并不是倒在了中途，而是他们并没有开始，是的，他们连 <code>Python</code> 公主的纤纤玉手都没有摸到。</p><p><strong>Python 应该下载哪个版本？</strong></p><p><strong>Python 环境如何配置？</strong></p><p>推荐几款最好用的 <code>Python</code> <code>IDE</code> 等等。我们的挑战在于选择太多，在丰收的农场门口，我们望着满眼的西瓜和葡萄，踌躇满志却不敢前进。</p><p>如果你现在还没有配置好 <code>Python</code> 环境，那么恭喜你，跟着本文走，你将能够收获基于 <code>Python3.7</code> 搭建的编程平台，以及以 <code>Jupyter</code> 为主要工具的编程环境，本文还将带你安装常用的数据分析工具以及可视化工具，一站式购齐，无后顾之忧。</p><p>如果你已经安装了 <code>Python3.7</code> 的环境，或者 <code>anaconda</code> 环境，你也可以顺着本文的思路往下走，工具不是重点，配置环境的能力才是。</p><div class="custom-container info"><p class="custom-container-title">提示</p><p>千万别给我使用 anaconda 安装 Python 环境！！！其他不多说。</p></div><p>但是如果你的 <code>Python</code> 环境来历不明（不明论坛下载），我强烈建议你卸载后重新安装官网版本（ <code>Python</code> 的卸载方式同普通软件，在控制面板中卸载即可）。毕竟 <strong>&quot;磨刀不误砍柴工”</strong> ，有的版本残缺不全，谁也无法预测你会出现什么 bug。</p><p><strong>本文以windows 10 X64系统为例，演示本地 Python 数据分析环境的搭建过程。</strong></p>',13),w=e("details",{class:"custom-container details"},[e("summary",null,"视频播放"),e("iframe",{src:"//player.bilibili.com/player.html?aid=668871436&bvid=BV1sa4y1a7kN&cid=211502373&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",style:{width:"100%",height:"500px","max-width":"100%",align:"center",padding:"20px 0"}}," ")],-1),x=e("h2",{id:"_1-安装-python-环境",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-安装-python-环境","aria-hidden":"true"},"#"),n(" 1. 安装 Python 环境")],-1),q=e("h3",{id:"_1-1-python-软件下载",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-1-python-软件下载","aria-hidden":"true"},"#"),n(" 1.1 Python 软件下载")],-1),j={href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"},A=a('<p><img src="'+u+'" alt="" loading="lazy"></p><p>进入官网后，你可以直接按照上图的提示，选择 <code>Windows</code> 标签，进入 <code>Windows</code> 平台的 <code>Python</code> 版本详单页面（ <code>Releases Page</code> ），建议选择 3.7或以上的版本。<code>Python2.7</code> 将在 2020年停止所有更新，就像曾经辉煌的 <code>Windows XP</code> 一样，最终慢慢成为历史的尘埃，所以本专栏不推荐安装 <code>Python2.7</code>。</p><p>在选择 <code>Python</code> 版本要注意根据自己 PC 的版本一致，如果自己的版本是 64位，建议选择 <code>x86-64</code> 版本下载，否则直接选择普通版本。切记电脑位数和 <code>Python</code> 版本保持一致，否则以后流的泪都是当初挖的坑啊。</p><p><img src="'+m+'" alt="" loading="lazy"></p><p>对于使用 mac OS 的朋友，请选择 mac OS X 标签，进行下载，步骤基本一致。</p><h3 id="_1-2-python-软件安装" tabindex="-1"><a class="header-anchor" href="#_1-2-python-软件安装" aria-hidden="true">#</a> 1.2 Python 软件安装</h3><p>Python 的安装过程非常人性化，你只要双击安装程序，设置好安装路径，「记得勾选：Add Python 3.7 to PATH」然后不断点击下一步，直至完成安装。</p><p><img src="'+h+`" alt="" loading="lazy"></p><p><strong>上图 <code>add python3.7 to Path</code> ，是指安装过程中程序默认把安装路径添加到系统环境变量中，此项务必打勾！</strong></p><p>至此我们已经初步完成了 <code>Python3.7</code> 的安装。在 <code>cmd</code> 命令行中输入 <code>python</code> ，可以直接进入 <code>python</code> 环境中：</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>C:\\Users\\Administrator&gt;python
Python 3.7.4 (v3.6.5:f59c0932b4, Mar 28 2018, 17:00:18) [MSC v.1900 64 bit (AMD64)] on win32
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继续输入我们的第一行 <code>Python</code> 语句，开启我们的数据分析之旅吧：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Life is short, I do data analysis in python!&quot;</span><span class="token punctuation">)</span>
<span class="token string">&quot;Life is short, I do data analysis in python!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果把 <code>Python</code> 比作公主的话，那么怎么也得配个丫鬟才对，是吧？我们常说 <code>Python</code> 广泛应用与数据分析、爬虫、网络编程、人工智能、运维等领域，其实是因为基于 <code>Python</code> 有非常多的第三方库，这些库极大地丰富了 <code>Python</code> 的生态，使得 <code>Python</code> 近乎无所不能。那我们该怎么安装这些第三方库呢？</p><p>没错，<code>PIP</code> 工具应该说是这块的小能手了。<code>PIP</code> 直观上理解，就是为 <code>Python</code> 量身定做的管理第三方库的小工具，扮演了丫鬟的角色。让我们先来撩一下 <code>PIP</code> ，在 <code>cmd</code> 窗口中输入命令查看 PIP 的版本和安装路径：</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>C:\\Users\\Administrator&gt;pip --version
pip 19.1 from d:\\users\\lemeng\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip-19.1-py3.7.4.egg\\pip (python 3.7)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果系统提示 PIP 不是最新版本，请继续执行如下命令：</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>C:\\Users\\Administrator&gt;python -m pip install --upgrade pip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>PIP 是不是就这么简单呢？我们稍后揭晓。</p><h1 id="_2-jupyter-notebook-最适合做数据分析的编程工具「也可以写爬虫-当然推荐-pycharm-这里我就懒得写了-」" tabindex="-1"><a class="header-anchor" href="#_2-jupyter-notebook-最适合做数据分析的编程工具「也可以写爬虫-当然推荐-pycharm-这里我就懒得写了-」" aria-hidden="true">#</a> 2. Jupyter Notebook，最适合做数据分析的编程工具「也可以写爬虫（当然推荐 Pycharm 这里我就懒得写了）」</h1>`,20),I={href:"https://www.bilibili.com/video/BV1sa4y1a7kN/",target:"_blank",rel:"noopener noreferrer"},N=a(`<p>准确来讲，<code>Jupyter Notebook</code> 不仅仅适合做数据分析，而且它非常适合新入门的朋友练习 <code>Python</code>。</p><p><code>Jupyter Notebook</code> 是一种以 “问答式” 为重要特征的 <code>Python</code> 编辑器，就像排版精良的笔记，你的程序、执行结果，井然有序。</p><p>本专栏重点介绍在 <code>Python</code> 数据分析过程中的 <code>Jupyter Notebook</code> 的使用。在实际案例中，你输入一句，它便返回程序执行的结果。并且执行后程序的内存会被锁定，直到程序关闭，变量才会被销毁、内存被释放。</p><p>这种特征，在数据分析领域尤为重要。在数据分析的过程中，一切套路都是围绕着数据本身的特点来的。特别是对于中大型的数据表格，只有熟悉了数据的特点，才能对数据进行下一步的分析。这也正是数据编程与网络编程最大的差别。</p><p>我们先安装 <code>Jupyter Notebook</code>，然后通过一个实例来感受它的便捷。</p><p>我们推荐通过 PIP 工具进行一键式安装，在 <code>cmd</code> 窗口输入如下命令：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>C<span class="token punctuation">:</span>\\Users\\Administrator<span class="token operator">&gt;</span>pip install jupyter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>这里推荐给你的 pip 换源，这里以 Windows10 为例：</p><ol><li>先打开查看文件后缀：查看 -&gt; 勾选文件扩展名 <img src="`+y+'" alt="" loading="lazy"></li><li>首先在 Windows 的文件夹「快捷键：Win 图标+ E 」窗口输入 ： %APPDATA% <img src="'+g+'" alt="" loading="lazy"></li><li>然后在底下新建 pip 文件夹，然后到 pip 文件夹里面去新建个 pip.ini ,然后再里面输入内容 <img src="'+b+`" alt="" loading="lazy"></li><li>输入一下内容：</li></ol></blockquote><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">global</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">index-url</span> <span class="token punctuation">=</span> <span class="token value attr-value">http://mirrors.aliyun.com/pypi/simple/</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">install</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">trusted-host</span><span class="token punctuation">=</span><span class="token value attr-value">mirrors.aliyun.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),z={start:"4"},C=e("li",null,[e("img",{src:v,alt:"",loading:"lazy"})],-1),J=e("li",null,"自此就换源结束",-1),U={href:"https://link.zhihu.com/?target=https%3A//github.com/pypa/pip/issues/1736",target:"_blank",rel:"noopener noreferrer"},V=a(`<div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code># 阿里源
pip config set global.index-url http://mirrors.aliyun.com/pypi/simple/

# 豆瓣源
pip config set global.index-url https://pypi.douban.com/simple

# 阿里云 http://mirrors.aliyun.com/pypi/simple/
# 科技大学 https://pypi.mirrors.ustc.edu.cn/simple/
# 豆瓣(douban) http://pypi.douban.com/simple/
# 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/
# 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示安装成功后，推荐设置一下我们常用的 Python 学习路径，这样新建和保存文件均会默认放置到该路径下。在 <code>cmd</code> 窗口中继续输入：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>C<span class="token punctuation">:</span>\\Users\\Administrator<span class="token operator">&gt;</span>jupyter notebook <span class="token operator">-</span><span class="token operator">-</span>generate<span class="token operator">-</span>config
Writing default config to C<span class="token punctuation">:</span>\\Users\\Administrator\\<span class="token punctuation">.</span>jupyter\\jupyter_notebook_config<span class="token punctuation">.</span>py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑上一步提示的 <code>jupyter_notebool_config.py</code> 文件，找到 <code>c.Notebook.notebok_dir</code> ，放开前面的注释，并按照下图修改完成（路径根据自己的实际情况填写，注意避免放置中文路径，给自己挖坑），保存并关闭。</p><p><img src="`+_+`" alt="" loading="lazy"></p><p>到此为止，Python 环境就完成配置了，下面我们就来撩一下吧。</p><p>在 <code>cmd</code> 窗口中输入 <code>jupyter notebook</code> ，启动环境：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>C<span class="token punctuation">:</span>\\Users\\Administrator<span class="token operator">&gt;</span>jupyter notebook
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 <code>New</code> 菜单，新建一个 <code>Python 3</code> 的程序后，在新的页面继续输入：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>jupyter notebook</code> 界面及效果如下：</p><p><img src="`+k+'" alt="" loading="lazy"></p><p>在 <code>Jupyter</code> 的常用工具栏上，有保存、剪切、复制、粘贴、运行、停止等按钮，鼠标移动到按钮上会有提示，总体来说，还是很人性化的，相信上手应该没有难度的。</p><p>这里请朋友们注意了，在本专栏的后续章节中，除特殊说明外，<code>Python</code> 程序的演示都是在 <code>Jupyter Notebook</code> 中进行的。</p><h2 id="_5-总结" tabindex="-1"><a class="header-anchor" href="#_5-总结" aria-hidden="true">#</a> 5. 总结</h2><p>到这里，整个基于 Python 的析环境就搭建完成了。总的来说，搭建这套环境的意义就在于：提供了一套爬虫学习的平台，你可以方便地观察数据的规律，并完成对应课程内容学习；所以朋友们还等什么，赶紧加入学习吧。</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="'+t+'" alt="" loading="lazy"></p></details>',17),W={class:"custom-container info"},B=e("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),E=e("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),L=e("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),Q={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},S=e("p",null,"方法二：微信：Jiabcdefh",-1),T=e("p",null,[e("img",{src:i,alt:"",loading:"lazy"})],-1);function D(M,X){const o=l("ExternalLinkIcon");return d(),p("div",null,[P,w,x,q,e("p",null,[n("作为 21世纪的大好青年，从来都是要玩最正宗的，盗版？！那是上一代人玩剩下的。特别是在正版还免费的情况下。推荐去 Python 官网"),e("a",j,[n("https://www.python.org/"),s(o)]),n(" 下载。部分朋友可能加载会比较慢，稍安勿躁，除非网络问题，网站都是能够访问的。")]),A,e("p",null,[n("虽然，Pycharm 的安装懒得写，我却录了一个完整的环境安装视频："),e("a",I,[n("https://www.bilibili.com/video/BV1sa4y1a7kN/"),s(o)])]),N,e("blockquote",null,[e("ol",z,[C,J,e("li",null,[n("补充： 从 pip10.0.0 开始，有个 config 子命令可用来改配置，无需关心不同操作系统下配置文件路径。 详见讨论："),e("a",U,[n("Create a command to make it easy to access the configuration file · Issue #1736 · pypa/pip"),s(o)]),n(" 实际使用例子：")])])]),V,e("div",W,[B,E,L,e("p",null,[n("方法一："),e("a",Q,[n("QQ"),s(o)])]),S]),T])}const F=c(f,[["render",D],["__file","s1_01.html.vue"]]);export{F as default};
