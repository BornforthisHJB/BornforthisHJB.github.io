import{_ as p}from"./gzh-DnOBNg6W.js";import{_ as c}from"./zsxq-BcdwOI-_.js";import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as F,a as t,b as d,d as l,r as y,o as u,e as n,f as s}from"./app-wxJSv-wz.js";const v={};function h(m,a){const i=y("CodeTabs");return u(),F("div",null,[a[4]||(a[4]=t(`<h2 id="_0-目录" tabindex="-1"><a class="header-anchor" href="#_0-目录"><span>0. 目录</span></a></h2><ul><li>什么是字符集和编码</li><li>编码和字符集介绍</li><li>ASCII 码和转义符（escape character）</li><li>字符串的“加法”</li></ul><h2 id="_1-什么是字符集和编码" tabindex="-1"><a class="header-anchor" href="#_1-什么是字符集和编码"><span>1. 什么是字符集和编码</span></a></h2><h3 id="_1-1-什么是字符集-charset" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是字符集-charset"><span>1.1 什么是字符集（Charset）</span></a></h3><ul><li>字符集就是字符的集合。一般会包含一种语言的字符。比如：GBK，是包含所有常用汉字字符的字符集。ASCII 是包含英文字符的字符集。</li><li>字符就是 Java 中的 char，char 是 character 的简写。</li></ul><h3 id="_1-2-什么是编码-encoding" tabindex="-1"><a class="header-anchor" href="#_1-2-什么是编码-encoding"><span>1.2 什么是编码（Encoding）</span></a></h3><ul><li>char 代表一个字符，char 的本质也是数字。将数字映射到字符，就叫编码。</li><li>将一个字符集映射到数字，就是给这个字符集编码。编码是有标准的，所有的计算机系统按照同一个编码标准执行。「我这边 65 代表 A，在全世界的计算机里面，65 都是代表 A。</li><li>有时候编码和字符集会混用。因为，计算机只认识数字。计算机要显示字符的话，就需要用数字来代表。也就是映射的数字，一般情况下都是混用的」</li><li>在所有编程语言里，所有的字符都是由<strong>数字</strong>表示的，数字是通过<strong>编码</strong>来映射到一个个字符的。</li></ul><h2 id="_2-编码和字符集介绍" tabindex="-1"><a class="header-anchor" href="#_2-编码和字符集介绍"><span>2. 编码和字符集介绍</span></a></h2><h3 id="_2-1-常用的字符集简介" tabindex="-1"><a class="header-anchor" href="#_2-1-常用的字符集简介"><span>2.1 常用的字符集简介</span></a></h3><ul><li>ASCII 码，ASCII 表：<a href="https://baike.baidu.com/item/ASCII/309296#3" target="_blank" rel="noopener noreferrer">https://baike.baidu.com/item/ASCII/309296#3</a></li><li>Unicode 包含世界上所有常用字符，编码也有几种，包括 UTF-8（8-bit Unicode Transformation Format ），UTF-16 等。 <ul><li>「8 bit 不是只有 8 位，它是有标志的，它是可以扩展的。在 UTF-8 里面，它用几个字符都是不确定的。有可能有一个，有可能有三个。它怎么判断的呢，看它的第一位，类似我们的符号位一样。如果第一位是 1 的话，那它知道，后面那个 byte 还是属于我这字符的，那如果后面还是 1 的话，那也会认为是这个字符——这样也就会导致，它会把两个或者三个等其它的 byte 连接在一起。不用纠结，不需要细究！」</li></ul></li><li>Unicode，GBK 等所有常用的字符集，都会兼容 ASCII。举个例子，字符 A 在这些所有常用的字符集里，都是对应数字 65。</li></ul><h3 id="_2-2-java-中的字符集" tabindex="-1"><a class="header-anchor" href="#_2-2-java-中的字符集"><span>2.2 Java 中的字符集</span></a></h3><ul><li>Java 中用的是 UTF-16 编码的 Unicode。</li><li>UTF-16 用 16 个 bit，来表示字符，即两个 byte，这也是 char 占用两个 byte 的原因。当把 char 转成数字的时候，需要用 int——因为它（char）没有正负号。「1 byte = 8 bit，16 bit 也就是 2 byte -&gt;&gt;&gt; char」</li></ul><h2 id="_3-ascii-码和转义符-escape-character" tabindex="-1"><a class="header-anchor" href="#_3-ascii-码和转义符-escape-character"><span>3. ASCII 码和转义符（escape character）</span></a></h2><h3 id="_3-1-如何输出特殊字符「比如-有些字符键盘敲不出来」" tabindex="-1"><a class="header-anchor" href="#_3-1-如何输出特殊字符「比如-有些字符键盘敲不出来」"><span>3.1 如何输出特殊字符「比如：有些字符键盘敲不出来」</span></a></h3><ul><li>ASCII 码 +char，通过 ASCII 表可以找到需要的字符对应的数字。将这个数字转换为 char， 然后输出这个 char。 ASCII 表：<a href="https://baike.baidu.com/item/ASCII/309296#3" target="_blank" rel="noopener noreferrer">https://baike.baidu.com/item/ASCII/309296#3</a></li><li>转义符。转义符用来给字符赋值，也可以用在字符串里面，作为字符串中的一个字符。</li><li>PS：比如，我键盘上的 A 坏了，我怎么才能输出一个 A 呢，</li></ul><h3 id="_3-2-转义符语法和常用的转义符" tabindex="-1"><a class="header-anchor" href="#_3-2-转义符语法和常用的转义符"><span>3.2 转义符语法和常用的转义符</span></a></h3><ul><li><code>\\n</code>，换行符</li><li><code>\\&quot;</code>，双引号</li><li><code>\\t</code>，制表符</li><li><code>\\uXXXX</code>，unicode 编码对应的字符。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ComplexCharInString</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;"> content </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;a</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">b</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">cc</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">ee</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;"> align </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;1111222233334444&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(content);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(align);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a	b	cc	ee	</span></span>
<span class="line"><span style="color:#AE81FF;">1111222233334444</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的结果可以知道，每一个的 <code>\\t</code> 都是成立的。都是从数字的开始，一一对应的。</p><p><strong>如果，这个时候要输出一个包含 “ 的内容，该怎么办呢？</strong></p>`,22)),d(i,{id:"172",data:[{id:"demo1"},{id:"demo2"}]},{title0:l(({value:e,isActive:o})=>a[0]||(a[0]=[n("demo1")])),title1:l(({value:e,isActive:o})=>a[1]||(a[1]=[n("demo2")])),tab0:l(({value:e,isActive:o})=>a[2]||(a[2]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ComplexCharInString"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        String"),s("span",{style:{color:"#F8F8F2"}}," content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "a'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},"b"),s("span",{style:{color:"#AE81FF"}},'\\"\\t'),s("span",{style:{color:"#E6DB74"}},"cc"),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},"ee"),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(content);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:l(({value:e,isActive:o})=>a[3]||(a[3]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ComplexCharInString"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        String"),s("span",{style:{color:"#F8F8F2"}}," content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "a'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},"b"),s("span",{style:{color:"#AE81FF"}},'\\"\\t'),s("span",{style:{color:"#E6DB74"}},"cc"),s("span",{style:{color:"#AE81FF"}},"\\n\\t"),s("span",{style:{color:"#E6DB74"}},"ee"),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},";")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(content);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),a[5]||(a[5]=t(`<p>我们来看看，<code>\\u</code> 这种形式的：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ComplexChar</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 65</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        char</span><span style="color:#F8F8F2;"> cha </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">char</span><span style="color:#F8F8F2;">) a;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        char</span><span style="color:#F8F8F2;"> zang </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;</span><span style="color:#AE81FF;">\\u</span><span style="color:#E6DB74;">81e7&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(cha);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(zang);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-字符串的-加法-「所谓加法-其实是拼接」" tabindex="-1"><a class="header-anchor" href="#_4-字符串的-加法-「所谓加法-其实是拼接」"><span>4. 字符串的“加法” 「所谓加法，其实是拼接」</span></a></h2><blockquote><p>任何的变量或者其它都可以和字符串拼接，相当于是把它加到字符串里面。</p></blockquote><h3 id="_4-1-将变量穿插在字符串中输出" tabindex="-1"><a class="header-anchor" href="#_4-1-将变量穿插在字符串中输出"><span>4.1 将变量穿插在字符串中输出</span></a></h3><ul><li>字符串可以和任何类型进行加法运算，则会将这个值的字符拼接到字符串上。</li><li>字符串也可以使用 += 操作符来拼接</li><li>字符串的加法运算符符合加法运算符本身的优先级</li></ul><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">StingConcat</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> c </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> b;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;a + b=&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> c);  </span><span style="color:#88846F;">// 把被加的 c 转成字符串</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        boolean</span><span style="color:#F8F8F2;"> aBiggerThanB </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> b;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;a &gt; b 是&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> aBiggerThanB </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;的&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;a + b=&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// 考运算符优先级</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;a + b =&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> (a </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> b));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;a * b=&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> b);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_4-2-字符串不是-java-中的基本数据类型" tabindex="-1"><a class="header-anchor" href="#_4-2-字符串不是-java-中的基本数据类型"><span>4.2 字符串不是 Java 中的基本数据类型</span></a></h3><ul><li>字符串类型的名字叫做 String</li><li>虽然 String 不是 Java 中的基础类型，但是也可以使用类似的语法 <code>String str = “abc”;</code> 来创建。开始的时候将其当成基础类型，更容易理解。</li><li>String 不是 Java 中的保留字。 我创建一个 <code>int String = 999;</code>是不会报错的；</li></ul><h3 id="_4-3-string-的加法不会改变原-string-变量的值-改变其值要用赋值语句" tabindex="-1"><a class="header-anchor" href="#_4-3-string-的加法不会改变原-string-变量的值-改变其值要用赋值语句"><span>4.3 String 的加法不会改变原 String 变量的值，改变其值要用赋值语句</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">StringVariable</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;"> str </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;a的值是&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        str </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> str </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> a;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(str);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;"> s2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;a的值是&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(str </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> a);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(s2);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a的值是10</span></span>
<span class="line"><span style="color:#F8F8F2;">a的值是1010</span></span>
<span class="line"><span style="color:#F8F8F2;">a的值是</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',17))])}const A=r(v,[["render",h],["__file","11.html.vue"]]),_=JSON.parse('{"path":"/Java/chapter01/11.html","title":"11-字符编码和字符串","lang":"zh-CN","frontmatter":{"title":"11-字符编码和字符串","date":"2023-08-21T12:04:25.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课"],"tag":["Java体系课"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"footer":"长期招收编程一对一学员！微信：Jiabcdefh, <a href=\\"https://beian.miit.gov.cn/\\" target=\\"_blank\\">闽ICP备19021486号-6</a>","feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"0. 目录","slug":"_0-目录","link":"#_0-目录","children":[]},{"level":2,"title":"1. 什么是字符集和编码","slug":"_1-什么是字符集和编码","link":"#_1-什么是字符集和编码","children":[{"level":3,"title":"1.1 什么是字符集（Charset）","slug":"_1-1-什么是字符集-charset","link":"#_1-1-什么是字符集-charset","children":[]},{"level":3,"title":"1.2 什么是编码（Encoding）","slug":"_1-2-什么是编码-encoding","link":"#_1-2-什么是编码-encoding","children":[]}]},{"level":2,"title":"2. 编码和字符集介绍","slug":"_2-编码和字符集介绍","link":"#_2-编码和字符集介绍","children":[{"level":3,"title":"2.1 常用的字符集简介","slug":"_2-1-常用的字符集简介","link":"#_2-1-常用的字符集简介","children":[]},{"level":3,"title":"2.2 Java 中的字符集","slug":"_2-2-java-中的字符集","link":"#_2-2-java-中的字符集","children":[]}]},{"level":2,"title":"3. ASCII 码和转义符（escape character）","slug":"_3-ascii-码和转义符-escape-character","link":"#_3-ascii-码和转义符-escape-character","children":[{"level":3,"title":"3.1 如何输出特殊字符「比如：有些字符键盘敲不出来」","slug":"_3-1-如何输出特殊字符「比如-有些字符键盘敲不出来」","link":"#_3-1-如何输出特殊字符「比如-有些字符键盘敲不出来」","children":[]},{"level":3,"title":"3.2 转义符语法和常用的转义符","slug":"_3-2-转义符语法和常用的转义符","link":"#_3-2-转义符语法和常用的转义符","children":[]}]},{"level":2,"title":"4. 字符串的“加法” 「所谓加法，其实是拼接」","slug":"_4-字符串的-加法-「所谓加法-其实是拼接」","link":"#_4-字符串的-加法-「所谓加法-其实是拼接」","children":[{"level":3,"title":"4.1 将变量穿插在字符串中输出","slug":"_4-1-将变量穿插在字符串中输出","link":"#_4-1-将变量穿插在字符串中输出","children":[]},{"level":3,"title":"4.2 字符串不是 Java 中的基本数据类型","slug":"_4-2-字符串不是-java-中的基本数据类型","link":"#_4-2-字符串不是-java-中的基本数据类型","children":[]},{"level":3,"title":"4.3 String 的加法不会改变原 String 变量的值，改变其值要用赋值语句","slug":"_4-3-string-的加法不会改变原-string-变量的值-改变其值要用赋值语句","link":"#_4-3-string-的加法不会改变原-string-变量的值-改变其值要用赋值语句","children":[]}]}],"git":{"createdTime":1732028288000,"updatedTime":1732028288000,"contributors":[{"name":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1}]},"readingTime":{"minutes":5.53,"words":1658},"filePathRelative":"Java/chapter01/11.md","localizedDate":"2023年8月21日","copyright":{"author":"AI悦创"}}');export{A as comp,_ as data};
