import{_ as t}from"./gzh.b03adfd2.js";import{_ as p}from"./zsxq.77f6dc86.js";import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,a as n,d as a,b as e,e as c,r}from"./app.f3859691.js";const u={},d=n("p",null,"你好，我是悦创。",-1),v={href:"https://www.djangoproject.com/",target:"_blank",rel:"noopener noreferrer"},k=c(`<p>我们将为这个项目制定规范，然后为应用程序使用的数据定义模型。我们将使用 Django 的管理系统来输入一些初始数据，再学习编写视图和模板，让 Django 能够为我们的网站创建网页。</p><p>Django 是一个 Web 框架——一套用于帮助开发交互式网站的工具。Django 能够响应网页请求，还能让你更轻松地读写数据库、管理用户等。在后面，我们将改进“学习笔记”项目，再将其部署到活动的服务器，让你和你的朋友能够使用它。</p><h2 id="_1-建立项目" tabindex="-1"><a class="header-anchor" href="#_1-建立项目" aria-hidden="true">#</a> 1. 建立项目</h2><p>建立项目时，首先需要以规范的方式对项目进行描述，再建立虚拟环境，以便在其中创建项目。</p><hr><h3 id="_1-1-制定规范" tabindex="-1"><a class="header-anchor" href="#_1-1-制定规范" aria-hidden="true">#</a> 1.1 制定规范</h3><p>完整的规范详细说明了项目的目标，阐述了项目的功能，并讨论了项目的外观和用户界面。 与任何良好的项目规划和商业计划书一样，规范应突出重点，帮助避免项目偏离轨道。这里不会制定完整的项目规划，而只列出一些明确的目标，以突出开发的重点。我们制定的规范如下:</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>我们要编写一个名为“学习笔记”的 Web 应用程序，让用户能够记录感兴趣的主题，并在学习每个主题的过程中添加日志条目。“学习笔记”的主页对这个网站进行描述，并邀请用户注册或登录。用户登录后，就可创建新主题、添加新条目以及阅读既有的条目。</p></div><p>学习新的主题时，记录学到的知识可帮助跟踪和复习这些知识。优秀的应用程序让这个记录过程简单易行。</p><hr><h3 id="_1-2-建立虚拟环境" tabindex="-1"><a class="header-anchor" href="#_1-2-建立虚拟环境" aria-hidden="true">#</a> 1.2 建立虚拟环境</h3><p>要使用 Django，首先需要建立一个虚拟工作环境。虚拟环境是系统的一个位置，你可以在其中安装包，并将其与其他 Python 包隔离。将项目的库与其他项目分离是有益的，且为了在之后将“学习笔记”部署到服务器，这也是必须的。</p><p>为项目新建一个目录，将其命名为 <code>learning_log</code> ，再在终端中切换到这个目录，并创建一个虚拟环境。如果你使用的是 Python3，可使用如下命令来创建虚拟环境:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>➜  Django<span class="token operator">-</span>Study<span class="token operator">-</span>Notes git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> cd learning_log
➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> python3 <span class="token operator">-</span>m venv ll_env
➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里运行了模块 venv，并使用它来创建一个名为 <code>ll_env</code> 的虚拟环境。如果这样做管用，请跳 到后面的 <a href="#_1-4-%E6%BF%80%E6%B4%BB%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83">【1.4节】</a>;如果不管用，请阅读 <a href="#_1-3-%E5%AE%89%E8%A3%85">【1.3】</a>节。</p><hr><h3 id="_1-3-安装-virtualenv" tabindex="-1"><a class="header-anchor" href="#_1-3-安装-virtualenv" aria-hidden="true">#</a> 1.3 安装 virtualenv</h3><p>如果你使用的是较早的 Python 版本，或者系统没有正确地设置，不能使用模块 venv，可安装 virtualenv 包。为此，可执行如下命令:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install <span class="token operator">-</span><span class="token operator">-</span>user virtualenv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p><strong>注意:</strong> 如果你使用的是 Linux 系统，且上面的做法不管用，可使用系统的包管理器来安装 virtualenv。例如，要在 Ubuntu 系统中安装 virtualenv，可使用命令<code>sudo apt-get install python-virtualenv</code>。</p></div><p>在终端中切换到目录 <code>learning_log</code>，并像下面这样创建一个虚拟环境:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>learning_log$ virtualenv ll_env
New python executable <span class="token keyword">in</span> ll_env<span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>python 
Installing setuptools<span class="token punctuation">,</span> pip<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>done<span class="token punctuation">.</span> 
learning_log$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p><strong>注意:</strong> 如果你的系统安装了多个 Python 版本，需要指定 virtualenv 使用的版本。例如，命令 <code>virtualenv ll_env --python=python3</code> 创建一个使用 Python3 的虚拟环境。</p></div><hr><h3 id="_1-4-激活虚拟环境" tabindex="-1"><a class="header-anchor" href="#_1-4-激活虚拟环境" aria-hidden="true">#</a> 1.4 激活虚拟环境</h3><p>建立虚拟环境后，需要使用下面的命令激活它:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>learning_log$ source ll_env<span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>activate 
<span class="token punctuation">(</span>ll_env<span class="token punctuation">)</span>learning_log$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个命令运行 <code>ll_env/bin</code> 中的脚本 activate。环境处于活动状态时，环境名将包含在括号内，如上面👆第二行所示。在这种情况下，你可以在环境中安装包，并使用已安装的包。你在 <code>ll_env</code> 中安装的包仅在该环境处于活动状态时才可用。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p><strong>注意:</strong> 如果你使用的是 Windows 系统，请使用命令 <code>ll_env\\Scripts\\activate</code> (不包含 source )来激活这个虚拟环境。</p></div><p>要停止使用虚拟环境，可执行命令 <code>deactivate</code>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">(</span>ll_env<span class="token punctuation">)</span> ➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗ deactivate
➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果关闭运行虚拟环境的终端，虚拟环境也将不再处于活动状态。</p><h3 id="_1-5-安装-django" tabindex="-1"><a class="header-anchor" href="#_1-5-安装-django" aria-hidden="true">#</a> 1.5 安装 Django</h3><p>创建并激活虚拟环境后，就可安装 Django 了:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗ source ll_env<span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>activate
<span class="token punctuation">(</span>ll_env<span class="token punctuation">)</span> ➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗ pip install django
Collecting django
  Using cached Django<span class="token operator">-</span><span class="token number">4.1</span><span class="token number">.3</span><span class="token operator">-</span>py3<span class="token operator">-</span>none<span class="token operator">-</span><span class="token builtin">any</span><span class="token punctuation">.</span>whl <span class="token punctuation">(</span><span class="token number">8.1</span> MB<span class="token punctuation">)</span>
Collecting sqlparse<span class="token operator">&gt;=</span><span class="token number">0.2</span><span class="token number">.2</span>
  Using cached sqlparse<span class="token operator">-</span><span class="token number">0.4</span><span class="token number">.3</span><span class="token operator">-</span>py3<span class="token operator">-</span>none<span class="token operator">-</span><span class="token builtin">any</span><span class="token punctuation">.</span>whl <span class="token punctuation">(</span><span class="token number">42</span> kB<span class="token punctuation">)</span>
Collecting asgiref<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">&gt;=</span><span class="token number">3.5</span><span class="token number">.2</span>
  Using cached asgiref<span class="token operator">-</span><span class="token number">3.5</span><span class="token number">.2</span><span class="token operator">-</span>py3<span class="token operator">-</span>none<span class="token operator">-</span><span class="token builtin">any</span><span class="token punctuation">.</span>whl <span class="token punctuation">(</span><span class="token number">22</span> kB<span class="token punctuation">)</span>
Installing collected packages<span class="token punctuation">:</span> sqlparse<span class="token punctuation">,</span> asgiref<span class="token punctuation">,</span> django
Successfully installed asgiref<span class="token operator">-</span><span class="token number">3.5</span><span class="token number">.2</span> django<span class="token operator">-</span><span class="token number">4.1</span><span class="token number">.3</span> sqlparse<span class="token operator">-</span><span class="token number">0.4</span><span class="token number">.3</span>

<span class="token punctuation">[</span>notice<span class="token punctuation">]</span> A new release of pip available<span class="token punctuation">:</span> <span class="token number">22.2</span><span class="token number">.2</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">22.3</span><span class="token number">.1</span>
<span class="token punctuation">[</span>notice<span class="token punctuation">]</span> To update<span class="token punctuation">,</span> run<span class="token punctuation">:</span> pip install <span class="token operator">-</span><span class="token operator">-</span>upgrade pip
<span class="token punctuation">(</span>ll_env<span class="token punctuation">)</span> ➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于我们是在虚拟环境中工作，因此在所有的系统中，安装 Django 的命令都相同:不需要指定标志 <code>--user</code>，也无需使用 <code>python -m pip install package_name</code> 这样较长的命令。</p><p>别忘了，Django 仅在虚拟环境处于活动状态时才可用。</p><h3 id="_1-6-在-django-中创建项目" tabindex="-1"><a class="header-anchor" href="#_1-6-在-django-中创建项目" aria-hidden="true">#</a> 1.6 在 Django 中创建项目</h3><p>在依然处于活动的虚拟环境的情况下(<code>ll_env</code>包含在括号内)，执行如下命令来新建一个项目:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">(</span>ll_env<span class="token punctuation">)</span> ➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗ django<span class="token operator">-</span>admin startproject learning_log <span class="token punctuation">.</span>
<span class="token punctuation">(</span>ll_env<span class="token punctuation">)</span> ➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗ ls
learning_log ll_env       manage<span class="token punctuation">.</span>py
<span class="token punctuation">(</span>ll_env<span class="token punctuation">)</span> ➜  learning_log git<span class="token punctuation">:</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span> ✗ ls learning_log
__init__<span class="token punctuation">.</span>py asgi<span class="token punctuation">.</span>py     settings<span class="token punctuation">.</span>py urls<span class="token punctuation">.</span>py     wsgi<span class="token punctuation">.</span>py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="`+t+'" alt="" loading="lazy"></p></details>',42),g={class:"custom-container info"},m=n("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),h=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发、Linux、Web」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),_=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),b={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"方法二：微信：Jiabcdefh",-1),f=n("p",null,[n("img",{src:p,alt:"",loading:"lazy"})],-1);function j(x,w){const s=r("ExternalLinkIcon");return l(),i("div",null,[d,n("p",null,[a("当今的网站实际上都是富应用程序(rich application)，就像成熟的桌面应用程序一样。Python 提供了一组开发 Web 应用程序的卓越工 具。在本章中，你将学习如何使用 Django("),n("a",v,[a("https://www.djangoproject.com/"),e(s)]),a(") 来开发一个名为“学习笔记”(Learning Log)的项目，这是一个在线日志系统，让你能够记录所学习的有关特定主题的知识。")]),k,n("div",g,[m,h,_,n("p",null,[a("方法一："),n("a",b,[a("QQ"),e(s)])]),y]),f])}const P=o(u,[["render",j],["__file","01-Start-with-Django.html.vue"]]);export{P as default};
