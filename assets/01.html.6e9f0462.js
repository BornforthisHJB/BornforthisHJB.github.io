import{_ as e}from"./gzh.b03adfd2.js";import{_ as t}from"./zsxq.77f6dc86.js";import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as r,a,d as n,b as p,e as c,r as o}from"./app.85c1c407.js";const l={},u=c(`<h2 id="javascript-简介" tabindex="-1"><a class="header-anchor" href="#javascript-简介" aria-hidden="true">#</a> JavaScript 简介</h2><p>HTML 控制网页的结构，CSS 控制网页的外观，JavaScript 控制网页的行为</p><p>Java 与 JavaScript 的区别</p><p>JavaScript 往往在网页中使用，而 Java 却在软件、网页、手机 A p p App App 等各个领域中使用</p><p>Java 是一门面向对象的语言，而 JavaScript 更像是一门函数式编程语言</p><h2 id="外部-javascript" tabindex="-1"><a class="header-anchor" href="#外部-javascript" aria-hidden="true">#</a> 外部 JavaScript</h2><p>在实际开发中，为了提升网站的性能和可维护性，一般使用外部 JavaScript</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>文件路径<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="内部-javascript" tabindex="-1"><a class="header-anchor" href="#内部-javascript" aria-hidden="true">#</a> 内部 JavaScript</h2><p><strong>内部 <code>JavaScript</code>：把 <code>HTML</code> 代码和<code>JavaScript</code> 代码放在同一个文件中</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  /* 等价 */
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="元素属性-javascript" tabindex="-1"><a class="header-anchor" href="#元素属性-javascript" aria-hidden="true">#</a> 元素属性 JavaScript</h2><p><strong>元素属性 <code>JavaScript</code>：指的是在元素的 “事件属性” 中直接编写 JavaScript 或调用函数</strong><strong><code>document.write()</code>：在页面输出一个内容 <code>alert()</code>：弹出一个对话框</strong></p><h2 id="语法基础" tabindex="-1"><a class="header-anchor" href="#语法基础" aria-hidden="true">#</a> 语法基础</h2><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h3><h4 id="javascript-命名规则" tabindex="-1"><a class="header-anchor" href="#javascript-命名规则" aria-hidden="true">#</a> JavaScript 命名规则：</h4><p>变量由 字母、下划线、$ 或 数字 组成，并且第一个字母必须是字母、下划线 或 $ 变量不能是系统 关键字 和 保留字</p><h4 id="javascript-关键字" tabindex="-1"><a class="header-anchor" href="#javascript-关键字" aria-hidden="true">#</a> JavaScript 关键字</h4><p>break、else、new、typeof、case、false、null、var、catch、for、switch、void、continue、function、this、while、default、if、throw、with、delete、in、true、do、instanceof、try</p><h4 id="ecma-262-标准的保留字" tabindex="-1"><a class="header-anchor" href="#ecma-262-标准的保留字" aria-hidden="true">#</a> ECMA-262 标准的保留字</h4><p>abstract、enum、int、short、boolean、export、interface、static、byte、extends、long、super、char、final、native、synchronized、class、float、package、throws、const、goto、private、transient、debugger、implements、protected、volatile、double、import、public</p><h4 id="浏览器定义的保留字" tabindex="-1"><a class="header-anchor" href="#浏览器定义的保留字" aria-hidden="true">#</a> 浏览器定义的保留字</h4><p>alert、eval、location、open、array、focus、math、outerHeight、blur、funtion、name、parent、boolean、history、navigator、parseFloat、date、image、number、regExp、document、isNaN、object、status、escape、length、onLoad、string</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> 变量名 <span class="token operator">=</span> 值<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="常量" tabindex="-1"><a class="header-anchor" href="#常量" aria-hidden="true">#</a> 常量</h3><p><strong>常量：不能改变的量；一般常量名全部大写</strong></p><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h3><p><strong>基本数据类型： 数字、字符串、布尔值、未定义值、空值</strong></p><p><strong>引用数据类型： 数组、对象</strong></p><p><strong><code>JavaScript</code> 中，所有变量都是用 <code>var</code> 声明</strong></p><h4 id="数字" tabindex="-1"><a class="header-anchor" href="#数字" aria-hidden="true">#</a> 数字</h4><p><strong>数字是基本的数据类型，即数学上的数字，不分整型和浮点型</strong></p><h4 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h4><p><strong>单引号括起来的一个或多个字符 双引号括起来的一个或多个字符 单引号括起来的字符串中可以包含双引号 双引号括起来的字符串中可以包含单引号</strong><strong>字符串不能进行加减乘除</strong></p><h4 id="布尔值" tabindex="-1"><a class="header-anchor" href="#布尔值" aria-hidden="true">#</a> 布尔值</h4><p>数字和字符串这两种类型的值可以有无数多个，但是布尔类型的值只有 true 和 false</p><h4 id="未定义值" tabindex="-1"><a class="header-anchor" href="#未定义值" aria-hidden="true">#</a> 未定义值</h4><p>未定义值是用 var 声明的变量，但是并没有对这个变量进行赋值，未定义值就是 undefined</p><h4 id="空值" tabindex="-1"><a class="header-anchor" href="#空值" aria-hidden="true">#</a> 空值</h4><p>数字、字符串等数据在定义的时候，系统都会分配一定的内存空间，空值用 null 表示</p><h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h3><table><thead><tr><th>运算符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>10+5 返回15</td></tr><tr><td>-</td><td>减</td><td>10-5 返回5</td></tr><tr><td>*</td><td>乘</td><td>10*5 返回50</td></tr><tr><td>/</td><td>除</td><td>10/5 返回2</td></tr><tr><td>%</td><td>求余</td><td>10%4 返回 2</td></tr><tr><td>++</td><td>自增</td><td>var i = 10; i++ 返回 11</td></tr><tr><td>–</td><td>自减</td><td>var i = 10; i–; 返回 9</td></tr></tbody></table><p><strong><code>JavaScript</code> 中加法运算</strong><strong>数字 + 数字 = 数字 字符串 + 字符串 = 字符串 字符串 + 数字 = 字符串</strong></p><h4 id="赋值运算符" tabindex="-1"><a class="header-anchor" href="#赋值运算符" aria-hidden="true">#</a> 赋值运算符</h4><table><thead><tr><th>运算符</th><th>举例</th></tr></thead><tbody><tr><td>=</td><td>var str = “JavaScript”</td></tr><tr><td>+=</td><td>var a += b 等价于 var a = a + b;</td></tr><tr><td>-=</td><td>var a -= b 等价于 var a = a - b;</td></tr><tr><td>*=</td><td>var a *= b 等价于 var a = a * b;</td></tr><tr><td>/=</td><td>var a /= b 等价于 var a = a/b;</td></tr></tbody></table><h4 id="比较运算符" tabindex="-1"><a class="header-anchor" href="#比较运算符" aria-hidden="true">#</a> 比较运算符</h4><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>==</td><td>等于</td></tr><tr><td>!=</td><td>不等于</td></tr></tbody></table><h4 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h4><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与运算</td></tr><tr><td>||</td><td>或运算</td></tr><tr><td>!</td><td>非运算</td></tr></tbody></table><h4 id="条件运算符" tabindex="-1"><a class="header-anchor" href="#条件运算符" aria-hidden="true">#</a> 条件运算符</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> 条件 <span class="token operator">?</span> 表达式<span class="token number">1</span> <span class="token operator">:</span> 表达式<span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="表达式与语句" tabindex="-1"><a class="header-anchor" href="#表达式与语句" aria-hidden="true">#</a> 表达式与语句</h3><p>一个表达式包含 操作数 和 操作符 两部分</p><h3 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换" aria-hidden="true">#</a> 类型转换</h3><p>JavaScript 类型转换包括 隐式类型转换 和 显式类型转换</p><h4 id="字符串转换为数字" tabindex="-1"><a class="header-anchor" href="#字符串转换为数字" aria-hidden="true">#</a> 字符串转换为数字</h4><p><code>Number()</code>：将数字型字符串转换为数字 <code>parseInt()</code> 和 <code>parseFloat()</code>：提取首字母为数字的任意字符串中的数字</p><h4 id="数字转化为字符串" tabindex="-1"><a class="header-anchor" href="#数字转化为字符串" aria-hidden="true">#</a> 数字转化为字符串</h4><p>JavaScript 中，将数字转化为字符串的两种方式 与空字符串相加 和 <code>toString()</code></p><h3 id="转义字符" tabindex="-1"><a class="header-anchor" href="#转义字符" aria-hidden="true">#</a> 转义字符</h3><table><thead><tr><th>转义字符</th><th>说明</th></tr></thead><tbody><tr><td>\\’</td><td>英文单引号</td></tr><tr><td>\\’’</td><td>英文双引号</td></tr><tr><td>\\n</td><td>换行符</td></tr></tbody></table><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>document.write() 中换行，则应该用 &lt;br/&gt; 
alert() 中换行用，则应该用 \\n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><h4 id="单行注释" tabindex="-1"><a class="header-anchor" href="#单行注释" aria-hidden="true">#</a> 单行注释</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 单行注释
/* 多行注释 */
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程控制" tabindex="-1"><a class="header-anchor" href="#流程控制" aria-hidden="true">#</a> 流程控制</h3><h4 id="顺序结构" tabindex="-1"><a class="header-anchor" href="#顺序结构" aria-hidden="true">#</a> 顺序结构</h4><p><strong><code>JavaScript</code> 按照代码从上到下、从左到右的顺序执行</strong></p><h4 id="选择结构" tabindex="-1"><a class="header-anchor" href="#选择结构" aria-hidden="true">#</a> 选择结构</h4><h5 id="if" tabindex="-1"><a class="header-anchor" href="#if" aria-hidden="true">#</a> if</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span>  <span class="token comment">// 条件为真,执行 {}</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="if-else" tabindex="-1"><a class="header-anchor" href="#if-else" aria-hidden="true">#</a> if … else …</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span> <span class="token comment">// 条件为真执行 { }, 否则执行 else 部分</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="if-嵌套及多向选择" tabindex="-1"><a class="header-anchor" href="#if-嵌套及多向选择" aria-hidden="true">#</a> if 嵌套及多向选择</h5><p><strong><code>if</code> 多项选择</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>if嵌套</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="switch-语句" tabindex="-1"><a class="header-anchor" href="#switch-语句" aria-hidden="true">#</a> switch 语句</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">switch</span><span class="token punctuation">(</span>判断值<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">case</span> 取值<span class="token number">1</span><span class="token operator">:</span>
        语块<span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> 取值<span class="token number">2</span><span class="token operator">:</span>
        语块<span class="token number">2</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> <span class="token literal-property property">取值n</span><span class="token operator">:</span>
        语句块n<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        语句块n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环结构" tabindex="-1"><a class="header-anchor" href="#循环结构" aria-hidden="true">#</a> 循环结构</h3><h4 id="while" tabindex="-1"><a class="header-anchor" href="#while" aria-hidden="true">#</a> while</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">while</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 当条件为 true,循环执行</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="do-while" tabindex="-1"><a class="header-anchor" href="#do-while" aria-hidden="true">#</a> do … while</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">do</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span>初始化表达式<span class="token punctuation">;</span> 条件表达式<span class="token punctuation">;</span> 循环后操作<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3><h4 id="函数定义" tabindex="-1"><a class="header-anchor" href="#函数定义" aria-hidden="true">#</a> 函数定义</h4><h5 id="没有返回值的函数" tabindex="-1"><a class="header-anchor" href="#没有返回值的函数" aria-hidden="true">#</a> 没有返回值的函数</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token parameter">参数<span class="token number">1</span><span class="token punctuation">,</span> 参数<span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">,</span> 参数n</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="有返回值的函数" tabindex="-1"><a class="header-anchor" href="#有返回值的函数" aria-hidden="true">#</a> 有返回值的函数</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token parameter">参数<span class="token number">1</span><span class="token punctuation">,</span> 参数<span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">,</span> 参数n</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token operator">...</span><span class="token punctuation">.</span>
   <span class="token keyword">return</span> 返回值<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="全局变量与局部变量" tabindex="-1"><a class="header-anchor" href="#全局变量与局部变量" aria-hidden="true">#</a> 全局变量与局部变量</h5><p><strong>全局变量： 主程序中定义，从定义开始，一直到整个程序结束为止 局部变量： 一般在函数中定义，函数之中可以使用，函数之外不能使用</strong></p><h3 id="函数调用" tabindex="-1"><a class="header-anchor" href="#函数调用" aria-hidden="true">#</a> 函数调用</h3><h3 id="直接调用" tabindex="-1"><a class="header-anchor" href="#直接调用" aria-hidden="true">#</a> 直接调用</h3><p><strong>一般用于没有返回值的函数</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">函数名</span><span class="token punctuation">(</span>实参<span class="token number">1</span><span class="token punctuation">,</span> 实参<span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">,</span> 实参n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="在表达式中调用" tabindex="-1"><a class="header-anchor" href="#在表达式中调用" aria-hidden="true">#</a> 在表达式中调用</h4><p><strong>一般用于有返回值的函数</strong></p><h3 id="超链接中调用" tabindex="-1"><a class="header-anchor" href="#超链接中调用" aria-hidden="true">#</a> 超链接中调用</h3><p><strong>在超链接中调用，指的是在 <code>a</code> 元素的 <code>href</code> 属性中使用 <code>javascript:函数名</code> 的形式调用函数。当用户点击超链接时，就会调用该函数</strong></p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="`+e+'" alt=""></p></details>',105),h={class:"custom-container info"},v=a("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),k=a("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),b=a("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),m={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},g=a("p",null,"方法二：微信：Jiabcdefh",-1),f=a("p",null,[a("img",{src:t,alt:""})],-1);function x(j,y){const s=o("ExternalLinkIcon");return d(),r("div",null,[u,a("div",h,[v,k,b,a("p",null,[n("方法一："),a("a",m,[n("QQ"),p(s)])]),g]),f])}const q=i(l,[["render",x],["__file","01.html.vue"]]);export{q as default};
