import{_ as t}from"./gzh.b03adfd2.js";import{_ as e}from"./zsxq.77f6dc86.js";import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as i,a as n,d as s,b as c,e as l,r as u}from"./app.9f999a57.js";const r={},d=l(`<h2 id="_1-\u8BCD\u9891\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_1-\u8BCD\u9891\u5206\u6790" aria-hidden="true">#</a> 1. \u8BCD\u9891\u5206\u6790</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># @Time    : 2022/10/13 11:05</span>
<span class="token comment"># @Author  : AI\u60A6\u521B</span>
<span class="token comment"># @FileName: demo.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># @Blog    \uFF1Ahttps://bornforthis.cn/</span>
<span class="token keyword">def</span> <span class="token function">make_dictionary</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">try</span><span class="token punctuation">:</span>
		<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span>
		textoffile <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>
		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The file was not found.&quot;</span><span class="token punctuation">)</span>
	textoffile <span class="token operator">=</span> textoffile<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment"># print(textoffile)</span>
	<span class="token keyword">for</span> textoffiles <span class="token keyword">in</span> textoffile<span class="token punctuation">:</span>
		<span class="token comment"># print(textoffiles)</span>
		textoffiles <span class="token operator">=</span> textoffile<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token comment"># print(textoffiles)</span>
	<span class="token comment"># 	print(textoffiles)</span>
		words <span class="token operator">=</span> textoffiles<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
		<span class="token comment"># print(words)</span>
		wdict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
		<span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>
			<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
				<span class="token keyword">if</span> word <span class="token keyword">in</span> wdict<span class="token punctuation">:</span>
					wdict<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
				<span class="token keyword">else</span><span class="token punctuation">:</span>
					wdict<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
			<span class="token keyword">else</span><span class="token punctuation">:</span>
				<span class="token keyword">pass</span>
		<span class="token keyword">return</span> wdict


<span class="token comment"># Testing with the example data in the question</span>
dictionary <span class="token operator">=</span> make_dictionary<span class="token punctuation">(</span><span class="token string">&#39;data/jolly.txt&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># print(dictionary)</span>
<span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&#39;: &#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&#39;: &#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+t+'" alt="" loading="lazy"></p></details>',4),k={class:"custom-container info"},m=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),v=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),b=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),f={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),h=n("p",null,[n("img",{src:e,alt:"",loading:"lazy"})],-1);function _(w,x){const a=u("ExternalLinkIcon");return p(),i("div",null,[d,n("div",k,[m,v,b,n("p",null,[s("\u65B9\u6CD5\u4E00\uFF1A"),n("a",f,[s("QQ"),c(a)])]),y]),h])}const A=o(r,[["render",_],["__file","02-CS-shaoshuai-Python-cs.html.vue"]]);export{A as default};
