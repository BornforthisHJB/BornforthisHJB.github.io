import{_ as t}from"./gzh.b03adfd2.js";import{_ as p}from"./zsxq.77f6dc86.js";import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,d as s,b as i,e as l,r as u}from"./app.5015743b.js";const r={},k=l(`<h2 id="part-1-birth-date-application-30-pts-use-mod-and-division-to-separate-digits-for-birthday-date-birthdays-java" tabindex="-1"><a class="header-anchor" href="#part-1-birth-date-application-30-pts-use-mod-and-division-to-separate-digits-for-birthday-date-birthdays-java" aria-hidden="true">#</a> Part 1: Birth Date Application: (30 pts)Use MOD % and / division to separate digits for Birthday date Birthdays.java</h2><p>Ask for the user to enter a two people\u2019s birthday as an 8 digit-number! The user should enter the birthday for each person in an 8-digit format (&quot;YYYYMMDD&quot;). Then your program should compare the two birthday dates to determine which person is older, or if they have the same age.</p><blockquote><p>\u8981\u6C42\u7528\u6237\u8F93\u5165\u4E24\u4E2A\u4EBA\u7684\u751F\u65E5\u4F5C\u4E3A\u4E00\u4E2A 8 \u4F4D\u6570\u7684\u6570\u5B57!</p><p>\u7528\u6237\u5E94\u8BE5\u4EE5 8 \u4F4D\u6570\u5B57\u683C\u5F0F <code>(\u201CYYYYMMDD\u201D)</code> \u8F93\u5165\u6BCF\u4E2A\u4EBA\u7684\u751F\u65E5\u3002\u7136\u540E\u4F60\u7684\u7A0B\u5E8F\u5E94\u8BE5\u6BD4\u8F83\u4E24\u4E2A\u751F\u65E5\u65E5\u671F\uFF0C\u4EE5\u786E\u5B9A\u8C01\u66F4\u5E74\u957F\uFF0C\u6216\u8005\u4ED6\u4EEC\u662F\u5426\u6709\u76F8\u540C\u7684\u5E74\u9F84\u3002</p></blockquote><p>For example, President\u2019s Obama&#39;s birthday is Aug 4,1961. So, it should be entered as 19610804 (YYYYMMDD). We can assume that the user enters good data with 8 digits for each birthday so you do not have to do any data validation.</p><blockquote><p>\u4F8B\u5982\uFF0C\u5965\u5DF4\u9A6C\u603B\u7EDF\u7684\u751F\u65E5\u662F1961\u5E748\u67084\u65E5\u3002\u56E0\u6B64\uFF0C\u5B83\u5E94\u8BE5\u8F93\u5165\u4E3A19610804 (YYYYMMDD)\u3002\u6211\u4EEC\u53EF\u4EE5\u5047\u8BBE\u7528\u6237\u4E3A\u6BCF\u4E2A\u751F\u65E5\u8F93\u5165 8 \u4F4D\u6570\u5B57\uFF0C\u8FD9\u6837\u60A8\u5C31\u4E0D\u5FC5\u8FDB\u884C\u4EFB\u4F55\u6570\u636E\u9A8C\u8BC1\u3002</p></blockquote><ul><li>This program should separate each 8-digit-number into three separate numbers to represent the day, month, and the year, in that order. <strong>Only use the mathematical operators to separate the digits (will cover this during class).</strong></li></ul><blockquote><p>\u8FD9\u4E2A\u7A0B\u5E8F\u5E94\u8BE5\u5C06\u6BCF\u4E2A8\u4F4D\u6570\u5B57\u6309\u987A\u5E8F\u5206\u6210\u4E09\u4E2A\u5355\u72EC\u7684\u6570\u5B57\uFF0C\u5206\u522B\u8868\u793A\u65E5\u3001\u6708\u548C\u5E74\u3002<strong>\u53EA\u4F7F\u7528\u6570\u5B66\u8FD0\u7B97\u7B26\u6765\u5206\u9694\u6570\u5B57</strong> (\u5C06\u5728\u8BFE\u5802\u4E0A\u8BA8\u8BBA)\u3002</p></blockquote><p>Thus, in our example the program would assign 4 to a first variable from the right, let&#39;s say day, then assign 8 to a second variable, let&#39;s say month and 1961 to the number variable, let&#39;s say year. (Do not worry about leading zeroes for days and months.)</p><blockquote><p>\u56E0\u6B64\uFF0C\u5728\u6211\u4EEC\u7684\u4F8B\u5B50\u4E2D\uFF0C\u7A0B\u5E8F\u4F1A\u5C06 4 \u8D4B\u503C\u7ED9\u53F3\u8FB9\u7684\u7B2C\u4E00\u4E2A\u53D8\u91CF\uFF0C\u6BD4\u5982 day\uFF0C\u7136\u540E\u5C06 8 \u8D4B\u503C\u7ED9\u7B2C\u4E8C\u4E2A\u53D8\u91CF\uFF0C\u6BD4\u5982 month\uFF0C\u5C06 1961 \u8D4B\u503C\u7ED9 number \u53D8\u91CF\uFF0C\u6BD4\u5982 year\u3002(\u4E0D\u7528\u62C5\u5FC3\u5929\u6570\u548C\u6708\u4EFD\u7684\u524D\u5BFC\u96F6\u3002)</p></blockquote><p>Next the program should print out the date of birth written in the following standard format MM/DD/YYYY for each person. So, the output for Obama\u2019s date of birth should be as follow: 8/4/1961</p><blockquote><p>\u63A5\u4E0B\u6765\uFF0C\u7A0B\u5E8F\u5C06\u4E3A\u6BCF\u4E2A\u4EBA\u6253\u5370\u51FA\u4EE5\u4EE5\u4E0B\u6807\u51C6\u683C\u5F0F\u5199\u7684\u51FA\u751F\u65E5\u671F MM/DD/YYYY\u3002\u56E0\u6B64\uFF0C\u5965\u5DF4\u9A6C\u51FA\u751F\u65E5\u671F\u7684\u8F93\u51FA\u5E94\u8BE5\u5982\u4E0B: 8/4/1961</p></blockquote><p>Also, your program should be able to print which person is older or the other possibility that they are the same age. You should use control structure allowing program to make decision (smart). So, result should be decided by program and not you.</p><blockquote><p>\u53E6\u5916\uFF0C\u4F60\u7684\u7A0B\u5E8F\u5E94\u8BE5\u80FD\u591F\u6253\u5370\u51FA\u54EA\u4E2A\u4EBA\u66F4\u8001\uFF0C\u6216\u8005\u4ED6\u4EEC\u662F\u76F8\u540C\u5E74\u9F84\u7684\u5176\u4ED6\u53EF\u80FD\u6027\u3002\u4F60\u5E94\u8BE5\u4F7F\u7528\u5141\u8BB8\u7A0B\u5E8F\u505A\u51FA\u51B3\u7B56(\u667A\u80FD)\u7684\u63A7\u5236\u7ED3\u6784\u3002\u6240\u4EE5\uFF0C\u7ED3\u679C\u5E94\u8BE5\u7531\u7A0B\u5E8F\u51B3\u5B9A\uFF0C\u800C\u4E0D\u662F\u7531\u4F60\u51B3\u5B9A\u3002</p></blockquote><h2 id="example-comparing-obama-s-to-beyonce-birthday" tabindex="-1"><a class="header-anchor" href="#example-comparing-obama-s-to-beyonce-birthday" aria-hidden="true">#</a> Example (Comparing Obama\u2019s to Beyonc\xE9 Birthday):</h2><p>Enter the birthday in 8-digit format for person&#39;s # 1: (YYYYMMDD): 19610804</p><p>Enter the birthday in 8-digit format for person&#39;s # 2, (YYYYMMDD): 19810904</p><p><strong>For this example, the following result will be printed:</strong></p><p>Enter name for person #1: Obama</p><p>Enter name for person #2: Beyonc\xE9</p><p>Obama\u2019s date of birth is: 8/4/1961</p><p>Beyonc\xE9\u2019s date of birth is: 9/4/1981</p><p>Obama is Older than Beyonc\xE9!</p><h2 id="grading-criteria" tabindex="-1"><a class="header-anchor" href="#grading-criteria" aria-hidden="true">#</a> Grading Criteria:</h2><p>A. Program Execution (90%)</p><p>Meeting all of the require</p><h2 id="\u7B54\u6848" tabindex="-1"><a class="header-anchor" href="#\u7B54\u6848" aria-hidden="true">#</a> \u7B54\u6848</h2><h3 id="_1-\u6574\u6570\u5206\u5272" tabindex="-1"><a class="header-anchor" href="#_1-\u6574\u6570\u5206\u5272" aria-hidden="true">#</a> 1. \u6574\u6570\u5206\u5272</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HW</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> theunit <span class="token operator">=</span> a <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> decade <span class="token operator">=</span> a <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> decadeplusunit <span class="token operator">=</span> theunit <span class="token operator">+</span> decade<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>decadeplusunit<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u5E74\u6708\u65E5\u5206\u5272" tabindex="-1"><a class="header-anchor" href="#_2-\u5E74\u6708\u65E5\u5206\u5272" aria-hidden="true">#</a> 2. \u5E74\u6708\u65E5\u5206\u5272</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HW</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> birthday <span class="token operator">=</span> <span class="token number">19610804</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> year <span class="token operator">=</span> birthday <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> month <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> day <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7F16\u5199\u6210\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199\u6210\u5BF9\u8C61" aria-hidden="true">#</a> 3. \u7F16\u5199\u6210\u5BF9\u8C61</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HW</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token keyword">int</span> birthday<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> year <span class="token operator">=</span> birthday <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> month <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> day <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> birthday_format <span class="token operator">=</span> month <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> year<span class="token punctuation">;</span>
        <span class="token keyword">return</span> birthday_format<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-main" tabindex="-1"><a class="header-anchor" href="#_4-main" aria-hidden="true">#</a> 4. main</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span> <span class="token comment">// Scanner == java.util.Scanner</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Birthday</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Birthday</span> birthday <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Birthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7C7B\u7684\u5B9E\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        Scanner input = new Scanner(System.in);</span>

        <span class="token comment">// \u83B7\u53D6\u59D3\u540D</span>
<span class="token comment">//        System.out.println(&quot;\u8BF7\u8F93\u5165\u7B2C\u4E00\u4E2A\u59D3\u540D:&quot;);</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7B2C\u4E00\u4E2A\u59D3\u540D:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">String</span> name1 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// String name1 = scanner.nextLine();</span>

        <span class="token comment">// \u83B7\u53D6\u65E5\u671F</span>
<span class="token comment">//        System.out.println(&quot;\u4EE5 8 \u4F4D\u683C\u5F0F\u8F93\u5165&quot; + name1 + &quot;\u7684\u751F\u65E5:(YYYYMMDD):&quot;);</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EE5 8 \u4F4D\u683C\u5F0F\u8F93\u5165&quot;</span> <span class="token operator">+</span> name1 <span class="token operator">+</span> <span class="token string">&quot;\u7684\u751F\u65E5:(YYYYMMDD):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> birthday1 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> birthday1_format <span class="token operator">=</span> birthday<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span>birthday1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7B2C\u4E00\u4E2A\u59D3\u540D:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name2 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EE5 8 \u4F4D\u683C\u5F0F\u8F93\u5165&quot;</span> <span class="token operator">+</span> name2 <span class="token operator">+</span> <span class="token string">&quot;\u7684\u751F\u65E5:(YYYYMMDD):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> birthday2 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> birthday2_format <span class="token operator">=</span> birthday<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span>birthday2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F93\u51FA\u7B2C\u4E00\u4E2A\u4EBA\u7684\u59D3\u540D:&quot;</span> <span class="token operator">+</span> name1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F93\u51FA\u7B2C\u4E8C\u4E2A\u4EBA\u7684\u59D3\u540D:&quot;</span> <span class="token operator">+</span> name2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name1 <span class="token operator">+</span> <span class="token string">&quot;\u7684\u51FA\u751F\u65E5\u671F\u662F:&quot;</span> <span class="token operator">+</span> birthday1_format<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name2 <span class="token operator">+</span> <span class="token string">&quot;\u7684\u51FA\u751F\u65E5\u671F\u662F:&quot;</span> <span class="token operator">+</span> birthday2_format<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>birthday1 <span class="token operator">&lt;</span> birthday2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name1 <span class="token operator">+</span> <span class="token string">&quot;\u6BD4&quot;</span> <span class="token operator">+</span> name2 <span class="token operator">+</span> <span class="token string">&quot;\u8FD8\u8001!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>birthday1 <span class="token operator">==</span> birthday2<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name1 <span class="token operator">+</span> <span class="token string">&quot;\u548C&quot;</span> <span class="token operator">+</span> name2 <span class="token operator">+</span> <span class="token string">&quot;\u662F\u540C\u5E74\u540C\u6708\u540C\u65E5\u751F!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name2 <span class="token operator">+</span> <span class="token string">&quot;\u6BD4&quot;</span> <span class="token operator">+</span> name1 <span class="token operator">+</span> <span class="token string">&quot;\u8FD8\u8001!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token keyword">int</span> birthday<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> year <span class="token operator">=</span> birthday <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> month <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> day <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> birthday_format <span class="token operator">=</span> month <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> year<span class="token punctuation">;</span>
        <span class="token keyword">return</span> birthday_format<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u6807\u51C6\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_5-\u6807\u51C6\u4EE3\u7801" aria-hidden="true">#</a> 5. \u6807\u51C6\u4EE3\u7801</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span> <span class="token comment">// Scanner == java.util.Scanner</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Birthday</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Birthday</span> birthday <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Birthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7C7B\u7684\u5B9E\u4F8B\u5316</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        Scanner input = new Scanner(System.in);</span>

        <span class="token comment">// \u83B7\u53D6\u65E5\u671F</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the birthday in 8-digit format for person&#39;s # 1: (YYYYMMDD):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> birthday1 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> birthday1_format <span class="token operator">=</span> birthday<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span>birthday1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the birthday in 8-digit format for person&#39;s # 2, (YYYYMMDD): &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> birthday2 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> birthday2_format <span class="token operator">=</span> birthday<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span>birthday2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u83B7\u53D6\u59D3\u540D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter name for person #1:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">String</span> name1 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// String name1 = scanner.nextLine();</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Enter name for person #2:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name2 <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name1 <span class="token operator">+</span> <span class="token string">&quot;\\&#39;s date of birth is:&quot;</span> <span class="token operator">+</span> birthday1_format<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name2 <span class="token operator">+</span> <span class="token string">&quot;\\&#39;s date of birth is:&quot;</span> <span class="token operator">+</span> birthday2_format<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        System.out.println(name1 + &quot;\u7684\u51FA\u751F\u65E5\u671F\u662F:&quot; + birthday1_format);</span>
<span class="token comment">//        System.out.println(name2 + &quot;\u7684\u51FA\u751F\u65E5\u671F\u662F:&quot; + birthday2_format);</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>birthday1 <span class="token operator">&lt;</span> birthday2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name1 <span class="token operator">+</span> <span class="token string">&quot; is Older than &quot;</span> <span class="token operator">+</span> name2 <span class="token operator">+</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>birthday1 <span class="token operator">==</span> birthday2<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name1 <span class="token operator">+</span> <span class="token string">&quot;\u548C&quot;</span> <span class="token operator">+</span> name2 <span class="token operator">+</span> <span class="token string">&quot;\u662F\u540C\u5E74\u540C\u6708\u540C\u65E5\u751F!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name2 <span class="token operator">+</span><span class="token string">&quot; is Older than &quot;</span> <span class="token operator">+</span> name1 <span class="token operator">+</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token keyword">int</span> birthday<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> year <span class="token operator">=</span> birthday <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> month <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> day <span class="token operator">=</span> birthday <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> birthday_format <span class="token operator">=</span> month <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> year<span class="token punctuation">;</span>
        <span class="token keyword">return</span> birthday_format<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+t+'" alt="" loading="lazy"></p></details>',38),d={class:"custom-container info"},m=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),v=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),b=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),h={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),g=n("p",null,[n("img",{src:p,alt:"",loading:"lazy"})],-1);function f(q,w){const a=u("ExternalLinkIcon");return o(),c("div",null,[k,n("div",d,[m,v,b,n("p",null,[s("\u65B9\u6CD5\u4E00\uFF1A"),n("a",h,[s("QQ"),i(a)])]),y]),g])}const D=e(r,[["render",f],["__file","02-Part-1-Birth-Date-Application-30-pts.html.vue"]]);export{D as default};
