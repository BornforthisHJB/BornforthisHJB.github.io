import{_ as t}from"./gzh.b03adfd2.js";import{_ as p}from"./zsxq.77f6dc86.js";import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,d as s,b as i,e as l,r as u}from"./app.03abfa58.js";const k={},r=l(`<p>你好，我是悦创。</p><p>在之前的内容中，我们分享了办公自动化的 Excel 写入。</p><p>那现在这个部分呢，就是为了给你更好的练习，我来带你实现：自动生成电话号码并使用 api 验证电话号码有效性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># @Time    : 2022/10/13 19:27</span>
<span class="token comment"># @Author  : AI悦创</span>
<span class="token comment"># @FileName: hw01.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># @Blog    ：https://bornforthis.cn/</span>
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> random<span class="token punctuation">,</span> xlwt


<span class="token comment"># SET_PHONE = set()</span>


<span class="token keyword">def</span> <span class="token function">parse_loop</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>
	template <span class="token operator">=</span> <span class="token string">&quot;{haoduan}{weihao}&quot;</span>
	<span class="token comment"># weihao = random.randrange(10000000, 99999999)</span>
	weihao <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">11111111</span><span class="token punctuation">,</span> <span class="token number">99999999</span><span class="token punctuation">)</span>
	<span class="token comment"># print(weihao)</span>
	<span class="token comment"># global phone_number</span>
	phone_number <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>haoduan<span class="token operator">=</span>value<span class="token punctuation">,</span> weihao<span class="token operator">=</span>weihao<span class="token punctuation">)</span>
	<span class="token comment"># print(key, phone_number)</span>
	<span class="token keyword">return</span> phone_number


<span class="token keyword">def</span> <span class="token function">generate_phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	phone_dict <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;中国联通&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;130&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;131&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;132&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;145&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;155&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;156&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;166&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;175&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;176&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;185&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;186&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;196&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string">&quot;中国电信&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;133&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;149&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;153&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;180&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;181&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;189&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;173&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;177&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;190&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;191&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;193&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;199&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string">&quot;中国移动&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;134&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;135&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;136&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;137&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;138&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;139&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;147&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;150&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;151&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;152&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;157&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;158&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;159&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;172&#39;</span><span class="token punctuation">,</span>
		             <span class="token string">&#39;178&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;182&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;183&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;184&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;187&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;188&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;195&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;197&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;198&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	key <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>phone_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	value <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>phone_dict<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
	phone_number <span class="token operator">=</span> parse_loop<span class="token punctuation">(</span>value<span class="token punctuation">)</span>
	<span class="token comment"># return key, phone_number</span>
	<span class="token keyword">return</span> phone_number


<span class="token comment"># 手机号码归属地查询 Python示例代码</span>
<span class="token keyword">def</span> <span class="token function">jude_phone</span><span class="token punctuation">(</span>phone_number<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	url <span class="token operator">=</span> <span class="token string">&#39;https://hcapi02.api.bdymkt.com/mobile&#39;</span>
	params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	params<span class="token punctuation">[</span><span class="token string">&#39;mobile&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> phone_number

	headers <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/json;charset=UTF-8&#39;</span><span class="token punctuation">,</span>
		<span class="token string">&#39;X-Bce-Signature&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;AppCode/38c548d4357c487185d818ed4da79a1a&#39;</span>
	<span class="token punctuation">}</span>
	r <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
	<span class="token comment"># print(r.json())</span>
	<span class="token keyword">return</span> r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">phone_number_exists</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> json<span class="token punctuation">[</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
		key <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;types&quot;</span><span class="token punctuation">]</span>
		city <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">]</span>
		city_code <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;city_code&quot;</span><span class="token punctuation">]</span>
		prov <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;prov&quot;</span><span class="token punctuation">]</span>
		<span class="token keyword">return</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> city<span class="token punctuation">,</span> city_code<span class="token punctuation">,</span> prov<span class="token punctuation">]</span>
	<span class="token keyword">elif</span> json<span class="token punctuation">[</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">400</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">write_excel</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>
	wb <span class="token operator">=</span> xlwt<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
	sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>add_sheet<span class="token punctuation">(</span><span class="token string">&quot;sheet&quot;</span><span class="token punctuation">)</span>
	head_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;手机号&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;类型&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;城市&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;城市代号&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;省份&quot;</span><span class="token punctuation">]</span>
	<span class="token keyword">for</span> index<span class="token punctuation">,</span> head <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>head_data<span class="token punctuation">)</span><span class="token punctuation">:</span>
		sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> head<span class="token punctuation">)</span>
	<span class="token keyword">for</span> row<span class="token punctuation">,</span> detail_list <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>
		sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> detail_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> detail_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> detail_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> detail_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> detail_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&quot;phone.xls&quot;</span><span class="token punctuation">)</span>



<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
	<span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		result_lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
		phone_number <span class="token operator">=</span> generate_phone<span class="token punctuation">(</span><span class="token punctuation">)</span>
		r_json <span class="token operator">=</span> jude_phone<span class="token punctuation">(</span>phone_number<span class="token punctuation">)</span>
		result_exists <span class="token operator">=</span> phone_number_exists<span class="token punctuation">(</span>r_json<span class="token punctuation">)</span>
		<span class="token keyword">if</span> result_exists<span class="token punctuation">:</span>
			result_lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span>phone_number<span class="token punctuation">)</span>
			result_lst<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>result_exists<span class="token punctuation">)</span>
			r<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result_lst<span class="token punctuation">)</span>
			<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;result_lst:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> result_lst<span class="token punctuation">)</span>
		<span class="token keyword">else</span><span class="token punctuation">:</span>
			<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;continue...&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">continue</span>
	write_excel<span class="token punctuation">(</span>r<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
	main<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># print(generate_phone())</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="`+t+'" alt="" loading="lazy"></p></details>',6),d={class:"custom-container info"},m=n("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),v=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),b=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),g={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"方法二：微信：Jiabcdefh",-1),h=n("p",null,[n("img",{src:p,alt:"",loading:"lazy"})],-1);function y(q,w){const a=u("ExternalLinkIcon");return o(),c("div",null,[r,n("div",d,[m,v,b,n("p",null,[s("方法一："),n("a",g,[s("QQ"),i(a)])]),_]),h])}const E=e(k,[["render",y],["__file","21.html.vue"]]);export{E as default};
