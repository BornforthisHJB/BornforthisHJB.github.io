import{_ as F}from"./gzh-DnOBNg6W.js";import{_ as y}from"./zsxq-BcdwOI-_.js";import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as u,f as t,h as i,g as s,i as a,j as l,r,o as b}from"./app-CNb-rrIi.js";const v={};function m(E,n){const c=r("CodeTabs"),p=r("Tabs");return b(),u("div",null,[n[14]||(n[14]=t(`<h2 id="_1-目录" tabindex="-1"><a class="header-anchor" href="#_1-目录"><span>1. 目录</span></a></h2><ul><li>认识二进制</li><li>数字的基本数据类型</li><li>布尔和字符数据类型</li><li>使用各种基本数据类型</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BigNumber</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> bigNum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 9999999999</span><span style="color:#F8F8F2;">;  </span><span style="color:#88846F;">// 会报错：java: 整数太大</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        long</span><span style="color:#F8F8F2;"> number </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 9999999999L</span><span style="color:#F8F8F2;">;  </span><span style="color:#88846F;">// 解决方法</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的代码，我们引出了几个问题：</p><ul><li>long 是个什么东西？</li><li>L 又是什么东西？</li></ul><p>这就是你要学习本届内容的原因！</p><h2 id="_2-认识二进制" tabindex="-1"><a class="header-anchor" href="#_2-认识二进制"><span>2. 认识二进制</span></a></h2><h3 id="_2-1-十进制" tabindex="-1"><a class="header-anchor" href="#_2-1-十进制"><span>2.1 十进制</span></a></h3><p>每一位可以是 <code>0~9</code>这 10 个值，到 10 进位。一百用十进制表示就是 100，十就是 10。</p><h3 id="_2-2-二进制" tabindex="-1"><a class="header-anchor" href="#_2-2-二进制"><span>2.2 二进制</span></a></h3><p>每一位可以是 0 和 1 这两个值，到 2 进位。一百用二进制表示就是 1100100，十就是 1010。</p><h3 id="_2-3-十六进制" tabindex="-1"><a class="header-anchor" href="#_2-3-十六进制"><span>2.3 十六进制</span></a></h3><p>每一位可以是 <code>0~F</code> 这15个值，到 16 进位。一百用十六进制表示就是 64，十就是 A。</p><h3 id="_2-3-bit-和-byte" tabindex="-1"><a class="header-anchor" href="#_2-3-bit-和-byte"><span>2.3 bit 和 byte</span></a></h3><p>Bit 意为“位”或“比特”，是计算机运算的基础，属于二进制的范畴；</p><p>Byte 意为“字节”，是计算机文件大小的基本计算单位；</p><p><strong>换算</strong></p><p>1 Byte = 8 Bits【1B=8b】</p><p>1 KB = 1024 Bytes</p><p>1 MB = 1024 KB</p><p>1 GB = 1024 MB</p><ul><li>一个二进制的位叫做一个 bit。俗称小 b。宽带中的单位，都是小 b</li><li>八个二进制的位，组成一个 byte，俗称大 B。硬盘等存储的单位，都是大 B</li><li>Byte 是计算机中基本的衡量存储的单位，计算机在对外使用时不会用小 b（bit） 作为划分存储的单位。</li></ul><h2 id="_3-数字的基本数据类型" tabindex="-1"><a class="header-anchor" href="#_3-数字的基本数据类型"><span>3. 数字的基本数据类型</span></a></h2><h3 id="_3-1-整数类型" tabindex="-1"><a class="header-anchor" href="#_3-1-整数类型"><span>3.1 整数类型</span></a></h3><ul><li>byte 占用 1 个 byte，值域是 <code>-128~127</code></li><li>short 占用 2 个 byte，值域是 <code>-32768~32767</code></li><li>int 占用 4 个 byte，值域是 <code>-2147483648~2147483647</code>。Java 中整数缺省是 int 类型 <ul><li>【缺省：默认情况下，没有特殊指明类型下，Java 认为是 int】</li><li>【缺省，即系统默认状态，意思与“默认”相同。】</li><li>【“缺省”最初来源于计算机英文文档中的单词&quot;default&quot;，&quot;default”有很多意思：违约、缺省、拖欠、默认，由于当时计算机方面的翻译水平不高，于是就把这个词直译成了“缺省”，其实应该取它的引申意思“默认”。后来的人们发现，无论怎么解释，缺省好像都说不通，但是由于之前的人们已经习惯了“缺省”这个用法，故依旧延续了这个用法。后来的新一辈的人们觉得说起来很拗口，就使用了&quot;default”的引申意思，所以现在在大多数计算机技术文档或者软件里面，采用的都是意译之后的“默认”这个用法。】</li></ul></li><li>long 占用 8 个 byte，值域是 <code>-9223372036854774808~9223372036854774807</code></li></ul><h3 id="_3-2-浮点-小数-类型" tabindex="-1"><a class="header-anchor" href="#_3-2-浮点-小数-类型"><span>3.2 浮点（小数）类型</span></a></h3><ul><li>float 占用 4 个 byte ，有精度，值域复杂 <code>±340282346638528859811704183484516925440</code></li><li>double 精度是 float 的两倍，占用 8 个 byte。Java 中浮点数缺省是 double 类型。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">FloatCalc</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 3.0</span><span style="color:#F8F8F2;">);  </span></span>
<span class="line"><span style="color:#88846F;">        // 实际来说是无限循环小数，但是对 Java 来说能力有限只能显示/计算范围内的结果</span></span>
<span class="line"><span style="color:#88846F;">        // 也可以说，计算机没有能力把这个无限循环表达出来。在它可能的存储空间里，只能保存到 0.3333333333333333</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-符号位" tabindex="-1"><a class="header-anchor" href="#_3-3-符号位"><span>3.3 符号位</span></a></h3><p>用 byte 来举例子，一个 1 byte = 8 bit；2【二进制】 的 8 次方是 256，而有一个是符号位，所以最后是：128，也就是上面给出的范围。<br> 参考：<a href="https://bornforthis.cn/posts/14.html" target="_blank" rel="noopener noreferrer">https://bornforthis.cn/posts/14.html</a></p><h2 id="_4-布尔和字符数据类型" tabindex="-1"><a class="header-anchor" href="#_4-布尔和字符数据类型"><span>4. 布尔和字符数据类型</span></a></h2><h3 id="_4-1-布尔和字符数据类型" tabindex="-1"><a class="header-anchor" href="#_4-1-布尔和字符数据类型"><span>4.1 布尔和字符数据类型</span></a></h3><ul><li>boolean 占用 4 个 byte，值域是 true,false。</li><li>char 占用 2 个 byte，值域是所有字符（最多 65535 个）</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BooleanAndChar</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> &lt;</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">);  </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">);  </span><span style="color:#88846F;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;ABC&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">);  </span><span style="color:#88846F;">// 只能有一个字符</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-使用各种基本数据类型" tabindex="-1"><a class="header-anchor" href="#_5-使用各种基本数据类型"><span>5. 使用各种基本数据类型</span></a></h2><ul><li>例程</li><li>L 后缀</li><li>感受浮点数精度</li><li>整数缺省是 int 类型，浮点数缺省是 double 类型</li><li>编译错误的定位和修正</li></ul><h2 id="_6-代码实操" tabindex="-1"><a class="header-anchor" href="#_6-代码实操"><span>6. 代码实操</span></a></h2>`,37)),i(c,{id:"225",data:[{id:"代码"},{id:"输出"},{id:"补充"}]},{title0:a(({value:e,isActive:o})=>n[0]||(n[0]=[l("代码")])),title1:a(({value:e,isActive:o})=>n[1]||(n[1]=[l("输出")])),title2:a(({value:e,isActive:o})=>n[2]||(n[2]=[l("补充")])),tab0:a(({value:e,isActive:o})=>n[3]||(n[3]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"PrimaryTypes"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        byte"),s("span",{style:{color:"#F8F8F2"}}," byteVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 99"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        byte byteVar = 128;"),s("span",{style:{color:"#88846F"}},"  // 超出 byte 范围")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(byteVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        short"),s("span",{style:{color:"#F8F8F2"}}," shorVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#AE81FF"}},"30000"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(shorVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," intVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 300000"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(intVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        long"),s("span",{style:{color:"#F8F8F2"}}," longVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 99"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        long bingLongVar = 9999999999;"),s("span",{style:{color:"#88846F"}},"  // 缺省是 int，需要在末尾添加 L")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        long"),s("span",{style:{color:"#F8F8F2"}}," bingLongVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 9999999999L"),s("span",{style:{color:"#F8F8F2"}},";  "),s("span",{style:{color:"#88846F"}},"// 缺省是 int，需要在末尾添加 L")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        long bingLongVar = 9999999999l;"),s("span",{style:{color:"#88846F"}},"  // 不推荐小 l，比如：11111111l,你能发现哪个是 1 哪个是 l 么？")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(bingLongVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        float"),s("span",{style:{color:"#F8F8F2"}}," floatVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100.1f"),s("span",{style:{color:"#F8F8F2"}},"; "),s("span",{style:{color:"#88846F"}},"// 缺省是 double 需要在后面添加 f/F")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        float floatVar = 100.1;"),s("span",{style:{color:"#88846F"}}," // 缺省是 double 需要在后面添加 f/F")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(floatVar);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        /*")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        * 解析：缺省是 double，也就是说浮点数会被自动识别为 double；")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        * 但是你前面的变量被声明为 float 这样就和系统相冲突啦，就需要标明数字类型*/")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," doubleVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100.1"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(doubleVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        boolean"),s("span",{style:{color:"#F8F8F2"}}," condition "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," true"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        boolean"),s("span",{style:{color:"#F8F8F2"}}," fcondition "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," false"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(condition);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," ch "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(ch);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        float"),s("span",{style:{color:"#F8F8F2"}}," floatVar1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100.1111111111f"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"floatVar1:>>>"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," floatVar1);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," dobleVar1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100.1111111111"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"dobleVar1:>>>"'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," dobleVar1);")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:e,isActive:o})=>n[4]||(n[4]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'"C:'),s("span",{style:{color:"#AE81FF"}},"\\P"),s("span",{style:{color:"#E6DB74"}},"rogram Files"),s("span",{style:{color:"#AE81FF"}},"\\J"),s("span",{style:{color:"#E6DB74"}},"ava"),s("span",{style:{color:"#AE81FF"}},"\\j"),s("span",{style:{color:"#E6DB74"}},"dk-11.0.2"),s("span",{style:{color:"#AE81FF"}},"\\b"),s("span",{style:{color:"#E6DB74"}},"in"),s("span",{style:{color:"#AE81FF"}},"\\j"),s("span",{style:{color:"#E6DB74"}},'ava.exe"'),s("span",{style:{color:"#E6DB74"}},' "-javaagent:C:'),s("span",{style:{color:"#AE81FF"}},"\\P"),s("span",{style:{color:"#E6DB74"}},"rogram Files"),s("span",{style:{color:"#AE81FF"}},"\\J"),s("span",{style:{color:"#E6DB74"}},"etBrains"),s("span",{style:{color:"#AE81FF"}},"\\I"),s("span",{style:{color:"#E6DB74"}},"ntelliJ IDEA Community Edition 2022.1.2"),s("span",{style:{color:"#AE81FF"}},"\\l"),s("span",{style:{color:"#E6DB74"}},"ib"),s("span",{style:{color:"#AE81FF"}},"\\i"),s("span",{style:{color:"#E6DB74"}},"dea_rt.jar=49882:C:"),s("span",{style:{color:"#AE81FF"}},"\\P"),s("span",{style:{color:"#E6DB74"}},"rogram Files"),s("span",{style:{color:"#AE81FF"}},"\\J"),s("span",{style:{color:"#E6DB74"}},"etBrains"),s("span",{style:{color:"#AE81FF"}},"\\I"),s("span",{style:{color:"#E6DB74"}},"ntelliJ IDEA Community Edition 2022.1.2"),s("span",{style:{color:"#AE81FF"}},"\\b"),s("span",{style:{color:"#E6DB74"}},'in"'),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}},"Dfile.encoding"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"UTF"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"8"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}},"classpath D"),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}},"\\Java_Coder\\Coder06\\out\\production\\"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Coder06"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," PrimaryTypes")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"99")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"30000")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"300000")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"9999999999")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"100.1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"100.1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"true")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"A")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"floatVar1"),s("span",{style:{color:"#F92672"}},":>>>"),s("span",{style:{color:"#AE81FF"}},"100.111115")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dobleVar1"),s("span",{style:{color:"#F92672"}},":>>>"),s("span",{style:{color:"#AE81FF"}},"100.1111111111")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Process"),s("span",{style:{color:"#F8F8F2"}}," finished with exit code "),s("span",{style:{color:"#AE81FF"}},"0")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:e,isActive:o})=>n[5]||(n[5]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F92672"}}," java.math.BigDecimal"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"PrimaryTypes"),s("span",{style:{color:"#F8F8F2"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        byte"),s("span",{style:{color:"#F8F8F2"}}," byteVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(byteVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        short"),s("span",{style:{color:"#F8F8F2"}}," shortVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 30000"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(shortVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," intVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1000000000"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(intVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        long"),s("span",{style:{color:"#F8F8F2"}}," longVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 80000000000L"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(longVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        float"),s("span",{style:{color:"#F8F8F2"}}," floatVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100.0000000666F"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(floatVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        double"),s("span",{style:{color:"#F8F8F2"}}," doubleVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100.0000000666"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(doubleVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        boolean"),s("span",{style:{color:"#F8F8F2"}}," booleanVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," true"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(booleanVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        char"),s("span",{style:{color:"#F8F8F2"}}," charVar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'a'"),s("span",{style:{color:"#F8F8F2"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(charVar);")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[15]||(n[15]=s("h2",{id:"_7-技巧",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_7-技巧"},[s("span",null,"7. 技巧")])],-1)),n[16]||(n[16]=s("ul",null,[s("li",null,[l("IDE 快速输入："),s("code",null,'System._out_.println("");'),l("输入："),s("strong",null,"sout")])],-1)),n[17]||(n[17]=s("h2",{id:"_8-学员提问",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_8-学员提问"},[s("span",null,"8. 学员提问")])],-1)),i(p,{id:"249",data:[{id:"Q1"},{id:"Q2"},{id:"Q3"},{id:"Q4"}]},{title0:a(({value:e,isActive:o})=>n[6]||(n[6]=[l("Q1")])),title1:a(({value:e,isActive:o})=>n[7]||(n[7]=[l("Q2")])),title2:a(({value:e,isActive:o})=>n[8]||(n[8]=[l("Q3")])),title3:a(({value:e,isActive:o})=>n[9]||(n[9]=[l("Q4")])),tab0:a(({value:e,isActive:o})=>n[10]||(n[10]=[s("p",null,"为什么 byte 和 short 后面不用加字母呢？我的理解是下面的，不知道对不对。 数字的默认类型是 int， byte 被包含在 int 里面吗？所以 long 的值在被包含在 int 的值中时可以不加 L，但是超出必须要加的。 long 的值在 int 类型中时，也是占用 8bit 的内存吗？ java 编译器会对这种类型有优化吗？",-1),s("hr",null,null,-1),s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"作者回复:"),s("p",null,[s("strong",null,"为什么 byte 和 short 后面不用加字母呢?"),l(" 是的, 编译器可以检查 byte 和 short 的值阈, 如果超出会报错。比如 "),s("code",null,"byte b = 999;"),l(" 这个更多的是 Java 编译器从易用性做的一种简化。如果每次给 byte 和 short 赋值，都要标明一下类型，会很繁琐。"),s("br"),l(" 后面的问题... 其实不存在 long 的值包含在 int 里面, 比如 "),s("code",null,"long abc = 999;"),l(' 这个过程其实是一种 Java的自动类型转换，低精度的数字可以赋值给高精度的数字。这部分内容在"基本数据类型的更多语法点"有讲述.')])],-1)])),tab1:a(({value:e,isActive:o})=>n[11]||(n[11]=[s("p",null,[l("老师，大的整数是因为超过了默认的整数类型 int 的范围，所以要加个 L 表示 long 的数据类型，比如："),s("br"),l(" long v1 = 99; //正确"),s("br"),l(" long v2 = 9999999999999L; //正确"),s("br"),l(" 小的浮点数并没有超过默认的浮点数类型 double，为什么末尾要加 f 表示 float 数据类型呢，比如："),s("br"),l(" float f1 = 1.1; //报错"),s("br"),l(" float f1 = 1.1f; //正确")],-1),s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"作者回复:"),s("p",null,[l("Java 中的整数默认最多是 int 类型，比如 9，8，99999999，最多是 int 类型。再想向上，就要加个 L 后缀，就代表是 long 类型。"),s("br"),l(" 而浮点数默认是 double 类型，比如1.1，所以如果要给 float 赋值，要加个后缀 f 代表是 float 而不是double。")])],-1)])),tab2:a(({value:e,isActive:o})=>n[12]||(n[12]=[s("p",null,"关于 char 类型，理解其表示所有值域内的任意一个字符，但文稿中后半句“值域是所有字符（最多65535个）”是什么意思？",-1),s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"作者回复:"),s("p",null,"这个是从两个方面理解，首先是从 char 的本意。char 的本意是要表示一个字符，只要是计算机里有的字符，char 都能表示。 最多 6 万多个，是从 char 的存储层面理解。char 是两个 byte 组成的，所以最多也就只能表示 6 万多个数字，也就是最多只能表示六万多个字符。当然我们也不用担心这个事情，六万多个是足够我们用了的。")],-1)])),tab3:a(({value:e,isActive:o})=>n[13]||(n[13]=[s("p",null,"老师你好，java 中有这么多数据类型（byte、short、int、float、double），而且都是从小到大包含的，后面写程序的时候所有的数字类型的数据都统一用 double 是不是可以，这样做有什么劣势？盼复，谢谢~",-1),s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"作者回复:"),s("p",null,[l("double 的问题在于无法精确的比较。而且有些场景可能会出现精度问题，比如本来应该是 3，结果double 变成了 2.9999999999 这都是有可能的。"),s("br"),l(" 由此造成的问题就是，要比较两个 double 的值很繁琐，要用两个 double 的数字相减，然后看差值的绝对值是不是小于一个对于业务足够可以忽略。"),s("br"),l(" 比如对于表示钱的两个 double 数字，差的绝对值如果小于 0.001，也就是一厘，那就可以认为是相等的。 如果业务上是整数，尽量用 int 或者 long。比如表示手机的个数，汽车的个数等。")])],-1)])),_:1}),n[18]||(n[18]=t('<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',4))])}const D=d(v,[["render",m],["__file","06.html.vue"]]),B=JSON.parse('{"path":"/Java/chapter01/06.html","title":"06-Java 中的基本数据类型","lang":"zh-CN","frontmatter":{"title":"06-Java 中的基本数据类型","date":"2023-01-08T22:52:23.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课"],"tag":["Java体系课"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"footer":"长期招收编程一对一学员！微信：Jiabcdefh, <a href=\\"https://beian.miit.gov.cn/\\" target=\\"_blank\\">闽ICP备19021486号-6</a>","feed":false,"seo":false,"head":[]},"git":{"createdTime":1732028288000,"updatedTime":1732028288000,"contributors":[{"name":"AndersonHJB","username":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1,"url":"https://github.com/AndersonHJB"}]},"readingTime":{"minutes":8.54,"words":2563},"filePathRelative":"Java/chapter01/06.md","localizedDate":"2023年1月8日","copyright":{"author":"AI悦创"}}');export{D as comp,B as data};
