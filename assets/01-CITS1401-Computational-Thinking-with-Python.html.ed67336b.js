import{_ as s}from"./gzh.aa7caba6.js";import{_ as o}from"./zsxq.96f46dfd.js";import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as a,c as r,a as e,b as l,e as p,d as t,r as h}from"./app.31c4911c.js";var d="/assets/image-20220908192014220.7d39c0fe.png",c="/assets/image-20220908192104211.d76cd8fa.png",u="/assets/image-20220908182040558.967a00b6.png";const m={},f=p('<h1 id="project-1-semester-2-2022" tabindex="-1"><a class="header-anchor" href="#project-1-semester-2-2022" aria-hidden="true">#</a> Project 1 Semester 2 2022</h1><h2 id="project-1" tabindex="-1"><a class="header-anchor" href="#project-1" aria-hidden="true">#</a> Project 1:</h2><h2 id="submission-deadlines" tabindex="-1"><a class="header-anchor" href="#submission-deadlines" aria-hidden="true">#</a> Submission deadlines:</h2><p><strong>5:00 pm, Friday 16th September, 2022</strong></p><p>Value: <strong>15%</strong> of CITS1401.</p><p><em>To be completed individually.</em></p><p>You should construct a Python 3 program containing your solution to the following problem and submit</p><p>your program electronically on Moodle. The name of the file containing your code should be your student</p><p>ID e.g. 12345678.py. No other method of submission is allowed. Your program will be automatically run on</p><p>Moodle for sample test cases provided in the project sheet if you click the \u201Ccheck\u201D link. However, your</p><p>submission will be tested thoroughly for grading purposes after the due date. Remember you need to</p><p>submit the program as a single file and copy-paste the same program in the provided text box. You have</p><p>only one attempt to submit so don\u2019t submit if you are not satisfied with your attempt. All open submissions</p><p>at the time of the deadline will be automatically submitted. There is no way in the system to open the</p><p>closed submission and reverse your submission.</p><p>You are expected to have read and understood the University&#39;s guidelines on academic conduct. In</p><p>accordance with this policy, you may discuss with other students the general principles required to</p><p>understand this project, but the work you submit must be the result of your own effort. Plagiarism</p><p>detection, and other systems for detecting potential malpractice, will therefore be used. Besides, if what</p><p>you submit is not your own work then you will have learnt little and will therefore, likely, fail the finalexam.</p><p>You must submit your project before the deadline listed above. Following UWA policy, a late penalty of 5%</p><p>will be deducted for each day (or part day), after the deadline, that the assignment is submitted. No</p><p>submissions will be allowed after 7 days following the deadline except approved special consideration</p><p>cases.</p><hr><p><strong>Overview</strong></p><p>Face recognition (FR) is one the most widely known and used non-intrusive biometric which helps in</p><p>identifying people. Given the identity of a known person, the goal of an FR system is to recognize the same</p><p>person in a different scenario, for example while displaying a different expression. You can read this paper</p><p>to understand more about FR under different expressions</p><p>Your task is to help the researchers in analysing eight geodesic (surface) and eight 3D Euclidian distances</p><p>between a few facial landmarks across four expressions <strong>&#39;Neutral&#39;, &#39;Angry&#39;, &#39;Disgust&#39;, &#39;Happy&#39;</strong>. These</p><p>distances on one face (in Neutral expression) can then be used to calculate similarity with the same face in</p><p>different expressions or with other faces in the data set to see which faces are closer to (or look like) the</p><p>reference face. Table 1 provides the details of each landmark while Figure 1 shows their location on the</p><p>face. Table-2 gives you the details of the distances which will be used.</p><p>The attached csv (comma separated values) file has the eight geodesic and 3D Euclidian distances for the</p><p>four expressions mentioned above for each person. For the sake of simplicity, the <strong>Distance</strong> numbers are</p><p>given instead of their names. For example, <em>Inner-canthal width</em> is distance number 1 and Lower jaw width</p><p>is distance number 8. Yourtask istowrite a programwhich fulfills the following requirements.</p><p><strong>Table 1</strong> : Details of the Facial landmarks</p><p><img src="'+d+'" alt="image-20220908192014220"></p><p><img src="'+c+'" alt="image-20220908192104211"></p><p><strong>Requirements (i.e. what your program should do)</strong></p><p><strong>Input:</strong></p><p>Your program must define the function <strong>main</strong> with the following syntax:</p><p>def main(csvfile, adultID, Option):</p><p>The input arguments to this function are:</p><ul><li>csvfile: The name oftheCSVfilecontaining the data of individuals which needs to be analysed.</li></ul><table><thead><tr><th>Adult ID</th><th>Expression</th><th>Distance</th><th>GDis</th><th>LDis</th></tr></thead><tbody><tr><td>E001</td><td>Neutral</td><td>1</td><td>48.44795743</td><td>32.13047933</td></tr></tbody></table><p>The first row of the CSV file contains the headers \u201CAdult ID\u201D, \u201CExpression\u201D, \u201CDistance\u201D, \u201CGDis\u201D and</p><p>\u201CLDis\u201D. From the second row, the first value of each row contains the de-identified adult ID, the</p><p>expression displayed by the face, distance number (refer to Table-2), the geodesic distance and</p><p>the 3D Euclidean distance. We do not have prior knowledge about the number of subjects we</p><p>have to analyse (i.e. the number of rows) that the CSV file contains. Adult ID and Expression are</p><p>strings, Distance is an integer while the remaining values are floats.</p><ul><li><p>adultID: The ID number of the adult we have to analyse. Remember that the ID is a string and</p><p>is case sensitive.</p></li><li><p>Option: The input argument that decides the type of analysis required. It can take only one of</p><p>the two string inputs: \u201Cstats\u201D or \u201CFR\u201D. Ifthe third input argument is \u201Cstats\u201D, then the objective</p><p>of the program is to carry out some statistical analysis of the adult whose ID is given in the second</p><p>argument. Otherwise, if the third input argument is \u201CFR\u201D then the objective is to perform face</p><p>recognition by calculating the cosine similarity between the reference ID and other subjects.</p></li></ul><p><strong>Output:</strong></p><p>The function is required to return the following outputs in the order provided below:</p><p>When the third input argument is <em>\u201Cstats\u201D</em> then for the adult given in the input argument \u201CadultID\u201D</p><ol><li><p><strong>OP1</strong>- A list of lists containing the minimum (non-zero) and maximum GDis and LDis of each distance</p><p>across the four expressions. For example, the minimum (non-zero) intercanthal width (geodesic and 3D</p><p>Euclidean) in Neutral, Angry, Disgust and Happy expressions. There will be 8 lists inside the main list</p><p>and each list will have four elements in the following order : [minimum GDis, maximum GDis, minimum</p><p>LDis, maximum LDis]. The distances must be in the same order as given in Table-2.</p></li><li><p><strong>OP2</strong>- A list of lists containing the difference between the geodesic and 3D Euclidean distances for each</p><p>expression. There will be 4 lists inside the main list and each list will have eight elements.</p></li><li><p><strong>OP3</strong>- A list containing the <strong>average</strong> geodesic distance of the eight distances across the four expressions.</p><p>This list will have 8 elements.</p></li><li><p><strong>OP4</strong>- A list containing the <strong>standard deviation</strong> of the 3D Euclidean distance of the eight distances across</p><p>the four expressions. This list will have 8 elements. The formula to calculate standard deviation is</p><p>provided at the end of this project sheet.</p></li></ol><p>When the third input argument is \u201CFR\u201D:</p><p>You will calculate the cosine similarity between the geodesic distances of the neutral expression of</p><p>reference adultID and the geodesic distances of the remaining expressions of the same ID as well as the</p><p>neutral expressions of the remaining subjects in the dataset. Your output will be:</p><ol><li>The ID of the person with which the reference face has the maximum cosine similarity, and</li><li>The maximum cosine similarity value. The formula to calculate cosine similarity is provided at the end of this project sheet.</li></ol><p><img src="'+u+'" alt="image-20220908182040558"></p><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="'+s+'" alt=""></p></details>',69),g={class:"custom-container info"},b=e("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),w=e("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),y=e("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),v=t("\u65B9\u6CD5\u4E00\uFF1A"),_={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},x=t("QQ"),D=e("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),T=e("p",null,[e("img",{src:o,alt:""})],-1);function I(k,j){const i=h("ExternalLinkIcon");return a(),r("div",null,[f,e("div",g,[b,w,y,e("p",null,[v,e("a",_,[x,l(i)])]),D]),T])}var C=n(m,[["render",I],["__file","01-CITS1401-Computational-Thinking-with-Python.html.vue"]]);export{C as default};
