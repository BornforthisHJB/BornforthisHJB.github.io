import{_ as s}from"./gzh.1edf1a02.js";import{_ as n}from"./zsxq.e43ad827.js";import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as r,a as t,d as a,b as i,e as c,r as l}from"./app.8bf6e1e2.js";const d="/assets/liuchengtu.ae4caaf4.jpg",h={},m=c(`<p>写爬虫，是一个非常考验综合实力的活儿。有时候，你轻而易举地就抓取到了想要的数据；有时候，你费尽心思却毫无所获。</p><p>好多 Python 爬虫的入门教程都是一行代码就把你骗上了“贼船”，等上了贼船才发现，水好深～</p><p>比如爬取一个网页可以是很简单的一行代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://news.baidu.com&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>非常的简单，但它的作用也仅仅是<strong>爬取一个网页</strong>，而一个有用的爬虫远远不止于<strong>爬取一个网页</strong>。</p><p>一个有用的爬虫，只需两个词来衡量：</p><ul><li>数量：能否抓全所有该类数据</li><li>效率：抓完所有数据需要多久一天还是一个月</li></ul><p>但要做到这两个词，却是要下很多功夫。自己下功夫是一方面，也很重要的是你要抓全的目标网站给你出了多少难题。综合起来，就写一个爬虫有多少难度。</p><h2 id="网络爬虫难度一-只需爬取-html-网页但要上规模" tabindex="-1"><a class="header-anchor" href="#网络爬虫难度一-只需爬取-html-网页但要上规模" aria-hidden="true">#</a> 网络爬虫难度一：只需爬取 html 网页但要上规模</h2><p>这里我们举个新闻爬虫的例子。大家都用过百度的新闻搜索吧，我就拿它的爬虫来讲讲实现上的难度。</p><p>新闻网站基本上不设防，新闻内容都在网页的 html 代码里了，抓全一个网页基本上就是一行的事情。似乎听上去很简单，但对于一个搜索引擎级的爬虫，就不那么简单了，要把几千几万家新闻网站的新闻都及时抓取到也不是一件容易的事情。</p><p>我们先看看新闻爬虫的简单流程图：</p><p><img src="`+d+'" alt="网络爬虫简单流程图" loading="lazy"></p><p>从一些种子网页开始，种子网页往往是一些新闻网站的首页，爬虫抓取网页，从中提取网站URL放到网址池再进行抓取。这样就从几个网页开始，不断扩展到其它网页。爬虫抓取的网页也越来越多，提取出的新网网址也会成几何级数增长。</p><p><strong>如何能在最短时间抓取更多网址？</strong></p><p>这就是其中一个难度，这不是目标网址带来的，而是对我们自身自愿的考验：</p><ul><li>我们的带宽够吗</li><li>我们的服务器够吗，单台不够就要分布式</li></ul><p><strong>如何能及时抓取到最新的新闻？</strong></p><p>这是效率之外的另一个难度，如何保证及时性？几千家新闻网站，时刻都在发布最新新闻，爬虫在织网式抓取“旧”新闻的同时，如何兼顾获取“新”新闻呢？</p><p><strong>如何存储抓取到的海量新闻？</strong></p><p>爬虫织网式的爬取，会把每个网站几年前几十年前的新闻网页都给翻出来，从而获得海量的网页需要存储。就是存储上的难度。</p><p><strong>如何清理提取网内容？</strong></p><p>从新闻网页的 html 里面快速、准确提取想要的信息数据，比如标题、发布时间、正文内容等，这又带来内容提取上的难度。</p><h2 id="网络爬虫难度二-需要登录才能抓到想要的数据" tabindex="-1"><a class="header-anchor" href="#网络爬虫难度二-需要登录才能抓到想要的数据" aria-hidden="true">#</a> 网络爬虫难度二：需要登录才能抓到想要的数据</h2><p>人是贪婪的，想要的数据无穷尽，但是很多数据不是你轻易就可以获得的。有一大类数据就是需要账户登录后才能看到，也就是说，爬虫请求时必须是登录状态才能抓取数据。</p><p><strong>如何获取登录状态？</strong></p><p>老猿前面已经说过了，http 协议的性质决定了登录状态就是一些 cookies，那么如何获得登录状态就是一个非常有难度的问题。</p><p>有些网站登录过程很简单，把账户、密码发给服务器，服务器验证通过返回表示已登录的 cookies。这样的网站，比较容易实现自动登录，爬虫运行过程全程无需人工干预，你就有更多时间喝茶、聊天、上 AI悦创看 python。</p><p><strong>如何处理验证码?</strong></p><p>然而，网站们既然要求你登录了，他们就不会这么轻易放过你，要做的更绝才能让小猿们善罢甘休，那就是上验证码！</p><p>没错，就是变态的验证码！！作为见多识广的老猿，我还是经常识别不出验证码，惭愧惭愧。</p><p>据说，有人雇了一批大妈，进行人工识别验证码；也有，通过图像处理技术，尤其如今火热的深度学习、人工智能的技术，来自动识别验证码。</p><p>那么，当你写爬虫时遇到验证码该怎么办？</p><h2 id="网络爬虫难度三-ajax-异步加载甚至-javascript-解密" tabindex="-1"><a class="header-anchor" href="#网络爬虫难度三-ajax-异步加载甚至-javascript-解密" aria-hidden="true">#</a> 网络爬虫难度三：ajax 异步加载甚至 JavaScript 解密</h2><p>前面的两个难度，都是靠我们研究数据加载过程，然后用 Python 代码可以重现出来，进行抓取的。</p><p>而遇到达第三个难度时，研究数据加载过程会让你十分痛苦、近乎崩溃。异步加载流程和服务器来来回回好多次，最后得到的数据还要通过 JavaScript 解密才能看到，这都是压垮小猿们的最后一根稻草。</p><p>有没有什么终极大招可以呢？</p><p>以上，老猿总结了多年写爬虫的应验，得出这三个爬虫的难度等级，后面老猿将结合实际示例来讲解如何这些不同程度的难题。</p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="custom-container details"><summary>公众号：AI悦创【二维码】</summary><p><img src="'+s+'" alt="" loading="lazy"></p></details>',40),u={class:"custom-container info"},_=t("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),g=t("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发、Web全栈、Linux」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),f=t("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),v={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},x=t("p",null,"方法二：微信：Jiabcdefh",-1),y=t("p",null,[t("img",{src:n,alt:"",loading:"lazy"})],-1);function b(k,j){const e=l("ExternalLinkIcon");return o(),r("div",null,[m,t("div",u,[_,g,f,t("p",null,[a("方法一："),t("a",v,[a("QQ"),i(e)])]),x]),y])}const P=p(h,[["render",b],["__file","three-state-of-crawler.html.vue"]]);export{P as default};
