import{_ as n}from"./gzh-DnOBNg6W.js";import{_ as l}from"./zsxq-BcdwOI-_.js";import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as o,o as p}from"./app-BV12lJx3.js";const t={};function r(c,s){return p(),e("div",null,s[0]||(s[0]=[o(`<p>你好，我是悦创。</p><p>预祝你考试顺利！此内容为提供的速查笔记📒。</p><h2 id="_1-字符串" tabindex="-1"><a class="header-anchor" href="#_1-字符串"><span>1. 字符串</span></a></h2><h3 id="_1-1-input-获取用户输入" tabindex="-1"><a class="header-anchor" href="#_1-1-input-获取用户输入"><span>1.1 input 获取用户输入</span></a></h3><p><code>input()</code> 是一个内置函数，用于从用户获取输入。</p><hr><h4 id="_1-1-1-基本用法" tabindex="-1"><a class="header-anchor" href="#_1-1-1-基本用法"><span>1.1.1 基本用法</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你的名字: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你好, </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">!&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>功能</strong>：<code>input()</code> 会等待用户输入内容，直到按下 Enter 键。</li><li><strong>返回值</strong>：返回用户输入的内容，数据类型是字符串 (<code>str</code>)。</li></ul><h4 id="_1-1-2-特点" tabindex="-1"><a class="header-anchor" href="#_1-1-2-特点"><span>1.1.2 特点</span></a></h4><ol><li><p><strong>输入的默认类型是字符串</strong>： 无论用户输入的内容是数字、文字还是其它形式，<code>input()</code> 返回的内容始终是字符串。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">age </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你的年龄: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(age))  </span><span style="color:#88846F;"># 输出 &lt;class &#39;str&#39;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>如果需要整数或浮点数，可以显式转换类型：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">age </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你的年龄: &quot;</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;"># 转为整数</span></span>
<span class="line"><span style="color:#F8F8F2;">height </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你的身高: &quot;</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;"># 转为浮点数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>显示提示信息</strong>： <code>input()</code> 的参数是提示用户输入的信息。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">city </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你所在的城市: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你在 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">city</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">。&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>提示信息会直接显示在终端，提供直观的输入引导。</li></ul></li><li><p><strong>阻塞式操作</strong>： 在用户按下 Enter 之前，程序会暂停执行后续代码。</p></li><li><p><strong>适合简单交互</strong>： <code>input()</code> 常用于轻量交互式脚本中，例如需要用户提供配置或回答问题。</p></li></ol><h4 id="_1-1-3-示例-多个输入" tabindex="-1"><a class="header-anchor" href="#_1-1-3-示例-多个输入"><span>1.1.3 示例：多个输入</span></a></h4><ul><li><p>获取多个值可以用多个 <code>input()</code>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你的名字: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">age </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你的年龄: &quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你的名字是 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">，年龄是 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 岁。&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>或者使用 <code>split()</code> 获取一行输入的多个值：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">name, age </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入你的名字和年龄 (用空格分隔): &quot;</span><span style="color:#F8F8F2;">).split()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;名字: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, 年龄: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_1-1-4-常见场景" tabindex="-1"><a class="header-anchor" href="#_1-1-4-常见场景"><span>1.1.4 常见场景</span></a></h4><ol><li><p><strong>密码输入（简单示例）</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">password </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入密码: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> password </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;12345&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;密码正确&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;密码错误&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>用户选项交互</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">choice </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请选择功能 (1: 登录, 2: 注册, 3: 退出): &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;1&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;登录功能&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">elif</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;2&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;注册功能&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">elif</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;3&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;退出程序&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;无效选项&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="_1-1-5-总结" tabindex="-1"><a class="header-anchor" href="#_1-1-5-总结"><span>1.1.5 总结</span></a></h4><ol><li>默认返回字符串，需要类型转换时需手动处理。</li><li>输入验证和异常处理可以提高程序的健壮性。</li></ol><h3 id="_1-2-字符串的常用内置函数表" tabindex="-1"><a class="header-anchor" href="#_1-2-字符串的常用内置函数表"><span>1.2 字符串的常用内置函数表</span></a></h3><p>以下是 Python 字符串常用的内置函数的表格，包括函数名、说明和代码示例：</p><table><thead><tr><th><strong>函数名</strong></th><th><strong>说明</strong></th><th><strong>代码示例</strong></th></tr></thead><tbody><tr><td><code>str.lower()</code></td><td>将字符串转换为小写字母。</td><td><code>print(&quot;Hello World!&quot;.lower())</code> ➡️ <code>hello world!</code></td></tr><tr><td><code>str.upper()</code></td><td>将字符串转换为大写字母。</td><td><code>print(&quot;Hello World!&quot;.upper())</code> ➡️ <code>HELLO WORLD!</code></td></tr><tr><td><code>str.capitalize()</code></td><td>将字符串的首字母转换为大写，其他字母小写。</td><td><code>print(&quot;hello world!&quot;.capitalize())</code> ➡️ <code>Hello world!</code></td></tr><tr><td><code>str.title()</code></td><td>将字符串的每个单词的首字母大写。</td><td><code>print(&quot;hello world!&quot;.title())</code> ➡️ <code>Hello World!</code></td></tr><tr><td><code>str.strip()</code></td><td>去掉字符串首尾的空格或指定字符。</td><td><code>print(&quot; hello &quot;.strip())</code> ➡️ <code>hello</code></td></tr><tr><td><code>str.lstrip()</code></td><td>去掉字符串左边的空格或指定字符。</td><td><code>print(&quot; hello &quot;.lstrip())</code> ➡️ <code>hello </code></td></tr><tr><td><code>str.rstrip()</code></td><td>去掉字符串右边的空格或指定字符。</td><td><code>print(&quot; hello &quot;.rstrip())</code> ➡️ <code> hello</code></td></tr><tr><td><code>str.replace()</code></td><td>替换字符串中的子字符串。</td><td><code>print(&quot;hello world&quot;.replace(&quot;world&quot;, &quot;Python&quot;))</code> ➡️ <code>hello Python</code></td></tr><tr><td><code>str.split()</code></td><td>按指定分隔符拆分字符串，返回列表。</td><td><code>print(&quot;a,b,c&quot;.split(&quot;,&quot;))</code> ➡️ <code>[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</code></td></tr><tr><td><code>str.join()</code></td><td>用指定字符串连接列表中的元素。</td><td><code>print(&quot;-&quot;.join([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]))</code> ➡️ <code>a-b-c</code></td></tr><tr><td><code>str.find()</code></td><td>返回子字符串首次出现的索引，找不到返回 -1。</td><td><code>print(&quot;hello world&quot;.find(&quot;world&quot;))</code> ➡️ <code>6</code></td></tr><tr><td><code>str.index()</code></td><td>返回子字符串首次出现的索引，找不到抛出异常。</td><td><code>print(&quot;hello world&quot;.index(&quot;world&quot;))</code> ➡️ <code>6</code></td></tr><tr><td><code>str.startswith()</code></td><td>检查字符串是否以指定前缀开头，返回布尔值。</td><td><code>print(&quot;hello world&quot;.startswith(&quot;hello&quot;))</code> ➡️ <code>True</code></td></tr><tr><td><code>str.endswith()</code></td><td>检查字符串是否以指定后缀结尾，返回布尔值。</td><td><code>print(&quot;hello world&quot;.endswith(&quot;world&quot;))</code> ➡️ <code>True</code></td></tr><tr><td><code>str.isalpha()</code></td><td>检查字符串是否全是字母，返回布尔值。</td><td><code>print(&quot;hello&quot;.isalpha())</code> ➡️ <code>True</code></td></tr><tr><td><code>str.isdigit()</code></td><td>检查字符串是否全是数字，返回布尔值。</td><td><code>print(&quot;123&quot;.isdigit())</code> ➡️ <code>True</code></td></tr><tr><td><code>str.isalnum()</code></td><td>检查字符串是否全是字母或数字，返回布尔值。</td><td><code>print(&quot;hello123&quot;.isalnum())</code> ➡️ <code>True</code></td></tr><tr><td><code>str.isspace()</code></td><td>检查字符串是否全是空白字符，返回布尔值。</td><td><code>print(&quot; &quot;.isspace())</code> ➡️ <code>True</code></td></tr><tr><td><code>str.zfill()</code></td><td>在字符串左侧填充零，达到指定宽度。</td><td><code>print(&quot;42&quot;.zfill(5))</code> ➡️ <code>00042</code></td></tr><tr><td><code>str.format()</code></td><td>使用格式化字符串填充变量值。</td><td><code>print(&quot;Hello, {}&quot;.format(&quot;World&quot;))</code> ➡️ <code>Hello, World</code></td></tr><tr><td><code>str.count()</code></td><td>返回子字符串在字符串中出现的次数。</td><td><code>print(&quot;hello world&quot;.count(&quot;o&quot;))</code> ➡️ <code>2</code></td></tr></tbody></table><h2 id="_2-列表" tabindex="-1"><a class="header-anchor" href="#_2-列表"><span>2. 列表</span></a></h2><h3 id="_2-0-列表的基本操作" tabindex="-1"><a class="header-anchor" href="#_2-0-列表的基本操作"><span>2.0 列表的基本操作</span></a></h3><h4 id="_2-0-1-列表的元素提取" tabindex="-1"><a class="header-anchor" href="#_2-0-1-列表的元素提取"><span>2.0.1 列表的元素提取</span></a></h4><ol><li><p>提取单个元素</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#88846F;"># 数字 1 的下标是 0</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)  </span><span style="color:#88846F;"># 输出：1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>提取连续的数据</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;watermelon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;plum&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)  </span><span style="color:#88846F;"># 输出：[&#39;banana&#39;, &#39;watermelon&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>提取不连续的数据</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;watermelon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;plum&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)  </span><span style="color:#88846F;"># 输出：[&#39;apple&#39;, &#39;watermelon&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>列表元素倒过来</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;watermelon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;plum&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[::</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)  </span><span style="color:#88846F;"># 输出：[&#39;plum&#39;, &#39;watermelon&#39;, &#39;banana&#39;, &#39;apple&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_2-1-添加元素" tabindex="-1"><a class="header-anchor" href="#_2-1-添加元素"><span>2.1 添加元素</span></a></h3><h4 id="_2-1-1-append" tabindex="-1"><a class="header-anchor" href="#_2-1-1-append"><span>2.1.1 <code>.append()</code></span></a></h4><ul><li><p><strong>功能</strong>: 在列表末尾添加单个元素。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.append(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># [1, 2, 3, 4]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-1-2-extend" tabindex="-1"><a class="header-anchor" href="#_2-1-2-extend"><span>2.1.2 <code>.extend()</code></span></a></h4><ul><li><p><strong>功能</strong>: 在列表末尾添加另一个可迭代对象中的所有元素。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.extend([</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># [1, 2, 3, 4, 5]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-1-3-insert" tabindex="-1"><a class="header-anchor" href="#_2-1-3-insert"><span>2.1.3 <code>.insert()</code></span></a></h4><ul><li><p><strong>功能</strong>: 在指定位置插入一个元素。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.insert(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># [1, &#39;a&#39;, 2, 3]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-2-删除元素" tabindex="-1"><a class="header-anchor" href="#_2-2-删除元素"><span>2.2 删除元素</span></a></h3><h4 id="_2-2-1-remove" tabindex="-1"><a class="header-anchor" href="#_2-2-1-remove"><span>2.2.1 <code>.remove()</code></span></a></h4><ul><li><p><strong>功能</strong>: 删除列表中第一个匹配的指定值。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.remove(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># [1, 3, 2]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-2-2-pop" tabindex="-1"><a class="header-anchor" href="#_2-2-2-pop"><span>2.2.2 <code>.pop()</code></span></a></h4><ul><li><p><strong>功能</strong>: 删除指定索引位置的元素，并返回该元素。若不指定索引，默认删除最后一个元素。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">last_item </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst.pop()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(last_item)  </span><span style="color:#88846F;"># 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)        </span><span style="color:#88846F;"># [1, 2]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-2-3-clear" tabindex="-1"><a class="header-anchor" href="#_2-2-3-clear"><span>2.2.3 <code>clear()</code></span></a></h4><ul><li><p><strong>功能</strong>: 清空列表。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.clear()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># []</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-3-查找元素" tabindex="-1"><a class="header-anchor" href="#_2-3-查找元素"><span>2.3 查找元素</span></a></h3><h4 id="_2-3-1-index" tabindex="-1"><a class="header-anchor" href="#_2-3-1-index"><span>2.3.1 <code>.index()</code></span></a></h4><ul><li><p><strong>功能</strong>: 返回第一个匹配值的索引位置。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">idx </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst.index(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(idx)  </span><span style="color:#88846F;"># 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-3-2-count" tabindex="-1"><a class="header-anchor" href="#_2-3-2-count"><span>2.3.2 <code>.count()</code></span></a></h4><ul><li><p><strong>功能</strong>: 统计列表中某个元素出现的次数。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">count </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst.count(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(count)  </span><span style="color:#88846F;"># 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-4-修改列表顺序" tabindex="-1"><a class="header-anchor" href="#_2-4-修改列表顺序"><span>2.4 修改列表顺序</span></a></h3><h4 id="_2-4-1-reverse" tabindex="-1"><a class="header-anchor" href="#_2-4-1-reverse"><span>2.4.1 <code>.reverse()</code></span></a></h4><ul><li><p><strong>功能</strong>: 原地反转列表。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.reverse()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># [3, 2, 1]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-4-2-sort" tabindex="-1"><a class="header-anchor" href="#_2-4-2-sort"><span>2.4.2 <code>.sort()</code></span></a></h4><ul><li><p><strong>功能</strong>: 对列表进行排序（升序）。可通过参数实现降序或自定义排序。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.sort()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># [1, 2, 3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">lst.sort(</span><span style="color:#FD971F;font-style:italic;">reverse</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)  </span><span style="color:#88846F;"># [3, 2, 1]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-5-复制列表-copy" tabindex="-1"><a class="header-anchor" href="#_2-5-复制列表-copy"><span>2.5 复制列表 <code>copy()</code></span></a></h3><ul><li><p><strong>功能</strong>: 返回列表的浅拷贝。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">new_lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst.copy()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_lst)  </span><span style="color:#88846F;"># [1, 2, 3]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-6-获取列表长度-len" tabindex="-1"><a class="header-anchor" href="#_2-6-获取列表长度-len"><span>2.6 获取列表长度 <code>.len()</code></span></a></h3><ul><li><p><strong>功能</strong>: 返回列表的长度。</p></li><li><p>用法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(lst))  </span><span style="color:#88846F;"># 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-7-示例综合应用" tabindex="-1"><a class="header-anchor" href="#_2-7-示例综合应用"><span>2.7 示例综合应用</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" data-title="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 添加操作</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.append(</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.extend([</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.insert(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 删除操作</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.remove(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">popped </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst.pop(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 查找操作</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst.index(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst.count(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 排序与反转</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.sort()</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.reverse()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 长度与复制</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(lst))</span></span>
<span class="line"><span style="color:#F8F8F2;">new_lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst.copy()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 打印结果</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_lst)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发、Web、Linux」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',57)]))}const u=a(t,[["render",r],["__file","yufa.html.vue"]]),h=JSON.parse('{"path":"/1v1/96-Four-dimensional/yufa.html","title":"Python 语法速查「考试辅助」","lang":"zh-CN","frontmatter":{"title":"Python 语法速查「考试辅助」","date":"2024-11-24T19:42:04.000Z","author":"AI悦创","isOriginal":true,"icon":"blog","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"watermark":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 字符串","slug":"_1-字符串","link":"#_1-字符串","children":[{"level":3,"title":"1.1 input 获取用户输入","slug":"_1-1-input-获取用户输入","link":"#_1-1-input-获取用户输入","children":[{"level":4,"title":"1.1.1 基本用法","slug":"_1-1-1-基本用法","link":"#_1-1-1-基本用法","children":[]},{"level":4,"title":"1.1.2 特点","slug":"_1-1-2-特点","link":"#_1-1-2-特点","children":[]},{"level":4,"title":"1.1.3 示例：多个输入","slug":"_1-1-3-示例-多个输入","link":"#_1-1-3-示例-多个输入","children":[]},{"level":4,"title":"1.1.4 常见场景","slug":"_1-1-4-常见场景","link":"#_1-1-4-常见场景","children":[]},{"level":4,"title":"1.1.5 总结","slug":"_1-1-5-总结","link":"#_1-1-5-总结","children":[]}]},{"level":3,"title":"1.2 字符串的常用内置函数表","slug":"_1-2-字符串的常用内置函数表","link":"#_1-2-字符串的常用内置函数表","children":[]}]},{"level":2,"title":"2. 列表","slug":"_2-列表","link":"#_2-列表","children":[{"level":3,"title":"2.0 列表的基本操作","slug":"_2-0-列表的基本操作","link":"#_2-0-列表的基本操作","children":[{"level":4,"title":"2.0.1 列表的元素提取","slug":"_2-0-1-列表的元素提取","link":"#_2-0-1-列表的元素提取","children":[]}]},{"level":3,"title":"2.1 添加元素","slug":"_2-1-添加元素","link":"#_2-1-添加元素","children":[{"level":4,"title":"2.1.1 .append()","slug":"_2-1-1-append","link":"#_2-1-1-append","children":[]},{"level":4,"title":"2.1.2 .extend()","slug":"_2-1-2-extend","link":"#_2-1-2-extend","children":[]},{"level":4,"title":"2.1.3 .insert()","slug":"_2-1-3-insert","link":"#_2-1-3-insert","children":[]}]},{"level":3,"title":"2.2 删除元素","slug":"_2-2-删除元素","link":"#_2-2-删除元素","children":[{"level":4,"title":"2.2.1 .remove()","slug":"_2-2-1-remove","link":"#_2-2-1-remove","children":[]},{"level":4,"title":"2.2.2 .pop()","slug":"_2-2-2-pop","link":"#_2-2-2-pop","children":[]},{"level":4,"title":"2.2.3 clear()","slug":"_2-2-3-clear","link":"#_2-2-3-clear","children":[]}]},{"level":3,"title":"2.3 查找元素","slug":"_2-3-查找元素","link":"#_2-3-查找元素","children":[{"level":4,"title":"2.3.1 .index()","slug":"_2-3-1-index","link":"#_2-3-1-index","children":[]},{"level":4,"title":"2.3.2 .count()","slug":"_2-3-2-count","link":"#_2-3-2-count","children":[]}]},{"level":3,"title":"2.4 修改列表顺序","slug":"_2-4-修改列表顺序","link":"#_2-4-修改列表顺序","children":[{"level":4,"title":"2.4.1 .reverse()","slug":"_2-4-1-reverse","link":"#_2-4-1-reverse","children":[]},{"level":4,"title":"2.4.2 .sort()","slug":"_2-4-2-sort","link":"#_2-4-2-sort","children":[]}]},{"level":3,"title":"2.5 复制列表 copy()","slug":"_2-5-复制列表-copy","link":"#_2-5-复制列表-copy","children":[]},{"level":3,"title":"2.6 获取列表长度 .len()","slug":"_2-6-获取列表长度-len","link":"#_2-6-获取列表长度-len","children":[]},{"level":3,"title":"2.7 示例综合应用","slug":"_2-7-示例综合应用","link":"#_2-7-示例综合应用","children":[]}]}],"git":{"createdTime":1732451239000,"updatedTime":1732458761000,"contributors":[{"name":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":5}]},"readingTime":{"minutes":6.49,"words":1947},"filePathRelative":"1v1/96-Four-dimensional/yufa.md","localizedDate":"2024年11月24日","copyright":{"author":"AI悦创"}}');export{u as comp,h as data};
