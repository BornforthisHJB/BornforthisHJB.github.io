import{_ as l}from"./gzh.b03adfd2.js";import{_ as o}from"./zsxq.77f6dc86.js";import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c,a as t,d as n,b as s,e as a,r}from"./app.f5a9c24b.js";const d={},u=a(`<p>你好，我是悦创。在跑模型的时候，我们有时需要计算模型运行时间，此时我们需要获取到模型开始运行的时间以及模型结束运行的时间，以二者的差值作为模型的总运行时间。在 Python 语言中，我们可以使用以下两种常用的方式获取当前时间。</p><p>我们来开始学习吧！</p><p>Python 程序能用很多方式处理日期和时间，转换日期格式是一个常见的功能。</p><p>Python 提供了一个 time 和 calendar 模块可以用于格式化日期和时间。当然还有 datetime 模块。</p><p>时间间隔是以秒为单位的浮点小数。</p><p>每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示。</p><h2 id="_1、使用-time-模块" tabindex="-1"><a class="header-anchor" href="#_1、使用-time-模块" aria-hidden="true">#</a> 1、使用 time 模块</h2><p>Python 的 time 模块下有很多函数可以转换常见日期格式。如函数 <code>time.time()</code> 用于获取当前时间戳， 如下实例：</p><p>代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time  <span class="token comment"># 引入time模块</span>
<span class="token comment"># 打印时间戳</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间戳为:&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 打印自从 1970 年 1 月 1 日午夜（历元）经过了多长时间，以秒为单位</span>
<span class="token comment"># 打印本地时间</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 打印本地时间</span>
<span class="token comment"># 打印格式化时间</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 打印按指定格式排版的时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1597915314.907726</span>
time<span class="token punctuation">.</span>struct_time<span class="token punctuation">(</span>tm_year<span class="token operator">=</span><span class="token number">2020</span><span class="token punctuation">,</span> tm_mon<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> tm_mday<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> tm_hour<span class="token operator">=</span><span class="token number">17</span><span class="token punctuation">,</span> tm_min<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">,</span> tm_sec<span class="token operator">=</span><span class="token number">54</span><span class="token punctuation">,</span> tm_wday<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> tm_yday<span class="token operator">=</span><span class="token number">233</span><span class="token punctuation">,</span> tm_isdst<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token number">2020</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">20</span> <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">:</span><span class="token number">54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>时间戳单位最适于做日期运算。但是1970年之前的日期就无法以此表示了。太遥远的日期也不行，UNIX 和 Windows 只支持到 2038 年。</p><h2 id="_2、使用-datetime-模块" tabindex="-1"><a class="header-anchor" href="#_2、使用-datetime-模块" aria-hidden="true">#</a> 2、使用 datetime 模块</h2><p>代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> datetime
 
<span class="token comment"># 打印当前时间</span>
time1 <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time1<span class="token punctuation">)</span>
<span class="token comment"># 打印按指定格式排版的时间</span>
time2 <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">2020</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">20</span> <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">27</span><span class="token punctuation">:</span><span class="token number">59.363265</span>
<span class="token number">2020</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">20</span> <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">27</span><span class="token punctuation">:</span><span class="token number">59</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="什么是时间元组" tabindex="-1"><a class="header-anchor" href="#什么是时间元组" aria-hidden="true">#</a> 什么是时间元组？</h2><p>很多 Python 函数用一个元组装起来的9组数字处理时间：</p><table><thead><tr><th style="text-align:left;">序号</th><th style="text-align:left;">字段</th><th style="text-align:left;">值</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;">4位数年</td><td style="text-align:left;">2008</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">月</td><td style="text-align:left;">1 到 12</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">日</td><td style="text-align:left;">1到31</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">小时</td><td style="text-align:left;">0到23</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;">分钟</td><td style="text-align:left;">0到59</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;">秒</td><td style="text-align:left;">0到61 (60或61 是闰秒)</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;">一周的第几日</td><td style="text-align:left;">0到6 (0是周一)</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;">一年的第几日</td><td style="text-align:left;">1到366 (儒略历)</td></tr><tr><td style="text-align:left;">8</td><td style="text-align:left;">夏令时</td><td style="text-align:left;">-1, 0, 1, -1是决定是否为夏令时的旗帜</td></tr></tbody></table><p>上述也就是struct_time元组。这种结构具有如下属性：</p><table><thead><tr><th style="text-align:left;">序号</th><th style="text-align:left;">属性</th><th style="text-align:left;">值</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;">tm_year</td><td style="text-align:left;">2008</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">tm_mon</td><td style="text-align:left;">1 到 12</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">tm_mday</td><td style="text-align:left;">1 到 31</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">tm_hour</td><td style="text-align:left;">0 到 23</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;">tm_min</td><td style="text-align:left;">0 到 59</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;">tm_sec</td><td style="text-align:left;">0 到 61 (60或61 是闰秒)</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;">tm_wday</td><td style="text-align:left;">0到6 (0是周一)</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;">tm_yday</td><td style="text-align:left;">1 到 366(儒略历)</td></tr><tr><td style="text-align:left;">8</td><td style="text-align:left;">tm_isdst</td><td style="text-align:left;">-1, 0, 1, -1是决定是否为夏令时的旗帜</td></tr></tbody></table><h2 id="_3-获取格式化的时间" tabindex="-1"><a class="header-anchor" href="#_3-获取格式化的时间" aria-hidden="true">#</a> 3. 获取格式化的时间</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
 
localtime <span class="token operator">=</span> time<span class="token punctuation">.</span>asctime<span class="token punctuation">(</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;本地时间为 :&quot;</span><span class="token punctuation">,</span> localtime<span class="token punctuation">)</span>
<span class="token comment"># 本地时间为 : Sat Jul  2 22:16:15 2022</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-格式化日期" tabindex="-1"><a class="header-anchor" href="#_4-格式化日期" aria-hidden="true">#</a> 4. 格式化日期</h2><p>我们可以使用 time 模块的 strftime 方法来格式化日期，：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token punctuation">[</span><span class="token punctuation">,</span> t<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实例演示：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
 
<span class="token comment"># 格式化成2016-03-20 11:45:39形式</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 
<span class="token comment"># 格式化成Sat Mar 28 22:24:24 2016形式</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%a %b %d %H:%M:%S %Y&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  
<span class="token comment"># 将格式字符串转换为时间戳</span>
a <span class="token operator">=</span> <span class="token string">&quot;Sat Mar 28 22:24:24 2016&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">&quot;%a %b %d %H:%M:%S %Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 输出</span>
<span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">02</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">17</span>
Sat Jul <span class="token number">02</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">17</span> <span class="token number">2022</span>
<span class="token number">1459175064.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python 中时间日期格式化符号：</p><ul><li><code>%y</code>： 两位数的年份表示（<code>00-99</code>）</li><li><code>%Y</code>： 四位数的年份表示（<code>000-9999</code>）</li><li><code>%m</code>： 月份（<code>01-12</code>）</li><li><code>%d</code>： 月内中的一天（<code>0-31</code>）</li><li><code>%H</code>： 24小时制小时数（<code>0-23</code>）</li><li><code>%I</code>： 12小时制小时数（<code>01-12</code>）</li><li><code>%M</code>： 分钟数（<code>00-59</code>）</li><li><code>%S</code>： 秒（<code>00-59</code>）</li><li><code>%a</code>： 本地简化星期名称</li><li><code>%A</code>： 本地完整星期名称</li><li><code>%b</code>： 本地简化的月份名称</li><li><code>%B</code>： 本地完整的月份名称</li><li><code>%c</code>： 本地相应的日期表示和时间表示</li><li><code>%j</code>： 年内的一天（<code>001-366</code>）</li><li><code>%p</code>： 本地 <code>A.M.</code> 或 <code>P.M.</code> 的等价符</li><li><code>%U</code>： 一年中的星期数（<code>00-53</code>）星期天为星期的开始</li><li><code>%w</code>： 星期（<code>0-6</code>），星期天为星期的开始</li><li><code>%W</code>： 一年中的星期数（<code>00-53</code>）星期一为星期的开始</li><li><code>%x</code>： 本地相应的日期表示</li><li><code>%X</code>： 本地相应的时间表示</li><li><code>%Z</code>： 当前时区的名称</li><li><code>%%</code>： % 号本身</li></ul><h2 id="_5-获取某月日历" tabindex="-1"><a class="header-anchor" href="#_5-获取某月日历" aria-hidden="true">#</a> 5. 获取某月日历</h2><p>Calendar 模块有很广泛的方法用来处理年历和月历，例如打印某月的月历：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> calendar
 
cal <span class="token operator">=</span> calendar<span class="token punctuation">.</span>month<span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;以下输出2022年7月份的日历:&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>cal<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上实例输出结果：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>以下输出<span class="token number">2022</span>年<span class="token number">7</span>月份的日历<span class="token punctuation">:</span>
     July <span class="token number">2022</span>
Mo Tu We Th Fr Sa Su
             <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>
 <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span>
<span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span>
<span class="token number">18</span> <span class="token number">19</span> <span class="token number">20</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span>
<span class="token number">25</span> <span class="token number">26</span> <span class="token number">27</span> <span class="token number">28</span> <span class="token number">29</span> <span class="token number">30</span> <span class="token number">31</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-time-模块" tabindex="-1"><a class="header-anchor" href="#_6-time-模块" aria-hidden="true">#</a> 6. Time 模块</h2><p>Time 模块包含了以下内置函数，既有时间处理的，也有转换时间格式的：</p>`,39),m=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"序号"),t("th",{style:{"text-align":"left"}},"函数及描述")])],-1),k=t("td",{style:{"text-align":"left"}},"1",-1),h={style:{"text-align":"left"}},g={href:"https://www.runoob.com/python/att-time-altzone.html",target:"_blank",rel:"noopener noreferrer"},y=t("td",{style:{"text-align":"left"}},"2",-1),b={style:{"text-align":"left"}},f={href:"https://www.runoob.com/python/att-time-asctime.html",target:"_blank",rel:"noopener noreferrer"},_=t("td",{style:{"text-align":"left"}},"3",-1),v={style:{"text-align":"left"}},x={href:"https://www.runoob.com/python/att-time-clock.html",target:"_blank",rel:"noopener noreferrer"},w=t("td",{style:{"text-align":"left"}},"4",-1),q={style:{"text-align":"left"}},S={href:"https://www.runoob.com/python/att-time-ctime.html",target:"_blank",rel:"noopener noreferrer"},z=t("td",{style:{"text-align":"left"}},"5",-1),M={style:{"text-align":"left"}},P={href:"https://www.runoob.com/python/att-time-gmtime.html",target:"_blank",rel:"noopener noreferrer"},T=t("td",{style:{"text-align":"left"}},"6",-1),Y={style:{"text-align":"left"}},I={href:"https://www.runoob.com/python/att-time-localtime.html",target:"_blank",rel:"noopener noreferrer"},C=t("td",{style:{"text-align":"left"}},"7",-1),H={style:{"text-align":"left"}},A={href:"https://www.runoob.com/python/att-time-mktime.html",target:"_blank",rel:"noopener noreferrer"},J=t("td",{style:{"text-align":"left"}},"8",-1),N={style:{"text-align":"left"}},B={href:"https://www.runoob.com/python/att-time-sleep.html",target:"_blank",rel:"noopener noreferrer"},Q=t("td",{style:{"text-align":"left"}},"9",-1),V={style:{"text-align":"left"}},W={href:"https://www.runoob.com/python/att-time-strftime.html",target:"_blank",rel:"noopener noreferrer"},E=t("td",{style:{"text-align":"left"}},"10",-1),F={style:{"text-align":"left"}},U={href:"https://www.runoob.com/python/att-time-strptime.html",target:"_blank",rel:"noopener noreferrer"},j=t("td",{style:{"text-align":"left"}},"11",-1),L={style:{"text-align":"left"}},X={href:"https://www.runoob.com/python/att-time-time.html",target:"_blank",rel:"noopener noreferrer"},Z=t("td",{style:{"text-align":"left"}},"12",-1),D={style:{"text-align":"left"}},G={href:"https://www.runoob.com/python/att-time-tzset.html",target:"_blank",rel:"noopener noreferrer"},K=a('<p>Time 模块包含了以下 2 个非常重要的属性：</p><table><thead><tr><th style="text-align:left;">序号</th><th style="text-align:left;">属性及描述</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><strong>time.timezone</strong> 属性 time.timezone 是当地时区（未启动夏令时）距离格林威治的偏移秒数（&gt;0，美洲&lt;=0大部分欧洲，亚洲，非洲）。</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><strong>time.tzname</strong> 属性time.tzname包含一对根据情况的不同而不同的字符串，分别是带夏令时的本地时区名称，和不带的。</td></tr></tbody></table><h2 id="_7-日历-calendar-模块" tabindex="-1"><a class="header-anchor" href="#_7-日历-calendar-模块" aria-hidden="true">#</a> 7. 日历（Calendar）模块</h2><p>此模块的函数都是日历相关的，例如打印某月的字符月历。</p><p>星期一是默认的每周第一天，星期天是默认的最后一天。更改设置需调用 <code>calendar.setfirstweekday()</code> 函数。模块包含了以下内置函数：</p><table><thead><tr><th style="text-align:left;">序号</th><th style="text-align:left;">函数及描述</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><strong>calendar.calendar(year, w=2, l=1, c=6)</strong> <br>返回一个多行字符串格式的 year 年年历，3 个月一行，间隔距离为 c。 每日宽度间隔为 w 字符。每行长度为 <code>21* W+18+2* C</code> 。l 是每星期行数。</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><strong>calendar.firstweekday( )</strong> <br>返回当前每周起始日期的设置。默认情况下，首次载入 calendar 模块时返回 0，即星期一。</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><strong>calendar.isleap(year)</strong> 是闰年返回 True，否则为 False。<br><code>&gt;&gt;&gt; import calendar</code><br><code> &gt;&gt;&gt; print(calendar.isleap(2000)) True</code><br><code> &gt;&gt;&gt; print(calendar.isleap(1900)) False</code><br></td></tr><tr><td style="text-align:left;">04</td><td style="text-align:left;"><strong>calendar.leapdays(y1,y2)</strong><br>返回在Y1，Y2两年之间的闰年总数。</td></tr><tr><td style="text-align:left;">05</td><td style="text-align:left;"><strong>calendar.month(year,month,w=2,l=1)</strong><br>返回一个多行字符串格式的 year 年 month 月日历，两行标题，一周一行。每日宽度间隔为w字符。每行的长度为 <code>7* w+6</code>。l是每星期的行数。</td></tr><tr><td style="text-align:left;">06</td><td style="text-align:left;"><strong>calendar.monthcalendar(year,month)</strong><br>返回一个整数的单层嵌套列表。每个子列表装载代表一个星期的整数。Year年month月外的日期都设为0;范围内的日子都由该月第几日表示，从1开始。</td></tr><tr><td style="text-align:left;">07</td><td style="text-align:left;"><strong>calendar.monthrange(year,month)</strong><br>返回两个整数。第一个是该月的星期几的日期码，第二个是该月的日期码。日从0（星期一）到6（星期日）;月从1到12。</td></tr><tr><td style="text-align:left;">08</td><td style="text-align:left;"><strong>calendar.prcal(year,w=2,l=1,c=6)</strong><br>相当于 <strong>print calendar.calendar(year,w=2,l=1,c=6)</strong>。</td></tr><tr><td style="text-align:left;">09</td><td style="text-align:left;"><strong>calendar.prmonth(year,month,w=2,l=1)</strong><br>相当于 <strong>print calendar.month(year,month,w=2,l=1)</strong> 。</td></tr><tr><td style="text-align:left;">10</td><td style="text-align:left;">**calendar.setfirstweekday(weekday) ** <br>设置每周的起始日期码。0（星期一）到6（星期日）。</td></tr><tr><td style="text-align:left;">11</td><td style="text-align:left;"><strong>calendar.timegm(tupletime)</strong><br>和 <code> time.gmtime</code> 相反：接受一个时间元组形式，返回该时刻的时间戳（1970纪元后经过的浮点秒数）。</td></tr><tr><td style="text-align:left;">12</td><td style="text-align:left;"><strong>calendar.weekday(year,month,day)</strong><br>返回给定日期的日期码。0（星期一）到6（星期日）。月份为 1（一月） 到 12（12月）。</td></tr></tbody></table><h2 id="_8-其他相关模块和函数" tabindex="-1"><a class="header-anchor" href="#_8-其他相关模块和函数" aria-hidden="true">#</a> 8. 其他相关模块和函数</h2><p>在 Python 中，其他处理日期和时间的模块还有：</p>',8),O={href:"http://docs.python.org/library/datetime.html#module-datetime",target:"_blank",rel:"noopener noreferrer"},R={href:"http://www.twinsun.com/tz/tz-link.htm",target:"_blank",rel:"noopener noreferrer"},$={href:"http://labix.org/python-dateutil",target:"_blank",rel:"noopener noreferrer"},tt=t("p",null,"欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！",-1),nt=t("details",{class:"custom-container details"},[t("summary",null,"公众号：AI悦创【二维码】"),t("p",null,[t("img",{src:l,alt:"",loading:"lazy"})])],-1),et={class:"custom-container info"},st=t("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),at=t("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),lt=t("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),ot={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},pt=t("p",null,"方法二：微信：Jiabcdefh",-1),it=t("p",null,[t("img",{src:o,alt:"",loading:"lazy"})],-1);function ct(rt,dt){const e=r("ExternalLinkIcon");return i(),c("div",null,[u,t("table",null,[m,t("tbody",null,[t("tr",null,[k,t("td",h,[t("a",g,[n("time.altzone"),s(e)]),n(" 返回格林威治西部的夏令时地区的偏移秒数。如果该地区在格林威治东部会返回负值（如西欧，包括英国）。对夏令时启用地区才能使用。")])]),t("tr",null,[y,t("td",b,[n("[time.asctime("),t("a",f,[n("tupletime])"),s(e)]),n(' 接受时间元组并返回一个可读的形式为"Tue Dec 11 18:07:14 2008"（2008年12月11日 周二18时07分14秒）的24个字符的字符串。')])]),t("tr",null,[_,t("td",v,[t("a",x,[n("time.clock( )"),s(e)]),n(" 用以浮点数计算的秒数返回当前的CPU时间。用来衡量不同程序的耗时，比time.time()更有用。")])]),t("tr",null,[w,t("td",q,[n("[time.ctime("),t("a",S,[n("secs])"),s(e)]),n(" 作用相当于 asctime(localtime(secs))，未给参数相当于asctime()")])]),t("tr",null,[z,t("td",M,[n("[time.gmtime("),t("a",P,[n("secs])"),s(e)]),n(" 接收时间戳（1970纪元后经过的浮点秒数）并返回格林威治天文时间下的时间元组t。注：t.tm_isdst始终为0")])]),t("tr",null,[T,t("td",Y,[n("[time.localtime("),t("a",I,[n("secs])"),s(e)]),n(" 接收时间戳（1970纪元后经过的浮点秒数）并返回当地时间下的时间元组t（t.tm_isdst可取0或1，取决于当地当时是不是夏令时）。")])]),t("tr",null,[C,t("td",H,[t("a",A,[n("time.mktime(tupletime)"),s(e)]),n(" 接受时间元组并返回时间戳（1970纪元后经过的浮点秒数）。")])]),t("tr",null,[J,t("td",N,[t("a",B,[n("time.sleep(secs)"),s(e)]),n(" 推迟调用线程的运行，secs指秒数。")])]),t("tr",null,[Q,t("td",V,[n("[time.strftime(fmt"),t("a",W,[n(",tupletime])"),s(e)]),n(" 接收以时间元组，并返回以可读字符串表示的当地时间，格式由fmt决定。")])]),t("tr",null,[E,t("td",F,[t("a",U,[n("time.strptime(str,fmt='%a %b %d %H:%M:%S %Y')"),s(e)]),n(" 根据fmt的格式把一个时间字符串解析为时间元组。")])]),t("tr",null,[j,t("td",L,[t("a",X,[n("time.time( )"),s(e)]),n(" 返回当前时间的时间戳（1970纪元后经过的浮点秒数）。")])]),t("tr",null,[Z,t("td",D,[t("a",G,[n("time.tzset()"),s(e)]),n(" 根据环境变量TZ重新初始化时间相关设置。")])])])]),K,t("ul",null,[t("li",null,[t("a",O,[n("datetime模块"),s(e)])]),t("li",null,[t("a",R,[n("pytz模块"),s(e)])]),t("li",null,[t("a",$,[n("dateutil模块"),s(e)])])]),tt,nt,t("div",et,[st,at,lt,t("p",null,[n("方法一："),t("a",ot,[n("QQ"),s(e)])]),pt]),it])}const gt=p(d,[["render",ct],["__file","25.html.vue"]]);export{gt as default};
