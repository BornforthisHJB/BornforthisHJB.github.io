import{_ as i}from"./gzh-DnOBNg6W.js";import{_ as r}from"./zsxq-BcdwOI-_.js";import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as F,a as p,d as y,e as a,r as d,o as u,f as n,b as s}from"./app-um9io4Dp.js";const v={};function m(b,l){const t=d("Tabs");return u(),F("div",null,[l[16]||(l[16]=p(`<h2 id="_0-目录" tabindex="-1"><a class="header-anchor" href="#_0-目录"><span>0. 目录</span></a></h2><ul><li>语数外物化生的成绩怎么表示？</li><li>什么是数组和数组的语法</li><li>用数组处理 6 门课的成绩</li></ul><h2 id="_1-语数外物化生的成绩怎么表示" tabindex="-1"><a class="header-anchor" href="#_1-语数外物化生的成绩怎么表示"><span>1. 语数外物化生的成绩怎么表示？</span></a></h2><ul><li>用六个变量表示，如果有更多的科目怎么办？</li><li>如果有更多的科目怎么办？</li><li>如果想求出成绩最高的科目怎么办？</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">SevenScore</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 声明六个变量， 分别代表六门科目的成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> YuWen </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShuXue </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WaiYu </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WuLi </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> HuaXue </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShengWu </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-什么是数组和数组的语法" tabindex="-1"><a class="header-anchor" href="#_2-什么是数组和数组的语法"><span>2. 什么是数组和数组的语法</span></a></h2><h3 id="_2-1-数组的特点是" tabindex="-1"><a class="header-anchor" href="#_2-1-数组的特点是"><span>2.1 数组的特点是：</span></a></h3><ul><li>数组是相同类型的变量的集合，所有元素的类型都一样</li><li>可以指定数组包含的元素个数，最多为 int 的最大值个「我们要创建数组的时候，数组的类型<strong>大小</strong>，必须是 int」</li><li>元素有固定的顺序</li><li>每个元素都有一个固定的编号，称之为索引（index），从 0 开始递增，类型为 int</li><li>可以像操作变量一样读写数组中的任何一个元素</li><li>如果说之前的变量是一张有名字的纸，可以通过这个名字读写这个变量；数组则是一个有名字的本子。本子有一个名字，每页纸有一个页码。可以通过本子的名字和页码读写对应的数组元素</li></ul><h3 id="_2-2-创建和使用一个数组的语法" tabindex="-1"><a class="header-anchor" href="#_2-2-创建和使用一个数组的语法"><span>2.2 创建和使用一个数组的语法</span></a></h3><p><code>数组元素类型[] 变量名 = new 数组元素类型[数组长度]</code></p><p><code>变量名[索引]</code> 可以使用这个变量，可以读取也可以给它赋值</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CreateArray</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;">[] intArray </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">];  </span><span style="color:#88846F;">// new 创建、创造</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(intArray[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;">[] doubleArray </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> double</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(doubleArray[</span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 添加数据</span></span>
<span class="line"><span style="color:#F8F8F2;">        intArray[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        intArray[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        intArray[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(intArray[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(intArray.length);  </span><span style="color:#88846F;">// 获取数组长度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>在我们没有给数组中的元素赋值「添加数据」，那数组内的数据类型，都是数组类型的缺省值。对于数字类型，它的缺省值是：0。</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">array_type</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;">[] intArray </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(intArray[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        short</span><span style="color:#F8F8F2;">[] shortArray </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> short</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(shortArray[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;">[] doubleArray </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> double</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(doubleArray[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;">[] StringArray </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> String</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">StringArray</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_3-用数组处理-6-门课的成绩" tabindex="-1"><a class="header-anchor" href="#_3-用数组处理-6-门课的成绩"><span>3. 用数组处理 6 门课的成绩</span></a></h2><h3 id="_3-1-创建数组来表示-6-门课的成绩" tabindex="-1"><a class="header-anchor" href="#_3-1-创建数组来表示-6-门课的成绩"><span>3.1 创建数组来表示 6 门课的成绩</span></a></h3><ul><li>创建一个大小为 6 的 double 类型的数组</li><li>创建一个大小为 6 的 String 数组，代表每门课的名字</li><li>为每门课创建一个 int 变量，值为这门课的成绩对应的数组的索引，以便操作每门课的成绩和名字</li></ul><h3 id="_3-2-求出最高的成绩" tabindex="-1"><a class="header-anchor" href="#_3-2-求出最高的成绩"><span>3.2 求出最高的成绩</span></a></h3><ul><li>创建一个大小为 6 的 double 类型的数组</li><li>创建一个大小为 6 的 String 数组，保存每门课的成绩</li><li>为每门课创建一个 int 变量，值为这门课的成绩对应的数组的索引，以便操作每门课的成绩</li><li>实现计算最高成绩的逻辑</li></ul><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ScoreArrayMaxScore</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 声明六个变量， 分别代表六门科目的成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> YuWenIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShuXueIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WaiYuIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WuLiIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> HuaXueIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 4</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShengWuIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 每门课的名字</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;">[] names </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> String</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[YuWenIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;语文&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[ShuXueIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;数学&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[WaiYuIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;外语&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[WuLiIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;物理&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[HuaXueIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;化学&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[ShengWuIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;生物&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 每门课的成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;">[] scores </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> double</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 用随机数给成绩赋值</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            scores[i] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 80</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">random</span><span style="color:#F8F8F2;">() </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 计算最高成绩和最高成绩对应的科目的索引</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;"> maxScore </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> maxScoreIndex </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(names[i] </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;的成绩为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> scores[i]);</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (maxScore </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> scores[i]) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScore </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> scores[i];</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScoreIndex </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> i;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 输出最高成绩科目和成绩</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;最高分的科目为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> names[maxScoreIndex] </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;，成绩为：&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> maxScore);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>那上面寻找最高分是有缺陷的，因为有可能多个科目和最高分是相同的。这个时候可以再写一个循环，找出和最大值相等的就可以。然后把找到的输出出来。——快试一试哦。</strong></p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.ArrayList</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ScoreArrayMaxScore</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 声明六个变量， 分别代表六门科目的成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> YuWenIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShuXueIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WaiYuIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WuLiIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> HuaXueIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 4</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShengWuIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 每门课的名字</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;">[] names </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> String</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[YuWenIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;语文&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[ShuXueIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;数学&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[WaiYuIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;外语&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[WuLiIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;物理&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[HuaXueIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;化学&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[ShengWuIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;生物&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 每门课的成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;">[] scores </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> double</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 用随机数给成绩赋值</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            scores[i] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 80</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">random</span><span style="color:#F8F8F2;">() </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 计算最高成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;"> maxScore </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(names[i] </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;的成绩为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> scores[i]);</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (maxScore </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> scores[i]) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScore </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> scores[i];</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 找到所有与最高成绩相同的科目</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        ArrayList</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; maxScoreSubjects </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (scores[i] </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> maxScore) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScoreSubjects.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(names[i]);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 输出最高成绩科目和成绩</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;最高分为：&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> maxScore);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;取得最高分的科目有：&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> maxScoreSubjects);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_4-java-数组常见的创建方式" tabindex="-1"><a class="header-anchor" href="#_4-java-数组常见的创建方式"><span>4. Java 数组常见的创建方式</span></a></h2>`,23)),y(t,{id:"149",data:[{id:"1. 声明后创建（最常见）"},{id:"2. 声明并创建（合并形式）"},{id:"3. 声明、创建并初始化"},{id:"4. 匿名数组"},{id:"5. 多维数组"},{id:"6. 使用 <code v-pre>Arrays</code> 工具类创建或填充"},{id:"7. 结合类型的特殊情况"},{id:"总结"}]},{title0:a(({value:e,isActive:o})=>l[0]||(l[0]=[n("1. 声明后创建（最常见）")])),title1:a(({value:e,isActive:o})=>l[1]||(l[1]=[n("2. 声明并创建（合并形式）")])),title2:a(({value:e,isActive:o})=>l[2]||(l[2]=[n("3. 声明、创建并初始化")])),title3:a(({value:e,isActive:o})=>l[3]||(l[3]=[n("4. 匿名数组")])),title4:a(({value:e,isActive:o})=>l[4]||(l[4]=[n("5. 多维数组")])),title5:a(({value:e,isActive:o})=>l[5]||(l[5]=[n("6. 使用 "),s("code",null,"Arrays",-1),n(" 工具类创建或填充")])),title6:a(({value:e,isActive:o})=>l[6]||(l[6]=[n("7. 结合类型的特殊情况")])),title7:a(({value:e,isActive:o})=>l[7]||(l[7]=[n("总结")])),tab0:a(({value:e,isActive:o})=>l[8]||(l[8]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] arr;                "),s("span",{style:{color:"#88846F"}},"// 声明一个数组")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"arr "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"];         "),s("span",{style:{color:"#88846F"}},"// 创建一个长度为5的数组")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:e,isActive:o})=>l[9]||(l[9]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] arr "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"];   "),s("span",{style:{color:"#88846F"}},"// 一步完成声明和创建")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),s("ul",null,[s("li",null,[s("strong",null,[s("code",null,"int[]"),n(" 与 "),s("code",null,"int"),n(" 的区别")]),n("："),s("code",null,"int[]"),n(" 是数组类型，"),s("code",null,"int"),n(" 是单个变量类型。")])],-1)])),tab2:a(({value:e,isActive:o})=>l[10]||(l[10]=[s("ul",null,[s("li",null,"直接给数组赋初始值，省略了长度定义：")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] arr "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"}; "),s("span",{style:{color:"#88846F"}},"// 初始化为包含5个元素的数组")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),s("div",{class:"hint-container warning"},[s("p",{class:"hint-container-title"},"注意"),s("p",null,"这种方式必须在声明时完成，不能单独赋值。"),s("p",null,[s("strong",null,"错误示例"),n("：")]),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] arr;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"arr "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"}; "),s("span",{style:{color:"#88846F"}},"// 错误：不能直接给已声明的数组赋这种形式的值")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,[s("strong",null,"正确示例"),n("：")]),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] arr;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"arr "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[]{"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"}; "),s("span",{style:{color:"#88846F"}},"// 正确：需用 `new int[]` 明确创建")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])])],-1)])),tab3:a(({value:e,isActive:o})=>l[11]||(l[11]=[s("ul",null,[s("li",null,"只创建数组而不需要变量名（常用于直接传递数组）：")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6E22E"}},"printArray"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#F92672"}},"new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[]{"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"}); "),s("span",{style:{color:"#88846F"}},"// 匿名数组作为参数")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),s("p",null,[s("strong",null,"示例方法"),n("：")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," printArray"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] arr) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," arr) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(num);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab4:a(({value:e,isActive:o})=>l[12]||(l[12]=[s("ul",null,[s("li",null,[s("strong",null,"创建多维数组时需注意："),s("ol",null,[s("li",null,"仅定义第一维度的长度。"),s("li",null,"可逐级初始化。")])])],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[][] matrix "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},"]["),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"]; "),s("span",{style:{color:"#88846F"}},"// 创建3行4列的二维数组")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),s("ul",null,[s("li",null,[s("strong",null,"声明并逐级初始化"),n("：")])],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[][] matrix "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},"][]; "),s("span",{style:{color:"#88846F"}},"// 创建3行的二维数组，但列未定义")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"matrix["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"];        "),s("span",{style:{color:"#88846F"}},"// 第一行2列")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"matrix["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},"];        "),s("span",{style:{color:"#88846F"}},"// 第二行3列")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"matrix["),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"] "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"];        "),s("span",{style:{color:"#88846F"}},"// 第三行4列")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("ul",null,[s("li",null,[s("strong",null,"直接声明并初始化"),n("：")])],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[][] matrix "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    {"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    {"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    {"),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"8"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"};")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab5:a(({value:e,isActive:o})=>l[13]||(l[13]=[s("p",null,[n("Java 提供了 "),s("code",null,"java.util.Arrays"),n(" 工具类，能快速填充或初始化数组。")],-1),s("ul",null,[s("li",null,"填充数组")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] arr "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"];")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Arrays."),s("span",{style:{color:"#A6E22E"}},"fill"),s("span",{style:{color:"#F8F8F2"}},"(arr, "),s("span",{style:{color:"#AE81FF"}},"42"),s("span",{style:{color:"#F8F8F2"}},"); "),s("span",{style:{color:"#88846F"}},"// 全部填充为42")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("ul",null,[s("li",null,"创建固定值列表")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"List"),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Integer"),s("span",{style:{color:"#F8F8F2"}},"> list "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Arrays."),s("span",{style:{color:"#A6E22E"}},"asList"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"); "),s("span",{style:{color:"#88846F"}},"// 创建固定大小的列表（不完全是数组，但常用于初始化）")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),tab6:a(({value:e,isActive:o})=>l[14]||(l[14]=[s("ul",null,[s("li",null,"布尔类型")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"boolean"),s("span",{style:{color:"#F8F8F2"}},"[] flags "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"false"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"true"),s("span",{style:{color:"#F8F8F2"}},"}; "),s("span",{style:{color:"#88846F"}},"// 直接初始化布尔数组")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),s("ul",null,[s("li",null,"引用类型")],-1),s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] names "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},'"Alice"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"Bob"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"Charlie"'),s("span",{style:{color:"#F8F8F2"}},"}; "),s("span",{style:{color:"#88846F"}},"// 引用类型数组")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),tab7:a(({value:e,isActive:o})=>l[15]||(l[15]=[s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"创建方式"),s("th",null,"示例代码"),s("th",null,"特点")])]),s("tbody",null,[s("tr",null,[s("td",null,"声明后创建"),s("td",null,[s("code",null,"int[] arr; arr = new int[5];")]),s("td",null,"逻辑清晰，分步骤")]),s("tr",null,[s("td",null,"声明并创建"),s("td",null,[s("code",null,"int[] arr = new int[5];")]),s("td",null,"一步完成，常用")]),s("tr",null,[s("td",null,"声明并初始化"),s("td",null,[s("code",null,"int[] arr = {1, 2, 3};")]),s("td",null,"直接初始化，方便简洁")]),s("tr",null,[s("td",null,"匿名数组"),s("td",null,[s("code",null,"printArray(new int[]{1, 2, 3});")]),s("td",null,"适合一次性使用")]),s("tr",null,[s("td",null,"多维数组"),s("td",null,[s("code",null,"int[][] matrix = new int[3][4];")]),s("td",null,"可灵活定义每行的列数")]),s("tr",null,[s("td",null,"使用工具类"),s("td",null,[s("code",null,"Arrays.fill(arr, 42);")]),s("td",null,"简化填充、初始化操作")])])],-1)])),_:1}),l[17]||(l[17]=p(`<h2 id="_5-arraylist-的常用方法" tabindex="-1"><a class="header-anchor" href="#_5-arraylist-的常用方法"><span>5. ArrayList 的常用方法</span></a></h2><h3 id="_5-0-关键点-泛型" tabindex="-1"><a class="header-anchor" href="#_5-0-关键点-泛型"><span>5.0 关键点：泛型</span></a></h3><p><code>ArrayList</code> 是一个泛型类，使用时可以通过 <code>&lt;E&gt;</code> 指定存储的数据类型。例如：</p><ul><li><code>ArrayList&lt;String&gt;</code>：只能存储字符串。</li><li><code>ArrayList&lt;Integer&gt;</code>：只能存储整数。</li><li><code>ArrayList&lt;Object&gt;</code>：可以存储任意对象。</li><li><code>ArrayList&lt;MyClass&gt;</code>：可以存储自定义类型。</li></ul><p><code>ArrayList</code> 是 Java 中最常用的动态数组类，它在 <code>java.util</code> 包中提供了许多便捷的方法，支持动态增长和减少。下面是常用的 <code>ArrayList</code> 方法及其详细讲解：</p><h3 id="_5-1-构造方法" tabindex="-1"><a class="header-anchor" href="#_5-1-构造方法"><span>5.1 构造方法</span></a></h3><ul><li><p><code>ArrayList()</code> 创建一个初始容量为 10 的空列表。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">ArrayList</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; list </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>ArrayList(int initialCapacity)</code> 创建一个指定初始容量的列表。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">ArrayList</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; list </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;(</span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>ArrayList(Collection&lt;? extends E&gt; c)</code>：创建一个包含指定集合的列表。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">List</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; initialList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">asList</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;B&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;C&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">ArrayList</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; list </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;(initialList);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_5-2-添加元素" tabindex="-1"><a class="header-anchor" href="#_5-2-添加元素"><span>5.2 添加元素</span></a></h3><ul><li><p><code>add(E e)</code>：在列表末尾添加元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>add(int index, E element)</code>：在指定索引处插入元素，后续元素右移。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;World&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-3-获取元素" tabindex="-1"><a class="header-anchor" href="#_5-3-获取元素"><span>5.3 获取元素</span></a></h3><ul><li><p><code>get(int index)</code>：返回指定索引处的元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;"> element </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-4-设置元素" tabindex="-1"><a class="header-anchor" href="#_5-4-设置元素"><span>5.4 设置元素</span></a></h3><ul><li><p><code>set(int index, E element)</code>：替换指定索引处的元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;New Value&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-5-删除元素" tabindex="-1"><a class="header-anchor" href="#_5-5-删除元素"><span>5.5 删除元素</span></a></h3><ul><li><p><code>remove(int index)</code>：删除指定索引的元素，并返回该元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;"> removed </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">remove</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>remove(Object o)</code>：删除首次出现的指定对象，返回是否成功。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> removed </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">remove</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>clear()</code>：清空列表。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">clear</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-6-大小与空检查" tabindex="-1"><a class="header-anchor" href="#_5-6-大小与空检查"><span>5.6 大小与空检查</span></a></h3><ul><li><p><code>size()</code>：返回列表中的元素数量。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> size </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">size</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>isEmpty()</code>：检查列表是否为空。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> isEmpty </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">isEmpty</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-7-查询操作" tabindex="-1"><a class="header-anchor" href="#_5-7-查询操作"><span>5.7 查询操作</span></a></h3><ul><li><p><code>contains(Object o)</code>：检查列表是否包含指定元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> contains </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">contains</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>indexOf(Object o)</code>：返回首次出现的指定元素的索引，找不到返回 <code>-1</code>。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>lastIndexOf(Object o)</code>：返回最后一次出现的指定元素的索引。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> lastIndex </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">lastIndexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-8-批量操作" tabindex="-1"><a class="header-anchor" href="#_5-8-批量操作"><span>5.8 批量操作</span></a></h3><ul><li><p><code>addAll(Collection&lt;? extends E&gt; c)</code>：将指定集合中的所有元素添加到列表末尾。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">addAll</span><span style="color:#F8F8F2;">(Arrays.</span><span style="color:#A6E22E;">asList</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;B&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;C&quot;</span><span style="color:#F8F8F2;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>addAll(int index, Collection&lt;? extends E&gt; c)</code>：从指定位置开始插入集合中的元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">addAll</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, Arrays.</span><span style="color:#A6E22E;">asList</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;X&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Y&quot;</span><span style="color:#F8F8F2;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>removeAll(Collection&lt;?&gt; c)</code>：删除列表中所有与指定集合匹配的元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">removeAll</span><span style="color:#F8F8F2;">(Arrays.</span><span style="color:#A6E22E;">asList</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;B&quot;</span><span style="color:#F8F8F2;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>retainAll(Collection&lt;?&gt; c)</code>：仅保留与指定集合匹配的元素。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">retainAll</span><span style="color:#F8F8F2;">(Arrays.</span><span style="color:#A6E22E;">asList</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;B&quot;</span><span style="color:#F8F8F2;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-9-转换操作" tabindex="-1"><a class="header-anchor" href="#_5-9-转换操作"><span>5.9 转换操作</span></a></h3><ul><li><p><code>toArray()</code>：将列表转换为数组。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">[] array </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>toArray(T[] a)</code>：将列表转换为指定类型的数组。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] array </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#66D9EF;font-style:italic;"> String</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-10-迭代与遍历" tabindex="-1"><a class="header-anchor" href="#_5-10-迭代与遍历"><span>5.10 迭代与遍历</span></a></h3><ul><li><p><code>forEach(Consumer&lt;? super E&gt; action)</code>：对每个元素执行操作。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(System.out</span><span style="color:#F92672;">::</span><span style="color:#F8F8F2;">println);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>iterator()</code>：返回列表的迭代器。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Iterator</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; iterator </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">iterator</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> (iterator.</span><span style="color:#A6E22E;">hasNext</span><span style="color:#F8F8F2;">()) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(iterator.</span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_5-11-子列表" tabindex="-1"><a class="header-anchor" href="#_5-11-子列表"><span>5.11 子列表</span></a></h3><ul><li><p><code>subList(int fromIndex, int toIndex)</code>：返回指定范围内的子列表（左闭右开）。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">List</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; subList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> list.</span><span style="color:#A6E22E;">subList</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-12-排序" tabindex="-1"><a class="header-anchor" href="#_5-12-排序"><span>5.12 排序</span></a></h3><ul><li><p><code>sort(Comparator&lt;? super E&gt; c)</code>：使用指定比较器对列表排序。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">(Comparator.</span><span style="color:#A6E22E;">naturalOrder</span><span style="color:#F8F8F2;">());</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-13-克隆" tabindex="-1"><a class="header-anchor" href="#_5-13-克隆"><span>5.13 克隆</span></a></h3><ul><li><p><code>clone()</code>：创建一个浅拷贝。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">ArrayList</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; clonedList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">ArrayList</span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;">String</span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;">) list.</span><span style="color:#A6E22E;">clone</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-14-性能优化" tabindex="-1"><a class="header-anchor" href="#_5-14-性能优化"><span>5.14 性能优化</span></a></h3><ul><li><p><code>ensureCapacity(int minCapacity)</code>：提前增加容量以避免频繁扩容。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">ensureCapacity</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>trimToSize()</code>：将容量调整为当前元素数量以节省内存。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">list.</span><span style="color:#A6E22E;">trimToSize</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_5-15-使用场景" tabindex="-1"><a class="header-anchor" href="#_5-15-使用场景"><span>5.15 使用场景</span></a></h3><ul><li><strong>动态列表管理</strong>：如购物车、任务清单等。</li><li><strong>批量操作</strong>：适用于需要频繁添加或删除元素的场景。</li><li><strong>集合运算</strong>：如取交集、并集、差集。</li></ul><p>通过了解和灵活使用 <code>ArrayList</code> 的这些方法，可以更高效地完成各种编程任务。</p><h2 id="_6-优化寻找多个最大分数程序" tabindex="-1"><a class="header-anchor" href="#_6-优化寻找多个最大分数程序"><span>6. 优化寻找多个最大分数程序</span></a></h2><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F92672;"> java.util.ArrayList</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ScoreArrayMaxScore</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 声明六个变量，分别代表六门科目的成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> YuWenIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShuXueIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WaiYuIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> WuLiIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> HuaXueIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 4</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> ShengWuIndex </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 每门课的名字</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        String</span><span style="color:#F8F8F2;">[] names </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> String</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[YuWenIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;语文&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[ShuXueIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;数学&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[WaiYuIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;外语&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[WuLiIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;物理&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[HuaXueIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;化学&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        names[ShengWuIndex] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;生物&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 每门课的成绩</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;">[] scores </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> double</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 用随机数给成绩赋值</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            scores[i] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 80</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">random</span><span style="color:#F8F8F2;">() </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 找出最高分及其对应的科目</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        double</span><span style="color:#F8F8F2;"> maxScore </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        ArrayList</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">&gt; maxScoreSubjects </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(names[i] </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;的成绩为&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> scores[i]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (scores[i] </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> maxScore) {</span></span>
<span class="line"><span style="color:#88846F;">                // 如果找到更高的分数，更新最高分，并清空之前的科目记录</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScore </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> scores[i];</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScoreSubjects.</span><span style="color:#A6E22E;">clear</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScoreSubjects.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(names[i]);</span></span>
<span class="line"><span style="color:#F8F8F2;">            } </span><span style="color:#F92672;">else</span><span style="color:#F92672;"> if</span><span style="color:#F8F8F2;"> (scores[i] </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> maxScore) {</span></span>
<span class="line"><span style="color:#88846F;">                // 如果分数等于当前最高分，加入科目记录</span></span>
<span class="line"><span style="color:#F8F8F2;">                maxScoreSubjects.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(names[i]);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // 输出结果</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;最高分为：&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> maxScore);</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;取得最高分的科目有：&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> maxScoreSubjects);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',42))])}const f=c(v,[["render",m],["__file","19.html.vue"]]),k=JSON.parse('{"path":"/Java/chapter01/19.html","title":"19-用数组保存成绩","lang":"zh-CN","frontmatter":{"title":"19-用数组保存成绩","date":"2023-12-01T09:21:30.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课"],"tag":["Java体系课"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"footer":"长期招收编程一对一学员！微信：Jiabcdefh, <a href=\\"https://beian.miit.gov.cn/\\" target=\\"_blank\\">闽ICP备19021486号-6</a>","feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"0. 目录","slug":"_0-目录","link":"#_0-目录","children":[]},{"level":2,"title":"1. 语数外物化生的成绩怎么表示？","slug":"_1-语数外物化生的成绩怎么表示","link":"#_1-语数外物化生的成绩怎么表示","children":[]},{"level":2,"title":"2. 什么是数组和数组的语法","slug":"_2-什么是数组和数组的语法","link":"#_2-什么是数组和数组的语法","children":[{"level":3,"title":"2.1 数组的特点是：","slug":"_2-1-数组的特点是","link":"#_2-1-数组的特点是","children":[]},{"level":3,"title":"2.2 创建和使用一个数组的语法","slug":"_2-2-创建和使用一个数组的语法","link":"#_2-2-创建和使用一个数组的语法","children":[]}]},{"level":2,"title":"3. 用数组处理 6 门课的成绩","slug":"_3-用数组处理-6-门课的成绩","link":"#_3-用数组处理-6-门课的成绩","children":[{"level":3,"title":"3.1 创建数组来表示 6 门课的成绩","slug":"_3-1-创建数组来表示-6-门课的成绩","link":"#_3-1-创建数组来表示-6-门课的成绩","children":[]},{"level":3,"title":"3.2 求出最高的成绩","slug":"_3-2-求出最高的成绩","link":"#_3-2-求出最高的成绩","children":[]}]},{"level":2,"title":"4. Java 数组常见的创建方式","slug":"_4-java-数组常见的创建方式","link":"#_4-java-数组常见的创建方式","children":[]},{"level":2,"title":"5. ArrayList 的常用方法","slug":"_5-arraylist-的常用方法","link":"#_5-arraylist-的常用方法","children":[{"level":3,"title":"5.0 关键点：泛型","slug":"_5-0-关键点-泛型","link":"#_5-0-关键点-泛型","children":[]},{"level":3,"title":"5.1 构造方法","slug":"_5-1-构造方法","link":"#_5-1-构造方法","children":[]},{"level":3,"title":"5.2 添加元素","slug":"_5-2-添加元素","link":"#_5-2-添加元素","children":[]},{"level":3,"title":"5.3 获取元素","slug":"_5-3-获取元素","link":"#_5-3-获取元素","children":[]},{"level":3,"title":"5.4 设置元素","slug":"_5-4-设置元素","link":"#_5-4-设置元素","children":[]},{"level":3,"title":"5.5 删除元素","slug":"_5-5-删除元素","link":"#_5-5-删除元素","children":[]},{"level":3,"title":"5.6 大小与空检查","slug":"_5-6-大小与空检查","link":"#_5-6-大小与空检查","children":[]},{"level":3,"title":"5.7 查询操作","slug":"_5-7-查询操作","link":"#_5-7-查询操作","children":[]},{"level":3,"title":"5.8 批量操作","slug":"_5-8-批量操作","link":"#_5-8-批量操作","children":[]},{"level":3,"title":"5.9 转换操作","slug":"_5-9-转换操作","link":"#_5-9-转换操作","children":[]},{"level":3,"title":"5.10 迭代与遍历","slug":"_5-10-迭代与遍历","link":"#_5-10-迭代与遍历","children":[]},{"level":3,"title":"5.11 子列表","slug":"_5-11-子列表","link":"#_5-11-子列表","children":[]},{"level":3,"title":"5.12 排序","slug":"_5-12-排序","link":"#_5-12-排序","children":[]},{"level":3,"title":"5.13 克隆","slug":"_5-13-克隆","link":"#_5-13-克隆","children":[]},{"level":3,"title":"5.14 性能优化","slug":"_5-14-性能优化","link":"#_5-14-性能优化","children":[]},{"level":3,"title":"5.15 使用场景","slug":"_5-15-使用场景","link":"#_5-15-使用场景","children":[]}]},{"level":2,"title":"6. 优化寻找多个最大分数程序","slug":"_6-优化寻找多个最大分数程序","link":"#_6-优化寻找多个最大分数程序","children":[]}],"git":{"createdTime":1732028288000,"updatedTime":1732099933000,"contributors":[{"name":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":2}]},"readingTime":{"minutes":11.12,"words":3337},"filePathRelative":"Java/chapter01/19.md","localizedDate":"2023年12月1日","copyright":{"author":"AI悦创"}}');export{f as comp,k as data};
