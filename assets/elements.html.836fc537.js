import{_ as t}from"./gzh.b03adfd2.js";import{_ as p}from"./zsxq.77f6dc86.js";import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as l,a as n,d as a,b as e,e as i,r as d}from"./app.9add2d53.js";const u={},r=i(`<p>本章介绍一些最新引入标准的标签。</p><h2 id="dialog" tabindex="-1"><a class="header-anchor" href="#dialog" aria-hidden="true">#</a> <code>&lt;dialog&gt;</code></h2><h3 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h3><p><code>&lt;dialog&gt;</code>标签表示一个可以关闭的对话框。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dialog</span><span class="token punctuation">&gt;</span></span>
  Hello world
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dialog</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面就是一个最简单的对话框。</p><p>默认情况下，对话框是隐藏的，不会在网页上显示。如果要让对话框显示，必须加上<code>open</code>属性。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dialog</span> <span class="token attr-name">open</span><span class="token punctuation">&gt;</span></span>
  Hello world
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dialog</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码会在网页显示一个方框，内容是<code>Hello world</code>。</p><p><code>&lt;dialog&gt;</code>元素里面，可以放入其他 HTML 元素。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dialog</span> <span class="token attr-name">open</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialog<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dialog</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的对话框里面，有一个输入框和提交按钮。</p><p>注意，上例中<code>&lt;form&gt;</code>的<code>method</code>属性设为<code>dialog</code>，这时点击提交按钮，对话框就会消失。但是，表单不会提交到服务器，浏览器会将表单元素的<code>returnValue</code>属性设为 Submit 按钮的<code>value</code>属性（上例是<code>foo</code>）。</p><h3 id="javascript-api" tabindex="-1"><a class="header-anchor" href="#javascript-api" aria-hidden="true">#</a> JavaScript API</h3><p><code>&lt;dialog&gt;</code>元素的 JavaScript API 提供<code>Dialog.showModal()</code>和<code>Dialog.close()</code>两个方法，用于打开/关闭对话框。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> modal <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;dialog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 对话框显示，相当于增加 open 属性</span>
modal<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 对话框关闭，相当于移除 open 属性</span>
modal<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开发者可以提供关闭按钮，让其调用<code>Dialog.close()</code>方法，关闭对话框。</p><p><code>Dialog.close()</code>方法可以接受一个字符串作为参数，用于传递信息。<code>&lt;dialog&gt;</code>接口的<code>returnValue</code>属性可以读取这个字符串，否则<code>returnValue</code>属性等于提交按钮的<code>value</code>属性。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>modal<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token string">&#39;Accepted&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
modal<span class="token punctuation">.</span>returnValue <span class="token comment">// &quot;Accepted&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Dialog.showModal()</code>方法唤起对话框时，会有一个透明层，阻止用户与对话框外部的内容互动。CSS 提供了一个 Dialog 元素的<code>::backdrop</code>伪类，用于选中这个透明层，因此可以编写样式让透明层变得可见。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">dialog</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.6rem<span class="token punctuation">;</span>
  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 1em black<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">dialog::backdrop</span> <span class="token punctuation">{</span>
  <span class="token comment">/* make the backdrop a semi-transparent black */</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码不仅为<code>&lt;dialog&gt;</code>指定了样式，还将对话框的透明层变成了灰色透明。</p><p><code>&lt;dialog&gt;</code>元素还有一个<code>Dialog.show()</code>方法，也能唤起对话框，但是没有透明层，用户可以与对话框外部的内容互动。</p><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h3><p><code>&lt;dialog&gt;</code>元素有两个事件，可以监听。</p><ul><li><code>close</code>：对话框关闭时触发</li><li><code>cancel</code>：用户按下<code>esc</code>键关闭对话框时触发</li></ul><p>如果希望用户点击透明层，就关闭对话框，可以用下面的代码。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>modal<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token operator">===</span> modal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modal<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token string">&#39;cancelled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="details-summary" tabindex="-1"><a class="header-anchor" href="#details-summary" aria-hidden="true">#</a> <code>&lt;details&gt;</code>，<code>&lt;summary&gt;</code></h2><h3 id="基本用法-1" tabindex="-1"><a class="header-anchor" href="#基本用法-1" aria-hidden="true">#</a> 基本用法</h3><p><code>&lt;details&gt;</code>标签用来折叠内容，浏览器会折叠显示该标签的内容。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">&gt;</span></span>
这是一段解释文本。
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码在浏览器里面，会折叠起来，显示<code>Details</code>，前面有一个三角形，就像下面这样。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>▶ Details
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用户点击这段文本，折叠的文本就会展开，显示详细内容。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>▼ Details
这是一段解释文本。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再点击一下，展开的文本又会重新折叠起来。</p><p><code>&lt;details&gt;</code>标签的<code>open</code>属性，用于默认打开折叠。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span> <span class="token attr-name">open</span><span class="token punctuation">&gt;</span></span>
这是一段解释文本。
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码默认打开折叠。</p><p><code>&lt;summary&gt;</code>标签用来定制折叠内容的标题。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span>这是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span>
  这是一段解释文本。
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码显示结果如下。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>▶ 这是标题
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>点击后，展示的效果如下。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>▼ 这是标题
这是一段解释文本。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 CSS 设置<code>summary::-webkit-details-marker</code>，可以改变标题前面的三角箭头。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">summary::-webkit-details-marker</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://example.com/foo.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面的样式是另一种替换箭头的方法。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">summary::-webkit-details-marker</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">summary:before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;\\2714&quot;</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #696f7c<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="javascript-api-1" tabindex="-1"><a class="header-anchor" href="#javascript-api-1" aria-hidden="true">#</a> JavaScript API</h3><p><code>Details</code>元素的<code>open</code>属性返回<code>&lt;details&gt;</code>当前是打开还是关闭。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> details <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;details&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>detail<span class="token punctuation">.</span>open <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 展开状态</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// 折叠状态</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Details</code>元素有一个<code>toggle</code>事件，打开或关闭折叠时，都会触发这个事件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>details<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;toggle&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>details<span class="token punctuation">.</span>open<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 展开状况 */</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 折叠状态 */</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,56),k={href:"https://keithjgrant.com/posts/2018/meet-the-new-dialog-element/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.logrocket.com/the-dialog-element-the-way-to-create-tomorrows-modal-windows-f1d4ab14380b",target:"_blank",rel:"noopener noreferrer"},v={href:"https://css-tricks.com/quick-reminder-that-details-summary-is-the-easiest-way-ever-to-make-an-accordion/",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！",-1),b=n("details",{class:"custom-container details"},[n("summary",null,"公众号：AI悦创【二维码】"),n("p",null,[n("img",{src:t,alt:"",loading:"lazy"})])],-1),h={class:"custom-container info"},f=n("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),_=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发，Web，Linux」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),y=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),x={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,"方法二：微信：Jiabcdefh",-1),q=n("p",null,[n("img",{src:p,alt:"",loading:"lazy"})],-1);function j(D,S){const s=d("ExternalLinkIcon");return c(),l("div",null,[r,n("ul",null,[n("li",null,[n("a",k,[a("Meet the New Dialog Element"),e(s)]),a(", Keith J. Grant")]),n("li",null,[n("a",m,[a("The dialog element: The way to create tomorrow’s modal windows"),e(s)]),a(", Abhishek Jakhar")]),n("li",null,[n("a",v,[a("Details/Summary is the Easiest Way Ever to Make an Accordion"),e(s)]),a(", Chris Coyier")])]),g,b,n("div",h,[f,_,y,n("p",null,[a("方法一："),n("a",x,[a("QQ"),e(s)])]),w]),q])}const V=o(u,[["render",j],["__file","elements.html.vue"]]);export{V as default};
