import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as u,c as r,d as c,w as a,a as n,e,b as s}from"./app-IAnY6voi.js";const k="/assets/image-20240103194907771-vhhGhq8n.png",d="/assets/image-20240103084218923-uXaWXW20.png",v="/assets/image-20240103084956419-cueaRZH0.png",m={},g=e(`<h2 id="_1-如何创建一个电话簿" tabindex="-1"><a class="header-anchor" href="#_1-如何创建一个电话簿" aria-hidden="true">#</a> 1. 如何创建一个电话簿</h2><p>我们现在有下面的联系人：</p><table><thead><tr><th>姓名</th><th>手机号</th></tr></thead><tbody><tr><td>李雷</td><td>123456</td></tr><tr><td>韩梅梅</td><td>132456</td></tr><tr><td>大卫</td><td>154389</td></tr><tr><td>Mr.Liu</td><td>131452</td></tr><tr><td>Bornforthis</td><td>180595</td></tr><tr><td>Alexa</td><td>131559</td></tr></tbody></table><p>如何用以往学过的知识构建一个具有用户输入查询功能的电话簿。</p><blockquote><p>变量、数字型、列表、元组、字符串。</p></blockquote><p>程序运行效果：</p><ul><li>测试一：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter your search name<span class="token punctuation">:</span> 李雷
The 李雷 phone number <span class="token keyword">is</span><span class="token punctuation">:</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试二：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter your search name<span class="token punctuation">:</span> Bornforthis
The Bornforthis phone number <span class="token keyword">is</span><span class="token punctuation">:</span> <span class="token number">180595</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),b=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("names "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},"]"),s(`
phones `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'123456'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'132456'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'154389'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'131452'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'180595'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'131559'"),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token comment"},"# 获取用户输入"),s(`
search_name `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Enter your search name: "'),n("span",{class:"token punctuation"},")"),s(`
position `),n("span",{class:"token operator"},"="),s(" names"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("search_name"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("search_name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("phones"),n("span",{class:"token punctuation"},"["),s("position"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("phonebooks "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'123456'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'132456'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'154389'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'131452'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'180595'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'131559'"),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token comment"},"# 获取用户输入"),s(`
search_name `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Enter your search name: "'),n("span",{class:"token punctuation"},")"),s(`
position `),n("span",{class:"token operator"},"="),s(" phonebooks"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("search_name"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("search_name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("phonebooks"),n("span",{class:"token punctuation"},"["),s("position "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("names "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},"]"),s(`
phones `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'123456'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'132456'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'154389'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'131452'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'180595'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'131559'"),n("span",{class:"token punctuation"},"]"),s(`
phonebooks `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"list"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"zip"),n("span",{class:"token punctuation"},"("),s("names"),n("span",{class:"token punctuation"},","),s(" phones"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# 获取用户输入"),s(`
search_name `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Enter your search name: "'),n("span",{class:"token punctuation"},")"),s(`
position `),n("span",{class:"token operator"},"="),s(" names"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("search_name"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("search_name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("phonebooks"),n("span",{class:"token punctuation"},"["),s("position"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=e(`<p>由上面的问题应该要了解两个点：</p><ol><li>如何用已有的知识去完成未知的新任务，毕竟不可能包含全部各种需求所需要的数据类型类型；</li><li>字典存在意义，从上面题目完成后应该要 get 到。</li></ol><h2 id="_2-字典结构" tabindex="-1"><a class="header-anchor" href="#_2-字典结构" aria-hidden="true">#</a> 2. 字典结构</h2><ul><li>用 <strong><span style="color:orange;">花括号</span></strong> 表示字典</li><li>字典内每一项都有两个元素组成：<strong><span style="color:orange;">key 和 value</span></strong><ul><li><code>{key: value, key: value}</code></li></ul></li><li>各个项用 <strong><span style="color:orange;">逗号</span></strong> 隔开</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>phone_numbers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;3456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;0123&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>phone_numbers<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-字典结构-key-value" tabindex="-1"><a class="header-anchor" href="#_3-字典结构-key-value" aria-hidden="true">#</a> 3. 字典结构 key &amp; value</h2><ul><li>key 和 value 是一一对应，同一个键只能有一个对应的值</li><li>键的类型是不可变的；</li><li>value 的类型是任意的；</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;numbers&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">:</span> <span class="token string">&#39;bool&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;numbers&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">:</span> <span class="token string">&#39;bool&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果 key 用列表则报错：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;numbers&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;/Users/huangjiabao/GitHub/iMac/Pycharm/StudentCoder/44-liuchengyang/look.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;numbers&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">}</span>
TypeError<span class="token punctuation">:</span> unhashable <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token string">&#39;list&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-用字典-dict-函数创建字典" tabindex="-1"><a class="header-anchor" href="#_4-用字典-dict-函数创建字典" aria-hidden="true">#</a> 4. 用字典 dict 函数创建字典</h2><ul><li>方法一：根据其他序列新建字典</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>message <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
list_to_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_to_dict<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方法二：根据关键字参数新建字典</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>lilei<span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> hanmeimei<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">上面两种创建字典的方法，有什么优缺点？</p><p>上面方法一的方法，可以更好的适配字典的各种数据类型情况。why？——因为结构是列表里面放元组，而元组的 0 号位放 key，1 号位放 value。所以，只要是不可变的数据类型都可以放在 0 号位。</p><p>反之对比上面方法二：第一个位置必须是“变量”，不能是其它数据类型。举个例子：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>lilei<span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> hanmeimei<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>  <span class="token comment"># 看起来正常</span>
d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token string">&#39;lilei&#39;</span><span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>  <span class="token comment"># 看起来怎么样？</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面第二行代码，看起来就很奇怪了，一共有两个值一个值是 <code>&#39;lilei&#39;</code> 另一个值 <code>98</code> 两个都是值，可以用 98 赋值给另一个值吗？——显然是不行的。我们的赋值是需要把一个值赋值给一个变量「有空间」。</p><p>所以，第二种方法虽然可以实现创建字典，但是对于字典 key 的各种情况并不能完全支持。</p><blockquote><p>Output 时第二种的 key 只能得到字符串</p></blockquote></div><h2 id="_5-访问字典数据" tabindex="-1"><a class="header-anchor" href="#_5-访问字典数据" aria-hidden="true">#</a> 5. 访问字典数据</h2><h3 id="_5-1-中括号访问" tabindex="-1"><a class="header-anchor" href="#_5-1-中括号访问" aria-hidden="true">#</a> 5.1 中括号访问</h3><ul><li>利用中括号加要查询的 key</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 98</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-上面的提取方法存在问题" tabindex="-1"><a class="header-anchor" href="#_5-2-上面的提取方法存在问题" aria-hidden="true">#</a> 5.2 上面的提取方法存在问题</h3><p>在提取不存在的 key 的时候，会报错：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span><span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 

<span class="token comment"># ---output---</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;/Users/huangjiabao/GitHub/iMac/Pycharm/StudentCoder/44-liuchengyang/look.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">9</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span><span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
KeyError<span class="token punctuation">:</span> <span class="token string">&#39;马冬梅&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就像我们查询电话簿的时候，没找到会返回：未找到。</p><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-3-使用-get-解决" tabindex="-1"><a class="header-anchor" href="#_5-3-使用-get-解决" aria-hidden="true">#</a> 5.3 使用 .get() 解决</h3><p>当使用 <code>get</code> 方法时，需要提供一个键（key），方法会返回与该键关联的值。如果该键在字典中不存在，<code>get</code> 方法将返回 <code>None</code>，或者你可以指定一个默认值，如果键不存在，则返回这个默认值。</p><p>这是 <code>get</code> 方法的基本语法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>value <span class="token operator">=</span> dictionary<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">,</span> default_value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>key</code>：你想要检索的键。</li><li><code>default_value</code>：（可选）如果键不存在时返回的值。如果未提供此参数，默认值为 <code>None</code>。</li></ul><p>下面是一个使用 <code>get</code> 方法的例子：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 创建一个简单的字典</span>
my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">}</span>

<span class="token comment"># 使用 get 访问一个存在的键</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 输出: Alice</span>

<span class="token comment"># 使用 get 访问一个不存在的键，并提供默认值。</span>
<span class="token comment"># 如果没有提供第二个参数，则返回 None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Not Specified&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 输出: Not Specified</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在第一个 <code>get</code> 调用中，我们访问了键 <code>&#39;name&#39;</code>，它在字典中存在，因此返回了对应的值 <code>&#39;Alice&#39;</code>。在第二个调用中，我们试图访问键 <code>&#39;gender&#39;</code>，它在字典中不存在，因此返回了我们指定的默认值 <code>&#39;Not Specified&#39;</code>。</p><h2 id="_6-更新字典的数据" tabindex="-1"><a class="header-anchor" href="#_6-更新字典的数据" aria-hidden="true">#</a> 6. 更新字典的数据</h2><p>字典修改或添加数据原则：有则改之，无则加勉「无则添加」</p><figure><img src="`+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span>
grade<span class="token punctuation">[</span><span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

grade<span class="token punctuation">[</span><span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;95&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-字典删除" tabindex="-1"><a class="header-anchor" href="#_7-字典删除" aria-hidden="true">#</a> 7. 字典删除</h2><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>

<span class="token keyword">del</span> grade<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 删除李雷</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> grade<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span>
grade<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 清空字典</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>


<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> grade<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span>
grade<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 清空字典</span>
<span class="token keyword">del</span> grade
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;/Users/huangjiabao/GitHub/iMac/Pycharm/StudentCoder/44-liuchengyang/look.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">12</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>
NameError<span class="token punctuation">:</span> name <span class="token string">&#39;grade&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-字典结构嵌套字典" tabindex="-1"><a class="header-anchor" href="#_8-字典结构嵌套字典" aria-hidden="true">#</a> 8. 字典结构嵌套字典</h2><p>嵌套：将一系列字典存储在列表中，或将列表作为值存储在字典中。</p><ul><li>字典列表</li><li>在字典中存储列表</li><li>在字典中存储字典</li></ul><h3 id="_8-1-字典列表" tabindex="-1"><a class="header-anchor" href="#_8-1-字典列表" aria-hidden="true">#</a> 8.1 字典列表</h3><blockquote><p>由字典构成的列表</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>student1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">}</span>
student2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
student3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token number">95</span><span class="token punctuation">}</span>
students <span class="token operator">=</span> <span class="token punctuation">[</span>student1<span class="token punctuation">,</span> student2<span class="token punctuation">,</span> student3<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token number">95</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),x={class:"hint-container tip"},f=n("p",{class:"hint-container-title"},"小试牛刀：通过提取 students 来得到 韩梅梅的分数",-1),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("students"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'grade'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),T=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("students"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'grade'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),A=n("p",null,"中括号和 get 的选择依据：看数据是否是确定的，如果是确定的优先使用中括号提取。否则，使用 get。",-1),C=e(`<h3 id="_8-2-在字典中存储列表" tabindex="-1"><a class="header-anchor" href="#_8-2-在字典中存储列表" aria-hidden="true">#</a> 8.2 在字典中存储列表</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>favorite_class <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;英语&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;语文&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;计算机&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;物理&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;数学&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>favorite_class<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>favorite_class<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">[</span><span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;英语&#39;</span><span class="token punctuation">]</span>
数学
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-3-在字典中存储字典" tabindex="-1"><a class="header-anchor" href="#_8-3-在字典中存储字典" aria-hidden="true">#</a> 8.3 在字典中存储字典</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 用一个字典表示一个学生信息</span>
student1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>

<span class="token comment"># 用一个字典表示全班学生信息</span>
class1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-字典常见方法" tabindex="-1"><a class="header-anchor" href="#_9-字典常见方法" aria-hidden="true">#</a> 9. 字典常见方法</h2><h3 id="_9-1-pop-key" tabindex="-1"><a class="header-anchor" href="#_9-1-pop-key" aria-hidden="true">#</a> 9.1 .pop(key)</h3><p>删除特定的键对值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 用一个字典表示一个学生信息</span>
student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>
student<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 必须填写要删除的 key</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-2-keys" tabindex="-1"><a class="header-anchor" href="#_9-2-keys" aria-hidden="true">#</a> 9.2 .keys()</h3><p>获取字典中所有的键。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
keys <span class="token operator">=</span> student<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-3-values" tabindex="-1"><a class="header-anchor" href="#_9-3-values" aria-hidden="true">#</a> 9.3 .values()</h3><p>获取字典中所有的值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
values <span class="token operator">=</span> student<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment"># ---output---</span>
dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-4-items" tabindex="-1"><a class="header-anchor" href="#_9-4-items" aria-hidden="true">#</a> 9.4 .items()</h3><p>获取字典的键对值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
values <span class="token operator">=</span> student<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment"># ---output---</span>
dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-5-in" tabindex="-1"><a class="header-anchor" href="#_9-5-in" aria-hidden="true">#</a> 9.5 in</h3><ol><li>默认情况是判断 key 在字典中</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用 keys 实现纯粹判断</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>使用 values 实现纯粹判断</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function q(N,B){const o=l("CodeTabs");return u(),r("div",null,[g,c(o,{id:"95",data:[{id:"Code1"},{id:"Code2"},{id:"Code3"}]},{title0:a(({value:t,isActive:p})=>[s("Code1")]),title1:a(({value:t,isActive:p})=>[s("Code2")]),title2:a(({value:t,isActive:p})=>[s("Code3")]),tab0:a(({value:t,isActive:p})=>[b]),tab1:a(({value:t,isActive:p})=>[h]),tab2:a(({value:t,isActive:p})=>[y]),_:1}),_,n("div",x,[f,c(o,{id:"326",data:[{id:"Code1"},{id:"Code2"}]},{title0:a(({value:t,isActive:p})=>[s("Code1")]),title1:a(({value:t,isActive:p})=>[s("Code2")]),tab0:a(({value:t,isActive:p})=>[w]),tab1:a(({value:t,isActive:p})=>[T]),_:1}),A]),C])}const S=i(m,[["render",q],["__file","07-python-dict.html.vue"]]);export{S as default};
