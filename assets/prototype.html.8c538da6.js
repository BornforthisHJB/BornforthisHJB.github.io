const t=JSON.parse('{"key":"v-4524ca72","path":"/column/javascript-tutorial/oop/prototype.html","title":"6.3 对象的继承","lang":"zh-CN","frontmatter":{"title":"6.3 对象的继承","time":"2022-11-24T15:51:23.000Z","icon":"javascript1","author":"AI悦创","isOriginal":true,"category":["JavaScript tutorial"],"tag":["JavaScript tutorial"],"sticky":false,"star":false,"password":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"面向对象编程很重要的一个方面，就是对象的继承。A 对象通过继承 B 对象，就能直接拥有 B 对象的所有属性和方法。这对于代码的复用是非常有用的。 大部分面向对象的编程语言，都是通过“类”（class）实现对象的继承。传统上，JavaScript 语言的继承不通过 class，而是通过“原型对象”（prototype）实现，本章介绍 JavaScript...","head":[["meta",{"property":"og:url","content":"https://bornforthis.cn/column/javascript-tutorial/oop/prototype.html"}],["meta",{"property":"og:site_name","content":"AI悦创"}],["meta",{"property":"og:title","content":"6.3 对象的继承"}],["meta",{"property":"og:description","content":"面向对象编程很重要的一个方面，就是对象的继承。A 对象通过继承 B 对象，就能直接拥有 B 对象的所有属性和方法。这对于代码的复用是非常有用的。 大部分面向对象的编程语言，都是通过“类”（class）实现对象的继承。传统上，JavaScript 语言的继承不通过 class，而是通过“原型对象”（prototype）实现，本章介绍 JavaScript..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-24T08:42:42.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"AI悦创"}],["meta",{"property":"article:tag","content":"JavaScript tutorial"}],["meta",{"property":"article:published_time","content":"2022-11-24T15:51:23.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-24T08:42:42.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"原型对象概述","slug":"原型对象概述","link":"#原型对象概述","children":[{"level":3,"title":"构造函数的缺点","slug":"构造函数的缺点","link":"#构造函数的缺点","children":[]},{"level":3,"title":"prototype 属性的作用","slug":"prototype-属性的作用","link":"#prototype-属性的作用","children":[]},{"level":3,"title":"原型链","slug":"原型链","link":"#原型链","children":[]},{"level":3,"title":"constructor 属性","slug":"constructor-属性","link":"#constructor-属性","children":[]}]},{"level":2,"title":"instanceof 运算符","slug":"instanceof-运算符","link":"#instanceof-运算符","children":[]},{"level":2,"title":"构造函数的继承","slug":"构造函数的继承","link":"#构造函数的继承","children":[]},{"level":2,"title":"多重继承","slug":"多重继承","link":"#多重继承","children":[]},{"level":2,"title":"模块","slug":"模块","link":"#模块","children":[{"level":3,"title":"基本的实现方法","slug":"基本的实现方法","link":"#基本的实现方法","children":[]},{"level":3,"title":"封装私有变量：构造函数的写法","slug":"封装私有变量-构造函数的写法","link":"#封装私有变量-构造函数的写法","children":[]},{"level":3,"title":"封装私有变量：立即执行函数的写法","slug":"封装私有变量-立即执行函数的写法","link":"#封装私有变量-立即执行函数的写法","children":[]},{"level":3,"title":"模块的放大模式","slug":"模块的放大模式","link":"#模块的放大模式","children":[]},{"level":3,"title":"输入全局变量","slug":"输入全局变量","link":"#输入全局变量","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1669218350000,"updatedTime":1669279362000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":3}]},"readingTime":{"minutes":17.45,"words":5236},"copyright":"著作权归黄家宝|AI悦创所有\\n原文链接：https://bornforthis.cn/column/javascript-tutorial/oop/prototype.html","filePathRelative":"column/javascript-tutorial/oop/prototype.md","localizedDate":"2022年11月23日"}');export{t as data};
