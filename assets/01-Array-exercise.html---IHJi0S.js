import{_ as c}from"./gzh-DnOBNg6W.js";import{_ as F}from"./zsxq-BcdwOI-_.js";import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as p,d as y,e as a,r as d,o as u,f as n,b as s}from"./app-aKXQI1C4.js";const v={};function m(E,l){const t=d("CodeTabs");return u(),i("div",null,[l[6]||(l[6]=p('<h2 id="_1-数组的最大值和最小值" tabindex="-1"><a class="header-anchor" href="#_1-数组的最大值和最小值"><span>1. 数组的最大值和最小值</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，接收一个整数数组，返回数组中的最大值和最小值。</p><p><strong>输入示例</strong>: <code>int[] nums = {3, 5, 1, 9, 2};</code></p><p><strong>输出示例</strong>: <code>Max: 9, Min: 1</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">findMinAndMax</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p>',7)),y(t,{id:"19",data:[{id:"Code1"},{id:"Code2"},{id:"Code3"}]},{title0:a(({value:o,isActive:e})=>l[0]||(l[0]=[n("Code1")])),title1:a(({value:o,isActive:e})=>l[1]||(l[1]=[n("Code2")])),title2:a(({value:o,isActive:e})=>l[2]||(l[2]=[n("Code3")])),tab0:a(({value:o,isActive:e})=>l[3]||(l[3]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ArrayProblems"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," findMaxAndMin"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"nums"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 初始化最大值和最小值为数组第一个元素")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 遍历数组，逐步更新最大值和最小值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max) {  "),s("span",{style:{color:"#88846F"}},"// 如果当前元素比当前最大值大，更新最大值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," min) {  "),s("span",{style:{color:"#88846F"}},"// 如果当前元素比当前最小值小，更新最小值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 打印结果")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Max: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' ", Min: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," min);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 测试数组")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"};")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E"}},"        findMaxAndMin"),s("span",{style:{color:"#F8F8F2"}},"(nums);  "),s("span",{style:{color:"#88846F"}},"// 调用方法")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>l[4]||(l[4]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#A6E22E"}},"findMinAndMax"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] nums) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 初始化最大值和最小值为数组的第一个元素")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    int"),s("span",{style:{color:"#F8F8F2"}}," min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"];")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 遍历数组")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 如果当前值大于最大值，更新最大值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        // 如果当前值小于最小值，更新最小值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," min) {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    // 返回最大值和最小值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[]{min, max};")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:a(({value:o,isActive:e})=>l[5]||(l[5]=[s("div",{class:"language-java line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"ArraySolutions"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#A6E22E"}},"findMinAndMax"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"nums"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]; "),s("span",{style:{color:"#88846F"}},"// 初始化最小值为第一个元素")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}}," max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]; "),s("span",{style:{color:"#88846F"}},"// 初始化最大值为第一个元素")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F8F8F2"}}," nums) { "),s("span",{style:{color:"#88846F"}},"// 遍历数组")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," min) min "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num; "),s("span",{style:{color:"#88846F"}},"// 更新最小值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," (num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max) max "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num; "),s("span",{style:{color:"#88846F"}},"// 更新最大值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F92672"}}," new"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"[]{min, max}; "),s("span",{style:{color:"#88846F"}},"// 返回包含最小值和最大值的数组")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"};")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"        int"),s("span",{style:{color:"#F8F8F2"}},"[] result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#A6E22E"}}," findMinAndMax"),s("span",{style:{color:"#F8F8F2"}},"(nums);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Min: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," result["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' ", Max: "'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," result["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),l[7]||(l[7]=p(`<h2 id="_2-数组的元素之和" tabindex="-1"><a class="header-anchor" href="#_2-数组的元素之和"><span>2. 数组的元素之和</span></a></h2><p><strong>描述</strong>: 编写一个 Java 方法，计算并返回一个整数数组中所有元素的总和。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5};</code></p><p><strong>输出示例</strong>: <code>Sum = 15</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> calculateSum</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ArraySum</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> calculateSum</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">nums</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 初始化总和为0</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#88846F;">        // 遍历数组并累加每个元素的值</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> nums) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            sum </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> num;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#88846F;">        // 打印数组的总和</span></span>
<span class="line"><span style="color:#F8F8F2;">        System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Sum: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> sum);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">        // 测试数组</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#A6E22E;">        calculateSum</span><span style="color:#F8F8F2;">(nums);  </span><span style="color:#88846F;">// 调用方法</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_3-反转数组" tabindex="-1"><a class="header-anchor" href="#_3-反转数组"><span>3. 反转数组</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法，将给定的整数数组反转。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5};</code></p><p><strong>输出示例</strong>: <code>Reversed = {5, 4, 3, 2, 1}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">reverseArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">reverseArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;"> start </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">, end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums.length </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 定义双指针</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> (start </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> end) {</span></span>
<span class="line"><span style="color:#88846F;">        // 交换两个指针的值</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        int</span><span style="color:#F8F8F2;"> temp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[start];</span></span>
<span class="line"><span style="color:#F8F8F2;">        nums[start] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[end];</span></span>
<span class="line"><span style="color:#F8F8F2;">        nums[end] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> temp;</span></span>
<span class="line"><span style="color:#F8F8F2;">        start</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        end</span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> nums; </span><span style="color:#88846F;">// 返回反转后的数组</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] reversed </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> reverseArray</span><span style="color:#F8F8F2;">(nums);</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Reversed: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(reversed));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_4-查找目标元素的索引" tabindex="-1"><a class="header-anchor" href="#_4-查找目标元素的索引"><span>4. 查找目标元素的索引</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法，接收一个整数数组和一个目标值，返回目标值的索引，如果不存在则返回 -1。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 3, 5, 7}; int target = 5;</code></p><p><strong>输出示例</strong>: <code>Index = 2</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> findIndex</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> target);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> findIndex</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> target) {</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) { </span><span style="color:#88846F;">// 遍历数组</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (nums[i] </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> target) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> i; </span><span style="color:#88846F;">// 找到目标值时返回索引</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 如果目标值不存在，返回 -1</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;"> target </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Index: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#A6E22E;"> findIndex</span><span style="color:#F8F8F2;">(nums, target));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-去除数组中的重复值" tabindex="-1"><a class="header-anchor" href="#_5-去除数组中的重复值"><span>5. 去除数组中的重复值</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法，删除数组中的重复值，返回新的数组。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 2, 3, 4, 4, 5};</code></p><p><strong>输出示例</strong>: <code>{1, 2, 3, 4, 5}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">removeDuplicates</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">removeDuplicates</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Set</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Integer</span><span style="color:#F8F8F2;">&gt; set </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> LinkedHashSet</span><span style="color:#F8F8F2;">&lt;&gt;(); </span><span style="color:#88846F;">// 使用有序集合去重</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> nums) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        set.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(num); </span><span style="color:#88846F;">// 自动去重</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> set.</span><span style="color:#A6E22E;">stream</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">mapToInt</span><span style="color:#F8F8F2;">(Integer</span><span style="color:#F92672;">::</span><span style="color:#F8F8F2;">intValue).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 转换为数组</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Unique: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">removeDuplicates</span><span style="color:#F8F8F2;">(nums)));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-数组的元素平方" tabindex="-1"><a class="header-anchor" href="#_6-数组的元素平方"><span>6. 数组的元素平方</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法，返回一个数组，其中每个元素是原数组对应元素的平方值。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4};</code></p><p><strong>输出示例</strong>: <code>{1, 4, 9, 16}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">squareArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">squareArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] squared </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[nums.length]; </span><span style="color:#88846F;">// 创建结果数组</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        squared[i] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[i] </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> nums[i]; </span><span style="color:#88846F;">// 计算平方值</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> squared; </span><span style="color:#88846F;">// 返回结果数组</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Squared: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">squareArray</span><span style="color:#F8F8F2;">(nums)));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-两个数组的交集" tabindex="-1"><a class="header-anchor" href="#_7-两个数组的交集"><span>7. 两个数组的交集</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法，接收两个数组并返回它们的交集，结果不包含重复值。</p><p><strong>输入示例</strong>: <code>int[] nums1 = {1, 2, 2, 3}; int[] nums2 = {2, 2, 3, 4};</code></p><p><strong>输出示例</strong>: <code>{2, 3}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">findIntersection</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums1, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums2);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" data-title="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">findIntersection</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums1, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums2) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Set</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Integer</span><span style="color:#F8F8F2;">&gt; set1 </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> HashSet</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    Set</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">Integer</span><span style="color:#F8F8F2;">&gt; intersection </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> HashSet</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> nums1) set1.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(num); </span><span style="color:#88846F;">// 将第一个数组加入集合</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> nums2) { </span><span style="color:#88846F;">// 遍历第二个数组</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (set1.</span><span style="color:#A6E22E;">contains</span><span style="color:#F8F8F2;">(num)) intersection.</span><span style="color:#A6E22E;">add</span><span style="color:#F8F8F2;">(num); </span><span style="color:#88846F;">// 取交集</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> intersection.</span><span style="color:#A6E22E;">stream</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">mapToInt</span><span style="color:#F8F8F2;">(Integer</span><span style="color:#F92672;">::</span><span style="color:#F8F8F2;">intValue).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// 转换为数组</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Intersection: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">findIntersection</span><span style="color:#F8F8F2;">(nums1, nums2)));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_8-数组的左旋" tabindex="-1"><a class="header-anchor" href="#_8-数组的左旋"><span>8. 数组的左旋</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法，将数组中的元素向左旋转 k 个位置。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5}; int k = 2;</code></p><p><strong>输出示例</strong>: <code>{3, 4, 5, 1, 2}</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">leftRotateArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> k);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[] </span><span style="color:#A6E22E;">leftRotateArray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> k) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    k </span><span style="color:#F92672;">%=</span><span style="color:#F8F8F2;"> nums.length; </span><span style="color:#88846F;">// 处理旋转次数大于数组长度的情况</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] rotated </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">[nums.length];</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        rotated[i] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[(i </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> k) </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> nums.length]; </span><span style="color:#88846F;">// 计算新位置</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> rotated;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;"> k </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Rotated: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> Arrays.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">leftRotateArray</span><span style="color:#F8F8F2;">(nums, k)));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-数组是否有序" tabindex="-1"><a class="header-anchor" href="#_9-数组是否有序"><span>9. 数组是否有序</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法判断数组是否为升序排列。</p><p><strong>输入示例</strong>: <code>int[] nums = {1, 2, 3, 4, 5};</code></p><p><strong>输出示例</strong>: <code>true</code></p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> boolean</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> boolean</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) { </span><span style="color:#88846F;">// 遍历数组</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (nums[i] </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums[i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">]) </span><span style="color:#F92672;">return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 检查是否降序</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 如果所有元素都符合升序，返回 true</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Is Sorted: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(nums));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-数组的子数组之和最大值" tabindex="-1"><a class="header-anchor" href="#_10-数组的子数组之和最大值"><span>10. 数组的子数组之和最大值</span></a></h3><p><strong>描述</strong>: 编写一个 Java 方法，找出具有最大和的连续子数组，并返回其和。</p><p><strong>输入示例</strong>: <code>int[] nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};</code></p><p><strong>输出示例</strong>: <code>6</code>（子数组 <code>[4, -1, 2, 1]</code> 的和）</p><p><strong>方法签名</strong>:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#A6E22E;"> maxSubArraySum</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>答案：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> boolean</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">[] nums) {</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) { </span><span style="color:#88846F;">// 遍历数组</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (nums[i] </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> nums[i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">]) </span><span style="color:#F92672;">return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 检查是否降序</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 如果所有元素都符合升序，返回 true</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] args) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    int</span><span style="color:#F8F8F2;">[] nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Is Sorted: &quot;</span><span style="color:#F92672;"> +</span><span style="color:#A6E22E;"> isSorted</span><span style="color:#F8F8F2;">(nums));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',76))])}const A=r(v,[["render",m],["__file","01-Array-exercise.html.vue"]]),D=JSON.parse('{"path":"/Java/practice/01-Array-exercise.html","title":"01-数组练习","lang":"zh-CN","frontmatter":{"title":"01-数组练习","date":"2024-11-20T17:49:13.000Z","icon":"java","author":"AI悦创","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 数组的最大值和最小值","slug":"_1-数组的最大值和最小值","link":"#_1-数组的最大值和最小值","children":[]},{"level":2,"title":"2. 数组的元素之和","slug":"_2-数组的元素之和","link":"#_2-数组的元素之和","children":[{"level":3,"title":"3. 反转数组","slug":"_3-反转数组","link":"#_3-反转数组","children":[]},{"level":3,"title":"4. 查找目标元素的索引","slug":"_4-查找目标元素的索引","link":"#_4-查找目标元素的索引","children":[]},{"level":3,"title":"5. 去除数组中的重复值","slug":"_5-去除数组中的重复值","link":"#_5-去除数组中的重复值","children":[]},{"level":3,"title":"6. 数组的元素平方","slug":"_6-数组的元素平方","link":"#_6-数组的元素平方","children":[]},{"level":3,"title":"7. 两个数组的交集","slug":"_7-两个数组的交集","link":"#_7-两个数组的交集","children":[]},{"level":3,"title":"8. 数组的左旋","slug":"_8-数组的左旋","link":"#_8-数组的左旋","children":[]},{"level":3,"title":"9. 数组是否有序","slug":"_9-数组是否有序","link":"#_9-数组是否有序","children":[]},{"level":3,"title":"10. 数组的子数组之和最大值","slug":"_10-数组的子数组之和最大值","link":"#_10-数组的子数组之和最大值","children":[]}]}],"git":{"createdTime":1732099933000,"updatedTime":1732099933000,"contributors":[{"name":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1}]},"readingTime":{"minutes":6.64,"words":1992},"filePathRelative":"Java/practice/01-Array-exercise.md","localizedDate":"2024年11月20日","copyright":{"author":"AI悦创"}}');export{A as comp,D as data};
