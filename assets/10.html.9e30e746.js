import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as i,a as n,b as s,w as t,d as a,e as u,r as e}from"./app.c3d04198.js";const r="/assets/image-20220929225254941.db405931.png",d="/assets/image-20220930224633129.215ca54d.png",k="/assets/image-20220930232437098.aba6b471.png",v="/assets/image-20221002214450478.38cc647b.png",m="/assets/image-20221006214532260.5bd228d8.png",b="/assets/image-20221006215335396.a7d8a4f3.png",h="/assets/image-20221006215606415.00edbfd0.png",g="/assets/image-20221006215619011.c6206716.png",y="/assets/image-20221007214030174.1aa266a5.png",q="/assets/image-20221007214909714.cb29683f.png",_="/assets/image-20221007222223619.3b5b2c21.png",f="/assets/image-20221007222944120.1cc8a46f.png",x="/assets/image-20221007222714386.c7730512.png",w="/assets/image-20221007222842394.8c3b4537.png",I="/assets/image-20221007223259036.59c54347.png",A="/assets/image-20221009213510484.48e815ef.png",D={},C={class:"table-of-contents"},O=u('<h2 id="_10-字符串「dannie」" tabindex="-1"><a class="header-anchor" href="#_10-字符串「dannie」" aria-hidden="true">#</a> 10-字符串「Dannie」</h2><h2 id="_1-字符串定义" tabindex="-1"><a class="header-anchor" href="#_1-字符串定义" aria-hidden="true">#</a> 1. 字符串定义</h2><p><img src="'+r+`" alt="image-20220929225254941" loading="lazy"></p><h2 id="_2-为什么会有三种创建字符串的方法" tabindex="-1"><a class="header-anchor" href="#_2-为什么会有三种创建字符串的方法" aria-hidden="true">#</a> 2. 为什么会有三种创建字符串的方法？</h2><h3 id="_2-1-单双引号混用" tabindex="-1"><a class="header-anchor" href="#_2-1-单双引号混用" aria-hidden="true">#</a> 2.1 单双引号混用</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;I&#39;m lilei.&quot;</span>  <span class="token comment"># 单双引号混用</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-三个双引号-or-三个单引号「原样输出」" tabindex="-1"><a class="header-anchor" href="#_2-2-三个双引号-or-三个单引号「原样输出」" aria-hidden="true">#</a> 2.2 三个双引号 or 三个单引号「原样输出」</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># @Time    : 2022/9/29 22:57</span>
<span class="token comment"># @Author  : AI悦创</span>
<span class="token comment"># @FileName: lesson03.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># @Blog    ：https://bornforthis.cn/</span>
<span class="token comment"># s = &quot;I&#39;m lilei.&quot;  # 单双引号混用</span>
<span class="token comment"># print(s)</span>
s <span class="token operator">=</span> <span class="token string">&quot;AI悦创·编程一对一AI悦创·推出辅导班啦&quot;</span> \\
    <span class="token string">&quot;，包括「Python 语言辅导班、C++ 辅导班、java 辅&quot;</span> \\
    <span class="token string">&quot;导班、算法/数据结构辅导班、少儿编程、pygame 游戏&quot;</span> \\
    <span class="token string">&quot;开发」，全部都是一对一教学：一对一辅导 + 一对一答疑&quot;</span> \\
    <span class="token string">&quot; + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、&quot;</span> \\
    <span class="token string">&quot;Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应&quot;</span> \\
    <span class="token string">&quot;！微信：JiabcdefhC++ 信息奥赛题解，长期更新！长期招收一&quot;</span> \\
    <span class="token string">&quot;对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地&quot;</span> \\
    <span class="token string">&quot;区线上。微信：Jiabcdefh方法一：QQopen in new window方法&quot;</span> \\
    &quot;二：微信：Jiabcdefh\\
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\\
著作权归黄家宝<span class="token operator">|</span>AI悦创所有\\
原文链接：https<span class="token punctuation">:</span><span class="token operator">//</span>bornforthis<span class="token punctuation">.</span>cn<span class="token operator">/</span>1v1<span class="token operator">/</span><span class="token number">03</span><span class="token operator">-</span>Dannie<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">.</span>html&quot;
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>AI悦创·编程一对一AI悦创·推出辅导班啦，包括「Python 语言辅导班、C<span class="token operator">+</span><span class="token operator">+</span> 辅导班、java 辅导班、算法<span class="token operator">/</span>数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 <span class="token operator">+</span> 一对一答疑 <span class="token operator">+</span> 布置作业 <span class="token operator">+</span> 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：JiabcdefhC<span class="token operator">+</span><span class="token operator">+</span> 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh方法一：QQopen <span class="token keyword">in</span> new window方法二：微信：Jiabcdefh<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>著作权归黄家宝<span class="token operator">|</span>AI悦创所有原文链接：https<span class="token punctuation">:</span><span class="token operator">//</span>bornforthis<span class="token punctuation">.</span>cn<span class="token operator">/</span>1v1<span class="token operator">/</span><span class="token number">03</span><span class="token operator">-</span>Dannie<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">.</span>html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;AI悦创·编程一对一AI悦创·推出辅导班啦，
   包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pyg
    ame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：JiabcdefhC++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh方法一：QQopen in new window方法二：微信：Jiabcdefh
------
著作权归黄家宝|AI悦创所有
原文链接：https://bornforthis.cn/1v1/03-Dannie/10.html&quot;&quot;&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>AI悦创·编程一对一AI悦创·推出辅导班啦，
   包括「Python 语言辅导班、C<span class="token operator">+</span><span class="token operator">+</span> 辅导班、java 辅导班、算法<span class="token operator">/</span>数据结构辅导班、少儿编程、pyg
    ame 游戏开发」，全部都是一对一教学：一对一辅导 <span class="token operator">+</span> 一对一答疑 <span class="token operator">+</span> 布置作业 <span class="token operator">+</span> 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：JiabcdefhC<span class="token operator">+</span><span class="token operator">+</span> 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh方法一：QQopen <span class="token keyword">in</span> new window方法二：微信：Jiabcdefh
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
著作权归黄家宝<span class="token operator">|</span>AI悦创所有
原文链接：https<span class="token punctuation">:</span><span class="token operator">//</span>bornforthis<span class="token punctuation">.</span>cn<span class="token operator">/</span>1v1<span class="token operator">/</span><span class="token number">03</span><span class="token operator">-</span>Dannie<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">.</span>html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-代码实操" tabindex="-1"><a class="header-anchor" href="#_2-3-代码实操" aria-hidden="true">#</a> 2.3 代码实操</h3><ol><li>输出如下结果：</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Session was closed
Welcome to Ubuntu <span class="token number">18.04</span><span class="token number">.6</span> LTS <span class="token punctuation">(</span>GNU<span class="token operator">/</span>Linux <span class="token number">4.15</span><span class="token number">.0</span><span class="token operator">-</span><span class="token number">189</span><span class="token operator">-</span>generic x86_64<span class="token punctuation">)</span>
 
 <span class="token operator">*</span> Documentation<span class="token punctuation">:</span>  https<span class="token punctuation">:</span><span class="token operator">//</span><span class="token builtin">help</span><span class="token punctuation">.</span>ubuntu<span class="token punctuation">.</span>com
 <span class="token operator">*</span> Management<span class="token punctuation">:</span>     https<span class="token punctuation">:</span><span class="token operator">//</span>landscape<span class="token punctuation">.</span>canonical<span class="token punctuation">.</span>com
 <span class="token operator">*</span> Support<span class="token punctuation">:</span>        https<span class="token punctuation">:</span><span class="token operator">//</span>ubuntu<span class="token punctuation">.</span>com<span class="token operator">/</span>advantage
New release <span class="token string">&#39;20.04.5 LTS&#39;</span> available<span class="token punctuation">.</span>
Run <span class="token string">&#39;do-release-upgrade&#39;</span> to upgrade to it<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dannie-代码" tabindex="-1"><a class="header-anchor" href="#dannie-代码" aria-hidden="true">#</a> Dannie 代码</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a<span class="token operator">=</span><span class="token triple-quoted-string string">&#39;&#39;&#39;Session was closed
Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-189-generic x86_64)
 
 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
New release &#39;20.04.5 LTS&#39; available.
Run &#39;do-release-upgrade&#39; to upgrade to it.&#39;&#39;&#39;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单行输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a<span class="token operator">=</span>&quot;Session was closed\\
Welcome to Ubuntu <span class="token number">18.04</span><span class="token number">.6</span> LTS <span class="token punctuation">(</span>GNU<span class="token operator">/</span>Linux <span class="token number">4.15</span><span class="token number">.0</span><span class="token operator">-</span><span class="token number">189</span><span class="token operator">-</span>generic x86_64<span class="token punctuation">)</span>\\
\\
 <span class="token operator">*</span> Documentation<span class="token punctuation">:</span>  https<span class="token punctuation">:</span><span class="token operator">//</span><span class="token builtin">help</span><span class="token punctuation">.</span>ubuntu<span class="token punctuation">.</span>com\\
 <span class="token operator">*</span> Management<span class="token punctuation">:</span>     https<span class="token punctuation">:</span><span class="token operator">//</span>landscape<span class="token punctuation">.</span>canonical<span class="token punctuation">.</span>com\\
 <span class="token operator">*</span> Support<span class="token punctuation">:</span>        https<span class="token punctuation">:</span><span class="token operator">//</span>ubuntu<span class="token punctuation">.</span>com<span class="token operator">/</span>advantage\\
New release <span class="token string">&#39;20.04.5 LTS&#39;</span> available<span class="token punctuation">.</span>\\
Run <span class="token string">&#39;do-release-upgrade&#39;</span> to upgrade to it<span class="token punctuation">.</span>&quot;

<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-获取字符串长度-len" tabindex="-1"><a class="header-anchor" href="#_3-获取字符串长度-len" aria-hidden="true">#</a> 3. 获取字符串长度 len</h2><p><img src="`+d+`" alt="image-20220930224633129" loading="lazy"></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-字符串数据提取" tabindex="-1"><a class="header-anchor" href="#_4-字符串数据提取" aria-hidden="true">#</a> 4. 字符串数据提取</h2><p><img src="`+k+`" alt="image-20220930232437098" loading="lazy"></p><h3 id="_4-1-单个字符提取" tabindex="-1"><a class="header-anchor" href="#_4-1-单个字符提取" aria-hidden="true">#</a> 4.1 单个字符提取</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

select <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码练习" tabindex="-1"><a class="header-anchor" href="#代码练习" aria-hidden="true">#</a> 代码练习</h4><p>提取字符串中的单个字符：</p><ol><li>y✅</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

select<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>u✅</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

select<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>g✅</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

select<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-2-提取多个数据" tabindex="-1"><a class="header-anchor" href="#_4-2-提取多个数据" aria-hidden="true">#</a> 4.2 提取多个数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>

<span class="token comment"># aiy</span>
select <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># 左闭右开「取到 3 的前面一位」</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码练习-1" tabindex="-1"><a class="header-anchor" href="#代码练习-1" aria-hidden="true">#</a> 代码练习</h4><ol><li>aiyu</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>chuan</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>ang</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-有间隔的提取数据-start-end-间隔" tabindex="-1"><a class="header-anchor" href="#_4-3-有间隔的提取数据-start-end-间隔" aria-hidden="true">#</a> 4.3 有间隔的提取数据 [start: end: 间隔]</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>

<span class="token comment"># a y e h a g</span>
select <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>ayehag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="代码练习-2" tabindex="-1"><a class="header-anchor" href="#代码练习-2" aria-hidden="true">#</a> 代码练习</h4><ol><li>iucun</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
select<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>ieug</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
select<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>auhn</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
select<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-如果知道是从开始到结尾的话-开始和结尾可以省略不写" tabindex="-1"><a class="header-anchor" href="#_4-4-如果知道是从开始到结尾的话-开始和结尾可以省略不写" aria-hidden="true">#</a> 4.4 如果知道是从开始到结尾的话，开始和结尾可以省略不写</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;aiyuechuang&quot;</span>
select<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-字符串倒序" tabindex="-1"><a class="header-anchor" href="#_4-5-字符串倒序" aria-hidden="true">#</a> 4.5 字符串倒序</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>

select <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>gnauhceuyia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>

select <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-6-代码练习" tabindex="-1"><a class="header-anchor" href="#_4-6-代码练习" aria-hidden="true">#</a> 4.6 代码练习</h3><p><strong>操作目标字符串：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;Dannie Alex Jaden Austin AndersonHJB Cava&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>提取：<code>D</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie Alex Jaden Austin AndersonHJB Cava&quot;</span>

In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;D&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>提取：<code>A</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie Alex Jaden Austin AndersonHJB Cava&quot;</span>

In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;A&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>提取：<code>Dan</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie Alex Jaden Austin AndersonHJB Cava&quot;</span>

In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;Dan&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>提取：<code>Alex</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie Alex Jaden Austin AndersonHJB Cava&quot;</span>

In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;Alex&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>提取偶数下标和奇数下标</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie Alex Jaden Austin AndersonHJB Cava&quot;</span>

In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;Dni lxJdnAsi nesnJ aa&#39;</span>

In <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;aneAe ae utnAdroHBCv&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>倒序输出</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie Alex Jaden Austin AndersonHJB Cava&quot;</span>

In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;avaC BJHnosrednA nitsuA nedaJ xelA einnaD&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dannie-答案" tabindex="-1"><a class="header-anchor" href="#dannie-答案" aria-hidden="true">#</a> Dannie 答案</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;D&#39;</span>

In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;A&#39;</span>

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;Dan&#39;</span>

In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;Alex&#39;</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;DneAe ae utnAdroHBCv&#39;</span>

In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;Danie Alex Jaden Austin AndersonHJB Cava&#39;</span>

In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;avaC BJHnosrednA nitsuA nedaJ xelA einaD&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-字符串的内置函数" tabindex="-1"><a class="header-anchor" href="#_5-字符串的内置函数" aria-hidden="true">#</a> 5. 字符串的内置函数</h2><h3 id="_5-1-capitalize" tabindex="-1"><a class="header-anchor" href="#_5-1-capitalize" aria-hidden="true">#</a> 5.1 capitalize()</h3><p><strong>作用：</strong> 「对字符串开头的第一个单词大写」</p><h4 id="ipython-实现运行" tabindex="-1"><a class="header-anchor" href="#ipython-实现运行" aria-hidden="true">#</a> ipython 实现运行</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>capitalize<span class="token punctuation">(</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;Dannie&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>字符串本身不能被改变！！！需要得到最后改变的值，则需创建变量</p></blockquote><h4 id="pycharm-实现代码" tabindex="-1"><a class="header-anchor" href="#pycharm-实现代码" aria-hidden="true">#</a> pycharm 实现代码</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;dannie&quot;</span>
new_s <span class="token operator">=</span> s<span class="token punctuation">.</span>capitalize<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Dannie
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-2-count" tabindex="-1"><a class="header-anchor" href="#_5-2-count" aria-hidden="true">#</a> 5.2 count()</h3><p><strong>作用/功能：</strong> 某个字母或者单词出现的次数</p><h4 id="ipython-实现" tabindex="-1"><a class="header-anchor" href="#ipython-实现" aria-hidden="true">#</a> ipython 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pycharm-实现" tabindex="-1"><a class="header-anchor" href="#pycharm-实现" aria-hidden="true">#</a> pycharm 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;dannie&quot;</span>
count_s <span class="token operator">=</span> s<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>count_s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;dannieni&quot;</span>
count_s <span class="token operator">=</span> s<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot;ni&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>count_s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-3-startswith" tabindex="-1"><a class="header-anchor" href="#_5-3-startswith" aria-hidden="true">#</a> 5.3 startswith()</h3><p><strong>功能：</strong> 判断字符串开始是不是所查询的字母或者单词</p><h4 id="ipython-实现-1" tabindex="-1"><a class="header-anchor" href="#ipython-实现-1" aria-hidden="true">#</a> ipython 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>

In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;dnn&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span>

In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;dann&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pycharm-实现-1" tabindex="-1"><a class="header-anchor" href="#pycharm-实现-1" aria-hidden="true">#</a> pycharm 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;dannieni&quot;</span>
judge <span class="token operator">=</span> s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span>
judge1 <span class="token operator">=</span> s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;dnn&quot;</span><span class="token punctuation">)</span>
judge2 <span class="token operator">=</span> s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;dann&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>judge<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>judge1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>judge2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token boolean">True</span>
<span class="token boolean">False</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="提示-ipython-是用上面字符串" tabindex="-1"><a class="header-anchor" href="#提示-ipython-是用上面字符串" aria-hidden="true">#</a> 提示：ipython 是用上面字符串</h3><p><img src="`+v+`" alt="image-20221002214450478" loading="lazy"></p><h3 id="_5-4-endswith" tabindex="-1"><a class="header-anchor" href="#_5-4-endswith" aria-hidden="true">#</a> 5.4 endswith()</h3><p><strong>功能：</strong> 判断字符串结尾的字母或者单词</p><h4 id="ipython-实现-2" tabindex="-1"><a class="header-anchor" href="#ipython-实现-2" aria-hidden="true">#</a> ipython 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span>

In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>

In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;ie&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pycharm-实现-2" tabindex="-1"><a class="header-anchor" href="#pycharm-实现-2" aria-hidden="true">#</a> pycharm 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;dannieni&quot;</span>
judge <span class="token operator">=</span> s<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
judge1 <span class="token operator">=</span> s<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span>
judge2 <span class="token operator">=</span> s<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;ie&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>judge<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>judge1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>judge2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token boolean">False</span>
<span class="token boolean">False</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-find" tabindex="-1"><a class="header-anchor" href="#_5-5-find" aria-hidden="true">#</a> 5.5 find()</h3><p><strong>功能：</strong> 寻找字符串中第一次出现的下标「字母或者单词都只会返回第一个出现的下标」<strong>如果没有找到的，则返回：-1</strong></p><h4 id="ipython-实现-3" tabindex="-1"><a class="header-anchor" href="#ipython-实现-3" aria-hidden="true">#</a> ipython 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie&quot;</span>

In <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0</span>

In <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span>

In <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>

In <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ww&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span>

In <span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ni&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pycharm-实现-3" tabindex="-1"><a class="header-anchor" href="#pycharm-实现-3" aria-hidden="true">#</a> pycharm 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;Dannie&quot;</span>
find_position <span class="token operator">=</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span>
find_position1 <span class="token operator">=</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
find_position2 <span class="token operator">=</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
find_position3 <span class="token operator">=</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ww&quot;</span><span class="token punctuation">)</span>
find_position4 <span class="token operator">=</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ni&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_position<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_position1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_position2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_position3<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>find_position4<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">0</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token operator">-</span><span class="token number">1</span>
<span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-6-index" tabindex="-1"><a class="header-anchor" href="#_5-6-index" aria-hidden="true">#</a> 5.6 index()</h3><p><strong>功能：</strong> 查找字母或者单词第一个次出现的下标，<strong>如果没找到，则：报错</strong></p><h4 id="ipython-实现-4" tabindex="-1"><a class="header-anchor" href="#ipython-实现-4" aria-hidden="true">#</a> ipython 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;Dannie&quot;</span>

In <span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0</span>

In <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;Dn&quot;</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
ValueError                                Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>ipython<span class="token operator">-</span><span class="token builtin">input</span><span class="token operator">-</span><span class="token number">42</span><span class="token operator">-</span>96471f4f251a<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;Dn&quot;</span><span class="token punctuation">)</span>

ValueError<span class="token punctuation">:</span> substring <span class="token keyword">not</span> found

In <span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;Dn&quot;</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
ValueError                                Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>ipython<span class="token operator">-</span><span class="token builtin">input</span><span class="token operator">-</span><span class="token number">43</span><span class="token operator">-</span>96471f4f251a<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;Dn&quot;</span><span class="token punctuation">)</span>

ValueError<span class="token punctuation">:</span> substring <span class="token keyword">not</span> found

In <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;Da&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pycharm-实现-4" tabindex="-1"><a class="header-anchor" href="#pycharm-实现-4" aria-hidden="true">#</a> pycharm 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;Dannie&quot;</span>
index_position <span class="token operator">=</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># index_position1 = s.index(&quot;Dn&quot;) # 报错</span>
index_position2 <span class="token operator">=</span> s<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;Da&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>index_position<span class="token punctuation">)</span>
<span class="token comment"># print(index_position1)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>index_position2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">0</span>
<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>之后带你了解 find 与 index 的区别</p></blockquote><h3 id="_5-7-rfind" tabindex="-1"><a class="header-anchor" href="#_5-7-rfind" aria-hidden="true">#</a> 5.7 rfind()</h3><p><strong>rfind：</strong> 寻找字符串中，被查询的「字母或单词」最后一次出现的位置。</p><blockquote><p>Python rfind() 返回字符串最后一次出现的位置，如果没有匹配项则返回 -1。</p></blockquote><h4 id="ipython-实现-5" tabindex="-1"><a class="header-anchor" href="#ipython-实现-5" aria-hidden="true">#</a> ipython 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>

In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">8</span>

In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">&quot;an&quot;</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pycharm-实现-5" tabindex="-1"><a class="header-anchor" href="#pycharm-实现-5" aria-hidden="true">#</a> pycharm 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>
rfind_position <span class="token operator">=</span> s<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>rfind_position<span class="token punctuation">)</span>

rfind_position1 <span class="token operator">=</span> s<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">&quot;an&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>rfind_position1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-8-rindex" tabindex="-1"><a class="header-anchor" href="#_5-8-rindex" aria-hidden="true">#</a> 5.8 rindex()</h3><p><code>rindex()</code> 返回子字符串 str 在字符串中最后出现的位置，如果没有匹配的字符串会报异常，你可以指定可选参数 <code>[beg:end]</code> 设置查找的区间。</p><h4 id="ipython-实现-6" tabindex="-1"><a class="header-anchor" href="#ipython-实现-6" aria-hidden="true">#</a> ipython 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>略<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="pycharm-实现-6" tabindex="-1"><a class="header-anchor" href="#pycharm-实现-6" aria-hidden="true">#</a> pycharm 实现</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;this is really a string example....wow!!!&quot;</span>
str2 <span class="token operator">=</span> <span class="token string">&quot;is&quot;</span>

<span class="token keyword">print</span> <span class="token punctuation">(</span>str1<span class="token punctuation">.</span>rindex<span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span>str1<span class="token punctuation">.</span>rindex<span class="token punctuation">(</span>str2<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">5</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;test.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">6</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span> <span class="token punctuation">(</span>str1<span class="token punctuation">.</span>rindex<span class="token punctuation">(</span>str2<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ValueError<span class="token punctuation">:</span> substring <span class="token keyword">not</span> found
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Dannie</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1<span class="token operator">=</span><span class="token string">&quot;this is really a string example....wow!!!&quot;</span>
str2<span class="token operator">=</span><span class="token string">&quot;is&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>rindex<span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>rindex<span class="token punctuation">(</span>str2<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 就是从第三个字符开始查 is 所在的位置， 所以是第5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">5</span>
<span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>就是从第三个字符开始查 is 所在的位置， 所以是第5</p></blockquote><h3 id="_5-9-isalpha" tabindex="-1"><a class="header-anchor" href="#_5-9-isalpha" aria-hidden="true">#</a> 5.9 isalpha()</h3><p>Python isalpha() 方法检测字符串是否只由<strong>字母</strong>或<strong>文字</strong>组成。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python3</span>

<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;bornforthis&quot;</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 字母和中文文字</span>
<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;bornforthis教程&quot;</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;bornforthis example....wow!!!&quot;</span>  <span class="token comment"># 因为，存在空格、省略号、感叹号，所以最后结果是 False</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上实例输出结果如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token boolean">True</span>
<span class="token boolean">True</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-10-isdigit" tabindex="-1"><a class="header-anchor" href="#_5-10-isdigit" aria-hidden="true">#</a> 5.10 isdigit()</h3><p>Python isdigit() 方法检测字符串是否只由数字组成。如果字符串只包含数字则返回 True 否则返回 False。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python3</span>

<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;bornforthis example....wow!!!&quot;</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上实例输出结果如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token boolean">True</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>isdigit() 方法只对正整数有效，负数及小数均返回不正确。</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 判断是否为数字</span>
<span class="token keyword">def</span> <span class="token function">is_number</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    
    <span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token comment"># 如果能运⾏ float(s) 语句，返回 True（字符串 s 是浮点数）        </span>
        <span class="token builtin">float</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        
        <span class="token keyword">return</span> <span class="token boolean">True</span>    
    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>  <span class="token comment"># ValueError 为 Python 的⼀种标准异常，表⽰&quot;传⼊⽆效的参数&quot;        </span>
        <span class="token keyword">pass</span>  <span class="token comment"># 如果引发了 ValueError 这种异常，不做任何事情（pass：不做任何事情，⼀般⽤做占位语句）    </span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>        
        <span class="token keyword">import</span> unicodedata  <span class="token comment"># 处理 ASCII 码的包        </span>
        unicodedata<span class="token punctuation">.</span>numeric<span class="token punctuation">(</span>s<span class="token punctuation">)</span>  <span class="token comment"># 把⼀个表⽰数字的字符串转换为浮点数返回的函数        </span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>    
    <span class="token keyword">except</span> <span class="token punctuation">(</span>TypeError<span class="token punctuation">,</span> ValueError<span class="token punctuation">)</span><span class="token punctuation">:</span>        
        <span class="token keyword">pass</span>    
        <span class="token keyword">return</span> <span class="token boolean">False</span>
 
<span class="token keyword">print</span><span class="token punctuation">(</span>is_number<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>is_number<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>is_number<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>is_number<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>is_number<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>is_number<span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token boolean">True</span>
<span class="token boolean">True</span>
<span class="token boolean">True</span>
<span class="token boolean">True</span>
<span class="token boolean">True</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-11-join" tabindex="-1"><a class="header-anchor" href="#_5-11-join" aria-hidden="true">#</a> 5.11 join()</h3><p>Python <code>join()</code> 方法用于将序列中的元素以指定的字符连接生成一个新的字符串。返回通过指定字符连接序列中元素后生成的新字符串。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s1 <span class="token operator">=</span> <span class="token string">&quot;-&quot;</span>
s2 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
seq <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;o&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;o&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;h&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串序列</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>join<span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span>join<span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>b<span class="token operator">-</span>o<span class="token operator">-</span>r<span class="token operator">-</span>n<span class="token operator">-</span>f<span class="token operator">-</span>o<span class="token operator">-</span>r<span class="token operator">-</span>t<span class="token operator">-</span>h<span class="token operator">-</span>i<span class="token operator">-</span>s
bornforthis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s1<span class="token operator">=</span><span class="token string">&quot;$&quot;</span>
s2<span class="token operator">=</span><span class="token string">&quot;&amp;&quot;</span>
seq <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;o&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;o&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;h&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;i&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>join<span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span>join<span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>b$o$r$n$f$o$r$t$h$i$s
b<span class="token operator">&amp;</span>o<span class="token operator">&amp;</span>r<span class="token operator">&amp;</span>n<span class="token operator">&amp;</span>f<span class="token operator">&amp;</span>o<span class="token operator">&amp;</span>r<span class="token operator">&amp;</span>t<span class="token operator">&amp;</span>h<span class="token operator">&amp;</span>i<span class="token operator">&amp;</span>s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-12-lower" tabindex="-1"><a class="header-anchor" href="#_5-12-lower" aria-hidden="true">#</a> 5.12 lower()</h3><p>Python lower() 方法转换字符串中所有大写字符为小写。返回将字符串中所有大写字符转换为小写后生成的字符串。</p><p>以下实例展示了lower()的使用方法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;Bornforthis EXAMPLE....WOW!!!&quot;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上实例输出结果如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bornforthis example<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>wow!!!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;DANNIE IS A GOOD GIRL&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-13-upper" tabindex="-1"><a class="header-anchor" href="#_5-13-upper" aria-hidden="true">#</a> 5.13 upper()</h3><p>Python upper() 方法将字符串中的小写字母转为大写字母。返回小写字母转为大写字母的字符串。</p><p>以下实例展示了 upper() 函数的使用方法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;this is string example from bornforthis....wow!!!&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;str1.upper() : &quot;</span><span class="token punctuation">,</span> str1<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上实例输出结果如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>  THIS IS STRING EXAMPLE FROM BORNFORTHIS<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>WOW!!!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-14-strip" tabindex="-1"><a class="header-anchor" href="#_5-14-strip" aria-hidden="true">#</a> 5.14 strip()</h3><p>Python strip() 方法用于移除字符串头尾指定的字符（默认为空格）或字符序列。</p><p>**注意：**该方法只能删除开头或是结尾的字符，不能删除中间部分的字符。</p><p>返回值：返回移除字符串头尾指定的字符序列生成的新字符串。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;   aiyc    &quot;</span>
new_s <span class="token operator">=</span> s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s<span class="token punctuation">)</span>

s <span class="token operator">=</span> <span class="token string">&quot;____aiyc___&quot;</span>
new_s <span class="token operator">=</span> s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s<span class="token punctuation">)</span>

s <span class="token operator">=</span> <span class="token string">&quot;___ _aiyc_ __&quot;</span>  <span class="token comment"># 只会去除连续的，不连续的不会去除</span>
new_s <span class="token operator">=</span> s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>aiyc
aiyc
 _aiyc_ 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-15-replace" tabindex="-1"><a class="header-anchor" href="#_5-15-replace" aria-hidden="true">#</a> 5.15 replace()</h3><p>replace() 方法把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。</p><p><strong>replace() 方法语法：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>old<span class="token punctuation">,</span> new<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li>old -- 将被替换的子字符串。</li><li>new -- 新字符串，用于替换 old 子字符串。</li><li>max -- 可选字符串, 替换不超过 max 次</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiyuechuang&quot;</span>

new_s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;K&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 请把 ATGCGGC  变成 CCCCCAA</span>
s <span class="token operator">=</span> <span class="token string">&quot;ATGCGGC&quot;</span>
n <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;G&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span>
n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;T&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Dannie 的答案</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;ATGCGGC&quot;</span>
new_s1<span class="token operator">=</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s1<span class="token punctuation">)</span>
new_s2<span class="token operator">=</span>new_s1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;G&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s2<span class="token punctuation">)</span>
new_s3<span class="token operator">=</span>new_s2<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;T&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_s3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-字符串不可变性" tabindex="-1"><a class="header-anchor" href="#_6-字符串不可变性" aria-hidden="true">#</a> 6.字符串不可变性</h2><p><img src="`+m+'" alt="image-20221006214532260" loading="lazy"></p><h2 id="_7-字符串的不可变性" tabindex="-1"><a class="header-anchor" href="#_7-字符串的不可变性" aria-hidden="true">#</a> 7. 字符串的不可变性</h2><p><img src="'+b+'" alt="image-20221006215335396" loading="lazy"></p><p><img src="'+h+'" alt="image-20221006215606415" loading="lazy"></p><h2 id="_8-字符串的转译" tabindex="-1"><a class="header-anchor" href="#_8-字符串的转译" aria-hidden="true">#</a> 8. 字符串的转译</h2><p><img src="'+g+'" alt="image-20221006215619011" loading="lazy"></p><h2 id="_9-字符串的连接" tabindex="-1"><a class="header-anchor" href="#_9-字符串的连接" aria-hidden="true">#</a> 9. 字符串的连接</h2><p><img src="'+y+'" alt="image-20221007214030174" loading="lazy"></p><h2 id="_10-用户输入" tabindex="-1"><a class="header-anchor" href="#_10-用户输入" aria-hidden="true">#</a> 10. 用户输入</h2><p><img src="'+q+`" alt="image-20221007214909714" loading="lazy"></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter name:&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter name:&quot;</span><span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-input-的特点" tabindex="-1"><a class="header-anchor" href="#_11-input-的特点" aria-hidden="true">#</a> 11. input 的特点</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
aiyc
Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">str</span>

In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token number">191</span>
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">str</span>

In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">str</span>

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">str</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>input 得到的数据类型都是字符串。</strong></p><h2 id="_12-eval" tabindex="-1"><a class="header-anchor" href="#_12-eval" aria-hidden="true">#</a> 12. eval()</h2><blockquote><p><code>s=eval(input(s))</code> 是把输入的 s 的内容恢复到原来的类型</p><p>例如: <code>s = eval(input())</code><code>print(type(s))</code> 输入： [1，2，，3] 输出： &lt;class &#39;list&#39;&gt;</p></blockquote><blockquote><p>特殊情况 ： s=eval(input()) print(type(s))</p><p>输入： “DANNIE&quot; 输出： str</p><p>输入： DANNIE 输出： DANNIE</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token operator">=</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token string">&quot;dannie&quot;</span>

In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">str</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+'" alt="image-20221007222223619" loading="lazy"></p><h2 id="_13-强制转换" tabindex="-1"><a class="header-anchor" href="#_13-强制转换" aria-hidden="true">#</a> 13. 强制转换</h2><p><img src="'+f+`" alt="image-20221007222944120" loading="lazy"></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;12&quot;</span>

In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">+</span> <span class="token number">1</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
TypeError                                 Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>ipython<span class="token operator">-</span><span class="token builtin">input</span><span class="token operator">-</span><span class="token number">32</span><span class="token operator">-</span>b8bba336fa32<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> s <span class="token operator">+</span> <span class="token number">1</span>

TypeError<span class="token punctuation">:</span> must be <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token keyword">not</span> <span class="token builtin">int</span>

In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
Out<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">13</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;19aaa&quot;</span>

In <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
ValueError                                Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>ipython<span class="token operator">-</span><span class="token builtin">input</span><span class="token operator">-</span><span class="token number">35</span><span class="token operator">-</span>2c4720ab420a<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

ValueError<span class="token punctuation">:</span> invalid literal <span class="token keyword">for</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">with</span> base <span class="token number">10</span><span class="token punctuation">:</span> <span class="token string">&#39;19aaa&#39;</span>

In <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> <span class="token string">&quot;1.1&quot;</span>

In <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
ValueError                                Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>ipython<span class="token operator">-</span><span class="token builtin">input</span><span class="token operator">-</span><span class="token number">37</span><span class="token operator">-</span>2c4720ab420a<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

ValueError<span class="token punctuation">:</span> invalid literal <span class="token keyword">for</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">with</span> base <span class="token number">10</span><span class="token punctuation">:</span> <span class="token string">&#39;1.1&#39;</span>

In <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s1<span class="token operator">=</span>s<span class="token operator">+</span><span class="token number">1</span>

In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s1
Out<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+x+'" alt="image-20221007222714386" loading="lazy"></p><p><img src="'+w+'" alt="image-20221007222842394" loading="lazy"></p><h2 id="_14-作业-创建一个问答式简历生成软件" tabindex="-1"><a class="header-anchor" href="#_14-作业-创建一个问答式简历生成软件" aria-hidden="true">#</a> 14. 作业：创建一个问答式简历生成软件</h2><p><img src="'+I+`" alt="image-20221007223259036" loading="lazy"></p><h2 id="_15-dannie-作业" tabindex="-1"><a class="header-anchor" href="#_15-dannie-作业" aria-hidden="true">#</a> 15. Dannie 作业</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的姓名： &quot;</span><span class="token punctuation">)</span>
gender<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的性别： &quot;</span><span class="token punctuation">)</span>
age<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的年龄： &quot;</span><span class="token punctuation">)</span>
school<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的学校： &quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在生成您的简历......&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;**************************&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;      简历       &quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;姓名: &quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;性别： &quot;</span><span class="token punctuation">,</span> gender<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;年龄： &quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;学校： &quot;</span><span class="token punctuation">,</span> school<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16-format" tabindex="-1"><a class="header-anchor" href="#_16-format" aria-hidden="true">#</a> 16. format</h2><h3 id="_16-1-一个插入" tabindex="-1"><a class="header-anchor" href="#_16-1-一个插入" aria-hidden="true">#</a> 16.1 一个插入</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;Hi AndersonJHB, Welcome to Beijing.&quot;</span>
s1<span class="token operator">=</span><span class="token string">&quot;Hi Dannie, Welcomel to Xiamen.&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>

<span class="token comment"># 每次换个人， 换个地点，都要从新打一次， 就特别繁琐。</span>

<span class="token comment"># 但是可以用 format 来实现一点简便：</span>

s<span class="token operator">=</span><span class="token string">&quot;Hi {}, Welcome to Beijing.&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;Mason&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Hi Mason<span class="token punctuation">,</span> Welcome to Beijing<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_16-2-两个位置" tabindex="-1"><a class="header-anchor" href="#_16-2-两个位置" aria-hidden="true">#</a> 16.2 两个位置</h3><p>如果这里把地点也设置成 <code>{}</code>，也可以这样实现：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s<span class="token operator">=</span><span class="token string">&quot;Hi {}, Welcome to {}.&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;Mason&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cairns&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Hi Mason<span class="token punctuation">,</span> Welcome to Cairns<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_16-3-更像模版" tabindex="-1"><a class="header-anchor" href="#_16-3-更像模版" aria-hidden="true">#</a> 16.3 更像模版？</h3><p>我直接在这行代码后面 <code>.format{}</code> 并没有发挥代码的作用。（并没有发挥 format 的全部优点）</p><p>但是如果可以这样</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sample_str<span class="token operator">=</span><span class="token string">&quot;Hi {}, Welcome to {}.&quot;</span>

sample1<span class="token operator">=</span>sample_str<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;Mason&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cains&quot;</span><span class="token punctuation">)</span>
sample2<span class="token operator">=</span>sample_str<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;Curtis&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fraser Island&quot;</span><span class="token punctuation">)</span>
sample3<span class="token operator">=</span>sample_str<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;Dannie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Morington&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>sample1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sample2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sample3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Hi Mason<span class="token punctuation">,</span> Welcome to Cains<span class="token punctuation">.</span>
Hi Curtis<span class="token punctuation">,</span> Welcome to Fraser Island<span class="token punctuation">.</span>
Hi Dannie<span class="token punctuation">,</span> Welcome to Morington<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+A+`" alt="image-20221009213510484" loading="lazy"></p><h3 id="_16-4-怕位置放反" tabindex="-1"><a class="header-anchor" href="#_16-4-怕位置放反" aria-hidden="true">#</a> 16.4 怕位置放反？</h3><p>因为 Mason 和 Cairns 如果位置发生变化， 那么输出也会发生变化。怎么办呢？</p><p>可以这样， 指定名字 name 和 地点 location</p><p>比如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sample_str<span class="token operator">=</span><span class="token string">&quot;Hi {name}, Welcome to {location}.&quot;</span>

sample1<span class="token operator">=</span>sample_str<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Mason&quot;</span><span class="token punctuation">,</span> location<span class="token operator">=</span><span class="token string">&quot;Cains&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sample1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出： Hi Mason, Welcome to Cains.</p><p>现在这样， 即使 name 和 location 换了位置， 都不用担心输出会变。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sample_str<span class="token operator">=</span><span class="token string">&quot;Hi {name}, Welcome to {location}.&quot;</span>

sample1<span class="token operator">=</span>sample_str<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>location<span class="token operator">=</span><span class="token string">&quot;Cains&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;Mason&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sample1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Hi Mason<span class="token punctuation">,</span> Welcome to Cains<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_17-f" tabindex="-1"><a class="header-anchor" href="#_17-f" aria-hidden="true">#</a> 17. f</h2><p>赋值</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name<span class="token operator">=</span> <span class="token string">&quot;Mason&quot;</span>
location<span class="token operator">=</span> <span class="token string">&quot;Cairn&quot;</span>

sample1<span class="token operator">=</span> f <span class="token string">&quot;Hi {name}, Welcome to {location}.&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sample1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出： <code>Hi Mason, Welcome to Cairns.</code></p><p>注意 ：<code>sample1= f&quot;Hi {name}, Welcome to {location}.&quot;</code> 这里 有一个 <strong>f</strong></p><h2 id="_18" tabindex="-1"><a class="header-anchor" href="#_18" aria-hidden="true">#</a> 18. %</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 这里，还可以用一个 %s 来替代。</span>

template_str<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;Hi %s, Welcome to %s.&quot;</span></span>
s<span class="token operator">=</span>template_str <span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">&quot;Curtis&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fraser Island&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

<span class="token comment"># 输出： Hi Curtis, Welcome to Fraser Island.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="作业优化上节课的作业" tabindex="-1"><a class="header-anchor" href="#作业优化上节课的作业" aria-hidden="true">#</a> 作业优化上节课的作业</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在生成您的简历......&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;**************************&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;      简历       &quot;</span><span class="token punctuation">)</span>
name<span class="token operator">=</span><span class="token string">&quot;黄家宝&quot;</span>
gender<span class="token operator">=</span> <span class="token string">&quot;男&quot;</span>
age<span class="token operator">=</span><span class="token string">&quot;21&quot;</span>
school<span class="token operator">=</span><span class="token string">&quot;厦门工学院&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;姓名:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;性别{}&quot;</span> <span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>gender<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;年龄：{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;学校：{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>school<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">###用% 实现</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在生成您的简历......&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;**************************&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;      简历       &quot;</span><span class="token punctuation">)</span>
name<span class="token operator">=</span><span class="token string">&quot;黄家宝&quot;</span>
gender<span class="token operator">=</span> <span class="token string">&quot;男&quot;</span>
age<span class="token operator">=</span><span class="token string">&quot;21&quot;</span>
school<span class="token operator">=</span><span class="token string">&quot;厦门工学院&quot;</span>
resume<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;&#39;&#39;姓名：%s
性别：%s
年龄：%s
学校：%s&#39;&#39;&#39;</span></span>
data<span class="token operator">=</span>resume <span class="token operator">%</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>age<span class="token punctuation">,</span>school<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_19-保留小数点" tabindex="-1"><a class="header-anchor" href="#_19-保留小数点" aria-hidden="true">#</a> 19. 保留小数点</h2>`,274),T={href:"https://bornforthis.cn/column/py/basequestion/radix_point.html",target:"_blank",rel:"noopener noreferrer"},J=n("p",null,"这里就是 1.23456 乘以了 1000 之后，被 int 截掉了 ， 变成了 1234， 然后再除以 1000 ， 所以答案 变成 ： 1.234",-1);function H(j,E){const p=e("router-link"),o=e("ExternalLinkIcon");return c(),i("div",null,[n("nav",C,[n("ul",null,[n("li",null,[s(p,{to:"#_10-字符串「dannie」"},{default:t(()=>[a("10-字符串「Dannie」")]),_:1})]),n("li",null,[s(p,{to:"#_1-字符串定义"},{default:t(()=>[a("1. 字符串定义")]),_:1})]),n("li",null,[s(p,{to:"#_2-为什么会有三种创建字符串的方法"},{default:t(()=>[a("2. 为什么会有三种创建字符串的方法？")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#_2-1-单双引号混用"},{default:t(()=>[a("2.1 单双引号混用")]),_:1})]),n("li",null,[s(p,{to:"#_2-2-三个双引号-or-三个单引号「原样输出」"},{default:t(()=>[a("2.2 三个双引号 or 三个单引号「原样输出」")]),_:1})]),n("li",null,[s(p,{to:"#_2-3-代码实操"},{default:t(()=>[a("2.3 代码实操")]),_:1})])])]),n("li",null,[s(p,{to:"#_3-获取字符串长度-len"},{default:t(()=>[a("3. 获取字符串长度 len")]),_:1})]),n("li",null,[s(p,{to:"#_4-字符串数据提取"},{default:t(()=>[a("4. 字符串数据提取")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#_4-1-单个字符提取"},{default:t(()=>[a("4.1 单个字符提取")]),_:1})]),n("li",null,[s(p,{to:"#_4-2-提取多个数据"},{default:t(()=>[a("4.2 提取多个数据")]),_:1})]),n("li",null,[s(p,{to:"#_4-3-有间隔的提取数据-start-end-间隔"},{default:t(()=>[a("4.3 有间隔的提取数据 [start: end: 间隔]")]),_:1})]),n("li",null,[s(p,{to:"#_4-4-如果知道是从开始到结尾的话-开始和结尾可以省略不写"},{default:t(()=>[a("4.4 如果知道是从开始到结尾的话，开始和结尾可以省略不写")]),_:1})]),n("li",null,[s(p,{to:"#_4-5-字符串倒序"},{default:t(()=>[a("4.5 字符串倒序")]),_:1})]),n("li",null,[s(p,{to:"#_4-6-代码练习"},{default:t(()=>[a("4.6 代码练习")]),_:1})])])]),n("li",null,[s(p,{to:"#_5-字符串的内置函数"},{default:t(()=>[a("5. 字符串的内置函数")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#_5-1-capitalize"},{default:t(()=>[a("5.1 capitalize()")]),_:1})]),n("li",null,[s(p,{to:"#_5-2-count"},{default:t(()=>[a("5.2 count()")]),_:1})]),n("li",null,[s(p,{to:"#_5-3-startswith"},{default:t(()=>[a("5.3 startswith()")]),_:1})]),n("li",null,[s(p,{to:"#提示-ipython-是用上面字符串"},{default:t(()=>[a("提示：ipython 是用上面字符串")]),_:1})]),n("li",null,[s(p,{to:"#_5-4-endswith"},{default:t(()=>[a("5.4 endswith()")]),_:1})]),n("li",null,[s(p,{to:"#_5-5-find"},{default:t(()=>[a("5.5 find()")]),_:1})]),n("li",null,[s(p,{to:"#_5-6-index"},{default:t(()=>[a("5.6 index()")]),_:1})]),n("li",null,[s(p,{to:"#_5-7-rfind"},{default:t(()=>[a("5.7 rfind()")]),_:1})]),n("li",null,[s(p,{to:"#_5-8-rindex"},{default:t(()=>[a("5.8 rindex()")]),_:1})]),n("li",null,[s(p,{to:"#_5-9-isalpha"},{default:t(()=>[a("5.9 isalpha()")]),_:1})]),n("li",null,[s(p,{to:"#_5-10-isdigit"},{default:t(()=>[a("5.10 isdigit()")]),_:1})]),n("li",null,[s(p,{to:"#_5-11-join"},{default:t(()=>[a("5.11 join()")]),_:1})]),n("li",null,[s(p,{to:"#_5-12-lower"},{default:t(()=>[a("5.12 lower()")]),_:1})]),n("li",null,[s(p,{to:"#_5-13-upper"},{default:t(()=>[a("5.13 upper()")]),_:1})]),n("li",null,[s(p,{to:"#_5-14-strip"},{default:t(()=>[a("5.14 strip()")]),_:1})]),n("li",null,[s(p,{to:"#_5-15-replace"},{default:t(()=>[a("5.15 replace()")]),_:1})])])]),n("li",null,[s(p,{to:"#_6-字符串不可变性"},{default:t(()=>[a("6.字符串不可变性")]),_:1})]),n("li",null,[s(p,{to:"#_7-字符串的不可变性"},{default:t(()=>[a("7. 字符串的不可变性")]),_:1})]),n("li",null,[s(p,{to:"#_8-字符串的转译"},{default:t(()=>[a("8. 字符串的转译")]),_:1})]),n("li",null,[s(p,{to:"#_9-字符串的连接"},{default:t(()=>[a("9. 字符串的连接")]),_:1})]),n("li",null,[s(p,{to:"#_10-用户输入"},{default:t(()=>[a("10. 用户输入")]),_:1})]),n("li",null,[s(p,{to:"#_11-input-的特点"},{default:t(()=>[a("11. input 的特点")]),_:1})]),n("li",null,[s(p,{to:"#_12-eval"},{default:t(()=>[a("12. eval()")]),_:1})]),n("li",null,[s(p,{to:"#_13-强制转换"},{default:t(()=>[a("13. 强制转换")]),_:1})]),n("li",null,[s(p,{to:"#_14-作业-创建一个问答式简历生成软件"},{default:t(()=>[a("14. 作业：创建一个问答式简历生成软件")]),_:1})]),n("li",null,[s(p,{to:"#_15-dannie-作业"},{default:t(()=>[a("15. Dannie 作业")]),_:1})]),n("li",null,[s(p,{to:"#_16-format"},{default:t(()=>[a("16. format")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#_16-1-一个插入"},{default:t(()=>[a("16.1 一个插入")]),_:1})]),n("li",null,[s(p,{to:"#_16-2-两个位置"},{default:t(()=>[a("16.2 两个位置")]),_:1})]),n("li",null,[s(p,{to:"#_16-3-更像模版"},{default:t(()=>[a("16.3 更像模版？")]),_:1})]),n("li",null,[s(p,{to:"#_16-4-怕位置放反"},{default:t(()=>[a("16.4 怕位置放反？")]),_:1})])])]),n("li",null,[s(p,{to:"#_17-f"},{default:t(()=>[a("17. f")]),_:1})]),n("li",null,[s(p,{to:"#_18"},{default:t(()=>[a("18. %")]),_:1})]),n("li",null,[s(p,{to:"#作业优化上节课的作业"},{default:t(()=>[a("作业优化上节课的作业")]),_:1})]),n("li",null,[s(p,{to:"#_19-保留小数点"},{default:t(()=>[a("19. 保留小数点")]),_:1})])])]),O,n("ul",null,[n("li",null,[n("a",T,[a("https://bornforthis.cn/column/py/basequestion/radix_point.html"),s(o)])])]),J])}const z=l(D,[["render",H],["__file","10.html.vue"]]);export{z as default};
