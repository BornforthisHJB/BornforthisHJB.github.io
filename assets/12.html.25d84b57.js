import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as l,a as n,b as s,w as e,e as c,r as i,d as t}from"./app.b69bca8f.js";const u="/assets/image-20221027213954509.41cd499c.png",r="/assets/image-20221027214729922.ff6d7753.png",d={},k={class:"table-of-contents"},m=c('<h2 id="_12-元组「dannie」" tabindex="-1"><a class="header-anchor" href="#_12-元组「dannie」" aria-hidden="true">#</a> 12-元组「Dannie」</h2><h2 id="列表和元组的对比" tabindex="-1"><a class="header-anchor" href="#列表和元组的对比" aria-hidden="true">#</a> 列表和元组的对比</h2><p><img src="'+u+'" alt="image-20221027213954509" loading="lazy"></p><h2 id="元组数据提取" tabindex="-1"><a class="header-anchor" href="#元组数据提取" aria-hidden="true">#</a> 元组数据提取</h2><h2 id="test" tabindex="-1"><a class="header-anchor" href="#test" aria-hidden="true">#</a> Test</h2><p><img src="'+r+`" alt="image-20221027214729922" loading="lazy"></p><h2 id="特殊" tabindex="-1"><a class="header-anchor" href="#特殊" aria-hidden="true">#</a> 特殊</h2><p>元组只有一个元素的时：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解决方法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;tuple&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="对元组进行排序" tabindex="-1"><a class="header-anchor" href="#对元组进行排序" aria-hidden="true">#</a> 对元组进行排序</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1515</span><span class="token punctuation">,</span><span class="token number">4545</span><span class="token punctuation">,</span><span class="token number">4545</span><span class="token punctuation">,</span><span class="token number">454</span><span class="token punctuation">,</span><span class="token number">7874877</span><span class="token punctuation">,</span><span class="token number">88485</span><span class="token punctuation">,</span><span class="token number">44564</span><span class="token punctuation">)</span>

tup_new<span class="token operator">=</span><span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>tup_new<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：<code>(454, 1515, 4545, 4545, 44564, 88485, 7874877)</code></p><blockquote><p>元组若进行排序的话， 一定要强制转化元组。 具体意思就是 <code>tup_new=tuple(sorted(tup))</code> , 这里一定是要 tuple</p></blockquote>`,20);function h(b,v){const a=i("router-link");return o(),l("div",null,[n("nav",k,[n("ul",null,[n("li",null,[s(a,{to:"#_12-元组「dannie」"},{default:e(()=>[t("12-元组「Dannie」")]),_:1})]),n("li",null,[s(a,{to:"#列表和元组的对比"},{default:e(()=>[t("列表和元组的对比")]),_:1})]),n("li",null,[s(a,{to:"#元组数据提取"},{default:e(()=>[t("元组数据提取")]),_:1})]),n("li",null,[s(a,{to:"#test"},{default:e(()=>[t("Test")]),_:1})]),n("li",null,[s(a,{to:"#特殊"},{default:e(()=>[t("特殊")]),_:1})]),n("li",null,[s(a,{to:"#对元组进行排序"},{default:e(()=>[t("对元组进行排序")]),_:1})])])]),m])}const y=p(d,[["render",h],["__file","12.html.vue"]]);export{y as default};
