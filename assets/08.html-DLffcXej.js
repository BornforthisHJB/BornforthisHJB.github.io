import{_ as i}from"./gzh-DnOBNg6W.js";import{_ as r}from"./zsxq-BcdwOI-_.js";import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as F,f as p,h as y,i as l,r as d,o as v,g as s,j as n}from"./app-B8IFuFCf.js";const u="/assets/428605e7e3e4895a75c8678257fbedc7-B8okRRL3.png",m={};function b(g,a){const t=d("CodeTabs");return v(),F("div",null,[a[6]||(a[6]=p('<p>你好，我是悦创。</p><h2 id="_1-布尔运算符" tabindex="-1"><a class="header-anchor" href="#_1-布尔运算符"><span>1. 布尔运算符</span></a></h2><figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里强调一点，根据一个具有实际开发十几年经验的前辈所得来的经验，能用 <strong>且且、或或</strong> 运算符，尽量使用 <strong>且且、或或</strong> ，具体原因先看如下代码：</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;"> * project = &#39;Java_Coder&#39;, file_name = &#39;笔记&#39;, author = &#39;AI悦创&#39;</span></span>
<span class="line"><span style="color:#88846F;"> * time = &#39;2020/5/8 下午6:15&#39;, product_name = IntelliJ IDEA, 公众号：AI悦创</span></span>
<span class="line"><span style="color:#88846F;"> * code is far away from bugs with the god animal protecting</span></span>
<span class="line"><span style="color:#88846F;"> *    I love animals. They taste delicious.</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">notes</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">&amp;</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// &amp; 且 （and）</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// &amp;&amp; 且且 （andand）</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// | 或 （or）</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// | 或或 （oror）</span></span>
<span class="line"><span style="color:#88846F;">		// 对比</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>上面的代码，我们一部分一部分拿出来讲解。</p><h3 id="_1-1-第一部分" tabindex="-1"><a class="header-anchor" href="#_1-1-第一部分"><span>1.1 第一部分</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">notes</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">&amp;</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// &amp; 且 （and）</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// &amp;&amp; 且且 （andand）</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>a &amp; b （a and b）的运行逻辑是这样的：</strong></p><ol><li>它会先查看 <strong>a</strong> 值的真假，如果 <strong>a</strong> 是假的，那程序就不会继续判断 b 的真假——返回：<strong>false</strong>；</li><li>如果 <strong>a</strong> 是真的，则会继续判断 <strong>b</strong> 的真假，如果 <strong>b</strong> 的值为真则返回：<strong>true</strong>，反之为：<strong>false</strong>；</li><li>关于 <code>&amp;&amp;</code> 看如下代码，分析规律：</li></ol>`,10)),y(t,{id:"40",data:[{id:"demo1"},{id:"demo2"},{id:"demo3"}]},{title0:l(({value:e,isActive:o})=>a[0]||(a[0]=[n("demo1")])),title1:l(({value:e,isActive:o})=>a[1]||(a[1]=[n("demo2")])),title2:l(({value:e,isActive:o})=>a[2]||(a[2]=[n("demo3")])),tab0:l(({value:e,isActive:o})=>a[3]||(a[3]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"demo"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"(("),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F92672"}}," >"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"&"),s("span",{style:{color:"#AE81FF"}}," true"),s("span",{style:{color:"#F8F8F2"}},");  "),s("span",{style:{color:"#88846F"}},"// 如果第一个判断就是错误的，后面是否错误还是正确已然没有继续判断的意义了。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"//        System.out.println((10/0 > 1) && true);")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"// 输出：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"Exception"),s("span",{style:{color:"#F8F8F2"}}," in thread "),s("span",{style:{color:"#E6DB74"}},'"main"'),s("span",{style:{color:"#F8F8F2"}}," java.lang.ArithmeticException"),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#F92672"}}," /"),s("span",{style:{color:"#F8F8F2"}}," by zero")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"	at demo."),s("span",{style:{color:"#A6E22E"}},"main"),s("span",{style:{color:"#F8F8F2"}},"(demo.java"),s("span",{style:{color:"#F92672"}},":"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:l(({value:e,isActive:o})=>a[4]||(a[4]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"demo"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"false"),s("span",{style:{color:"#F92672"}}," &&"),s("span",{style:{color:"#AE81FF"}}," 10"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F92672"}}," >"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},");  "),s("span",{style:{color:"#88846F"}},"// false, 没有报错，显然 Java 没有后面的代码进行运行")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:l(({value:e,isActive:o})=>a[5]||(a[5]=[s("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"public"),s("span",{style:{color:"#F92672"}}," class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"demo"),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    public"),s("span",{style:{color:"#F92672"}}," static"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," void"),s("span",{style:{color:"#A6E22E"}}," main"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"String"),s("span",{style:{color:"#F8F8F2"}},"[] "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"args"),s("span",{style:{color:"#F8F8F2"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        System.out."),s("span",{style:{color:"#A6E22E"}},"println"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"false"),s("span",{style:{color:"#F92672"}}," &"),s("span",{style:{color:"#AE81FF"}}," 10"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F92672"}}," >"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"); "),s("span",{style:{color:"#88846F"}},"// 报错了，Java 对后面的代码也进行了运行")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        /*报错内容：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},'        * Exception in thread "main" java.lang.ArithmeticException: / by zero')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"	at demo.main(demo.java:7)*/")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),a[7]||(a[7]=p(`<h3 id="_1-2-第二部分" tabindex="-1"><a class="header-anchor" href="#_1-2-第二部分"><span>1.2 第二部分</span></a></h3><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;"> * project = &#39;Java_Coder&#39;, file_name = &#39;笔记&#39;, author = &#39;AI悦创&#39;</span></span>
<span class="line"><span style="color:#88846F;"> * time = &#39;2020/5/8 下午6:15&#39;, product_name = IntelliJ IDEA, 公众号：AI悦创</span></span>
<span class="line"><span style="color:#88846F;"> * code is far away from bugs with the god animal protecting</span></span>
<span class="line"><span style="color:#88846F;"> *    I love animals. They taste delicious.</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">notes</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// | 或 （or）</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> b); </span><span style="color:#88846F;">// | 或或 （oror）</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>a | b （a or b）的运行逻辑是这样的：</strong></p><ol><li>它会先判断 <strong>a</strong> 是真是假，如果 <strong>a</strong> 是真的则会继续判断 <strong>b</strong> 的真假，<strong>b</strong> 为真返回结果回——<strong>true</strong>，<strong>b</strong> 为假返回的也是——<strong>true</strong>；</li><li>如果 <strong>a</strong> 是假的，也会继续判断 <strong>b</strong> 的真假，如果 <strong>b</strong> 为真，则返回——<strong>true</strong>，反之为——<strong>false</strong>；</li></ol><p><strong>a || b （a oror b）的运行逻辑是这样的：</strong></p><ol><li>它会先判断 <strong>a</strong> 的真假，与上面其实类似，但是多了一个一个功能，就是：如果 <strong>a</strong> 为真，程序就不会再判断 <strong>b</strong> 的真假，其实也就是做了进一步优化。（上面的 <code>a|b</code> 虽然对结果没有影响，但还要多运行计算就有点浪费运行资源了）</li></ol><blockquote><p>综上：实际开发中多用 <code>||</code>、<code>&amp;&amp;</code></p></blockquote><h3 id="_1-3-第三部分" tabindex="-1"><a class="header-anchor" href="#_1-3-第三部分"><span>1.3 第三部分</span></a></h3><p>这样第三部分的代码就是为了让大家更加清晰的了解到，运行结果会出现一个警告（提示），代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">notes</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">		// 对比</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以把上面的代码，分开运行为了更好观察输出结果：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">notes</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">		// 对比</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Exception</span><span style="color:#F8F8F2;"> in thread </span><span style="color:#E6DB74;">&quot;main&quot;</span><span style="color:#F8F8F2;"> java.lang.ArithmeticException</span><span style="color:#F92672;">:</span><span style="color:#F92672;"> /</span><span style="color:#F8F8F2;"> by zero</span></span>
<span class="line"><span style="color:#F8F8F2;">	at BigNumber.</span><span style="color:#A6E22E;">main</span><span style="color:#F8F8F2;">(BigNumber.java</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;">14</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们再来看看，下面代码：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BigNumber</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span></span>
<span class="line"><span style="color:#88846F;">		// 对比</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过这个例子，你就了解了 <strong>或或、且且</strong> 的具体特点了。</p><h3 id="_1-4-回顾" tabindex="-1"><a class="header-anchor" href="#_1-4-回顾"><span>1.4 回顾</span></a></h3><p>这回来看这个 andand 就知道了，如果 a 是 false，就不会继续判断 b 位置得真假。</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;"> * project = &#39;code005&#39;, file_name = &#39;BigNumber&#39;, author = &#39;AI悦创&#39;</span></span>
<span class="line"><span style="color:#88846F;"> * time = &#39;2020/5/8 10:10&#39;, product_name = IntelliJ IDEA, 公众号：AI悦创</span></span>
<span class="line"><span style="color:#88846F;"> * code is far away from bugs with the god animal protecting</span></span>
<span class="line"><span style="color:#88846F;"> *    I love animals. They taste delicious.</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BigNumber</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span></span>
<span class="line"><span style="color:#88846F;">		// 对比</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>运行结果：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#AE81FF;">false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果 a 为真则继续判断，代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BigNumber</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span></span>
<span class="line"><span style="color:#88846F;">		// 对比</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Is runing&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Exception</span><span style="color:#F8F8F2;"> in thread </span><span style="color:#E6DB74;">&quot;main&quot;</span><span style="color:#F8F8F2;"> java.lang.ArithmeticException</span><span style="color:#F92672;">:</span><span style="color:#F92672;"> /</span><span style="color:#F8F8F2;"> by zero</span></span>
<span class="line"><span style="color:#F8F8F2;">	at BigNumber.</span><span style="color:#A6E22E;">main</span><span style="color:#F8F8F2;">(BigNumber.java</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;">14</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果这个输出后面还有程序运行，则不会输出：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">public</span><span style="color:#F92672;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BigNumber</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	public</span><span style="color:#F92672;"> static</span><span style="color:#66D9EF;font-style:italic;"> void</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">[] </span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		boolean</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span></span>
<span class="line"><span style="color:#88846F;">		// 对比</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(a </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">10</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> &gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">		System.out.</span><span style="color:#A6E22E;">println</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Is runing&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Exception</span><span style="color:#F8F8F2;"> in thread </span><span style="color:#E6DB74;">&quot;main&quot;</span><span style="color:#F8F8F2;"> java.lang.ArithmeticException</span><span style="color:#F92672;">:</span><span style="color:#F92672;"> /</span><span style="color:#F8F8F2;"> by zero</span></span>
<span class="line"><span style="color:#F8F8F2;">	at BigNumber.</span><span style="color:#A6E22E;">main</span><span style="color:#F8F8F2;">(BigNumber.java</span><span style="color:#F92672;">:</span><span style="color:#AE81FF;">14</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="`+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',36))])}const k=c(m,[["render",b],["__file","08.html.vue"]]),D=JSON.parse('{"path":"/Java/chapter01/08.html","title":"08-Java 的布尔运算「专栏补充」","lang":"zh-CN","frontmatter":{"title":"08-Java 的布尔运算「专栏补充」","date":"2023-01-09T08:37:38.000Z","icon":"java","author":"AI悦创","isOriginal":true,"category":["Java体系课"],"tag":["Java体系课"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"footer":"长期招收编程一对一学员！微信：Jiabcdefh, <a href=\\"https://beian.miit.gov.cn/\\" target=\\"_blank\\">闽ICP备19021486号-6</a>","feed":false,"seo":false,"head":[]},"git":{"createdTime":1732028288000,"updatedTime":1732028288000,"contributors":[{"name":"AndersonHJB","username":"AndersonHJB","email":"bornforthis@bornforthis.cn","commits":1,"url":"https://github.com/AndersonHJB"}]},"readingTime":{"minutes":4.94,"words":1481},"filePathRelative":"Java/chapter01/08.md","localizedDate":"2023年1月9日","copyright":{"author":"AI悦创"}}');export{k as comp,D as data};
