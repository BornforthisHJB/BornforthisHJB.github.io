import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,a as n,b as c,d as a,f as s,r as p,o as k,e as l}from"./app-CCynqo5C.js";const m={},y={style:{"text-align":"center"}};function F(u,e){const o=p("CodeTabs"),d=p("VPCard");return k(),b("div",null,[e[20]||(e[20]=n('<h2 id="_1-理解变量——生活中的例子" tabindex="-1"><a class="header-anchor" href="#_1-理解变量——生活中的例子"><span>1. 理解变量——生活中的例子</span></a></h2><h3 id="_1-1-从字面意思去理解" tabindex="-1"><a class="header-anchor" href="#_1-1-从字面意思去理解"><span>1.1 从字面意思去理解</span></a></h3><ul><li>变：变化</li><li>量：大小</li></ul><h3 id="_1-2-举个例子🌰" tabindex="-1"><a class="header-anchor" href="#_1-2-举个例子🌰"><span>1.2 举个例子🌰</span></a></h3><p>假如，你是班级当中的课代表，每个月需要统计班级中每个学生的月考成绩。月考成绩会每个月一张纸，每张纸上都会依次记录每个学生的成绩越到成绩，例如：</p><ol><li>李雷 98分</li><li>马冬梅 89分</li><li>刘奕彤 96分</li><li>......</li></ol><p>某一天，老师要看刘奕彤 1月、2月、3月的成绩，这个时候作为课代表的你需要怎么办。——总不能直接把每个月的月考成绩单直接给老师，显然是不合适的。</p><p>我们应该把刘奕彤 1月、2月、3月的成绩抄写到单独的一张纸上，接着给老师。</p><p>那么，我们为什么不一开始直接为每一个学生分配一个信封呢？（也可以是档案袋）信封在一开始是扁的，当我们放东西（数据）进去之后，是不是鼓起来了？——是不是变化了？是不是有大小了呢？显然是的。</p><p>那么信封，是不是在我们当前所处的空间当中开辟空间，来存放数据并且说这是信封。</p><p>类似的有：冰箱，不也是在我们当前所处的空间中，开辟空间。</p><p>——所以，<strong><span style="color:orange;">变量不就是在计算机的内存当中开辟空间，来存储数据。</span></strong></p><p><strong>特点：</strong> 变量的值会被覆盖，只会记着最后一个值。</p><h2 id="_2-如何创建变量——赋值语句" tabindex="-1"><a class="header-anchor" href="#_2-如何创建变量——赋值语句"><span>2. 如何创建变量——赋值语句</span></a></h2><ol><li><strong>变量：通过变量名代表或引用某个值。</strong></li></ol><ul><li>女娲捏了泥人，泥人没有生命，女娲挥了挥手柳条，赋予给泥人生命。此时，泥人可以代表说是女娲的后人。「变量：泥人，值：女娲」</li><li>全国人民代表大会，中的人大代表，是由广大人民群众投票选举出来的。他们的权利不是自己获取的，所以他们可以说：我代表的是广大人民群众的意志。「变量：人大代表，值：人民群众」</li></ul><ol start="2"><li>初始化赋值语句: <strong>变量名 = 表达式</strong> 「<code>=</code> 叫做：赋值运算符」</li></ol><ul><li>变量名：就是这个空间，我们叫它什么名字；</li><li>表达式：类似数学表达；</li></ul><p>程序的运行逻辑：<strong>从上到下，从右到左，最后才是赋值。</strong></p>',19)),c(o,{id:"111",data:[{id:"demo1"},{id:"demo2"}]},{title0:a(({value:i,isActive:t})=>e[0]||(e[0]=[l("demo1")])),title1:a(({value:i,isActive:t})=>e[1]||(e[1]=[l("demo2")])),tab0:a(({value:i,isActive:t})=>e[2]||(e[2]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"x "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#88846F"}},"  # 1 赋值给了 x，x 代表1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"x "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," x "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 10"),s("span",{style:{color:"#88846F"}},"  # x + 10 等价于 1 + 10 最后得出 11，11 赋值给 x")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(x)  "),s("span",{style:{color:"#88846F"}},"# print 打印、输出")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 井号是用来注释、注解，解释某一行代码的功能或者作用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ---output---")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"11")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:i,isActive:t})=>e[3]||(e[3]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "lilei"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(name2)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 覆盖")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "lilei"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "hanmeimei"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(name1)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ---output---")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lilei")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"hanmeimei")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),e[21]||(e[21]=n(`<h2 id="_3-探究-print" tabindex="-1"><a class="header-anchor" href="#_3-探究-print"><span>3. 探究 print</span></a></h2><h3 id="_3-1-同时输出多个数据" tabindex="-1"><a class="header-anchor" href="#_3-1-同时输出多个数据"><span>3.1 同时输出多个数据</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从输出的结果可以看出，print 同时输出多个变量，每个值之间默认以空格间隔。</p><p>那么，我们可以修改这个默认空格间隔么？——答案显然是可以的。</p><p>使用 sep。</p><h3 id="_3-2-sep-修改多个变量同时输出的间隔" tabindex="-1"><a class="header-anchor" href="#_3-2-sep-修改多个变量同时输出的间隔"><span>3.2 sep 修改多个变量同时输出的间隔</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c, </span><span style="color:#FD971F;font-style:italic;">sep</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39; 间隔 &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> 间隔 </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> 间隔 </span><span style="color:#AE81FF;">3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-end-修改-print-输出结尾方式" tabindex="-1"><a class="header-anchor" href="#_3-3-end-修改-print-输出结尾方式"><span>3.3 end 修改 print 输出结尾方式</span></a></h3>`,9)),c(o,{id:"142",data:[{id:"原本"},{id:"修改结尾 end 1"},{id:"修改 end 2"}]},{title0:a(({value:i,isActive:t})=>e[4]||(e[4]=[l("原本")])),title1:a(({value:i,isActive:t})=>e[5]||(e[5]=[l("修改结尾 end 1")])),title2:a(({value:i,isActive:t})=>e[6]||(e[6]=[l("修改 end 2")])),tab0:a(({value:i,isActive:t})=>e[7]||(e[7]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"c "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(a)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(b)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(c)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ---output---")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:i,isActive:t})=>e[8]||(e[8]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"c "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(a, "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"\\n\\n\\n"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F8F8F2"}},")  "),s("span",{style:{color:"#88846F"}},"# 多换行几个，\\n 是换行的意思")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(b)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(c)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ---output---")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:i,isActive:t})=>e[9]||(e[9]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"c "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(a, "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'" Hugo is hugo "'),s("span",{style:{color:"#F8F8F2"}},")  "),s("span",{style:{color:"#88846F"}},"# 我们可以修改成不换行的字符串")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(b)  "),s("span",{style:{color:"#88846F"}},"# 这行的输出就会紧接着上面输出的结尾输出")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(c)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ---output---")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}}," Hugo "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F8F8F2"}}," hugo "),s("span",{style:{color:"#AE81FF"}},"1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),e[22]||(e[22]=n(`<h3 id="_3-4-end-和-sep-可以同时使用" tabindex="-1"><a class="header-anchor" href="#_3-4-end-和-sep-可以同时使用"><span>3.4 end 和 sep 可以同时使用</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c, </span><span style="color:#FD971F;font-style:italic;">sep</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;~&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot; love Python&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">~</span><span style="color:#AE81FF;">1</span><span style="color:#F92672;">~</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> love Python</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-进阶的赋值方法" tabindex="-1"><a class="header-anchor" href="#_4-进阶的赋值方法"><span>4. 进阶的赋值方法</span></a></h2><h3 id="_4-1-多个变量同时赋予相同的值" tabindex="-1"><a class="header-anchor" href="#_4-1-多个变量同时赋予相同的值"><span>4.1 多个变量同时赋予相同的值</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 1</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-多个变量同时赋予不同的值" tabindex="-1"><a class="header-anchor" href="#_4-2-多个变量同时赋予不同的值"><span>4.2 多个变量同时赋予不同的值</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a, b, c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)),s("div",y,[c(d,{title:"变量的专项练习",desc:"交换果汁、多个变量输出",logo:"/aiyc.svg",link:"/column/py/basequestion/special_variabl.html",background:"rgba(253, 230, 138, 0.15)"})]),e[23]||(e[23]=n(`<h2 id="_5-变量的命名规则" tabindex="-1"><a class="header-anchor" href="#_5-变量的命名规则"><span>5. 变量的命名规则</span></a></h2><ul><li>大小写英文、数字和 <code>_</code> 的结合，且不能用数字开头；</li><li>系统关键词不能做变量名使用「获取关键词列表：<code>help(&#39;keywords&#39;)</code></li><li>Python 中的变量名区分大小写；</li><li>变量名不能包含空格，但是可以使用下划线来分隔其中的单词；</li><li>不要使用 Python 的内置函数名称做变量；</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">Here </span><span style="color:#F92672;">is</span><span style="color:#F8F8F2;"> a </span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;"> of the Python keywords.  Enter </span><span style="color:#66D9EF;">any</span><span style="color:#F8F8F2;"> keyword to get more </span><span style="color:#66D9EF;">help</span><span style="color:#F8F8F2;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AE81FF;">False</span><span style="color:#66D9EF;font-style:italic;">               class</span><span style="color:#F92672;">               from</span><span style="color:#F92672;">                or</span></span>
<span class="line"><span style="color:#AE81FF;">None</span><span style="color:#F92672;">                continue</span><span style="color:#F92672;">            global</span><span style="color:#F92672;">              pass</span></span>
<span class="line"><span style="color:#AE81FF;">True</span><span style="color:#66D9EF;font-style:italic;">                def</span><span style="color:#F92672;">                 if</span><span style="color:#F92672;">                  raise</span></span>
<span class="line"><span style="color:#F92672;">and</span><span style="color:#F92672;">                 del</span><span style="color:#F92672;">                 import</span><span style="color:#F92672;">              return</span></span>
<span class="line"><span style="color:#F92672;">as</span><span style="color:#F92672;">                  elif</span><span style="color:#F92672;">                in</span><span style="color:#F92672;">                  try</span></span>
<span class="line"><span style="color:#F92672;">assert</span><span style="color:#F92672;">              else</span><span style="color:#F92672;">                is</span><span style="color:#F92672;">                  while</span></span>
<span class="line"><span style="color:#F92672;">async</span><span style="color:#F92672;">               except</span><span style="color:#66D9EF;font-style:italic;">              lambda</span><span style="color:#F92672;">              with</span></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F92672;">               finally</span><span style="color:#F92672;">             nonlocal</span><span style="color:#F92672;">            yield</span></span>
<span class="line"><span style="color:#F92672;">break</span><span style="color:#F92672;">               for</span><span style="color:#F92672;">                 not</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),c(o,{id:"202",data:[{id:"Code1"},{id:"Code2"},{id:"Code3"},{id:"Code4"},{id:"Code5"}]},{title0:a(({value:i,isActive:t})=>e[10]||(e[10]=[l("Code1")])),title1:a(({value:i,isActive:t})=>e[11]||(e[11]=[l("Code2")])),title2:a(({value:i,isActive:t})=>e[12]||(e[12]=[l("Code3")])),title3:a(({value:i,isActive:t})=>e[13]||(e[13]=[l("Code4")])),title4:a(({value:i,isActive:t})=>e[14]||(e[14]=[l("Code5")])),tab0:a(({value:i,isActive:t})=>e[15]||(e[15]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "A"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"N "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "a"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(n)  "),s("span",{style:{color:"#88846F"}},"# 如果变量不区分大小写的话，输出什么结果？—— a")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 但是，它区分大小写，所以输出的是 A")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# out")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"A")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:i,isActive:t})=>e[16]||(e[16]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 数字不能开头")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"a121iy212c21 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "a"'),s("span",{style:{color:"#88846F"}},"  # 数字不能开头，除了开头。你想放哪就放哪。")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:i,isActive:t})=>e[17]||(e[17]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"user_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "aiyc"')])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),tab3:a(({value:i,isActive:t})=>e[18]||(e[18]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#E6DB74"}},' "aiyc"'),s("span",{style:{color:"#88846F"}},"  # 不能使用 Python 内置函数名命名")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#88846F"}},"# python 分不清")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab4:a(({value:i,isActive:t})=>e[19]||(e[19]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 关键词不能当作变量名")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"await"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#E6DB74"}},' "aiyc"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#F92672"}},"await"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#88846F"}},"# await 在 Python 当中有特殊功能，比如 while")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),e[24]||(e[24]=n('<h2 id="_6-练习" tabindex="-1"><a class="header-anchor" href="#_6-练习"><span>6. 练习</span></a></h2><ol><li><p>在 Python 中，变量名可以以数字开始。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个变量名是有效的？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 2myVar</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> myVar2</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> my-var</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> my var</label></li></ul></li><li><p>在 Python 中，变量名区分大小写。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 错</label></li></ul></li><li><p>在 Python 中，<code>my_var</code> 和 <code>myVar</code> 是同一个变量。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 错</label></li></ul></li><li><p>变量名可以是 Python 中的关键字。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> 错</label></li></ul></li><li><p><code>None</code> 是 Python 中的特殊类型，表示没有值或空值。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个是有效的变量赋值？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> 123abc = &quot;hello&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> for = &quot;world&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> _hidden = &quot;secret&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> import = 123</label></li></ul></li><li><p>在 Python 中，一个变量可以同时被赋予多个值。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个是多变量赋值？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> a, b, c = 1, 2, 3</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> a = 1, b = 2, c = 3</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> a; b; c = 1; 2; 3</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> a = 1; b = 2; c = 3;</label></li></ul></li><li><p>变量在使用之前必须被赋值。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" disabled="disabled"><label class="task-list-item-label" for="task-item-24"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> 错</label></li></ul></li><li><p>Python 中变量的类型是静态的，一旦赋值就不能改变。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个表示全局变量？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> var = &quot;hello&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> global var</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-30" disabled="disabled"><label class="task-list-item-label" for="task-item-30"> var(global)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-31" disabled="disabled"><label class="task-list-item-label" for="task-item-31"> def var():</label></li></ul></li><li><p>以下哪个表示删除变量？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-32" disabled="disabled"><label class="task-list-item-label" for="task-item-32"> delete x</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-33" disabled="disabled"><label class="task-list-item-label" for="task-item-33"> del x</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-34" disabled="disabled"><label class="task-list-item-label" for="task-item-34"> remove x</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-35" disabled="disabled"><label class="task-list-item-label" for="task-item-35"> destroy x</label></li></ul></li><li><p><code>x = 5</code> 之后 <code>y = x</code>，现在改变 <code>y</code> 的值，<code>x</code> 的值也会改变。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-36" disabled="disabled"><label class="task-list-item-label" for="task-item-36"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-37" disabled="disabled"><label class="task-list-item-label" for="task-item-37"> 错</label></li></ul></li><li><p><code>x = [1, 2, 3]</code> 之后 <code>y = x</code>，现在改变 <code>y</code> 的列表内容，<code>x</code> 的内容也会改变。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-38" disabled="disabled"><label class="task-list-item-label" for="task-item-38"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-39" disabled="disabled"><label class="task-list-item-label" for="task-item-39"> 错</label></li></ul></li><li><p>在 Python 中，变量只能存储基本数据类型的值，如整数或字符串。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-40" disabled="disabled"><label class="task-list-item-label" for="task-item-40"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-41" disabled="disabled"><label class="task-list-item-label" for="task-item-41"> 错</label></li></ul></li></ol><details class="hint-container details"><summary>Answer</summary><ol><li><p>在 Python 中，变量名可以以数字开始。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-42" disabled="disabled"><label class="task-list-item-label" for="task-item-42"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-43" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-43"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个变量名是有效的？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-44" disabled="disabled"><label class="task-list-item-label" for="task-item-44"> 2myVar</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-45" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-45"> myVar2</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-46" disabled="disabled"><label class="task-list-item-label" for="task-item-46"> my-var</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-47" disabled="disabled"><label class="task-list-item-label" for="task-item-47"> my var</label></li></ul></li><li><p>在 Python 中，变量名区分大小写。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-48" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-48"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-49" disabled="disabled"><label class="task-list-item-label" for="task-item-49"> 错</label></li></ul></li><li><p>在Python中，<code>my_var</code> 和 <code>myVar</code> 是同一个变量。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-50" disabled="disabled"><label class="task-list-item-label" for="task-item-50"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-51" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-51"> 错</label></li></ul></li><li><p>变量名可以是 Python 中的关键字。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-52" disabled="disabled"><label class="task-list-item-label" for="task-item-52"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-53" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-53"> 错</label></li></ul></li><li><p><code>None</code> 是 Python 中的特殊类型，表示没有值或空值。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-54" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-54"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-55" disabled="disabled"><label class="task-list-item-label" for="task-item-55"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个是有效的变量赋值？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-56" disabled="disabled"><label class="task-list-item-label" for="task-item-56"> 123abc = &quot;hello&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-57" disabled="disabled"><label class="task-list-item-label" for="task-item-57"> for = &quot;world&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-58" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-58"> _hidden = &quot;secret&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-59" disabled="disabled"><label class="task-list-item-label" for="task-item-59"> import = 123</label></li></ul></li><li><p>在 Python 中，一个变量可以同时被赋予多个值。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-60" disabled="disabled"><label class="task-list-item-label" for="task-item-60"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-61" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-61"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个是多变量赋值？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-62" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-62"> a, b, c = 1, 2, 3</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-63" disabled="disabled"><label class="task-list-item-label" for="task-item-63"> a = 1, b = 2, c = 3</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-64" disabled="disabled"><label class="task-list-item-label" for="task-item-64"> a; b; c = 1; 2; 3</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-65" disabled="disabled"><label class="task-list-item-label" for="task-item-65"> a = 1; b = 2; c = 3;</label></li></ul></li><li><p>变量在使用之前必须被赋值。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-66" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-66"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-67" disabled="disabled"><label class="task-list-item-label" for="task-item-67"> 错</label></li></ul></li><li><p>Python 中变量的类型是静态的，一旦赋值就不能改变。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-68" disabled="disabled"><label class="task-list-item-label" for="task-item-68"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-69" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-69"> 错</label></li></ul></li><li><p>在 Python 中，以下哪个表示全局变量？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-70" disabled="disabled"><label class="task-list-item-label" for="task-item-70"> var = &quot;hello&quot;</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-71" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-71"> global var</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-72" disabled="disabled"><label class="task-list-item-label" for="task-item-72"> var(global)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-73" disabled="disabled"><label class="task-list-item-label" for="task-item-73"> def var():</label></li></ul></li><li><p>以下哪个表示删除变量？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-74" disabled="disabled"><label class="task-list-item-label" for="task-item-74"> delete x</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-75" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-75"> del x</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-76" disabled="disabled"><label class="task-list-item-label" for="task-item-76"> remove x</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-77" disabled="disabled"><label class="task-list-item-label" for="task-item-77"> destroy x</label></li></ul></li><li><p><code>x = 5</code> 之后 <code>y = x</code>，现在改变 <code>y</code> 的值，<code>x</code> 的值也会改变。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-78" disabled="disabled"><label class="task-list-item-label" for="task-item-78"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-79" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-79"> 错</label></li></ul></li><li><p><code>x = [1, 2, 3]</code> 之后 <code>y = x</code>，现在改变 <code>y</code> 的列表内容，<code>x</code> 的内容也会改变。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-80" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-80"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-81" disabled="disabled"><label class="task-list-item-label" for="task-item-81"> 错</label></li></ul></li><li><p>在 Python 中，变量只能存储基本数据类型的值，如整数或字符串。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-82" disabled="disabled"><label class="task-list-item-label" for="task-item-82"> 对</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-83" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-83"> 错</label></li></ul></li></ol></details>',3))])}const x=r(m,[["render",F],["__file","01-Variable.html.vue"]]),f=JSON.parse('{"path":"/Python/NoteBook/01-Variable.html","title":"01-Variable","lang":"zh-CN","frontmatter":{"title":"01-Variable","icon":"yongyan","date":"2023-07-19T20:40:21.000Z","author":"AI悦创","isOriginal":true,"category":["Python notebook"],"tag":["Python 1v1"],"sticky":false,"star":false,"article":true,"timeline":true,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 理解变量——生活中的例子","slug":"_1-理解变量——生活中的例子","link":"#_1-理解变量——生活中的例子","children":[{"level":3,"title":"1.1 从字面意思去理解","slug":"_1-1-从字面意思去理解","link":"#_1-1-从字面意思去理解","children":[]},{"level":3,"title":"1.2 举个例子🌰","slug":"_1-2-举个例子🌰","link":"#_1-2-举个例子🌰","children":[]}]},{"level":2,"title":"2. 如何创建变量——赋值语句","slug":"_2-如何创建变量——赋值语句","link":"#_2-如何创建变量——赋值语句","children":[]},{"level":2,"title":"3. 探究 print","slug":"_3-探究-print","link":"#_3-探究-print","children":[{"level":3,"title":"3.1 同时输出多个数据","slug":"_3-1-同时输出多个数据","link":"#_3-1-同时输出多个数据","children":[]},{"level":3,"title":"3.2 sep 修改多个变量同时输出的间隔","slug":"_3-2-sep-修改多个变量同时输出的间隔","link":"#_3-2-sep-修改多个变量同时输出的间隔","children":[]},{"level":3,"title":"3.3 end 修改 print 输出结尾方式","slug":"_3-3-end-修改-print-输出结尾方式","link":"#_3-3-end-修改-print-输出结尾方式","children":[]},{"level":3,"title":"3.4 end 和 sep 可以同时使用","slug":"_3-4-end-和-sep-可以同时使用","link":"#_3-4-end-和-sep-可以同时使用","children":[]}]},{"level":2,"title":"4. 进阶的赋值方法","slug":"_4-进阶的赋值方法","link":"#_4-进阶的赋值方法","children":[{"level":3,"title":"4.1 多个变量同时赋予相同的值","slug":"_4-1-多个变量同时赋予相同的值","link":"#_4-1-多个变量同时赋予相同的值","children":[]},{"level":3,"title":"4.2 多个变量同时赋予不同的值","slug":"_4-2-多个变量同时赋予不同的值","link":"#_4-2-多个变量同时赋予不同的值","children":[]}]},{"level":2,"title":"5. 变量的命名规则","slug":"_5-变量的命名规则","link":"#_5-变量的命名规则","children":[]},{"level":2,"title":"6. 练习","slug":"_6-练习","link":"#_6-练习","children":[]}],"git":{"createdTime":1705452888000,"updatedTime":1705452888000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":1}]},"readingTime":{"minutes":7.08,"words":2123},"filePathRelative":"Python/NoteBook/01-Variable.md","localizedDate":"2023年7月19日","copyright":{"author":"AI悦创"}}');export{x as comp,f as data};
