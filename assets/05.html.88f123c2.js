import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as o,a as n,b as s,w as e,e as l,r as c,d as t}from"./app.03abfa58.js";const r="/assets/image-20220915220044572.c36bd718.png",d={},u={class:"table-of-contents"},m=l('<h2 id="_05-变量「中」「dannie」" tabindex="-1"><a class="header-anchor" href="#_05-变量「中」「dannie」" aria-hidden="true">#</a> 05-变量「中」「Dannie」</h2><h2 id="_1-pycharm-文件创建" tabindex="-1"><a class="header-anchor" href="#_1-pycharm-文件创建" aria-hidden="true">#</a> 1. Pycharm 文件创建</h2><p><img src="'+r+`" alt="image-20220915220044572" loading="lazy"></p><h2 id="_2-变量代码" tabindex="-1"><a class="header-anchor" href="#_2-变量代码" aria-hidden="true">#</a> 2. 变量代码</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Python!!!我来啦！Skr～&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># x = 1</span>
<span class="token comment"># x = x + 10</span>
<span class="token comment"># print(x)</span>

<span class="token comment"># name1 = &quot;lilei&quot;</span>
<span class="token comment"># name2 = name1</span>
<span class="token comment"># print(name2)</span>


name1 <span class="token operator">=</span> <span class="token string">&quot;lilei&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span>
name1 <span class="token operator">=</span> <span class="token string">&quot;hanmeimei&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span>  <span class="token comment"># 覆盖</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-注释使用" tabindex="-1"><a class="header-anchor" href="#_3-注释使用" aria-hidden="true">#</a> 3. 注释使用 <code>#</code></h2><p>注释的意思就是，你看得见，但是计算机看不见。</p><h2 id="_4-进阶变量赋值的方法" tabindex="-1"><a class="header-anchor" href="#_4-进阶变量赋值的方法" aria-hidden="true">#</a> 4. 进阶变量赋值的方法</h2><h3 id="_4-1-多个变量赋值相同的值" tabindex="-1"><a class="header-anchor" href="#_4-1-多个变量赋值相同的值" aria-hidden="true">#</a> 4.1 多个变量赋值相同的值</h3><h4 id="_4-1-1-正常情况下-的多个变量赋值相同值" tabindex="-1"><a class="header-anchor" href="#_4-1-1-正常情况下-的多个变量赋值相同值" aria-hidden="true">#</a> 4.1.1 正常情况下，的多个变量赋值相同值</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1</span>
<span class="token number">1</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-一个-print-可以同时输出三个变量" tabindex="-1"><a class="header-anchor" href="#_4-1-2-一个-print-可以同时输出三个变量" aria-hidden="true">#</a> 4.1.2 一个 print 可以同时输出三个变量？</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token comment"># print(a)</span>
<span class="token comment"># print(b)</span>
<span class="token comment"># print(c)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>语法：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> an<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>特点：</strong></p><blockquote><p>多个变量同时输出，print 会默认以空格间隔。</p></blockquote><p><strong>试一试其它代码吧～</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token string">&quot;lilei&quot;</span>
b <span class="token operator">=</span> <span class="token string">&quot;hanmeimei&quot;</span>
c <span class="token operator">=</span> <span class="token string">&quot;Jaden&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lilei hanmeimei Jaden
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-1-3-question" tabindex="-1"><a class="header-anchor" href="#_4-1-3-question" aria-hidden="true">#</a> 4.1.3 Question</h4><ol><li>我能不能偷个懒？多个变量同时赋值一行解决？</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> b <span class="token operator">=</span> c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token comment"># 输出：1 1 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用一个 print 同时输出多个变量，默认空格，我能否改变其他间隔模式？</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> b <span class="token operator">=</span> c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&quot;*****&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 是字符串哦，几个加上引号</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,32);function v(k,b){const a=c("router-link");return i(),o("div",null,[n("nav",u,[n("ul",null,[n("li",null,[s(a,{to:"#_05-变量「中」「dannie」"},{default:e(()=>[t("05-变量「中」「Dannie」")]),_:1})]),n("li",null,[s(a,{to:"#_1-pycharm-文件创建"},{default:e(()=>[t("1. Pycharm 文件创建")]),_:1})]),n("li",null,[s(a,{to:"#_2-变量代码"},{default:e(()=>[t("2. 变量代码")]),_:1})]),n("li",null,[s(a,{to:"#_3-注释使用"},{default:e(()=>[t("3. 注释使用 #")]),_:1})]),n("li",null,[s(a,{to:"#_4-进阶变量赋值的方法"},{default:e(()=>[t("4. 进阶变量赋值的方法")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#_4-1-多个变量赋值相同的值"},{default:e(()=>[t("4.1 多个变量赋值相同的值")]),_:1})])])])])]),m])}const _=p(d,[["render",v],["__file","05.html.vue"]]);export{_ as default};
