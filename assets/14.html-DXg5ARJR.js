import{_ as i}from"./gzh-DnOBNg6W.js";import{_ as E}from"./zsxq-BcdwOI-_.js";import{_ as y}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,c as m,b as c,w as a,d as s,e as l,a as o,o as F}from"./app-CUkCTKa8.js";const d="/assets/5e152f960001e57006400391-CpoZmnHv.jpg",h="/assets/5e1530280001288c05910082-20230612205226666-DtbO4OBU.png",u="/assets/5e1530440001559405910085-20230612205249491-pWkux08-.png",g="/assets/5e1530520001f89405880083-20230612205314825-xvCsvvgk.png",D="/assets/5e1530660001f2ef05890083-A3cLdPE4.png",C="/assets/5e15308f0001d1d905990269-BlHvujO3.png",f="/assets/5e15309d000125d105910077-CSxMBxMo.png",A="/assets/5e1530b40001bb7e05910381-CWUKdDtP.png",b={},_=s("figure",null,[s("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1),v=s("p",null,"你好，我是悦创。",-1),x=s("p",null,"最后一种基础排序是冒泡排序。算法采用重复遍历数组并依次比较相邻元素的方法来排序。由于在冒泡算法进行排序的过程中，最大数或者最小数会慢慢“浮”到数组的末尾，所以算法由此命名。",-1),B=s("p",null,[l("冒泡排序的平均时间复杂度是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"n"),s("mn",null,"2")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n^2)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mclose"},")")])])]),l("，最好情况下的时间复杂度是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),l(", 最坏情况下的时间复杂度是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"n"),s("mn",null,"2")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n^2)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mclose"},")")])])]),l("。空间复杂度是 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])]),l("。冒泡排序算法是一个稳定的排序算法。")],-1),k=o('<p>冒泡排序的过程同样可以用图片说明。我们的目标还是把无序数组以从小到大的顺序排列。</p><h2 id="_1-冒泡排序原理" tabindex="-1"><a class="header-anchor" href="#_1-冒泡排序原理"><span>1. 冒泡排序原理</span></a></h2><p>首先，如下图所示，我们从第一个数开始遍历。将第一个数与它后面的元素进行对比，发现后面的元素比它小。</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这时候，如下图所示，我们需交换这两个元素的值。</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接下来遍历到的是第二个元素。如下图所示，此时第二个元素的值已经变为 5。把它和它后方的元素 6 对比，发现 5 和 6 的排列顺序已经是正确的（前面的数小于后面的数），这时候不用进行元素交换，直接继续遍历。</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如下图所示，遍历到第三个元素时，发现它比后面的元素更大，这时候就继续交换这两个元素的值。</p><figure><img src="'+D+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如图所示，在类似的一系列操作后，数组中的最大值被交换到了数组中的最后一个（第8个）位置上。</p><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如图所示，这时候，我们可以确定末尾元素的值是正确的，所以接下来我们只需要对第1-7个位置上的元素再进行遍历了。</p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在对第 1-7 个位置上的的元素进行遍历之后，我们可以确定排在第 7 位的数。同理，在对第 1-6 个位置上的元素，第 1-5 个位置上的元素等进行遍历后，我们可以确定数组中排在第6位，第 5 位的数等。冒泡排序的剩下过程如图所示。</p><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是，我们发现，在排好第五个数之后，整个数组的排序就已经完成了，在接下来的遍历中不会再产生元素的交换。这时候，我们可以直接结束遍历。</p><h2 id="_2-冒泡排序代码" tabindex="-1"><a class="header-anchor" href="#_2-冒泡排序代码"><span>2. 冒泡排序代码</span></a></h2><p>了解了冒泡排序的流程之后，我们再来看看冒泡排序的代码。</p><p>冒泡排序的代码：</p>',20),w=s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#2e3440ff",color:"#d8dee9ff"}},[s("pre",{class:"shiki nord vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"nums "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#ECEFF4"}}," ["),s("span",{style:{color:"#B48EAD"}},"5"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"3"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"6"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"4"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"8"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"7"),s("span",{style:{color:"#ECEFF4"}},"]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"for"),s("span",{style:{color:"#D8DEE9FF"}}," i "),s("span",{style:{color:"#81A1C1"}},"in"),s("span",{style:{color:"#88C0D0"}}," range"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#88C0D0"}},"len"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"),"),s("span",{style:{color:"#B48EAD"}},"0"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#81A1C1"}},"-"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"):"),s("span",{style:{color:"#616E88"}}," #更新本趟遍历确定的元素位置")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"   	flag "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#B48EAD"}}," 0"),s("span",{style:{color:"#616E88"}}," 		#flag用于标记是否有元素交换发生")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"  	for"),s("span",{style:{color:"#D8DEE9FF"}}," j "),s("span",{style:{color:"#81A1C1"}},"in"),s("span",{style:{color:"#88C0D0"}}," range"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"i"),s("span",{style:{color:"#81A1C1"}},"-"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"):"),s("span",{style:{color:"#616E88"}}," #遍历未排序的数组")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"      	if"),s("span",{style:{color:"#D8DEE9FF"}}," nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#ECEFF4"}},"]"),s("span",{style:{color:"#81A1C1"}},">"),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#81A1C1"}},"+"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"]:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"       		nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#ECEFF4"}},"],"),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#81A1C1"}},"+"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"]"),s("span",{style:{color:"#81A1C1"}}," ="),s("span",{style:{color:"#D8DEE9FF"}}," nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#81A1C1"}},"+"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"],"),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#ECEFF4"}},"]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"       		flag "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#B48EAD"}}," 1"),s("span",{style:{color:"#616E88"}}," #标记存在元素交换")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"   	if"),s("span",{style:{color:"#81A1C1"}}," not"),s("span",{style:{color:"#D8DEE9FF"}}," flag"),s("span",{style:{color:"#ECEFF4"}},":"),s("span",{style:{color:"#D8DEE9FF"}}," ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"      	break"),s("span",{style:{color:"#616E88"}}," #如果本趟遍历没有经历元素交换，直接跳出循环         ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88C0D0"}},"print"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),j=s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#2e3440ff",color:"#d8dee9ff"}},[s("pre",{class:"shiki nord vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"nums "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#ECEFF4"}}," ["),s("span",{style:{color:"#B48EAD"}},"5"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"3"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"6"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"4"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"2"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"8"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#B48EAD"}},"7"),s("span",{style:{color:"#ECEFF4"}},"]"),s("span",{style:{color:"#D8DEE9FF"}}," ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"for"),s("span",{style:{color:"#D8DEE9FF"}}," i "),s("span",{style:{color:"#81A1C1"}},"in"),s("span",{style:{color:"#88C0D0"}}," range"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#88C0D0"}},"len"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"),"),s("span",{style:{color:"#B48EAD"}},"0"),s("span",{style:{color:"#ECEFF4"}},","),s("span",{style:{color:"#81A1C1"}},"-"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"):"),s("span",{style:{color:"#616E88"}},'  # 从列表的末尾开始遍历，因为冒泡排序是每一趟将最大的元素"冒泡"到列表的末尾')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"    flag "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#B48EAD"}}," 0"),s("span",{style:{color:"#616E88"}},"                     # 初始设定flag为0，表示没有元素交换发生")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"    for"),s("span",{style:{color:"#D8DEE9FF"}}," j "),s("span",{style:{color:"#81A1C1"}},"in"),s("span",{style:{color:"#88C0D0"}}," range"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"i"),s("span",{style:{color:"#81A1C1"}},"-"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"):"),s("span",{style:{color:"#616E88"}},"          # 遍历未排序的列表")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"        if"),s("span",{style:{color:"#D8DEE9FF"}}," nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#ECEFF4"}},"]"),s("span",{style:{color:"#81A1C1"}},">"),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#81A1C1"}},"+"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"]:"),s("span",{style:{color:"#616E88"}},"     # 如果当前元素大于后一个元素，则交换它们的位置")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"            nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#ECEFF4"}},"],"),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#81A1C1"}},"+"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"]"),s("span",{style:{color:"#81A1C1"}}," ="),s("span",{style:{color:"#D8DEE9FF"}}," nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#81A1C1"}},"+"),s("span",{style:{color:"#B48EAD"}},"1"),s("span",{style:{color:"#ECEFF4"}},"],"),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},"["),s("span",{style:{color:"#D8DEE9FF"}},"j"),s("span",{style:{color:"#ECEFF4"}},"]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D8DEE9FF"}},"            flag "),s("span",{style:{color:"#81A1C1"}},"="),s("span",{style:{color:"#B48EAD"}}," 1"),s("span",{style:{color:"#616E88"}},"              # 如果发生交换，则将flag设为1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"    if"),s("span",{style:{color:"#81A1C1"}}," not"),s("span",{style:{color:"#D8DEE9FF"}}," flag"),s("span",{style:{color:"#ECEFF4"}},":"),s("span",{style:{color:"#616E88"}},"                  # 如果一趟遍历结束后flag仍然为0，表示没有发生过交换，即列表已经排序好")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#81A1C1"}},"        break"),s("span",{style:{color:"#616E88"}},"                     # 直接跳出循环")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88C0D0"}},"print"),s("span",{style:{color:"#ECEFF4"}},"("),s("span",{style:{color:"#D8DEE9FF"}},"nums"),s("span",{style:{color:"#ECEFF4"}},")"),s("span",{style:{color:"#616E88"}},"                       # 打印排序好的列表")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),z=o('<p>运行程序，输出结果为：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">3</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">4</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">5</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">6</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">7</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">8</span><span style="color:#ECEFF4;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这段冒泡排序的代码中使用了两个 for 循环。外层 for 循环中的i代表每一次遍历后确定位置的元素的下标。</p><p>变量 flag 用于记录是否有元素交换发生，初始为 0，在遍历开始后，一旦两位元素进行交换，它的值就会变为 1。</p><p>随后，再用一个 for 循环对未排序数组进行遍历。为什么遍历的范围是 <code>range(i-1)</code> ？因为未排序数组的最后一个元素下标为 i，而我们在遍历时要同时访问下标为 j 和 j+1 的元素。把遍历范围设为 <code>range(i-1)</code> ，访问数组时才不会越界。另一个需要注意的点是交换元素的条件：<code>num[j] &gt; num[j+1]</code>。注意不要把大于号写成大于等于号。当这两个元素相等时，为保留它们的原有相对位置，不要进行交换。如果把运算符写成大于等于号，排序算法的稳定性就被破坏了。</p><p>遍历结束后，如果 flag 的值仍然是 0，那么说明在整一次遍历中没有元素交换发生，也就是说，所有元素都是有序排列的。这时候就可以直接跳出循环，节省时间。</p><h2 id="_3-小结" tabindex="-1"><a class="header-anchor" href="#_3-小结"><span>3. 小结</span></a></h2><p>初级排序算法至此结束了。掌握了初级排序算法之后，我们再进入高级排序算法的学习。</p>',8),O=o('<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p><details class="hint-container details"><summary>公众号：AI悦创【二维码】</summary><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></details><div class="hint-container info"><p class="hint-container-title">AI悦创·编程一对一</p><p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p><p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p><p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p><p>方法二：微信：Jiabcdefh</p></div><figure><img src="'+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',4);function M(P,T){const r=t("CodeTabs"),p=t("Share");return F(),m("div",null,[_,v,x,B,k,c(r,{id:"72",data:[{id:"1"},{id:"2"}]},{title0:a(({value:n,isActive:e})=>[l("1")]),title1:a(({value:n,isActive:e})=>[l("2")]),tab0:a(({value:n,isActive:e})=>[w]),tab1:a(({value:n,isActive:e})=>[j]),_:1}),z,c(p,{colorful:""}),O])}const S=y(b,[["render",M],["__file","14.html.vue"]]),q=JSON.parse('{"path":"/Python/Python-core-technology-and-practice/Algorithm/14.html","title":"14 排序八大金刚-冒泡排序","lang":"zh-CN","frontmatter":{"title":"14 排序八大金刚-冒泡排序","icon":"shujujiegou-01","date":"2023-06-12T20:45:05.000Z","author":"AI悦创","isOriginal":true,"category":"Python 算法科普指南","tag":["Python 算法科普指南"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 冒泡排序原理","slug":"_1-冒泡排序原理","link":"#_1-冒泡排序原理","children":[]},{"level":2,"title":"2. 冒泡排序代码","slug":"_2-冒泡排序代码","link":"#_2-冒泡排序代码","children":[]},{"level":2,"title":"3. 小结","slug":"_3-小结","link":"#_3-小结","children":[]}],"git":{"createdTime":1705215474000,"updatedTime":1705215474000,"contributors":[{"name":"AndersonHJB","email":"cleland1432803776@icloud.com","commits":1}]},"readingTime":{"minutes":5.56,"words":1668},"filePathRelative":"Python/Python-core-technology-and-practice/Algorithm/14.md","localizedDate":"2023年6月12日","copyright":{"author":"AI悦创"}}');export{S as comp,q as data};
