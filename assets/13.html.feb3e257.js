import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,a as n,d as s,b as o,e as i,r as c}from"./app.9a73a034.js";const u="/assets/image-20221101002338557.82963edc.png",l="/assets/image-20221101213853233.59b9273c.png",r="/assets/image-20221101214526356.20f4efed.png",k="/assets/image-20221101214739233.7a86574a.png",d="/assets/image-20221101215552539.4ac37727.png",m="/assets/image-20221101215921522.b3112005.png",g="/assets/image-20221101220844862.1501265c.png",v="/assets/image-20221104212023156.31af5021.png",q="/assets/image-20221104213709025.0b882a3b.png",b="/assets/image-20221104213825717.dcf6fdb8.png",h="/assets/image-20221104214803423.047fb908.png",y="/assets/image-20221104215214028.da79783f.png",_={},x=i(`<h2 id="_1-请使用之前的知识做出一个简易的电话本" tabindex="-1"><a class="header-anchor" href="#_1-请使用之前的知识做出一个简易的电话本" aria-hidden="true">#</a> 1. 请使用之前的知识做出一个简易的电话本</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name_lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;aiyc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dannie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jaden&quot;</span><span class="token punctuation">]</span>
number_lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;789&quot;</span><span class="token punctuation">]</span>
username <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;我让你输入一个值，这个值是你要查找的用户名称，你输入的值，将会赋值给 username：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;username 的值是:&quot;</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>
xiabiao <span class="token operator">=</span> name_lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span>username<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>xiabiao<span class="token punctuation">)</span>
number <span class="token operator">=</span> number_lst<span class="token punctuation">[</span>xiabiao<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Lyon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Dannie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Curtis&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mason&quot;</span><span class="token punctuation">]</span>
fruit<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Grape&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Watermelon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Orange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;kiwi&quot;</span><span class="token punctuation">]</span>

key_in<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please key in family&#39;s name:&quot;</span> <span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>key_in<span class="token punctuation">)</span>

location<span class="token operator">=</span>name<span class="token punctuation">.</span>index<span class="token punctuation">(</span>key_in<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span>

print_out<span class="token operator">=</span>fruit<span class="token punctuation">[</span>location<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;His/Her favorite fruit is:&quot;</span><span class="token punctuation">,</span>print_out<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="image-20221101002338557"></p><hr><h2 id="电话本方法二" tabindex="-1"><a class="header-anchor" href="#电话本方法二" aria-hidden="true">#</a> 电话本方法二</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>phone_lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;aicy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dannie&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jaden&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;789&quot;</span><span class="token punctuation">]</span>
i<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
o<span class="token operator">=</span>phone_lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>phone_lst<span class="token punctuation">[</span>o<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>输入： jaden
输出：<span class="token number">789</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>phone_lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;aicy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dannie&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jaden&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;789&quot;</span><span class="token punctuation">]</span>
i<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please key in the name: &quot;</span> <span class="token punctuation">,</span> <span class="token punctuation">)</span>
o<span class="token operator">=</span>phone_lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;phone number is: &quot;</span><span class="token punctuation">,</span>  phone_lst<span class="token punctuation">[</span>o<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><p><img src="`+l+`" alt="image-20221101213853233"></p><blockquote><p>input 有时候要写输入提示哦，不然运行起来有时候自己都会蒙的。</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>phone_lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;aicy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dannie&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jaden&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;789&quot;</span><span class="token punctuation">]</span>
i<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please key in the name: &quot;</span> <span class="token punctuation">,</span> <span class="token punctuation">)</span>
o<span class="token operator">=</span>phone_lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;phone number is: &quot;</span><span class="token punctuation">,</span>  phone_lst<span class="token punctuation">[</span>o<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>phone_lst<span class="token punctuation">[</span>phone_lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;please key in the name:&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><p><img src="`+r+'" alt="image-20221101214526356"></p><blockquote><p>该一行的时候一行，不该一行写完代码的时候，不要那么写。——可读性较低</p></blockquote><h2 id="字典的结构" tabindex="-1"><a class="header-anchor" href="#字典的结构" aria-hidden="true">#</a> 字典的结构</h2><p><img src="'+k+`" alt="image-20221101214739233"></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>phone_lst<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;aicy&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dannie&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jaden&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;789&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>phone_lst<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>key：不可变「不可以使用可变的数据类型，当作字典的 key」list：可以做 key 吗？——不可以，因为，列表可变</li><li>数字型可以做 key 吗？——可以，数字不可变</li><li>元组「tuple」可以做 key 吗？——可以，元组不可变</li><li>字符串「str」可以做 key 吗？——可以，字符串不可变</li><li>集合「set」可以做 key 吗？——不可以，集合可变</li><li>布尔型「bool」可以做 key 吗？——可以，bool 不可变</li><li>value：任意数据类型</li></ul><h2 id="字典结构—key" tabindex="-1"><a class="header-anchor" href="#字典结构—key" aria-hidden="true">#</a> 字典结构—key</h2><p><img src="`+d+'" alt="image-20221101215552539"></p><h2 id="用字典-dict-函数创建字典" tabindex="-1"><a class="header-anchor" href="#用字典-dict-函数创建字典" aria-hidden="true">#</a> 用字典 dict 函数创建字典</h2><p><img src="'+m+`" alt="image-20221101215921522"></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>phone_lst<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;aiyc&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;jaden&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;789&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
phone_lst_new <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>phone_lst<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>phone_lst_new<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><p><img src="`+g+`" alt="image-20221101220844862"></p><p>输出会有报错， 因为字典里面的元组，第一个不能是列表。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;aiyc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;Aiyc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;look&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>

d<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span> name <span class="token operator">=</span><span class="token string">&quot;aiyc&quot;</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">19</span> <span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span>d<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>第一种写法： key, 可以不一定全部都要求是字符串， 例子里面 123 数值也做了 key</p><p>第二种的写法不能够支持全部的类型（可以做字典 key 的类型）</p><p>第二种写法， 赋值式的， 但是 key 基本上也被规定了相同的类型，比如 字符串， 后面的 age 也是字符串</p></blockquote><h2 id="字典提取数据" tabindex="-1"><a class="header-anchor" href="#字典提取数据" aria-hidden="true">#</a> 字典提取数据</h2><p><img src="`+v+`" alt="image-20221104212023156"></p><h2 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get()</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;aiyc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">}</span>
<span class="token comment"># print(d[&quot;name1&quot;])</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 如果 key 存在则返回值，否则默认返回 none</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;namesssss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 如果 key 存在则返回值，否则默认返回 None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;namesssss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;小主，我没有找到哦～&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 如果 key 存在则返回值，否则默认返回 None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>aiyc
<span class="token boolean">None</span>
小主，我没有找到哦～
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;lilei&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;98&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hanmeimei&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;99&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;dannie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;dannie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;it is not exist, try again&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><p><img src="`+q+'" alt="image-20221104213709025"></p><h2 id="更新字典数据「update-dict-data」" tabindex="-1"><a class="header-anchor" href="#更新字典数据「update-dict-data」" aria-hidden="true">#</a> 更新字典数据「update dict data」</h2><p><img src="'+b+'" alt="image-20221104213825717"></p><h2 id="字典的删除" tabindex="-1"><a class="header-anchor" href="#字典的删除" aria-hidden="true">#</a> 字典的删除</h2><p><img src="'+h+'" alt="image-20221104214803423"></p><h2 id="字典嵌套" tabindex="-1"><a class="header-anchor" href="#字典嵌套" aria-hidden="true">#</a> 字典嵌套</h2><p><img src="'+y+'" alt="image-20221104215214028"></p><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>',47),f={class:"custom-container info"},w=n("p",{class:"custom-container-title"},"AI悦创·编程一对一",-1),j=n("p",null,"AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh",-1),N=n("p",null,"C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh",-1),P={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},I=n("p",null,"方法二：微信：Jiabcdefh",-1);function A(C,Q){const a=c("ExternalLinkIcon");return p(),e("div",null,[x,n("div",f,[w,j,N,n("p",null,[s("方法一："),n("a",P,[s("QQ"),o(a)])]),I])])}const E=t(_,[["render",A],["__file","13.html.vue"]]);export{E as default};
