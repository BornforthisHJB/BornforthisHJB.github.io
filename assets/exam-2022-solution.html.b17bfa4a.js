import{_ as t}from"./gzh.b03adfd2.js";import{_ as p}from"./zsxq.77f6dc86.js";import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,d as s,b as i,e as l,r as u}from"./app.56c9b301.js";const r={},k=l(`<h2 id="question-1" tabindex="-1"><a class="header-anchor" href="#question-1" aria-hidden="true">#</a> Question 1</h2><p><strong>(a) Output value: &#39;grin&#39;</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;grinabc&quot;</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="question-2" tabindex="-1"><a class="header-anchor" href="#question-2" aria-hidden="true">#</a> Question 2</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># @Time    : 2022/10/28 22:23</span>
<span class="token comment"># @Author  : AI\u60A6\u521B</span>
<span class="token comment"># @FileName: demo.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># @Blog    \uFF1Ahttps://bornforthis.cn/</span>
<span class="token comment"># def name_similarity(name1, name2, maxn=3):</span>
<span class="token comment">#     matches = 0</span>
<span class="token comment">#     sim_list = []</span>
<span class="token comment">#     for n in range(2, maxn + 1):</span>
<span class="token comment">#         if len(name1) &gt;= n:</span>
<span class="token comment">#             for start in range(0, len(name1) - (n - 1)):</span>
<span class="token comment">#                 ngram = name1[start: start + n]</span>
<span class="token comment">#                 if ngram in name2:</span>
<span class="token comment">#                     matches += 1</span>
<span class="token comment">#             sim_list.append(matches / len(name1) - (n - 1))</span>
<span class="token comment">#             if sim_list:</span>
<span class="token comment">#                 return sum(sim_list) / len(sim_list)</span>
<span class="token comment">#         return 0.0</span>
<span class="token keyword">def</span> <span class="token function">name_similarity</span><span class="token punctuation">(</span>name1<span class="token punctuation">,</span> name2<span class="token punctuation">,</span> maxn<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sim_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> maxn<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> n<span class="token punctuation">:</span>
            matches <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> start <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                ngram <span class="token operator">=</span> name1<span class="token punctuation">[</span>start<span class="token punctuation">:</span>start <span class="token operator">+</span> n<span class="token punctuation">]</span>
                <span class="token keyword">if</span> ngram <span class="token keyword">in</span> name2<span class="token punctuation">:</span>
                    matches <span class="token operator">+=</span> <span class="token number">1</span>
            sim_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>matches<span class="token operator">/</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> sim_list<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>sim_list<span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>sim_list<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">0.0</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    r <span class="token operator">=</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;toto&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;totoro&#39;</span><span class="token punctuation">)</span>
    r1 <span class="token operator">=</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;tim&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;totoro&#39;</span><span class="token punctuation">)</span>
    r2 <span class="token operator">=</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;totoro&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;toto&#39;</span><span class="token punctuation">)</span>
    r3 <span class="token operator">=</span> name_similarity<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;totoro&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>r3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="question3" tabindex="-1"><a class="header-anchor" href="#question3" aria-hidden="true">#</a> Question3</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>SUIT <span class="token operator">=</span> <span class="token number">1</span>

BLACK <span class="token operator">=</span> <span class="token number">0</span>
RED <span class="token operator">=</span> <span class="token number">1</span>

SUIT_COLOURS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">,</span>
                <span class="token string">&#39;H&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
                <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">same_colour</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            colour <span class="token operator">=</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span>
        <span class="token keyword">elif</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span> colour<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>

<span class="token keyword">def</span> <span class="token function">same_colour1</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">:</span>
    i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            colour <span class="token operator">=</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span>
            i <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">elif</span> SUIT_COLOURS<span class="token punctuation">[</span>cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>SUIT<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span> colour<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="question-4" tabindex="-1"><a class="header-anchor" href="#question-4" aria-hidden="true">#</a> Question 4</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> defaultdict


<span class="token keyword">def</span> <span class="token function">wiz_study_length</span><span class="token punctuation">(</span>prereq_list<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">,</span> final<span class="token operator">=</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    prereqs <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> subject <span class="token keyword">in</span> prereq_list<span class="token punctuation">:</span>
        prereqs<span class="token punctuation">[</span>subject<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>subject<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    semesters <span class="token operator">=</span> <span class="token number">0</span>
    cur_prereqs <span class="token operator">=</span> <span class="token punctuation">[</span>final<span class="token punctuation">]</span>

    <span class="token keyword">while</span> cur_prereqs<span class="token punctuation">:</span>
        new_prereqs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> subject <span class="token keyword">in</span> cur_prereqs<span class="token punctuation">:</span>
            <span class="token keyword">if</span> subject <span class="token keyword">in</span> prereqs<span class="token punctuation">:</span>
                new_prereqs <span class="token operator">+=</span> prereqs<span class="token punctuation">[</span>subject<span class="token punctuation">]</span>
        cur_prereqs <span class="token operator">=</span> new_prereqs
        semesters <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> semesters


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    r <span class="token operator">=</span> wiz_study_length<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ40027&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;WIZ90001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;WIZ20003&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="question-7" tabindex="-1"><a class="header-anchor" href="#question-7" aria-hidden="true">#</a> Question 7</h2><ol><li>\u5E8F\u53F7 2\uFF0Caeiou \u5E94\u4E3A\u5B57\u7B26\u4E32\uFF1A<code>&quot;aeiou&quot;</code></li><li>\u5E8F\u53F7 8\uFF0Celse \u540E\u9762\u4E0D\u80FD\u8DDF\u6761\u4EF6\uFF0C\u6539\u6210 elif</li><li>\u5E8F\u53F7 8\uFF0C<code>:</code> \u6539\u6210 <code>c.isalpha()</code></li><li>\u5E8F\u53F7 10\uFF0Cjoin \u7684\u7528\u6CD5\u9519\u8BEF\uFF0C\u6539\u6210\uFF1A<code>&quot;&quot;.join()</code></li><li>\u5E8F\u53F7 6\uFF0C\u51FA\u73B0\u903B\u8F91\u9519\u8BEF\uFF0C\u4E0D\u80FD\u4F7F\u7528 not\u3002</li></ol><p>\u5B8C\u6574\u4EE3\u7801\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">reorder</span><span class="token punctuation">(</span>my_string<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 1</span>
    v_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&quot;aeiou&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 2</span>
    vowels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 3 #   # \u5143\u97F3</span>
    consonants <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 4  # \u8F85\u97F3</span>
    <span class="token keyword">for</span> c <span class="token keyword">in</span> my_string<span class="token punctuation">:</span>  <span class="token comment"># 5</span>
        <span class="token keyword">if</span> c <span class="token keyword">in</span> v_list<span class="token punctuation">:</span>  <span class="token comment"># 6</span>
            vowels<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c<span class="token punctuation">)</span>  <span class="token comment"># 7</span>
        <span class="token keyword">elif</span> c<span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 8</span>
            consonants<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c<span class="token punctuation">)</span>  <span class="token comment"># 9</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>vowels <span class="token operator">+</span> consonants<span class="token punctuation">)</span>  <span class="token comment"># 10</span>

r1 <span class="token operator">=</span> reorder<span class="token punctuation">(</span><span class="token string">&#39;stay at home&#39;</span><span class="token punctuation">)</span>
r2 <span class="token operator">=</span> reorder<span class="token punctuation">(</span><span class="token string">&#39;the cat in the hat&#39;</span><span class="token punctuation">)</span>
r3 <span class="token operator">=</span> reorder<span class="token punctuation">(</span><span class="token string">&#39;rhythm&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\uFF0C\u6709\u66F4\u591A\u66F4\u597D\u73A9\u7684\u7B49\u4F60\u53D1\u73B0\uFF01</p><details class="custom-container details"><summary>\u516C\u4F17\u53F7\uFF1AAI\u60A6\u521B\u3010\u4E8C\u7EF4\u7801\u3011</summary><p><img src="`+t+'" alt="" loading="lazy"></p></details>',15),d={class:"custom-container info"},m=n("p",{class:"custom-container-title"},"AI\u60A6\u521B\xB7\u7F16\u7A0B\u4E00\u5BF9\u4E00",-1),v=n("p",null,"AI\u60A6\u521B\xB7\u63A8\u51FA\u8F85\u5BFC\u73ED\u5566\uFF0C\u5305\u62EC\u300CPython \u8BED\u8A00\u8F85\u5BFC\u73ED\u3001C++ \u8F85\u5BFC\u73ED\u3001java \u8F85\u5BFC\u73ED\u3001\u7B97\u6CD5/\u6570\u636E\u7ED3\u6784\u8F85\u5BFC\u73ED\u3001\u5C11\u513F\u7F16\u7A0B\u3001pygame \u6E38\u620F\u5F00\u53D1\u300D\uFF0C\u5168\u90E8\u90FD\u662F\u4E00\u5BF9\u4E00\u6559\u5B66\uFF1A\u4E00\u5BF9\u4E00\u8F85\u5BFC + \u4E00\u5BF9\u4E00\u7B54\u7591 + \u5E03\u7F6E\u4F5C\u4E1A + \u9879\u76EE\u5B9E\u8DF5\u7B49\u3002\u5F53\u7136\uFF0C\u8FD8\u6709\u7EBF\u4E0B\u7EBF\u4E0A\u6444\u5F71\u8BFE\u7A0B\u3001Photoshop\u3001Premiere \u4E00\u5BF9\u4E00\u6559\u5B66\u3001QQ\u3001\u5FAE\u4FE1\u5728\u7EBF\uFF0C\u968F\u65F6\u54CD\u5E94\uFF01\u5FAE\u4FE1\uFF1AJiabcdefh",-1),b=n("p",null,"C++ \u4FE1\u606F\u5965\u8D5B\u9898\u89E3\uFF0C\u957F\u671F\u66F4\u65B0\uFF01\u957F\u671F\u62DB\u6536\u4E00\u5BF9\u4E00\u4E2D\u5C0F\u5B66\u4FE1\u606F\u5965\u8D5B\u96C6\u8BAD\uFF0C\u8386\u7530\u3001\u53A6\u95E8\u5730\u533A\u6709\u673A\u4F1A\u7EBF\u4E0B\u4E0A\u95E8\uFF0C\u5176\u4ED6\u5730\u533A\u7EBF\u4E0A\u3002\u5FAE\u4FE1\uFF1AJiabcdefh",-1),_={href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"\u65B9\u6CD5\u4E8C\uFF1A\u5FAE\u4FE1\uFF1AJiabcdefh",-1),h=n("p",null,[n("img",{src:p,alt:"",loading:"lazy"})],-1);function g(w,f){const a=u("ExternalLinkIcon");return o(),c("div",null,[k,n("div",d,[m,v,b,n("p",null,[s("\u65B9\u6CD5\u4E00\uFF1A"),n("a",_,[s("QQ"),i(a)])]),y]),h])}const U=e(r,[["render",g],["__file","exam-2022-solution.html.vue"]]);export{U as default};
