<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://bornforthis.cn/rss.xml" rel="self" type="application/rss+xml"/>
    <title>AI悦创</title>
    <link>https://bornforthis.cn/</link>
    <description>AI悦创,Python,编程一对一,C++,Java,AI,人工智能,黄家宝</description>
    <language>zh-CN</language>
    <pubDate>Wed, 25 May 2022 11:38:15 GMT</pubDate>
    <lastBuildDate>Wed, 25 May 2022 11:38:15 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <image>
      <title>AI悦创</title>
      <url>/img_home/logo_min.png</url>
      <link>https://bornforthis.cn/</link>
    </image>
    <category>随笔</category>
    <category>Python 补充知识</category>
    <category>tkinter</category>
    <category>pip</category>
    <category>编辑器技巧</category>
    <category>Python 私教练习题【基础】</category>
    <category>Python 私教问答</category>
    <category>技术杂谈</category>
    <category>Python 网络爬虫专栏</category>
    <category>悦创杂谈</category>
    <category>Python 基础</category>
    <category>Numpy and pandas</category>
    <category>Numpy</category>
    <category>刘润</category>
    <category>Python Base Notebook</category>
    <category>Markdown 基础</category>
    <category>使用指南</category>
    <item>
      <title>web3.0是什么?</title>
      <link>https://bornforthis.cn/posts/11.html</link>
      <guid>https://bornforthis.cn/posts/11.html</guid>
      <source url="https://bornforthis.cn/rss.xml">web3.0是什么?</source>
      <category>随笔</category>
      <pubDate>Fri, 17 Dec 2021 20:09:04 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>手札</p>
<p>起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</p>
</div>
<p>你好，我是悦创。</p>
<p>原想录成视频的，奈何条件不允许。以后录吧。。。</p>
<p>最近，有个概念特别火，叫 web3.0 。很多关于它的视频在网络上刷屏，那到底什么叫 web3.0？如果要理解这个东西，你必须首先要理解：什么叫 1.0 、什么叫 2.0 。</p>
<p>所谓 web1.0 指的是，在早期的互联网，比如像新浪、网易、搜狐等这些网站，这些网站的内容，都是编辑把它整理出来。咱们作为一个普通的互联网用户，只能去看也就是：read-only 。 而到后来随着互联网进步，交互的方式也进步了。我们可以开始写了，这最主要的一个象征就是 blog 的出现。我在 2018年开始写博客，博客出现后，就出现了大量可以写的互联网， 比如：</p>
<ul>
<li>新浪微博，你可以发表自己的微博；</li>
<li>Facebook 你可以发表自己的动态；</li>
<li>微信你可以发表自己的朋友圈；</li>
</ul>
<p>甚至早起的天涯，你发自己的帖子，大量的用户开始贡献内容。那一时刻开始，互联网不但可以只读了也就是可读可写了。——这就是 web2.0 。</p>
<p>但是 2.0 依然有一个问题，就是：作者，一个普通用户创造内容，他的所有权其实属于平台的，所以对这个内容的控制权、收益权是你创造的，但是平台拿走了。平台可以封你账号、删你内容、不允许你的内容被搬家，平台可以因为你的内容而收益。</p>
<p>这在很多人看来是不对的，我们能不能创造一个新机制。 就是：你创造出来的内容，所带来控制权、收益权都归你自己（创作者本身），也就是你拥有所有权。</p>
<p>我举个例子： 比如我在我家里弄了一台服务器，然后让一些电影可以自动存在我的服务器上，这个时候当我的邻居想要看一部电影的时候，他就从我家里的服务器上看，那一定比从机房看，速度更快。这个时候，我为互联网提供了价值。我这个价值是某种贡献形式，这种贡献是我创造的，它带来的收益应该属于我。我用什么方法来认可这个收益呢？——今天有一群人提出来，这就是 web3.0 的基本逻辑。</p>
<p>我们认为给他发一种东西叫：token ，也就是所谓的通证或者有人翻译成叫代币，拿到代币之后来确认你对互联网的贡献，你提供的价值越多，不管是内容、还是网络带宽、硬盘等等东西，那我给你发的通证就越多也就是 token 越多代币越多。也不断不断收到越来越多的代币来确认你的价值。</p>
<p>今天的代币，可能没有太大的价值，比如只值一分钱、两分钱，但是随着大家贡献的认可，会越来越贵，变成 1毛钱、2 毛钱、5 块钱、10 块钱，这个时候你的贡献就被认可价值了。这就是 web3.0 ，通过代币的方式、通过 token 的方式来确认价格的机制，那这个时候平台本身也是需要发展、需要去开发。所以，他通过交易所的方式有可能会发行一些代币，来拿到一些钱，给自己来做基本的开发费用。 所以，他们想象的互联网，是要去掉一个中心化平台的互联网，是要把价值还给用户的互联网。 现在我们总结一下：</p>
<ul>
<li>web1.0 read-only 只读互联网</li>
<li>web2.0 可以读也可以写</li>
<li>web3.0 可读、可写、可拥有</li>
</ul>
<p>这是三个不同的进步，可拥有分别是：控制权、收益权。收益权也要是我，收益权不属于我，我就要控制权，我可以把我所有内容迁移到另一个平台，你还不能阻拦我。这就是我们说的 web3.0 ，那么 3.0 会不会有未来呢？我们还需要拭目以待，但是在这个行业中间，已经出现一种乱象：<strong>起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</strong></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>02-Python 保留指定位数的小数</title>
      <link>https://bornforthis.cn/column/py/basequestion/radix_point.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/radix_point.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-Python 保留指定位数的小数</source>
      <category>Python 补充知识</category>
      <pubDate>Tue, 24 May 2022 23:19:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>学过编程我们都知道，无论什么语言，其实都是相通的，，当我们学会了并掌握好了一种语言后，我们再去了解另外一种语言，其实就很容易了。</p>
<h2 id="_1-2f-f-方法-推荐" tabindex="-1"> 1. ''%.2f' %f 方法(推荐)</h2>
<div><pre><code>In <span>[</span><span>1</span><span>]</span><span>:</span> f <span>=</span> <span>1.23456</span>

In <span>[</span><span>2</span><span>]</span><span>:</span> <span>'%.4f'</span> <span>%</span> f
Out<span>[</span><span>2</span><span>]</span><span>:</span> <span>'1.2346'</span>

In <span>[</span><span>3</span><span>]</span><span>:</span> <span>'%.3f'</span> <span>%</span> f
Out<span>[</span><span>3</span><span>]</span><span>:</span> <span>'1.235'</span>

In <span>[</span><span>4</span><span>]</span><span>:</span> <span>'%.2f'</span> <span>%</span> f
Out<span>[</span><span>4</span><span>]</span><span>:</span> <span>'1.23'</span>

In <span>[</span><span>5</span><span>]</span><span>:</span> <span># 等价于下面的代码</span>

In <span>[</span><span>6</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>'%.4f'</span> <span>%</span> f<span>)</span>
<span>1.2346</span>

In <span>[</span><span>7</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>'%.3f'</span> <span>%</span> f<span>)</span>
<span>1.235</span>

In <span>[</span><span>8</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>'%.2f'</span> <span>%</span> f<span>)</span>
<span>1.23</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><div><p>提示</p>
<p>这个方法会进行四舍五入。</p>
</div>
<h2 id="_2-format-函数-推荐" tabindex="-1"> 2. format 函数(推荐)</h2>
<div><pre><code>In <span>[</span><span>10</span><span>]</span><span>:</span> <span>format</span><span>(</span><span>1.23456</span><span>,</span> <span>'.2f'</span><span>)</span>
Out<span>[</span><span>10</span><span>]</span><span>:</span> <span>'1.23'</span>

In <span>[</span><span>11</span><span>]</span><span>:</span> <span>format</span><span>(</span><span>1.23456</span><span>,</span> <span>'.3f'</span><span>)</span>
Out<span>[</span><span>11</span><span>]</span><span>:</span> <span>'1.235'</span>

In <span>[</span><span>12</span><span>]</span><span>:</span> <span>format</span><span>(</span><span>1.23456</span><span>,</span> <span>'.4f'</span><span>)</span>
Out<span>[</span><span>12</span><span>]</span><span>:</span> <span>'1.2346'</span>

In <span>[</span><span>13</span><span>]</span><span>:</span> <span># 等价于</span>

In <span>[</span><span>14</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>format</span><span>(</span><span>1.23456</span><span>,</span> <span>'.2f'</span><span>)</span><span>)</span>
<span>1.23</span>

In <span>[</span><span>15</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>format</span><span>(</span><span>1.23456</span><span>,</span> <span>'.3f'</span><span>)</span><span>)</span>
<span>1.235</span>

In <span>[</span><span>16</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>format</span><span>(</span><span>1.23456</span><span>,</span> <span>'.4f'</span><span>)</span><span>)</span>
<span>1.2346</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><div><p>提示</p>
<p>这个方法会进行四舍五入。</p>
</div>
<details><summary>补充</summary>
<div><pre><code>In <span>[</span><span>30</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>"{num:.2f}"</span><span>.</span><span>format</span><span>(</span>num<span>=</span><span>0.13333</span><span>)</span><span>)</span>
<span>0.13</span>

In <span>[</span><span>31</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>"{num:.2f}"</span><span>.</span><span>format</span><span>(</span>num<span>=</span><span>0.10333</span><span>)</span><span>)</span>
<span>0.10</span>

In <span>[</span><span>32</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>"{num:.2f}"</span><span>.</span><span>format</span><span>(</span>num<span>=</span><span>0.10533</span><span>)</span><span>)</span>
<span>0.11</span>

In <span>[</span><span>33</span><span>]</span><span>:</span> <span>print</span><span>(</span><span>"{num:.2f}"</span><span>.</span><span>format</span><span>(</span>num<span>=</span><span>0.11533</span><span>)</span><span>)</span>
<span>0.12</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>下表展示了 <code>str.format()</code> 格式化数字的多种方法：</p>
<table>
<thead>
<tr>
<th style="text-align:left">数字</th>
<th style="text-align:left">格式</th>
<th style="text-align:left">输出</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">3.1415926</td>
<td style="text-align:left">{:.2f}</td>
<td style="text-align:left">3.14</td>
<td style="text-align:left">保留小数点后两位</td>
</tr>
<tr>
<td style="text-align:left">3.1415926</td>
<td style="text-align:left">{:+.2f}</td>
<td style="text-align:left">+3.14</td>
<td style="text-align:left">带符号保留小数点后两位</td>
</tr>
<tr>
<td style="text-align:left">-1</td>
<td style="text-align:left">{:+.2f}</td>
<td style="text-align:left">-1.00</td>
<td style="text-align:left">带符号保留小数点后两位</td>
</tr>
<tr>
<td style="text-align:left">2.71828</td>
<td style="text-align:left">{:.0f}</td>
<td style="text-align:left">3</td>
<td style="text-align:left">不带小数</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">{:0&gt;2d}</td>
<td style="text-align:left">05</td>
<td style="text-align:left">数字补零 (填充左边, 宽度为2)</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">{:x&lt;4d}</td>
<td style="text-align:left">5xxx</td>
<td style="text-align:left">数字补x (填充右边, 宽度为4)</td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">{:x&lt;4d}</td>
<td style="text-align:left">10xx</td>
<td style="text-align:left">数字补x (填充右边, 宽度为4)</td>
</tr>
<tr>
<td style="text-align:left">1000000</td>
<td style="text-align:left">{:,}</td>
<td style="text-align:left">1,000,000</td>
<td style="text-align:left">以逗号分隔的数字格式</td>
</tr>
<tr>
<td style="text-align:left">0.25</td>
<td style="text-align:left">{:.2%}</td>
<td style="text-align:left">25.00%</td>
<td style="text-align:left">百分比格式</td>
</tr>
<tr>
<td style="text-align:left">1000000000</td>
<td style="text-align:left">{:.2e}</td>
<td style="text-align:left">1.00e+09</td>
<td style="text-align:left">指数记法</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">{:&gt;10d}</td>
<td style="text-align:left">13</td>
<td style="text-align:left">右对齐 (默认, 宽度为10)</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">{:&lt;10d}</td>
<td style="text-align:left">13</td>
<td style="text-align:left">左对齐 (宽度为10)</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">{:^10d}</td>
<td style="text-align:left">13</td>
<td style="text-align:left">中间对齐 (宽度为10)</td>
</tr>
<tr>
<td style="text-align:left">11</td>
<td style="text-align:left">'{:b}'.format(11)<i>Content not supported</i>'{:d}'.format(11)<i>Content not supported</i>'{😮}'.format(11)<i>Content not supported</i>'{:x}'.format(11)<i>Content not supported</i>'{:#x}'.format(11)<i>Content not supported</i>'{:#X}'.format(11)</td>
<td style="text-align:left">1011<i>Content not supported</i>11<i>Content not supported</i>13<i>Content not supported</i>b<i>Content not supported</i>0xb<i>Content not supported</i>0XB</td>
<td style="text-align:left">进制</td>
</tr>
</tbody>
</table>
<p><strong>^</strong>, <strong>&lt;</strong>, <strong>&gt;</strong> 分别是居中、左对齐、右对齐，后面带宽度， <strong>:</strong> 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充。</p>
<p><strong>+</strong> 表示在正数前显示 <strong>+</strong>，负数前显示 <strong>-</strong>； （空格）表示在正数前加空格</p>
<p>b、d、o、x 分别是二进制、十进制、八进制、十六进制。</p>
<p>此外我们可以使用大括号 <strong>{}</strong> 来转义大括号，如下实例：</p>
<div><pre><code><span>print</span> <span>(</span><span>"{} 对应的位置是 {{0}}"</span><span>.</span><span>format</span><span>(</span><span>"aiyc"</span><span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>输出结果为：</p>
<div><pre><code>aiyc 对应的位置是 <span>{</span><span>0</span><span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></details>
<h2 id="_3-round-函数" tabindex="-1"> 3. round() 函数</h2>
<p>其实这个方法不推荐大家使用，查询资料发现里面的坑其实很多，python2 和 python3 里面的坑还不太一样，在此简单描述一下 python3对应的坑的情况。</p>
<div><pre><code>a <span>=</span> <span>1.23456</span>
b <span>=</span> <span>2.355</span>
c <span>=</span> <span>3.5</span>
d <span>=</span> <span>2.5</span>
<span>print</span><span>(</span><span>round</span><span>(</span>a<span>,</span> <span>3</span><span>)</span><span>)</span>
<span>print</span><span>(</span><span>round</span><span>(</span>b<span>,</span> <span>2</span><span>)</span><span>)</span>
<span>print</span><span>(</span><span>round</span><span>(</span>c<span>)</span><span>)</span>
<span>print</span><span>(</span><span>round</span><span>(</span>d<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>输出结果：</p>
<div><pre><code><span>1.235</span>   <span># 1.23456 最终向前进位了</span>
<span>2.35</span>    <span># 2.355 居然没进位</span>
<span>4</span>       <span># 最终 3.5 居然变为 4 了</span>
<span>2</span>       <span># 最终 2.5 取值变为 2</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>（1）通过上面的函数，看着是不是很晕，感觉 <code>round(x, n)</code> 函数是否进位也没看出是啥规律；</p>
<p>（2）<code>round(x, n)</code> 函数中，是否进位或四舍五入，取决于 n 位以及 n+1 位小数的值；</p>
<p>（3）只有当 n+1 位数字是 5 的时候，容易混淆，如果 n 为偶数，则 n+1 位数是5，则进位，例如 <code>round(1.23456, 3)</code> 最终变为 1.235</p>
<p>（4）如果 n 为奇数，则 n+1 位是数 5，那不进位，例如 <code>round(2.355, 2)</code>，最终为 2.35</p>
<p>（5）如果 n 为 0，即没有填写 n 的时候，最终结果与上面相反，即整数部分为偶数的时候，小数位 5 不进位，例如： <code>round(2.5)</code> 变为2。</p>
<div><pre><code>In <span>[</span><span>21</span><span>]</span><span>:</span> <span>round</span><span>(</span><span>2.5</span><span>)</span>
Out<span>[</span><span>21</span><span>]</span><span>:</span> <span>2</span>

In <span>[</span><span>22</span><span>]</span><span>:</span> <span>round</span><span>(</span><span>3.5</span><span>)</span>
Out<span>[</span><span>22</span><span>]</span><span>:</span> <span>4</span>

In <span>[</span><span>23</span><span>]</span><span>:</span> <span>round</span><span>(</span><span>4.5</span><span>)</span>
Out<span>[</span><span>23</span><span>]</span><span>:</span> <span>4</span>

In <span>[</span><span>24</span><span>]</span><span>:</span> <span>round</span><span>(</span><span>5.5</span><span>)</span>
Out<span>[</span><span>24</span><span>]</span><span>:</span> <span>6</span>

In <span>[</span><span>25</span><span>]</span><span>:</span> <span>round</span><span>(</span><span>6.5</span><span>)</span>
Out<span>[</span><span>25</span><span>]</span><span>:</span> <span>6</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><div><p>小结</p>
<p>n 为 0 的时候，奇数向上取整、偶数向下取整。【当然，你也可以理解为 5 进不进位】</p>
</div>
<p>（6）整数部分为奇数的时候，小数位 5 进位。（ <code>round(3.5)</code> 变为 4）</p>
<h2 id="_4-不进行四舍五入-直接进行截断" tabindex="-1"> 4. 不进行四舍五入，直接进行截断</h2>
<p>（1）可以放大指定的倍数，然后取整，然后再除以指定的倍数。</p>
<div><pre><code><span>#保留三位小数截断 python3</span>
<span>print</span><span>(</span><span>int</span><span>(</span><span>1.23456</span> <span>*</span> <span>1000</span><span>)</span> <span>/</span> <span>1000</span> <span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>(2) 使用字符串截取，截取小数点后指定的位数</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>01-Tkinter 中 tearoff 的作用</title>
      <link>https://bornforthis.cn/column/tkinter/tearoff.html</link>
      <guid>https://bornforthis.cn/column/tkinter/tearoff.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-Tkinter 中 tearoff 的作用</source>
      <category>tkinter</category>
      <pubDate>Tue, 24 May 2022 17:26:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>我想你在学习 tkinter 的时候，会出现这个疑问：程序运行的时候菜单之下出现了一个虚线项。如下图：</p>
<p><img src="@source/column/tkinter/tearoff.assets/image-20220524173907212.png" alt="image-20220524173907212" loading="lazy"></p>
<p>点击这个虚线选项后，菜单单独浮于应用之上：</p>
<p><img src="@source/column/tkinter/tearoff.assets/image-20220524183243382.png" alt="image-20220524183243382" loading="lazy"></p>
<p>进查询发现了 tearoff 选项，当 <code>tearoff=1</code> 的时候该菜单被设置为可以独立出来的菜单，点击虚线就可以将菜单独立出来，当 <code>tearoff=0</code> 时就是正常的菜单了，但是默认情况下 <code>tearoff=1</code> ，所以在程序中需要设置一下：</p>
<h2 id="当设置为-0-的时候" tabindex="-1"> 当设置为 0 的时候</h2>
<div><pre><code><span># -*- coding: utf-8 -*-</span>
<span>"""
@Time    : 2022/1/3 11:32
@Author  : AI悦创
@FileName: main.py
@Software: PyCharm
@Blog    ：https://www.aiyc.top
@公众号   ：AI悦创
@description：
"""</span>
<span>#!/usr/bin/python</span>
<span>#coding: utf-8</span>
 
<span>import</span> tkinter <span>as</span> tk
root <span>=</span> tk<span>.</span>Tk<span>(</span><span>)</span>
root<span>.</span>title<span>(</span><span>'菜单练习'</span><span>)</span>
menu <span>=</span> tk<span>.</span>Menu<span>(</span>root<span>)</span>
submenu <span>=</span> tk<span>.</span>Menu<span>(</span>menu<span>,</span> tearoff <span>=</span> <span>0</span><span>)</span>
submenu<span>.</span>add_command<span>(</span>label <span>=</span> <span>'打开'</span><span>)</span>
submenu<span>.</span>add_command<span>(</span>label <span>=</span> <span>'保存'</span><span>)</span>
submenu<span>.</span>add_command<span>(</span>label <span>=</span> <span>'关闭'</span><span>)</span>
menu<span>.</span>add_cascade<span>(</span>label <span>=</span> <span>'文件'</span><span>,</span> menu <span>=</span> submenu<span>)</span>
root<span>.</span>config<span>(</span>menu <span>=</span> menu<span>)</span>
root<span>.</span>mainloop<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><p>如图：</p>
<p><img src="@source/column/tkinter/tearoff.assets/image-20220524184421188.png" alt="image-20220524184421188" loading="lazy"></p>
<h2 id="设置为-1-的时候" tabindex="-1"> 设置为 1 的时候</h2>
<p><img src="@source/column/tkinter/tearoff.assets/image-20220524184613533.png" alt="image-20220524184613533" loading="lazy"></p>
<p>多了一个虚线，如果点击的话就会发现，这个菜单框可以独立出来显示。</p>
<p>补充示例：</p>
<div><pre><code><span># -*- coding: utf-8 -*-</span>
<span>"""
@Time    : 2022/1/3 11:32
@Author  : AI悦创
@FileName: main.py
@Software: PyCharm
@Blog    ：https://www.aiyc.top
@公众号   ：AI悦创
@description：
"""</span>
<span>from</span> tkinter <span>import</span> Menu<span>,</span> Tk

<span>if</span> __name__ <span>==</span> <span>"__main__"</span><span>:</span>
    root <span>=</span> Tk<span>(</span><span>)</span>
    root<span>.</span>title<span>(</span><span>'主窗体'</span><span>)</span>
    <span># 在屏幕左上角绘制240&amp;480的主窗体</span>
    root<span>.</span>geometry<span>(</span><span>'240x480+0+0'</span><span>)</span>
    <span># 自定义菜单</span>
    menu_bar <span>=</span> Menu<span>(</span>root<span>)</span>
    <span># 创建菜单项目</span>
    <span># tearoff 如果等于1，该菜单下面会有一个虚线选项（表明该菜单可以独立出来），如果设置成1则没有</span>
    stu_menu <span>=</span> Menu<span>(</span>menu_bar<span>,</span>tearoff<span>=</span><span>0</span><span>)</span>
    stu_menu<span>.</span>add_command<span>(</span>label<span>=</span><span>'add'</span><span>,</span> command<span>=</span><span>''</span><span>)</span>
    stu_menu<span>.</span>add_command<span>(</span>label<span>=</span><span>'query'</span><span>,</span> command<span>=</span><span>''</span><span>)</span>
    menu_bar<span>.</span>add_cascade<span>(</span>label<span>=</span><span>'学生'</span><span>,</span> menu<span>=</span>stu_menu<span>)</span>

    <span># create score menu</span>
    score_menu <span>=</span> Menu<span>(</span>menu_bar<span>)</span>
    score_menu<span>.</span>add_command<span>(</span>label<span>=</span><span>'添加'</span><span>,</span> command<span>=</span><span>''</span><span>)</span>
    score_menu<span>.</span>add_command<span>(</span>label<span>=</span><span>'查询'</span><span>,</span> command<span>=</span><span>''</span><span>)</span>
    menu_bar<span>.</span>add_cascade<span>(</span>label<span>=</span><span>'成绩'</span><span>,</span> menu<span>=</span>score_menu<span>)</span>

    root<span>.</span>config<span>(</span>menu<span>=</span>menu_bar<span>)</span>
    root<span>.</span>mainloop<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>01-Python 导出/导入依赖包</title>
      <link>https://bornforthis.cn/column/py/basequestion/requirements.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/requirements.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-Python 导出/导入依赖包</source>
      <category>pip</category>
      <pubDate>Sun, 22 May 2022 23:44:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="使用" tabindex="-1"> 使用</h2>
<p>平时导出依赖一般都是：</p>
<div><pre><code>pip freeze <span>></span>  requirements<span>.</span>txt
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>这种方式导出的是当前 Python 环境中所有的包，有些库不是必需的也跟着导出来，安装的时候也过于麻烦。</p>
<p>这种时候就要使用 <code>pipreqs</code>  ，它只会导出当前项目运行所依赖的包。</p>
<p>下载命令：</p>
<div><pre><code>pip install pipreqs
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>使用命令如下，进入项目的根目录后输入如下命令：</p>
<div><pre><code>pipreqs <span>.</span><span>/</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>然后会在当前目录下生成 <strong>requirements.txt</strong> 文件。</p>
<h2 id="问题" tabindex="-1"> 问题</h2>
<div><p>注意</p>
<p>UnicodeDecodeError: 'gbk' codec can't decode byte 0x80 in position 175: illegal multibyte sequence</p>
</div>
<h2 id="解决方法-指定编码格式" tabindex="-1"> 解决方法：指定编码格式</h2>
<div><pre><code>pipreqs <span>.</span><span>/</span> <span>-</span><span>-</span>encoding<span>=</span>utf8
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>之后便会生成 <code>requirements.txt</code> 文件，包含了此路径下项目中的依赖项。</p>
<h2 id="导入" tabindex="-1"> 导入</h2>
<p>导入依赖包：</p>
<div><pre><code>pip install <span>-</span>r <span>.</span><span>/</span>requirements<span>.</span>txt
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>即可安装所有依赖，另外还可以使用其他源来加速下载，如清华源：</p>
<div><pre><code>pip install <span>-</span>r <span>.</span><span>/</span>requriements<span>.</span>txt <span>-</span>i https<span>:</span><span>//</span>pypi<span>.</span>tuna<span>.</span>tsinghua<span>.</span>edu<span>.</span>cn<span>/</span>simple
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><div><p>细节</p>
<p>有些小细节也是值得一提的，那就是 <code>pip freeze &gt; requirements.txt</code> 指令必须用在整个工程项目完全跑通了（也就是项目依赖已经全部安装完成）的情况下，才能将所有的有关依赖库写入 <code>requirements.txt</code> 文件中去，而 <code>pip install -r requirements.txt</code> 指令则使用于服务器部署时较为合适。</p>
</div>
<h2 id="补充-python-项目环境迁移" tabindex="-1"> 补充：Python 项目环境迁移</h2>
<p>将 Python 项目迁移到新电脑时，不可以直接复制虚拟环境，因为在建立虚拟环境时，虚拟环境中的 <code>python.exe</code> , <code>pip.exe</code> ......等一些文件会“<strong>硬编码</strong>”，记录的是绝对路径，放到其他电脑后，因为路径不同会出错！</p>
<p>正确的做法是在新电脑中创建新的虚拟环境：<code>python -m venv MyApp</code> ，接下来（方法可供选择）：</p>
<ol>
<li>
<p>复制之前的 lib 文件中的 packes 直接到新电脑的 lib 文件中</p>
</li>
<li>
<p><code>pip freeze &gt; requirements.txt</code>  将包目录存在 txt 中，复制 txt 到新环境，cmd 到新环境，执行 <code>pip install -r requirements.txt</code>。</p>
</li>
</ol>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>01-Pycharm 自动添加作者等信息</title>
      <link>https://bornforthis.cn/column/py/basequestion/skill_pycharm1.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/skill_pycharm1.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-Pycharm 自动添加作者等信息</source>
      <category>编辑器技巧</category>
      <pubDate>Fri, 20 May 2022 16:01:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="_1-按照下面路径以此打开" tabindex="-1"> 1. 按照下面路径以此打开</h2>
<p><img src="@source/column/py/basequestion/skill_pycharm1.assets/image-20220520161417800.png" alt="image-20220520161417800" loading="lazy"></p>
<h2 id="_2-设置相关代码" tabindex="-1"> 2. 设置相关代码</h2>
<div><pre><code><span>##!/usr/bin/python3</span>
<span># -*- coding: utf-8 -*-</span>
<span># @Time    : ${DATE} ${TIME}</span>
<span># @Author  : AI悦创</span>
<span># @FileName: ${NAME}.py</span>
<span># @Software: ${PRODUCT_NAME}</span>
<span># @Blog    ：https://bornforthis.cn/</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>设定的规则说明如下：</p>
<div><pre><code>（a）shebang行

<span>#!/usr/bin/python3</span>

（b）预定义的变量要扩展为格式为$ <span>{</span><span>&lt;</span>variable_name<span>></span><span>}</span>的相应值。

可用的预定义文件模板变量为：

$ <span>{</span>PROJECT_NAME<span>}</span> <span>-</span> 当前项目的名称。

$ <span>{</span>NAME<span>}</span> <span>-</span> 在文件创建过程中在“新建文件”对话框中指定的新文件的名称。

$ <span>{</span>USER<span>}</span> <span>-</span> 当前用户的登录名。

$ <span>{</span>DATE<span>}</span> <span>-</span> 当前的系统日期。

$ <span>{</span>TIME<span>}</span> <span>-</span> 当前系统时间。

$ <span>{</span>YEAR<span>}</span> <span>-</span> 今年。

$ <span>{</span>MONTH<span>}</span> <span>-</span> 当月。

$ <span>{</span>DAY<span>}</span> <span>-</span> 当月的当天。

$ <span>{</span>HOUR<span>}</span> <span>-</span> 目前的小时。

$ <span>{</span>MINUTE<span>}</span> <span>-</span> 当前分钟。

$ <span>{</span>PRODUCT_NAME<span>}</span> <span>-</span> 将在其中创建文件的IDE的名称。

$ <span>{</span>MONTH_NAME_SHORT<span>}</span> <span>-</span> 月份名称的前<span>3</span>个字母。 示例：<span>1</span>月，<span>2</span>月等

$ <span>{</span>MONTH_NAME_FULL<span>}</span> <span>-</span> 一个月的全名。 示例：<span>1</span>月，<span>2</span>月等
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>01-变量专项练习</title>
      <link>https://bornforthis.cn/column/py/basequestion/special_variabl.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/special_variabl.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-变量专项练习</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Fri, 20 May 2022 10:35:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="_1-交换果汁" tabindex="-1"> 1. 交换果汁</h2>
<p>假如你有两个小孩，哥哥叫：Austin，弟弟叫：Jaden。</p>
<p>Austin 想喝<strong>果汁</strong>，Jaden 想喝<strong>可乐</strong>。<strong>哥哥喝弟弟都有专属的杯子，不喜欢用对方的杯子。</strong></p>
<p>家中仅剩一杯果汁、一杯可乐，你不小心把哥哥的杯子装了可乐，弟弟的杯子装了果汁。</p>
<p><strong>问：如何交换哥哥与弟弟杯中的果汁？</strong></p>
<CodeGroup>
<CodeGroupItem title="样例代码" active>
<div><pre><code>Austin <span>=</span> <span>"Coke"</span>
Jaden <span>=</span> <span>"juice"</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Austin<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Jaden<span>)</span>
<span># 待补充代码</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Austin<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Jaden<span>)</span>
<span># 输出</span>
Austin Coke
Jaden juice
<span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span>
Austin juice
Jaden Coke
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="提示">
<p>两种方法思路：</p>
<p><strong>方法一：</strong> 联想现实生活，现实生活中你会如何解决？</p>
<blockquote>
<p>现实生活中，我想你会引入一个空杯子来操作，那你会如何操作？思考后再思考代码中如何实现？</p>
</blockquote>
<p><strong>方法二：</strong> Python 多个变量赋予不同值。</p>
<div><pre><code>a<span>,</span> b<span>,</span> c <span>=</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="answer１">
<div><pre><code>Austin <span>=</span> <span>"Coke"</span>
Jaden <span>=</span> <span>"juice"</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Austin<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Jaden<span>)</span>
Empty_cup <span>=</span> Austin
Austin <span>=</span> Jaden
Jaden <span>=</span> Empty_cup
<span>print</span><span>(</span><span>"-"</span> <span>*</span> <span>12</span><span>)</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Austin<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Jaden<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="answer2">
<div><pre><code>Austin <span>=</span> <span>"Coke"</span>
Jaden <span>=</span> <span>"juice"</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Austin<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Jaden<span>)</span>
Austin<span>,</span> Jaden <span>=</span> Jaden<span>,</span> Austin
<span>print</span><span>(</span><span>"-"</span> <span>*</span> <span>12</span><span>)</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Austin<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Jaden<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></CodeGroupItem>
</CodeGroup>
<div><p>警告！！！</p>
<details><summary>不要出现如下方法！！！</summary>
<div><pre><code>Austin <span>=</span> <span>"Coke"</span>
Jaden <span>=</span> <span>"juice"</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Austin<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Jaden<span>)</span>
<span># 待补充代码</span>
<span>print</span><span>(</span><span>"Austin"</span><span>,</span> Jaden<span>)</span>
<span>print</span><span>(</span><span>"Jaden"</span><span>,</span> Austin<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div></details>
</div>
<div><p>悦创金句</p>
<p>程序员就是连接人与机器之间的桥梁——AI悦创</p>
</div>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>02-for 循环专项练习</title>
      <link>https://bornforthis.cn/column/py/basequestion/special_for.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/special_for.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-for 循环专项练习</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Thu, 19 May 2022 20:30:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="_1-九九乘法表" tabindex="-1"> 1. 九九乘法表</h2>
<p>要求输出结果：</p>
<div><pre><code>1x1<span>=</span><span>1</span>    
1x2<span>=</span><span>2</span>    2x2<span>=</span><span>4</span>    
1x3<span>=</span><span>3</span>    2x3<span>=</span><span>6</span>    3x3<span>=</span><span>9</span>    
1x4<span>=</span><span>4</span>    2x4<span>=</span><span>8</span>    3x4<span>=</span><span>12</span>    4x4<span>=</span><span>16</span>    
1x5<span>=</span><span>5</span>    2x5<span>=</span><span>10</span>    3x5<span>=</span><span>15</span>    4x5<span>=</span><span>20</span>    5x5<span>=</span><span>25</span>    
1x6<span>=</span><span>6</span>    2x6<span>=</span><span>12</span>    3x6<span>=</span><span>18</span>    4x6<span>=</span><span>24</span>    5x6<span>=</span><span>30</span>    6x6<span>=</span><span>36</span>    
1x7<span>=</span><span>7</span>    2x7<span>=</span><span>14</span>    3x7<span>=</span><span>21</span>    4x7<span>=</span><span>28</span>    5x7<span>=</span><span>35</span>    6x7<span>=</span><span>42</span>    7x7<span>=</span><span>49</span>    
1x8<span>=</span><span>8</span>    2x8<span>=</span><span>16</span>    3x8<span>=</span><span>24</span>    4x8<span>=</span><span>32</span>    5x8<span>=</span><span>40</span>    6x8<span>=</span><span>48</span>    7x8<span>=</span><span>56</span>    8x8<span>=</span><span>64</span>    
1x9<span>=</span><span>9</span>    2x9<span>=</span><span>18</span>    3x9<span>=</span><span>27</span>    4x9<span>=</span><span>36</span>    5x9<span>=</span><span>45</span>    6x9<span>=</span><span>54</span>    7x9<span>=</span><span>63</span>    8x9<span>=</span><span>72</span>    9x9<span>=</span><span>81</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><CodeGroup>
<CodeGroupItem title="for-for" active>
<div><pre><code><span># 九九乘法表</span>
<span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>:</span>
    <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i<span>+</span><span>1</span><span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'{}x{}={}\t'</span><span>.</span><span>format</span><span>(</span>j<span>,</span> i<span>,</span> i<span>*</span>j<span>)</span><span>,</span> end<span>=</span><span>''</span><span>)</span>
    <span>print</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="while-while">
<div><pre><code><span># 九九乘法表</span>
i <span>=</span> <span>1</span>
<span>while</span> i <span>&lt;=</span> <span>9</span><span>:</span>
    j <span>=</span> <span>1</span>
    <span>while</span> <span>(</span>j <span>&lt;=</span> i<span>)</span><span>:</span>  <span># j 的大小是由 i 来控制的</span>
        <span>print</span><span>(</span><span><span>f'</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>'</span></span><span>,</span> end<span>=</span><span>'\t'</span><span>)</span>
        j <span>+=</span> <span>1</span>
    <span>print</span><span>(</span><span>''</span><span>)</span>
    i <span>+=</span> <span>1</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="while-for">
<div><pre><code>i <span>=</span> <span>1</span>
<span>while</span> i <span>&lt;=</span> <span>9</span><span>:</span>
    <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i <span>+</span> <span>1</span><span>)</span><span>:</span>  <span># range()函数左闭右开</span>
        <span>print</span><span>(</span><span><span>f'</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>'</span></span><span>,</span> end<span>=</span><span>' '</span><span>)</span>
    i <span>+=</span> <span>1</span>
    <span>print</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="for-while">
<div><pre><code><span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>:</span>
    j <span>=</span> <span>0</span>
    <span>while</span> j <span>&lt;</span> i<span>:</span>
        j <span>+=</span> <span>1</span>
        <span>print</span><span>(</span><span><span>f"</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>"</span></span><span>,</span> end<span>=</span><span>' '</span><span>)</span>
    <span>print</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="定义一个变量 a">
<div><pre><code>a <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>,</span> <span>8</span><span>,</span> <span>9</span><span>]</span>
<span>for</span> i <span>in</span> a<span>:</span>
    j <span>=</span> <span>1</span>
    <span>while</span> j <span>&lt;=</span> i<span>:</span>
        <span>print</span><span>(</span><span><span>f'</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>'</span></span><span>,</span> end<span>=</span><span>'\t'</span><span>)</span>
        <span># %-3d 是控制输出结果占据3位，且从左面开始对齐</span>
        j <span>+=</span> <span>1</span>
    <span>print</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="使用递归">
<div><pre><code><span>def</span> <span>multiplication</span><span>(</span>n<span>)</span><span>:</span>
    <span>if</span> n <span>&lt;</span> <span>10</span><span>:</span>
        <span>for</span> m <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> n <span>+</span> <span>1</span><span>)</span><span>:</span>
            <span>print</span><span>(</span><span><span>f"</span><span><span>{</span>m<span>}</span></span><span>*</span><span><span>{</span>n<span>}</span></span><span>=</span><span><span>{</span>m <span>*</span> n<span>}</span></span><span>"</span></span><span>,</span> end<span>=</span><span>"\t"</span><span>)</span>
        <span>print</span><span>(</span><span>)</span>
        multiplication<span>(</span>n <span>+</span> <span>1</span><span>)</span>

multiplication<span>(</span><span>1</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></CodeGroupItem>
<CodeGroupItem title="使用 1 行语句">
<div><pre><code><span>print</span><span>(</span><span>'\n'</span><span>.</span>join<span>(</span><span>[</span><span>' '</span><span>.</span>join<span>(</span><span>[</span><span>"%2s x%2s = %2s"</span> <span>%</span> <span>(</span>j<span>,</span> i<span>,</span> i <span>*</span> j<span>)</span> <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> <span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>]</span><span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>上面的一行代码优化之后：</p>
<div><pre><code><span>print</span><span>(</span><span>'\n'</span><span>.</span>join<span>(</span><span>[</span><span>' '</span><span>.</span>join<span>(</span><span>[</span><span><span>f"</span><span><span>{</span>j<span>}</span></span><span>x</span><span><span>{</span>i<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>"</span></span> <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> <span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>]</span><span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></CodeGroupItem>
</CodeGroup>
<details><summary>合并答案</summary>
<div><pre><code><span># 第一种方式：for 循环实现【for-for 嵌套】</span>
<span># 九九乘法表</span>
<span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>:</span>
    <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i<span>+</span><span>1</span><span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'{}x{}={}\t'</span><span>.</span><span>format</span><span>(</span>j<span>,</span> i<span>,</span> i<span>*</span>j<span>)</span><span>,</span> end<span>=</span><span>''</span><span>)</span>
    <span>print</span><span>(</span><span>)</span>


<span># 第二种方式：while【while-while 嵌套】</span>
<span># 九九乘法表</span>
i <span>=</span> <span>1</span>
<span>while</span> i <span>&lt;=</span> <span>9</span><span>:</span>
    j <span>=</span> <span>1</span>
    <span>while</span> <span>(</span>j <span>&lt;=</span> i<span>)</span><span>:</span>  <span># j 的大小是由 i 来控制的</span>
        <span>print</span><span>(</span><span><span>f'</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>'</span></span><span>,</span> end<span>=</span><span>'\t'</span><span>)</span>
        j <span>+=</span> <span>1</span>
    <span>print</span><span>(</span><span>''</span><span>)</span>
    i <span>+=</span> <span>1</span>

<span># 第三种方式：while【while-for 嵌套】</span>
i <span>=</span> <span>1</span>
<span>while</span> i <span>&lt;=</span> <span>9</span><span>:</span>
    <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i <span>+</span> <span>1</span><span>)</span><span>:</span>  <span># range()函数左闭右开</span>
        <span>print</span><span>(</span><span><span>f'</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>'</span></span><span>,</span> end<span>=</span><span>' '</span><span>)</span>
    i <span>+=</span> <span>1</span>
    <span>print</span><span>(</span><span>)</span>

<span># 第四种方式：while【for-while 嵌套】</span>
<span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>:</span>
    j <span>=</span> <span>0</span>
    <span>while</span> j <span>&lt;</span> i<span>:</span>
        j <span>+=</span> <span>1</span>
        <span>print</span><span>(</span><span><span>f"</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>"</span></span><span>,</span> end<span>=</span><span>' '</span><span>)</span>
    <span>print</span><span>(</span><span>)</span>
 
<span># 第五种方式：定义一个变量 a</span>
a <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>,</span> <span>8</span><span>,</span> <span>9</span><span>]</span>
<span>for</span> i <span>in</span> a<span>:</span>
    j <span>=</span> <span>1</span>
    <span>while</span> j <span>&lt;=</span> i<span>:</span>
        <span>print</span><span>(</span><span><span>f'</span><span><span>{</span>i<span>}</span></span><span>*</span><span><span>{</span>j<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>'</span></span><span>,</span> end<span>=</span><span>'\t'</span><span>)</span>
        <span># %-3d 是控制输出结果占据3位，且从左面开始对齐</span>
        j <span>+=</span> <span>1</span>
    <span>print</span><span>(</span><span>)</span>
   
<span># 未学到函数的，可以选择阅读</span>
<span># 第六种方式：使用递归</span>
<span>def</span> <span>multiplication</span><span>(</span>n<span>)</span><span>:</span>
    <span>if</span> n <span>&lt;</span> <span>10</span><span>:</span>
        <span>for</span> m <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> n <span>+</span> <span>1</span><span>)</span><span>:</span>
            <span>print</span><span>(</span><span><span>f"</span><span><span>{</span>m<span>}</span></span><span>*</span><span><span>{</span>n<span>}</span></span><span>=</span><span><span>{</span>m <span>*</span> n<span>}</span></span><span>"</span></span><span>,</span> end<span>=</span><span>"\t"</span><span>)</span>
        <span>print</span><span>(</span><span>)</span>
        multiplication<span>(</span>n <span>+</span> <span>1</span><span>)</span>

multiplication<span>(</span><span>1</span><span>)</span>

<span># 第七种方式：使用 1 行语句</span>
<span>print</span><span>(</span><span>'\n'</span><span>.</span>join<span>(</span><span>[</span><span>' '</span><span>.</span>join<span>(</span><span>[</span><span>"%2s x%2s = %2s"</span> <span>%</span> <span>(</span>j<span>,</span> i<span>,</span> i <span>*</span> j<span>)</span> <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> <span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>]</span><span>)</span><span>)</span>
<span># 上面的一行代码优化之后：</span>
<span>print</span><span>(</span><span>'\n'</span><span>.</span>join<span>(</span><span>[</span><span>' '</span><span>.</span>join<span>(</span><span>[</span><span><span>f"</span><span><span>{</span>j<span>}</span></span><span>x</span><span><span>{</span>i<span>}</span></span><span>=</span><span><span>{</span>i <span>*</span> j<span>}</span></span><span>"</span></span> <span>for</span> j <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> <span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>10</span><span>)</span><span>]</span><span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br></div></div></details>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>01-Python 项目文件不能添加空格的原因</title>
      <link>https://bornforthis.cn/column/py/basequestion/faq1.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/faq1.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-Python 项目文件不能添加空格的原因</source>
      <category>Python 私教问答</category>
      <pubDate>Thu, 19 May 2022 19:26:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="项目链接如下" tabindex="-1"> 项目链接如下</h2>
<p><a href="https://github.com/AndersonHJB/Python_FAQ" target="_blank" rel="noopener noreferrer">https://github.com/AndersonHJB/Python_FAQ</a></p>
<h2 id="报错如下" tabindex="-1"> 报错如下</h2>
<p><img src="@source/column/py/basequestion/bq.assets/image-20220519194710393.png" alt="image-20220519194710393" loading="lazy"></p>
<details><summary>文字</summary>
<div><pre><code>clela@AIYC D:\Github_pages\Python_FAQ\01-Python 项目文件不能添加空格的原因\测试项目\02-Python 视频分割生成链接
# python split_demo.py
r_path: D:\Github_pages\Python_FAQ\01-Python 项目文件不能添加空格的原因\测试项目\02-Python 视频分割生成链接\one.
movie_name: one
D:\Github_pages\Python_FAQ\01-Python 项目文件不能添加空格的原因\测试项目\02-Python 视频分割生成链接\result
ffmpeg version 4.4-essentials_build-www.gyan.dev Copyright (c) 2000-2021 the FFmpeg developers
  built with gcc 10.2.0 (Rev6, Built by MSYS2 project)
  configuration: --enable-gpl --enable-version3 --enable-static --disable-w32threads --disable-autodetect --enable-fontconfig --enable-iconv --enable-gnutls --enable-libxml2 --enable-gmp --enable-lzma --enable-zlib --enable-libsrt --enable-libssh --enable-libzmq --enable-avisynth --enable-sdl2 --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxvid --enable-libaom --enable-libopenjpeg --enable-libvpx --enable-libass --enable-libfreetype --enable-libfribidi --enable-libvidstab --enable-libvmaf --enable-libzimg --enable-amf --enable-cuda-llvm --enable-cuvid --enable-ffnvcodec --enable-nvdec --enable-nvenc --enable-d3d11va --enable-dxva2 --enable-libmfx --enable-libgme --enable-libopenmpt --enable-libopencore-amrwb --enable-libmp3lame --enable-libtheora --enable-libvo-amrwbenc --enable-libgsm --enable-libopencore-amrnb --enable-libopus --enable-libspeex --enable-libvorbis --enable-librubberband
  libavutil      56. 70.100 / 56. 70.100
  libavcodec     58.134.100 / 58.134.100
  libavformat    58. 76.100 / 58. 76.100
  libavdevice    58. 13.100 / 58. 13.100
  libavfilter     7.110.100 /  7.110.100
  libswscale      5.  9.100 /  5.  9.100
  libswresample   3.  9.100 /  3.  9.100
  libpostproc    55.  9.100 / 55.  9.100
D:\Github_pages\Python_FAQ\01-Python: No such file or directory
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div></details>
<h2 id="解决方法" tabindex="-1"> 解决方法</h2>
<p>去掉项目名称中的所有空格。</p>
<h2 id="why" tabindex="-1"> Why？</h2>
<p>命令行或者代码中，包含空格时，其实大部分是语法或者命令：</p>
<div><pre><code>python <span>file</span><span>.</span>py  <span># 这里的空格是下一个命令的编写</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>所以，文件中出现空格，代码实现却是和路径有关，所以程序将会无法分清。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>Python 使用 Ffmpeg 分割视频生成 ts 并且 git 推送生成 m3u8 链接最终生成 md</title>
      <link>https://bornforthis.cn/posts/09.html</link>
      <guid>https://bornforthis.cn/posts/09.html</guid>
      <source url="https://bornforthis.cn/rss.xml">Python 使用 Ffmpeg 分割视频生成 ts 并且 git 推送生成 m3u8 链接最终生成 md</source>
      <category>技术杂谈</category>
      <pubDate>Mon, 16 May 2022 15:20:02 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_1-实现-python-分割视频" tabindex="-1"> 1. 实现 Python 分割视频</h1>
<div><pre><code><span># -*- coding: utf-8 -*-</span>
<span># @Author: AI悦创</span>
<span># @Date:   2022-05-19 11:40:50</span>
<span># @Last Modified by:   aiyc</span>
<span># @Last Modified time: 2022-05-20 11:28:48</span>
<span>import</span> os<span>,</span> time

<span>def</span> <span>parse_path</span><span>(</span>path<span>)</span><span>:</span>
	<span># for i in os.walk(path):</span>
	<span>for</span> dirpath<span>,</span> dirnames<span>,</span> filenames <span>in</span> os<span>.</span>walk<span>(</span>path<span>)</span><span>:</span>
		<span># print(i)</span>
		<span>for</span> path <span>in</span> filenames<span>:</span>
			<span># print(os.path.join(dirpath, path))</span>
			<span># file_path = os.path.join(dirpath, path)</span>
			<span># if file_path.split(".")[-1] == "mp4": </span>
			<span>if</span> path<span>.</span>split<span>(</span><span>"."</span><span>)</span><span>[</span><span>-</span><span>1</span><span>]</span> <span>==</span> <span>"mp4"</span><span>:</span> 
				<span># print(file_path)</span>
				<span>return</span> path

<span>def</span> <span>generate_html</span><span>(</span><span>)</span><span>:</span>
	<span>pass</span>
<span>def</span> <span>split_movie</span><span>(</span>path<span>,</span> movie_name<span>=</span><span>"Defualt"</span><span>)</span><span>:</span>
	<span># os.system("cd result")</span>
	os<span>.</span>chdir<span>(</span><span>"result"</span><span>)</span>  <span># 指定输出路径</span>
	<span>print</span><span>(</span>os<span>.</span>getcwd<span>(</span><span>)</span><span>)</span>
	time<span>.</span>sleep<span>(</span><span>6</span><span>)</span>
	os<span>.</span>system<span>(</span><span><span>f"ffmpeg -i </span><span><span>{</span>path<span>}</span></span><span> -profile:v "</span></span> \
		<span>"baseline -level 3.0 -s 1920x1080 -start_number 0 "</span> \
		<span><span>f"-hls_time 10 -hls_list_size 0 -f hls </span><span><span>{</span>movie_name<span>}</span></span><span>.m3u8"</span></span><span>)</span>

<span>def</span> <span>main</span><span>(</span><span>)</span><span>:</span>
	path <span>=</span> <span>"."</span>
	file_path <span>=</span> parse_path<span>(</span>path<span>)</span>
	r_path <span>=</span> os<span>.</span>path<span>.</span>join<span>(</span>os<span>.</span>getcwd<span>(</span><span>)</span><span>,</span> file_path<span>)</span>
	<span># movie_name = file_path.split(".")[0].replace("\\", "")</span>
	movie_name <span>=</span> file_path<span>.</span>split<span>(</span><span>"."</span><span>)</span><span>[</span><span>0</span><span>]</span>
	<span>print</span><span>(</span><span><span>f"r_path: </span><span><span>{</span>r_path<span>}</span></span><span>, \nmovie_name: </span><span><span>{</span>movie_name<span>}</span></span><span>"</span></span><span>)</span>
	<span># print(os.getcwd())</span>
	<span># print(os.path.join(os.getcwd(), file_path))</span>
	split_movie<span>(</span>r_path<span>,</span> movie_name<span>)</span>

<span>if</span> __name__ <span>==</span> <span>"__main__"</span><span>:</span>
	main<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>Python os 模块详解</title>
      <link>https://bornforthis.cn/posts/10.html</link>
      <guid>https://bornforthis.cn/posts/10.html</guid>
      <source url="https://bornforthis.cn/rss.xml">Python os 模块详解</source>
      <category>技术杂谈</category>
      <pubDate>Wed, 29 Sep 2021 15:27:09 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>此篇文章，是为了完善 Python 办公自动化的课程，有兴趣的报名一对一办公自动化的小伙伴，可以加 V：Jiabcdefh。</p>
<p>如果我们要操作文件、目录，可以在命令行下面输入操作系统提供的各种命令来完成。比如 dir、cp 等命令。</p>
<p><strong>如果要在 Python 程序中执行这些目录和文件的操作怎么办？</strong></p>
<div><p>提示</p>
<p>其实操作系统提供的命令只是简单地调用了操作系统提供的接口函数， Python 内置的 os 模块也可以直接调用操作系统提供的接口函数。</p>
</div>
<h2 id="_1-简介" tabindex="-1"> 1. 简介</h2>
<p><code>os</code> 就是 “operating system” 的缩写，顾名思义，<code>os</code> 模块提供的就是各种 Python 程序与操作系统进行交互的接口。通过使用 <code>os</code> 模块，一方面可以方便地与操作系统进行交互，另一方面页可以极大增强代码的可移植性。如果该模块中相关功能出错，会抛出 <code>OSError</code> 异常或其子类异常。</p>
<blockquote>
<p><strong>注意：</strong> 本模块提供了一种使用与操作系统相关的功能的便捷式途径。如果是读写文件的话，建议使用内置函数 <a href="https://docs.python.org/zh-cn/3/library/functions.html#open" target="_blank" rel="noopener noreferrer"><code>open()</code></a> ；如果是路径相关的操作，建议使用 <code>os</code> 的子模块 <a href="https://docs.python.org/zh-cn/3/library/os.path.html#module-os.path" target="_blank" rel="noopener noreferrer"><code>os.path</code></a> ；如果要逐行读取多个文件，建议使用 <a href="https://docs.python.org/zh-cn/3/library/fileinput.html#module-fileinput" target="_blank" rel="noopener noreferrer"><code>fileinput</code></a> 模块；要创建临时文件或路径，建议使用 <a href="https://docs.python.org/zh-cn/3/library/tempfile.html#module-tempfile" target="_blank" rel="noopener noreferrer"><code>tempfile</code></a> 模块；要进行更高级的文件和路径操作则应当使用 <a href="https://docs.python.org/zh-cn/3/library/shutil.html" target="_blank" rel="noopener noreferrer"><code>shutil</code></a> 模块。</p>
</blockquote>
<p>当然，使用 <code>os</code> 模块可以写出操作系统无关的代码，并不意味着 <code>os</code> 无法调用一些特定系统的扩展功能，但要切记一点：一旦这样做就会极大<strong>损害代码的可移植性</strong>。</p>
<p>此外，导入 <code>os</code> 模块时还要小心一点，千万 <strong>不要</strong> 为了图调用省事儿而将<code>os</code> 模块解包导入，即不要使用：</p>
<div><pre><code> <span>from</span> os <span>import</span> <span>*</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>来导入<code>os</code> 模块；否则 <code>os.open()</code> 将会覆盖内置函数 <code>open()</code> ，从而造成预料之外的错误。</p>
<h2 id="_2-常用功能" tabindex="-1"> 2. 常用功能</h2>
<blockquote>
<p><strong>注意</strong> ，<code>os</code> 模块中大多数接受路径作为参数的函数也可以接受“文件描述符”作为参数。</p>
<p><strong>文件描述符：</strong> file descriptor，在 Python 文档中简记为 fd，是一个与某个打开的文件对象绑定的整数，可以理解为该文件在系统中的编号。</p>
</blockquote>
<h3 id="_2-1-os-name" tabindex="-1"> 2.1 os.name</h3>
<p>该属性宽泛地指明了当前 Python 运行所在的环境，实际上是导入的操作系统相关模块的名称。这个名称也决定了模块中<strong>哪些功能是可用</strong>的，哪些是没有相应实现的。</p>
<p>目前有效名称为以下三个：<code>posix</code>，<code>nt</code>，<code>java</code>。</p>
<p>其中：</p>
<ul>
<li><code>posix</code> 是 Portable Operating System Interface of UNIX（可移植操作系统接口）的缩写。Linux 和 Mac OS 均会返回该值；</li>
<li><code>nt</code> 全称应为 “Microsoft Windows NT”，大体可以等同于 Windows 操作系统，因此 Windows 环境下会返回该值；</li>
<li><code>java</code> 则是 Java 虚拟机环境下的返回值。</li>
</ul>
<p><strong>总之：如果是 posix，说明系统是 Linux、Unix 或 Mac OS X，如果是 nt，就是 Windows 系统。</strong></p>
<p>因此在我的电脑（win10）上执行下述代码，返回值是 <code>nt</code>：</p>
<div><pre><code>In [1]: import os

In [2]: os.name
Out[2]: 'nt'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p><img src="@source/posts/10.assets/de4ccb78cfc74ed48d821f15a0143387.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>而在 WSL（Windows Subsystem Linux，Windows 下的 Linux 子系统）上的结果则是：</p>
<div><pre><code>In [2]: import os

In [3]: os.name
Out[3]: 'posix'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p><img src="@source/posts/10.assets/6f7e3d3b826f4c8486ce0ed26e2a99cc.png" alt="在这里插入图片描述" loading="lazy"></p>
<blockquote>
<p>查看 <code>sys</code> 模块中的 <code>sys.platform</code> 属性可以得到关于运行平台更详细的信息，在此不再赘述</p>
</blockquote>
<p><strong>Windows10：</strong></p>
<div><pre><code>In <span>[</span><span>4</span><span>]</span><span>:</span> sys<span>.</span>platform
Out<span>[</span><span>4</span><span>]</span><span>:</span> <span>'win32'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><strong>Linux：</strong></p>
<div><pre><code>In <span>[</span><span>5</span><span>]</span><span>:</span> sys<span>.</span>platform
Out<span>[</span><span>5</span><span>]</span><span>:</span> <span>'linux'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><strong>PS：</strong> 要获取详细的系统信息，可以调用 <code>uname()</code> 函数：</p>
<div><pre><code>In <span>[</span><span>6</span><span>]</span><span>:</span> os<span>.</span>uname<span>(</span><span>)</span>
Out<span>[</span><span>6</span><span>]</span><span>:</span> posix<span>.</span>uname_result<span>(</span>sysname<span>=</span><span>'Linux'</span><span>,</span> nodename<span>=</span><span>'aiyc'</span><span>,</span> release<span>=</span><span>'5.11.0-34-generic'</span><span>,</span> version<span>=</span><span>'#36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021'</span><span>,</span> machine<span>=</span><span>'x86_64'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><blockquote>
<p><strong>注意</strong> uname() 函数在 Windows 上不提供，也就是说，os 模块的某些函数是跟操作系统相关的。</p>
</blockquote>
<p><img src="@source/posts/10.assets/b740964fd1a74761bde12e8f1c6c24a4.png" alt="在这里插入图片描述" loading="lazy"></p>
<h3 id="_2-2-环境变量-os-environ" tabindex="-1"> 2.2 环境变量 os.environ</h3>
<p><code>os.environ</code> 属性可以返回环境相关的信息，主要是各类环境变量。返回值是一个映射（类似字典类型），具体的值为第一次导入 <code>os</code> 模块时的快照；其中的各个键值对，键是环境变量名，值则是环境变量对应的值。在第一次导入 <code>os</code> 模块之后，除非直接修改 <code>os.environ</code> 的值，否则该属性的值不再发生变化。</p>
<p>在操作系统中定义的环境变量，全部保存在 os.environ 这个变量中，可以直接查看：</p>
<div><pre><code>In [8]: os.environ
Out[8]:
environ{'ALLUSERSPROFILE': 'C:\\ProgramData',
        'ANSICON': '75x32766 (75x24)',
        'ANSICON_DEF': '7',
        'APPDATA': 'C:\\Users\\clela\\AppData\\Roaming',
        'CHOCOLATEYINSTALL': 'C:\\ProgramData\\chocolatey',
        'CHOCOLATEYLASTPATHUPDATE': '132726379469707878',
        'CLASSPATH': '.;C:\\java\\lib\\dt.jar;C:\\java\\lib\\tools.jar;',
        'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files',...}
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>要获取某个环境变量的值，可以调用 <code>os.environ.get('key')</code>  比如其中键为 “HOMEPATH”（Windows 下，Linux 下为 “HOME”）的项，对应的值就是用户主目录的路径。Windows 下，其值为：</p>
<div><pre><code>In [9]: os.environ["HOMEPATH"]
Out[9]: '\\Users\\clela'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><img src="@source/posts/10.assets/6a05f59a64564f6db3faed9d298fb3c2.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>Linux 下，其值为：</p>
<div><pre><code>In [17]: os.environ["HOME"]
Out[17]: '/home/aiyc'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><img src="@source/posts/10.assets/190befe5c8a841d8b5a991fa50543008.png" alt="在这里插入图片描述" loading="lazy"></p>
<h3 id="_2-3-os-walk" tabindex="-1"> 2.3 os.walk()</h3>
<p>这个函数需要传入一个路径作为 <code>top</code> 参数，函数的作用是在以 <code>top</code> 为根节点的目录树中游走，对树中的每个目录生成一个由 <code>(dirpath, dirnames, filenames)</code> 三项组成的三元组。</p>
<p>其中：</p>
<ul>
<li><code>dirpath</code> 是一个指示这个目录路径的字符串，</li>
<li><code>dirnames</code> 是一个 <code>dirpath</code> 下子目录名（除去 <code>“.”</code> 和 <code>“..”</code> ）组成的 <strong>列表</strong> ， <code>filenames</code> 则是由 <code>dirpath</code> 下所有非目录的文件名组成的列表。</li>
<li>要注意的是，这些名称并不包含所在路径本身，要获取 <code>dirpath</code> 下某个文件或路径从 <code>top</code> 目录开始的完整路径，需要使用 <code>os.path.join(dirpath, name)</code> 。</li>
</ul>
<p>注意最终返回的结果是一个迭代器，我们可以使用 <code>for</code> 语句逐个取得迭代器的每一项：</p>
<div><pre><code><span>for</span> item <span>in</span> os<span>.</span>walk<span>(</span><span>"."</span><span>)</span><span>:</span>
	<span>print</span><span>(</span>item<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><div><pre><code>('.', ['do'], ['go_go_go.txt'])
('.\\do', ['IAmDirectory', 'python'], [])
('.\\do\\IAmDirectory', [], [])
('.\\do\\python', [], ['hello_justdopython.txt'])
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p><img src="@source/posts/10.assets/24782b5f2c5f74c5971ef267e87f00ba.png" alt="目录树结构" loading="lazy"></p>
<p><strong>实例二：</strong></p>
<div><pre><code><span>import</span> os

<span>for</span> pt <span>in</span> os<span>.</span>walk<span>(</span><span>"."</span><span>)</span><span>:</span>
	<span>print</span><span>(</span>pt<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><div><pre><code>('.', ['Tester2Folder', 'TesterFolder'], ['OS-AlexSmith_2021 - 副本 (2).txt', 'OS-AlexSmith_2021 - 副本 (3).txt', 'OS-AlexSmith_2021 - 副本.txt', 'OS-AlexSmith_2021.txt', 'OS-I_Have_a_Dream - 副本 (2).txt', 'OS-I_Have_a_Dream - 副本.txt', 'OS-I_Have_a_Dream.txt', 'OS-WordCount_Basic - 副本 (2).py', 'OS-WordCount_Basic - 副本.py', 'OS-WordCount_Basic.py', 'OS_Page.py'])
('.\\Tester2Folder', ['Tester2Folder_test'], ['Tester2Folder-AlexSmith_2021 - 副本 (2).txt', 'Tester2Folder-AlexSmith_2021 - 副本 (3).txt', 'Tester2Folder-AlexSmith_2021 - 副本 (4).txt', 'Tester2Folder-AlexSmith_2021 - 副本.txt', 'Tester2Folder-AlexSmith_2021.txt', 'Tetser2-WordCount_Basic.py'])
('.\\Tester2Folder\\Tester2Folder_test', [], [])
('.\\TesterFolder', [], ['TesterFolder-I_Have_a_Dream - 副本.txt', 'TesterFolder-I_Have_a_Dream.txt', 'TesterFolder-Tester-I_Have_a_Dream - 副本 (2).txt', 'TesterFolder-Tester-I_Have_a_Dream - 副本 (3).txt', 'TesterFolder-WordCount_Basic.py'])
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="_2-4-os-listdir" tabindex="-1"> 2.4 os.listdir()</h3>
<p><code>listdir</code> 即 <code>list directories</code>，列出（当前）目录下的全部路径（及文件）。该函数存在一个参数，用以指定要列出子目录的路径，默认为 <code>.</code>，即“当前路径”。</p>
<p>函数返回值是一个列表，其中各元素均为字符串，分别是各路径名和文件名。</p>
<p>通常在需要遍历某个文件夹中文件的场景下极为实用。</p>
<p>比如定义以下函数：</p>
<div><pre><code><span>import</span> os
<span>def</span> <span>get_filelists</span><span>(</span>file_dir<span>=</span><span>'.'</span><span>)</span><span>:</span>
    list_directory <span>=</span> os<span>.</span>listdir<span>(</span>file_dir<span>)</span>
    filelists <span>=</span> <span>[</span><span>]</span>
    <span>for</span> directory <span>in</span> list_directory<span>:</span>
        <span># os.path 模块稍后会讲到</span>
        <span>if</span> os<span>.</span>path<span>.</span>isfile<span>(</span>directory<span>)</span><span>:</span>
            filelists<span>.</span>append<span>(</span>directory<span>)</span>
    <span>return</span> filelists
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p><strong>该函数的返回值就是当前目录下所有文件而非文件夹的名称列表。</strong></p>
<h3 id="_2-5-os-mkdir" tabindex="-1"> 2.5 os.mkdir()</h3>
<p><code>mkdir</code>，即 <code>make directory</code>，用处是 <strong>新建一个路径</strong>。需要传入一个类路径参数用以指定新建路径的位置和名称，如果指定路径已存在，则会抛出 <code>FileExistsError</code> 异常。</p>
<p>该函数只能在已有的路径下新建一级路径，否则（即新建多级路径）会抛出 <code>FileNotFoundError</code> 异常。</p>
<p>相应地，在需要新建多级路径的场景下，可以使用 <code>os.makedirs()</code> 来完成任务。函数 <code>os.makedirs()</code> 执行的是递归创建，若有必要，会分别新建指定路径经过的中间路径，直到最后创建出末端的 “<strong>叶子路径</strong>”。</p>
<p><strong>示例一：</strong></p>
<div><pre><code><span>>></span><span>></span> os<span>.</span>mkdir<span>(</span><span>"test_os_mkdir"</span><span>)</span>
<span>>></span><span>></span> os<span>.</span>mkdir<span>(</span><span>"test_os_mkdir"</span><span>)</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
FileExistsError<span>:</span> <span>[</span>WinError <span>183</span><span>]</span> 当文件已存在时，无法创建该文件。<span>:</span> <span>'test_os_mkdir'</span>
<span>>></span><span>></span> 
<span>>></span><span>></span> os<span>.</span>mkdir<span>(</span><span>"test_os_mkdir/test_os_makedirs/just/do/python/hello"</span><span>)</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
FileNotFoundError<span>:</span> <span>[</span>WinError <span>3</span><span>]</span> 系统找不到指定的路径。<span>:</span> <span>'test_os_mkdir/test_os_makedirs/just/do/python/hello'</span>
<span>>></span><span>></span> 
<span>>></span><span>></span> os<span>.</span>makedirs<span>(</span><span>"test_os_mkdir/test_os_makedirs/just/do/python/hello"</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>示例二：</p>
<div><pre><code>In <span>[</span><span>1</span><span>]</span><span>:</span> <span>import</span> os

In <span>[</span><span>2</span><span>]</span><span>:</span> os<span>.</span>getcwd<span>(</span><span>)</span>
Out<span>[</span><span>2</span><span>]</span><span>:</span> <span>'D:\\Curriculum-development\\使用Python实现办公自动化\\Coder\\02-文件操作\\OS_Module_Code'</span>

In <span>[</span><span>3</span><span>]</span><span>:</span> <span>for</span> path <span>in</span> os<span>.</span>walk<span>(</span><span>'.'</span><span>)</span><span>:</span>
   <span>.</span><span>.</span><span>.</span><span>:</span>     <span>print</span><span>(</span>path<span>)</span>
   <span>.</span><span>.</span><span>.</span><span>:</span>
<span>(</span><span>'.'</span><span>,</span> <span>[</span><span>'Tester2Folder'</span><span>,</span> <span>'TesterFolder'</span><span>]</span><span>,</span> <span>[</span><span>'OS-AlexSmith_2021 - 副本 (2).txt'</span><span>,</span> <span>'OS-AlexSmith_2021 - 副本 (3).txt'</span><span>,</span> <span>'OS-AlexSmith_2021 - 副本.txt'</span><span>,</span> 'OS<span>-</span>AlexSmith
_2021<span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream <span>-</span> 副本 <span>(</span><span>2</span><span>)</span><span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream <span>-</span> 副本<span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream<span>.</span>txt<span>', '</span>OS<span>-</span>WordCount_Basic <span>-</span> 副本 <span>(</span><span>2</span><span>)</span><span>.</span>py<span>', '</span>OS<span>-</span>WordCount_Basi
c <span>-</span> 副本<span>.</span>py<span>', '</span>OS<span>-</span>WordCount_Basic<span>.</span>py<span>', '</span>OS_Page<span>.</span>py'<span>]</span><span>)</span>
<span>(</span><span>'.\\Tester2Folder'</span><span>,</span> <span>[</span><span>'Tester2Folder_test'</span><span>]</span><span>,</span> <span>[</span><span>'Tester2Folder-AlexSmith_2021 - 副本 (2).txt'</span><span>,</span> <span>'Tester2Folder-AlexSmith_2021 - 副本 (3).txt'</span><span>,</span> 'Tester2Folder<span>-</span>Alex
Smith_2021 <span>-</span> 副本 <span>(</span><span>4</span><span>)</span><span>.</span>txt<span>', '</span>Tester2Folder<span>-</span>AlexSmith_2021 <span>-</span> 副本<span>.</span>txt<span>', '</span>Tester2Folder<span>-</span>AlexSmith_2021<span>.</span>txt<span>', '</span>Tetser2<span>-</span>WordCount_Basic<span>.</span>py'<span>]</span><span>)</span>
<span>(</span><span>'.\\Tester2Folder\\Tester2Folder_test'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>]</span><span>)</span>
<span>(</span><span>'.\\TesterFolder'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>'TesterFolder-I_Have_a_Dream - 副本.txt'</span><span>,</span> <span>'TesterFolder-I_Have_a_Dream.txt'</span><span>,</span> <span>'TesterFolder-Tester-I_Have_a_Dream - 副本 (2).txt'</span><span>,</span> 'Tes
terFolder<span>-</span>Tester<span>-</span>I_Have_a_Dream <span>-</span> 副本 <span>(</span><span>3</span><span>)</span><span>.</span>txt<span>', '</span>TesterFolder<span>-</span>WordCount_Basic<span>.</span>py'<span>]</span><span>)</span>

In <span>[</span><span>4</span><span>]</span><span>:</span> os<span>.</span>mkdir<span>(</span><span>"aiyc"</span><span>)</span>

In <span>[</span><span>5</span><span>]</span><span>:</span> <span>for</span> path <span>in</span> os<span>.</span>walk<span>(</span><span>'.'</span><span>)</span><span>:</span>
   <span>.</span><span>.</span><span>.</span><span>:</span>     <span>print</span><span>(</span>path<span>)</span>
   <span>.</span><span>.</span><span>.</span><span>:</span>
<span>(</span><span>'.'</span><span>,</span> <span>[</span><span>'aiyc'</span><span>,</span> <span>'Tester2Folder'</span><span>,</span> <span>'TesterFolder'</span><span>]</span><span>,</span> <span>[</span><span>'OS-AlexSmith_2021 - 副本 (2).txt'</span><span>,</span> <span>'OS-AlexSmith_2021 - 副本 (3).txt'</span><span>,</span> <span>'OS-AlexSmith_2021 - 副本.txt'</span><span>,</span> 'OS<span>-</span>A
lexSmith_2021<span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream <span>-</span> 副本 <span>(</span><span>2</span><span>)</span><span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream <span>-</span> 副本<span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream<span>.</span>txt<span>', '</span>OS<span>-</span>WordCount_Basic <span>-</span> 副本 <span>(</span><span>2</span><span>)</span><span>.</span>py<span>', '</span>OS<span>-</span>WordCo
unt_Basic <span>-</span> 副本<span>.</span>py<span>', '</span>OS<span>-</span>WordCount_Basic<span>.</span>py<span>', '</span>OS_Page<span>.</span>py'<span>]</span><span>)</span>
<span>(</span><span>'.\\aiyc'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>]</span><span>)</span>
<span>(</span><span>'.\\Tester2Folder'</span><span>,</span> <span>[</span><span>'Tester2Folder_test'</span><span>]</span><span>,</span> <span>[</span><span>'Tester2Folder-AlexSmith_2021 - 副本 (2).txt'</span><span>,</span> <span>'Tester2Folder-AlexSmith_2021 - 副本 (3).txt'</span><span>,</span> 'Tester2Folder<span>-</span>Alex
Smith_2021 <span>-</span> 副本 <span>(</span><span>4</span><span>)</span><span>.</span>txt<span>', '</span>Tester2Folder<span>-</span>AlexSmith_2021 <span>-</span> 副本<span>.</span>txt<span>', '</span>Tester2Folder<span>-</span>AlexSmith_2021<span>.</span>txt<span>', '</span>Tetser2<span>-</span>WordCount_Basic<span>.</span>py'<span>]</span><span>)</span>
<span>(</span><span>'.\\Tester2Folder\\Tester2Folder_test'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>]</span><span>)</span>
<span>(</span><span>'.\\TesterFolder'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>'TesterFolder-I_Have_a_Dream - 副本.txt'</span><span>,</span> <span>'TesterFolder-I_Have_a_Dream.txt'</span><span>,</span> <span>'TesterFolder-Tester-I_Have_a_Dream - 副本 (2).txt'</span><span>,</span> 'Tes
terFolder<span>-</span>Tester<span>-</span>I_Have_a_Dream <span>-</span> 副本 <span>(</span><span>3</span><span>)</span><span>.</span>txt<span>', '</span>TesterFolder<span>-</span>WordCount_Basic<span>.</span>py'<span>]</span><span>)</span>

In <span>[</span><span>6</span><span>]</span><span>:</span> os<span>.</span>mkdir<span>(</span><span>"aiyc"</span><span>)</span>
<span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span>
FileExistsError                           Traceback <span>(</span>most recent call last<span>)</span>
<span>&lt;</span>ipython<span>-</span><span>input</span><span>-</span><span>6</span><span>-</span>53b10652ea17<span>></span> <span>in</span> <span>&lt;</span>module<span>></span>
<span>-</span><span>-</span><span>-</span><span>-</span><span>></span> <span>1</span> os<span>.</span>mkdir<span>(</span><span>"aiyc"</span><span>)</span>

FileExistsError<span>:</span> <span>[</span>WinError <span>183</span><span>]</span> 当文件已存在时，无法创建该文件。<span>:</span> <span>'aiyc'</span>

In <span>[</span><span>7</span><span>]</span><span>:</span> os<span>.</span>mkdir<span>(</span><span>"aiyc/blog/PythonCourse"</span><span>)</span>
<span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span>
FileNotFoundError                         Traceback <span>(</span>most recent call last<span>)</span>
<span>&lt;</span>ipython<span>-</span><span>input</span><span>-</span><span>7</span><span>-</span>50d273e0ff25<span>></span> <span>in</span> <span>&lt;</span>module<span>></span>
<span>-</span><span>-</span><span>-</span><span>-</span><span>></span> <span>1</span> os<span>.</span>mkdir<span>(</span><span>"aiyc/blog/PythonCourse"</span><span>)</span>

FileNotFoundError<span>:</span> <span>[</span>WinError <span>3</span><span>]</span> 系统找不到指定的路径。<span>:</span> <span>'aiyc/blog/PythonCourse'</span>

In <span>[</span><span>8</span><span>]</span><span>:</span> os<span>.</span>makedirs<span>(</span><span>"aiyc/blog/PythonCourse"</span><span>)</span>

In <span>[</span><span>9</span><span>]</span><span>:</span> <span>for</span> path <span>in</span> os<span>.</span>walk<span>(</span><span>'.'</span><span>)</span><span>:</span>
   <span>.</span><span>.</span><span>.</span><span>:</span>     <span>print</span><span>(</span>path<span>)</span>
   <span>.</span><span>.</span><span>.</span><span>:</span>
<span>(</span><span>'.'</span><span>,</span> <span>[</span><span>'aiyc'</span><span>,</span> <span>'Tester2Folder'</span><span>,</span> <span>'TesterFolder'</span><span>]</span><span>,</span> <span>[</span><span>'OS-AlexSmith_2021 - 副本 (2).txt'</span><span>,</span> <span>'OS-AlexSmith_2021 - 副本 (3).txt'</span><span>,</span> <span>'OS-AlexSmith_2021 - 副本.txt'</span><span>,</span> 'OS<span>-</span>A
lexSmith_2021<span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream <span>-</span> 副本 <span>(</span><span>2</span><span>)</span><span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream <span>-</span> 副本<span>.</span>txt<span>', '</span>OS<span>-</span>I_Have_a_Dream<span>.</span>txt<span>', '</span>OS<span>-</span>WordCount_Basic <span>-</span> 副本 <span>(</span><span>2</span><span>)</span><span>.</span>py<span>', '</span>OS<span>-</span>WordCo
unt_Basic <span>-</span> 副本<span>.</span>py<span>', '</span>OS<span>-</span>WordCount_Basic<span>.</span>py<span>', '</span>OS_Page<span>.</span>py'<span>]</span><span>)</span>
<span>(</span><span>'.\\aiyc'</span><span>,</span> <span>[</span><span>'blog'</span><span>]</span><span>,</span> <span>[</span><span>]</span><span>)</span>
<span>(</span><span>'.\\aiyc\\blog'</span><span>,</span> <span>[</span><span>'PythonCourse'</span><span>]</span><span>,</span> <span>[</span><span>]</span><span>)</span>
<span>(</span><span>'.\\aiyc\\blog\\PythonCourse'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>]</span><span>)</span>
<span>(</span><span>'.\\Tester2Folder'</span><span>,</span> <span>[</span><span>'Tester2Folder_test'</span><span>]</span><span>,</span> <span>[</span><span>'Tester2Folder-AlexSmith_2021 - 副本 (2).txt'</span><span>,</span> <span>'Tester2Folder-AlexSmith_2021 - 副本 (3).txt'</span><span>,</span> 'Tester2Folder<span>-</span>Alex
Smith_2021 <span>-</span> 副本 <span>(</span><span>4</span><span>)</span><span>.</span>txt<span>', '</span>Tester2Folder<span>-</span>AlexSmith_2021 <span>-</span> 副本<span>.</span>txt<span>', '</span>Tester2Folder<span>-</span>AlexSmith_2021<span>.</span>txt<span>', '</span>Tetser2<span>-</span>WordCount_Basic<span>.</span>py'<span>]</span><span>)</span>
<span>(</span><span>'.\\Tester2Folder\\Tester2Folder_test'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>]</span><span>)</span>
<span>(</span><span>'.\\TesterFolder'</span><span>,</span> <span>[</span><span>]</span><span>,</span> <span>[</span><span>'TesterFolder-I_Have_a_Dream - 副本.txt'</span><span>,</span> <span>'TesterFolder-I_Have_a_Dream.txt'</span><span>,</span> <span>'TesterFolder-Tester-I_Have_a_Dream - 副本 (2).txt'</span><span>,</span> 'Tes
terFolder<span>-</span>Tester<span>-</span>I_Have_a_Dream <span>-</span> 副本 <span>(</span><span>3</span><span>)</span><span>.</span>txt<span>', '</span>TesterFolder<span>-</span>WordCount_Basic<span>.</span>py'<span>]</span><span>)</span>

In <span>[</span><span>10</span><span>]</span><span>:</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br></div></div><h3 id="_2-6-os-remove" tabindex="-1"> 2.6 os.remove()</h3>
<p><strong>用于删除文件</strong>，如果指定路径是目录而非文件的话，就会抛出 <code>IsADirectoryError</code> 异常。删除目录应该使用 <code>os.rmdir()</code> 函数。</p>
<p>同样的，对应于 <code>os.makedirs()</code> ，删除路径操作 <code>os.rmdir()</code> 也有一个递归删除的函数 <code>os.removedirs()</code> ，该函数会尝试从最下级目录开始，逐级删除指定的路径，几乎就是一个 <code>os.makedirs()</code> 的逆过程；一旦遇到非空目录即停止。</p>
<div><pre><code>In <span>[</span><span>10</span><span>]</span><span>:</span> os<span>.</span>removedirs<span>(</span><span>"aiyc/blog/PythonCourse/"</span><span>)</span> <span># 我手动在 blog 文件夹中创建了一个文件</span>

In <span>[</span><span>11</span><span>]</span><span>:</span> os<span>.</span>removedirs<span>(</span><span>"aiyc/blog"</span><span>)</span>
<span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span><span>-</span>
OSError                                   Traceback <span>(</span>most recent call last<span>)</span>
<span>&lt;</span>ipython<span>-</span><span>input</span><span>-</span><span>12</span><span>-</span>271d0185833e<span>></span> <span>in</span> <span>&lt;</span>module<span>></span>
<span>-</span><span>-</span><span>-</span><span>-</span><span>></span> <span>1</span> os<span>.</span>removedirs<span>(</span><span>"aiyc/blog"</span><span>)</span>

c<span>:</span>\users\clela\appdata\local\programs\python\python38\lib\os<span>.</span>py <span>in</span> removedirs<span>(</span>name<span>)</span>
    <span>239</span>
    <span>240</span>     <span>""</span>"
<span>-</span><span>-</span><span>></span> <span>241</span>     rmdir<span>(</span>name<span>)</span>
    <span>242</span>     head<span>,</span> tail <span>=</span> path<span>.</span>split<span>(</span>name<span>)</span>
    <span>243</span>     <span>if</span> <span>not</span> tail<span>:</span>

OSError<span>:</span> <span>[</span>WinError <span>145</span><span>]</span> 目录不是空的。<span>:</span> <span>'aiyc/blog'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h3 id="_2-7-os-rename" tabindex="-1"> 2.7 os.rename()</h3>
<p>该函数的作用是将文件或路径重命名，一般调用格式为 <code>os.rename(src, dst)</code> ，即将 <code>src</code> 指向的文件或路径重命名为 <code>dst</code> 指定的名称。</p>
<p><strong>注意，</strong> 如果指定的目标路径在其他目录下，该函数还可实现文件或路径的 <strong>“剪切并粘贴”</strong> 功能。</p>
<p>但无论直接原地重命名还是“剪切粘贴”，中间路径都必须要存在，否则就会抛出 <code>FileNotFoundError</code> 异常。如果目标路径已存在，Windows 下会抛出 <code>FileExistsError</code> 异常；Linux 下，如果目标路径为空且用户权限允许，则会静默覆盖原路径，否则抛出 <code>OSError</code> 异常，</p>
<p>和上两个函数一样，该函数也有对应的递归版本 <code>os.renames()</code> ，能够创建缺失的中间路径。</p>
<p>注意，这两种情况下，如果函数执行成功，都会调用 <code>os.removedir()</code> 函数来递归删除源路径的最下级目录。</p>
<p><strong>看不懂？ 没事的，我也看不懂！哈哈哈哈哈哈哈哈哈！但是，我来用个小例子给你看懂吧！</strong></p>
<p>我们现在使用此路径：<code>C:\Users\clela\Desktop\aiyc</code> ，该路径下有如下文件：</p>
<p><img src="@source/posts/10.assets/fb5fa959216846b39a9d8df85fc050c8.png" alt="在这里插入图片描述" loading="lazy">
命令行显示如下：</p>
<div><pre><code>In [1]: pwd
Out[1]: 'C:\\Users\\clela\\Desktop\\aiyc'

In [2]: ls
 驱动器 C 中的卷是 OS
 卷的序列号是 0AED-8BC3

 C:\Users\clela\Desktop\aiyc 的目录

2021/09/27  21:08    &lt;DIR&gt;          .
2021/09/27  21:08    &lt;DIR&gt;          ..
2021/09/27  19:05         2,183,368 1.2 恐龙乐园.pptx
2021/08/30  09:11           772,010 1.2 恐龙乐园.sb3
               2 个文件      2,955,378 字节
               2 个目录 161,160,978,432 可用字节

In [3]:
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><p><img src="@source/posts/10.assets/07dbe3e5e9c440d6b44b2251c76e881e.png" alt="在这里插入图片描述" loading="lazy">
接下来，我们就来操作一波。第一波，修改文件名称：</p>
<p><strong>重命名：</strong></p>
<ol>
<li>原文件路径：</li>
</ol>
<div><pre><code>C:\\Users\\clela\\Desktop\\aiyc\\1.2 恐龙乐园.pptx
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><ol start="2">
<li>重新命名文件并且指向同一个路径：</li>
</ol>
<div><pre><code>C<span>:</span>\\Users\\clela\\Desktop\\aiyc\\<span>1.2</span>重新命名<span>.</span>pptx
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><ol start="3">
<li>使用的代码如下：</li>
</ol>
<div><pre><code>In <span>[</span><span>1</span><span>]</span><span>:</span> pwd
Out<span>[</span><span>1</span><span>]</span><span>:</span> <span>'C:\\Users\\clela\\Desktop\\aiyc'</span>

In <span>[</span><span>2</span><span>]</span><span>:</span> <span>import</span> os

In <span>[</span><span>3</span><span>]</span><span>:</span> path_one <span>=</span> <span>"C:\\Users\\clela\\Desktop\\aiyc\\1.2 恐龙乐园.pptx"</span>

In <span>[</span><span>4</span><span>]</span><span>:</span> path_two <span>=</span> <span>"C:\\Users\\clela\\Desktop\\aiyc\\1.2重新命名.pptx"</span>

In <span>[</span><span>5</span><span>]</span><span>:</span> os<span>.</span>rename<span>(</span>path_one<span>,</span> path_two<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>我们可以打开可以看到，名称已经成功修改了。</p>
<p><img src="@source/posts/10.assets/fee896915a384528a89ac2f5fb39b51a.png" alt="在这里插入图片描述" loading="lazy"></p>
<div><pre><code>In [6]: ls
 驱动器 C 中的卷是 OS
 卷的序列号是 0AED-8BC3

 C:\Users\clela\Desktop\aiyc 的目录

2021/09/28  15:41    &lt;DIR&gt;          .
2021/09/28  15:41    &lt;DIR&gt;          ..
2021/08/30  09:11           772,010 1.2 恐龙乐园.sb3
2021/09/27  19:05         2,183,368 1.2重新命名.pptx
               2 个文件      2,955,378 字节
               2 个目录 159,386,759,168 可用字节

In [7]:
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><p><img src="@source/posts/10.assets/e3d44785af8f46f3a3fa455a1d4b913e.png" alt="在这里插入图片描述" loading="lazy"></p>
<p><strong>那上面所说的移动文件呢？</strong></p>
<p><strong>移动文件：</strong></p>
<ol>
<li>原文件路径：</li>
</ol>
<div><pre><code>C:\\Users\\clela\\Desktop\\aiyc\\1.2重新命名.pptx
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><ol start="2">
<li>新路径：</li>
</ol>
<div><pre><code>C:\\Users\\clela\\Desktop\\aiyc_book\\1.2重新命名.pptx
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><ol start="3">
<li>使用的代码：</li>
</ol>
<div><pre><code>In [7]: path_one = &quot;C:\\Users\\clela\\Desktop\\aiyc\\1.2重新命名.pptx&quot;

In [8]: path_two = &quot;C:\\Users\\clela\\Desktop\\aiyc_book\\1.2重新命名.pptx&quot;

In [9]: os.rename(path_one, path_two)
---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
&lt;ipython-input-9-2390249a0f17&gt; in &lt;module&gt;
----&gt; 1 os.rename(path_one, path_two)

FileNotFoundError: [WinError 3] 系统找不到指定的路径。: 'C:\\Users\\clela\\Desktop\\aiyc\\1.2重新命
名.pptx' -&gt; 'C:\\Users\\clela\\Desktop\\aiyc_book\\1.2重新命名.pptx'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>上面的代码无法使用，因为当前 <code>aiyc_book</code> 这个文件夹是不存在的。</p>
<p>当然，你可以手动创建文件夹然后运行上面的代码。但是这样显然就违背了自动化办公的初心，所以我们可以使用 <code>os.renames()</code> 函数来实现。</p>
<div><pre><code>In [12]: os.renames(path_one, path_two)
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h3 id="_2-8-os-getcwd" tabindex="-1"> 2.8 os.getcwd()</h3>
<p>“getcwd” 实际上是“get the current working directory”的简写，顾名思义，也就是说这个函数的作用是“获取当前工作路径”。在程序运行的过程中，无论物理上程序在实际存储空间的什么地方，“当前工作路径”即可认为是程序所在路径；与之相关的“相对路径”、“同目录下模块导入”等相关的操作均以“当前工作路径”为准。</p>
<p><strong>在交互式环境中，返回的就是交互终端打开的位置；而在 Python 文件中，返回的则是文件所在的位置。</strong></p>
<p>在 Windows 下会有如下输出：</p>
<div><pre><code>In <span>[</span><span>13</span><span>]</span><span>:</span> os<span>.</span>getcwd<span>(</span><span>)</span>
Out<span>[</span><span>13</span><span>]</span><span>:</span> <span>'C:\\Users\\clela\\Desktop\\aiyc'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>Linux 下的输出则是：</p>
<div><pre><code>In [1]: import os

In [2]: os.getcwd()
Out[2]: '/home/aiyc/桌面'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="_2-9-os-chdir" tabindex="-1"> 2.9 os.chdir()</h3>
<p>“chdir” 其实是 “change the directory” 的简写，因此 <code>os.chdir()</code> 的用处实际上是切换当前工作路径为指定路径。其中“指定路径”需要作为参数传入函数<code>os.chdir()</code>，该参数既可以是文本或字节型字符串，也可以是一个文件描述符，还可以是一个广义的类路径（path-like）对象。若指定路径不存在，则会抛出 <code>FileNotFoundError</code> 异常。</p>
<p>在 Windows 下，调用该函数的效果为：</p>
<div><pre><code>In [13]: os.getcwd()
Out[13]: 'C:\\Users\\clela\\Desktop\\aiyc'

In [14]: os.chdir(&quot;C:\\Users\\clela\\Desktop&quot;)

In [15]: pwd
Out[15]: 'C:\\Users\\clela\\Desktop'

In [16]: os.getcwd()
Out[16]: 'C:\\Users\\clela\\Desktop'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>在 Linux 下的效果则是：</p>
<div><pre><code>In [1]: import os

In [2]: os.getcwd()
Out[2]: '/home/aiyc/桌面'

In [3]: os.chdir(&quot;/home/aiyc&quot;)

In [4]: os.getcwd()
Out[4]: '/home/aiyc'

In [5]: os.chdir(&quot;..&quot;) # 也可将参数指定为&quot;..&quot;，即可切换到父目录

In [6]: os.getcwd()
Out[6]: '/home'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><p>有了这个函数，跨目录读写文件和调用模块就会变得非常方便了，很多时候也就不必再反复将同一个文件在各个目录之间复制粘贴运行，脚本完全可以坐镇中军，在一个目录下完成对其他目录文件的操作，正所谓“<strong>运筹帷幄之中，决胜于千里之外</strong>”也。</p>
<p>举例来说，可以通过将“当前工作目录”切换到父目录，从而直接访问父目录的文件内容：</p>
<div><pre><code>In [9]: import os

In [10]: os.getcwd()
Out[10]: 'D:\\Curriculum-development\\使用Python实现办公自动化\\Coder\\02-文件操作\\OS_Module_Code\\TesterFolder'

In [11]: os.chdir(&quot;..&quot;)

In [12]: os.getcwd()
Out[12]: 'D:\\Curriculum-development\\使用Python实现办公自动化\\Coder\\02-文件操作\\OS_Module_Code'

In [13]: with open(&quot;hello_aiyc.txt&quot;, &quot;r&quot;, encoding=&quot;utf-8&quot;) as f:
    ...:     print(f.read())
    ...:
欢迎访问 aiyc.com，一起学习 Python 技术~

In [14]: os.listdir()
Out[14]:
['aiyc',
 'hello_aiyc.txt',
 'OS-AlexSmith_2021 - 副本 (2).txt',
 'OS-AlexSmith_2021 - 副本 (3).txt',
 'OS-AlexSmith_2021 - 副本.txt',
 'OS-AlexSmith_2021.txt',
 'OS-I_Have_a_Dream - 副本 (2).txt',
 'OS-I_Have_a_Dream - 副本.txt',
 'OS-I_Have_a_Dream.txt',
 'OS-WordCount_Basic - 副本 (2).py',
 'OS-WordCount_Basic - 副本.py',
 'OS-WordCount_Basic.py',
 'OS_Page.py',
 'Tester2Folder',
 'TesterFolder',
 '__pycache__']
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div><h2 id="_3-os-path-模块" tabindex="-1"> 3. os.path 模块</h2>
<p>其实这个模块是 <code>os</code> 模块根据系统类型从另一个模块导入的，并非直接由 <code>os</code> 模块实现，比如 <code>os.name</code> 值为 <code>nt</code>，则在 <code>os</code> 模块中执行 <code>import ntpath as path</code> ；如果 <code>os.name</code> 值为 <code>posix</code> ，则导入<code>posixpath</code>。</p>
<p>使用该模块要注意一个很重要的特性：<code>os.path</code> 中的函数基本上是纯粹的字符串操作。换句话说，传入该模块函数的参数甚至不需要是一个有效路径，该模块也不会试图访问这个路径，而仅仅是按照“路径”的通用格式对字符串进行处理。</p>
<p>更进一步地说，<code>os.path</code> 模块的功能我们都可以自己使用字符串操作手动实现，该模块的作用是让我们在实现相同功能的时候不必考虑具体的系统，尤其是不需要过多关注文件系统分隔符的问题。</p>
<h3 id="_3-1-os-path-join" tabindex="-1"> 3.1 os.path.join()</h3>
<p>这是一个十分实用的函数，可以将多个传入路径组合为一个路径。实际上是将传入的几个字符串用系统的分隔符连接起来，组合成一个新的字符串，所以一般的用法是将第一个参数作为父目录，之后每一个参数即使下一级目录，从而组合成一个新的符合逻辑的路径。</p>
<p>但如果传入路径中存在一个“绝对路径”格式的字符串，且这个字符串不是函数的第一个参数，那么其他在这个参数之前的所有参数都会被丢弃，余下的参数再进行组合。更准确地说，只有最后一个“绝对路径”及其之后的参数才会体现在返回结果中。</p>
<div><pre><code>In [16]: os.path.join(&quot;aiyc&quot;, &quot;do&quot;, &quot;python&quot;, &quot;dot&quot;, &quot;top&quot;)
Out[16]: 'aiyc\\do\\python\\dot\\top'

In [17]: os.path.join(&quot;aiyc&quot;, &quot;do&quot;, &quot;C:/&quot;, &quot;python&quot;, &quot;dot&quot;, &quot;top&quot;)
Out[17]: 'C:/python\\dot\\top'

In [18]: os.path.join(&quot;aiyc&quot;, &quot;do&quot;, &quot;d:/&quot;, &quot;python&quot;, &quot;dot&quot;, &quot;g:/&quot;, &quot;top&quot;)
Out[18]: 'g:/top'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="_3-2-os-path-abspath" tabindex="-1"> 3.2 os.path.abspath()</h3>
<p><strong>将传入路径规范化，返回一个相应的绝对路径格式的字符串。</strong></p>
<p>也就是说当传入路径符合“绝对路径”的格式时，该函数仅仅将路径分隔符替换为适应当前系统的字符，不做其他任何操作，并将结果返回。所谓“绝对路径的格式”，其实指的就是一个字母加冒号，之后跟分隔符和字符串序列的格式：</p>
<div><pre><code>In [23]: os.path.abspath(&quot;a:/aiyc/do/python&quot;) # 我的系统中并没有 a 盘
Out[23]: 'a:\\aiyc\\do\\python'

In [24]: os.path.abspath(&quot;a:/aiyc/do//python&quot;)
Out[24]: 'a:\\aiyc\\do\\python'

In [25]: os.path.abspath(&quot;a:/aiyc/do//////python&quot;)
Out[25]: 'a:\\aiyc\\do\\python'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>当指定的路径不符合上述格式时，该函数会自动获取当前工作路径，并使用<code>os.path.join()</code> 函数将其与传入的参数组合成为一个新的路径字符串。示例如下：</p>
<div><pre><code>In [28]: os.getcwd()
Out[28]: 'D:\\Curriculum-development\\使用Python实现办公自动化\\Coder\\02-文件操作\\OS_Module_Code'

In [29]: os.path.abspath(&quot;Python_online/aiyc&quot;)
Out[29]: 'D:\\Curriculum-development\\使用Python实现办公自动化\\Coder\\02-文件操作\\OS_Module_Code\\Python_online\\aiyc'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="_3-3-os-path-basename" tabindex="-1"> 3.3 os.path.basename()</h3>
<p>该函数返回传入路径的 “<strong>基名</strong>”，即传入路径的最下级目录。</p>
<div><pre><code>In [31]: os.path.basename(&quot;D:\\Curriculum-development\\aiyc_lesson\\Coder\\02-文件操作\\OS_Module_Code&quot;) # 我的系统中同样没有这么一个路径。可见 os.path.basename() 页是单纯进行字符串处理
Out[31]: 'OS_Module_Code'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>整这个函数要注意的一点是，返回的“基名”实际上是传入路径最后一个分隔符之后的子字符串，也就是说，如果最下级目录之后还有一个分隔符，得到的就会是一个空字符串：</p>
<div><pre><code>In [33]: os.path.basename(&quot;D:\\Curriculum-development\\aiyc_lesson\\Coder\\02-文件操作\\OS_Module_Code\\&quot;)
Out[33]: ''
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><h3 id="_3-4-os-path-dirname" tabindex="-1"> 3.4 os.path.dirname()</h3>
<p>与上一个函数正好相反，返回的是最后一个分隔符前的整个字符串：</p>
<div><pre><code>In [35]: os.path.dirname(&quot;D:\\Curriculum-development\\aiyc_lesson\\Coder\\02-文件操作\\OS_Module_Code&quot;)
Out[35]: 'D:\\Curriculum-development\\aiyc_lesson\\Coder\\02-文件操作'

In [36]: os.path.dirname(&quot;D:\\Curriculum-development\\aiyc_lesson\\Coder\\02-文件操作\\OS_Module_Code\\&quot;)
Out[36]: 'D:\\Curriculum-development\\aiyc_lesson\\Coder\\02-文件操作\\OS_Module_Code'
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="_3-5-os-path-split" tabindex="-1"> 3.5 os.path.split()</h3>
<p><strong>哈哈实际上前两个函数都是弟弟，这个函数才是老大。</strong></p>
<p><img src="@source/posts/10.assets/f014708dcec14ad8943bbf2501847b1c.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>函数 <code>os.path.split()</code> 的功能就是将传入路径以最后一个分隔符为界，分成两个字符串，并打包成元组的形式返回；</p>
<p>前两个函数 <code>os.path.dirname()</code> 和 <code>os.path.basename()</code> 的返回值分别是函数 <code>os.path.split()</code> 返回值的第一个、第二个元素。</p>
<p>就连二者的具体实现都十分真实：</p>
<div><pre><code>Signature: os.path.dirname(p)
Source:
def dirname(p):
    &quot;&quot;&quot;Returns the directory component of a pathname&quot;&quot;&quot;
    return split(p)[0]
File:      c:\users\clela\appdata\local\programs\python\python38\lib\ntpath.py
Type:      function

Signature: os.path.basename(p)
Source:
def basename(p):
    &quot;&quot;&quot;Returns the final component of a pathname&quot;&quot;&quot;
    return split(p)[1]
File:      c:\users\clela\appdata\local\programs\python\python38\lib\ntpath.py
Type:      function
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><p>通过 <code>os.path.join()</code> 函数又可以把它们组合起来得到原先的路径。</p>
<h3 id="_3-6-os-path-exists-路径是否存在" tabindex="-1"> 3.6 os.path.exists() 路径是否存在</h3>
<p>这个函数用于判断路径所指向的位置是否存在。若存在则返回 <code>True</code> ，不存在则返回 <code>False</code> ：</p>
<div><pre><code>In [41]: os.path.exists(&quot;.&quot;)
Out[41]: True

In [42]: os.path.exists(&quot;D:\\Curriculum-development\\aiyc_lesson\\Coder\\02-文件操作\\OS_Module_Cod&quot;) # 不存在的路径
Out[42]: False

In [43]: os.path.exists(&quot;D:\\Curriculum-development\\&quot;)
Out[43]: True
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p><strong>一般的用法是在需要持久化保存某些数据的场景，为避免重复创建某个文件，需要在写入前用该函数检测一下相应文件是否存在，若不存在则新建，若存在则在文件内容之后增加新的内容。</strong></p>
<h3 id="_3-7-os-path-isabs" tabindex="-1"> 3.7 os.path.isabs()</h3>
<p>该函数判断传入路径是否是绝对路径，若是则返回 <code>True</code>，否则返回 <code>False</code>。当然，仅仅是检测格式，同样不对其有效性进行任何核验：</p>
<div><pre><code>In [46]: os.path.isabs(&quot;.&quot;)
Out[46]: False

In [47]: os.path.isabs(&quot;D:\\Curriculum-development&quot;)
Out[47]: True
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="_3-8-os-path-isfile-和-os-path-isdir" tabindex="-1"> 3.8 os.path.isfile() 和 os.path.isdir()</h3>
<p>这两个函数分别判断传入路径是否是文件或路径，注意，此处会核验路径的有效性，如果是无效路径将会持续返回 <code>False</code> 。</p>
<div><pre><code>In [54]: # 无效路径

In [55]: os.path.isfile(&quot;a:/aiycpython&quot;)
Out[55]: False

In [56]: # 有效路径

In [57]: os.path.isfile(&quot;OS-AlexSmith_2021.txt&quot;)
Out[57]: True

In [58]: # 无效路径

In [59]: os.path.isdir(&quot;D:\\Curriculum-development\\aiyc&quot;)
Out[59]: False

In [60]: # 有效路径

In [61]: os.path.isdir(&quot;D:\\Curriculum-development&quot;)
Out[61]: True
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h2 id="_4-总结" tabindex="-1"> 4. 总结</h2>
<p>本文详细介绍了与操作系统交互的 <code>os</code> 模块中一些常用的属性和函数，基本可以覆盖初阶的学习和使用。有了这些功能，我们已经可以写出一些比较实用的脚本了。</p>
<p>除了文中介绍的函数外，<code>os</code> 模块还有很多更加复杂的功能，但大多是我们暂时用不到的，以后用到会进一步讲解。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>06-章节测试六答案</title>
      <link>https://bornforthis.cn/column/py/basequestion/answer6.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/answer6.html</guid>
      <source url="https://bornforthis.cn/rss.xml">06-章节测试六答案</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Thu, 19 May 2022 09:44:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>此题无需在线作答，请在纸上作答后查看答案解析 while循环，只要while后面的条件为_____时才能不断循环，条件不满足时退出循环。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：真/True 记忆性知识点</p>
</div>
<ol start="2">
<li>此题无需在线作答，请在纸上作答后查看答案解析 （拓展）在循环语句中，_______语句的作用是提前进入下一次循环。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：continue 记忆性知识点</p>
</div>
<ol start="3">
<li>
<p>若 k 为整型，下述 while 循环一共执行______次后，输出数值为_____。</p>
<div><pre><code>k <span>=</span> <span>1000</span>
<span>while</span> k <span>></span><span>1</span><span>:</span>
    k <span>=</span> k<span>/</span><span>2</span>

<span>print</span><span>(</span>k<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>A. 10 1.953</p>
<p>B. 10 0.9765625</p>
<p>C. 11 0.9765625</p>
<p>D. 11 1.953</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：C</p>
<p>一共执行了 10 次循环，k 依次变化为 1000，500.0，250.0，125.0，62.5，31.25，15.625，7.8125，3.90625，1.953125，0.9765625。</p>
<p>最后一次执行完循环，k 已小于 1，,即不满足循环条件，跳出循环。输出数值为最后一次执行 <code>k=k/2</code> 之后的k值，即 <code>k=0.9765625</code> 。</p>
</div>
<ol start="4">
<li>
<p>有代码如下，请判断最后一个输出的数字是_____。</p>
<div><pre><code>n <span>=</span> <span>1</span>
<span>while</span> n <span>&lt;=</span> <span>100</span> <span>:</span>
    <span>if</span> n <span>></span> <span>10</span> <span>:</span>
        <span>break</span>
    <span>print</span><span>(</span>n<span>)</span>
    n <span>=</span> n<span>+</span><span>1</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>A. 100</p>
<p>B. 10</p>
<p>C. 11</p>
<p>D. 99</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：C while 循环条件是在 <code>1-100</code> 之内进行循环，并在大于 10 时在 break 处跳出整个循环，即当 <code>n=1</code> 1时满足跳出整个循环的条件，即停止循环。</p>
</div>
<ol start="5">
<li>
<p>用 Python 编程，假设一年期定期利率为 <code>3.25%</code> ，计算一下需要过多少年，一万元的一年定期存款连本带息能翻番？</p>
<p><img src="@source/column/py/basequestion/answer6.assets/8282b828127dcf109d25ae72219317b0.png" alt="img" loading="lazy"></p>
</li>
<li>
<p>（拓展）使用 while 循环将列表内的奇数和偶数分开</p>
</li>
</ol>
<p><img src="@source/column/py/basequestion/answer6.assets/1b4dc9309318478954e33f324d38d03d.png" alt="img" loading="lazy"></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>06-章节测试</title>
      <link>https://bornforthis.cn/column/py/basequestion/q6.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/q6.html</guid>
      <source url="https://bornforthis.cn/rss.xml">06-章节测试</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Thu, 19 May 2022 09:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>
<p>while 循环，只要 while 后面的条件为_____时才能不断循环，条件不满足时退出循环。</p>
</li>
<li>
<p>（拓展）在循环语句中，_______语句的作用是提前进入下一次循环。</p>
</li>
<li>
<p>若 k 为整型，下述 while 循环一共执行______次后，输出数值为_____。</p>
<div><pre><code>k <span>=</span> <span>1000</span>
<span>while</span> k <span>></span><span>1</span><span>:</span>
    k <span>=</span> k<span>/</span><span>2</span>

<span>print</span><span>(</span>k<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>A. 10 1.953</p>
<p>B. 10 0.9765625</p>
<p>C. 11 0.9765625</p>
<p>D. 11 1.953</p>
</li>
<li>
<p>有代码如下，请判断最后一个输出的数字是_____。</p>
<div><pre><code>n <span>=</span> <span>1</span>
<span>while</span> n <span>&lt;=</span> <span>100</span> <span>:</span>
    <span>if</span> n <span>></span> <span>10</span> <span>:</span>
        <span>break</span>
    <span>print</span><span>(</span>n<span>)</span>
    n <span>=</span> n<span>+</span><span>1</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>A. 100</p>
<p>B. 10</p>
<p>C. 11</p>
<p>D. 99</p>
</li>
<li>
<p>用 Python 编程，假设一年期定期利率为 <code>3.25%</code> ，计算一下需要过多少年，一万元的一年定期存款连本带息能翻番？</p>
</li>
<li>
<p>（拓展）使用 while 循环将列表内的奇数和偶数分开</p>
</li>
</ol>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>05-章节测试五答案</title>
      <link>https://bornforthis.cn/column/py/basequestion/answer5.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/answer5.html</guid>
      <source url="https://bornforthis.cn/rss.xml">05-章节测试五答案</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Wed, 18 May 2022 19:33:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>Python中用于表示逻辑与、逻辑或、逻辑非运算的关键字分别是_________、___________、_________。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：and、or、not 记忆性知识点</p>
</div>
<ol start="2">
<li>表达式 <code>5&gt;10 and 2&lt;5</code>  的值为_________。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：False</p>
</div>
<ol start="3">
<li>if 语句之后的布尔表达式值为_______时，则对应的语句会被执行。如果其值为_______，则语句不会被执行。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：True;False</p>
</div>
<ol start="4">
<li>
<p>在条件表达式中不允许使用赋值运算符 <code>=</code> ，会提示语法错误。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<ol start="5">
<li>
<p>自定义的函数里只能有一个 elif 判断语句。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：A 可以有多个 elif 判断语句</p>
</div>
<ol start="6">
<li>
<p>if 语句的执行顺序是从上往下执行的。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<ol start="7">
<li>尝试编写一个 Python 程序，输入两个数，比较它们的大小并输出其中较大者。</li>
</ol>
<p><img src="@source/column/py/basequestion/answer5.assets/3c01ac83b7756716c5284fb417ed4982.png" alt="img" loading="lazy"></p>
<ol start="8">
<li>尝试编写程序，实现分段函数计算，如下表所示：</li>
</ol>
<p><img src="@source/column/py/basequestion/answer5.assets/195d24174195bc4d3179a28e30ac7e8c.png" alt="img" loading="lazy"></p>
<p><img src="@source/column/py/basequestion/answer5.assets/14b961c1edbba8ae3ccfecb57a55230d.png" alt="img" loading="lazy"></p>
<ol start="9">
<li>尝试编写程序，运行后用户输入 4 位整数作为年份，判断其是否为闰年。如果年份能被 400 整除，则为闰年；如果年份能被4整除但不能被 100 整除也为闰年。</li>
</ol>
<p><img src="@source/column/py/basequestion/answer5.assets/f5a31ef2fbe6903c8ba625f130508c0b.png" alt="img" loading="lazy"></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>05-章节测试五</title>
      <link>https://bornforthis.cn/column/py/basequestion/q5.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/q5.html</guid>
      <source url="https://bornforthis.cn/rss.xml">05-章节测试五</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Wed, 18 May 2022 19:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>
<p>Python 中用于表示逻辑与、逻辑或、逻辑非运算的关键字分别是_________、___________、_________。</p>
</li>
<li>
<p>表达式 5&gt;10 and 2&lt;5 的值为_________。</p>
</li>
<li>
<p>if 语句之后的布尔表达式值为_______时，则对应的语句会被执行。如果其值为_______，则语句不会被执行。</p>
</li>
<li>
<p>在条件表达式中不允许使用赋值运算符 <code>=</code>，会提示语法错误。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>自定义的函数里只能有一个 elif 判断语句。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>if 语句的执行顺序是从上往下执行的。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>尝试编写一个 Python 程序，输入两个数，比较它们的大小并输出其中较大者。</p>
</li>
<li>
<p>尝试编写程序，实现分段函数计算，如下表所示：</p>
<p><img src="@source/column/py/basequestion/q5.assets/612264bd5951e07d3a1d5466ecbd25f3.png" alt="img" loading="lazy"></p>
</li>
<li>
<p>尝试编写程序，运行后用户输入 4 位整数作为年份，判断其是否为闰年。如果年份能被 400 整除，则为闰年；如果年份能被 4 整除但不能被 100 整除也为闰年。</p>
</li>
</ol>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>04-章节测试四答案</title>
      <link>https://bornforthis.cn/column/py/basequestion/answer4.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/answer4.html</guid>
      <source url="https://bornforthis.cn/rss.xml">04-章节测试四答案</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Wed, 18 May 2022 15:33:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>
<p>Python支持使用字典的“键”作为下标来访问字典中的值。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A 易错项：</p>
<p>B 记忆性知识点</p>
</div>
<ol start="2">
<li>
<p>列表可以作为字典的“键”。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：A 字典的“键”必须是不可变的，而列表是本地可变的，所以不能用列表来作为关键字。</p>
</div>
<ol start="3">
<li>Python支持字典里嵌套列表或嵌套字典。 A. √ B. X</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<ol start="4">
<li>Python字典中的“键”不允许重复。 A. √ B. X</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<ol start="5">
<li>
<p>Python 字典中的“值”不允许重复。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：A 值可以重复。</p>
</div>
<ol start="6">
<li>
<p>Python 字典和集合属于无序序列。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<ol start="7">
<li>此题无需在线作答，请在纸上作答后查看答案解析 Python内置函数_________可以返回列表、元组、字典、集合、字符串中的元素个数。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：<code>len()</code>  记忆性知识点</p>
</div>
<ol start="8">
<li>字典中多个元素之间使用____________分隔开，每个元素的“键”与“值”之间使用________分隔开。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：逗号、冒号 记忆性知识点</p>
</div>
<ol start="9">
<li>获得集合的并集应使用______运算符；获得集合的交集应使用______运算符；获得集合的差集应使用______运算符。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：<code>|</code> ；<code>&amp;</code> ； <code>-</code></p>
</div>
<ol start="10">
<li>此题无需在线作答，请在纸上作答后查看答案解析 集合a被定义为：a = {1,2,3,2,5,6,2,1}；则代码len(a)的值为_________。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：5 集合里不会包含重复的元素。</p>
</div>
<ol start="11">
<li>此题无需在线作答，请在纸上作答后查看答案解析 （拓展）字典对象的___________方法可以获取指定“键”对应的“值”，并且可以在指定“键”不存在的时候返回指定值，如果不指定则返回None。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：<code>get()</code>  记忆性知识点</p>
</div>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>04-章节测试四</title>
      <link>https://bornforthis.cn/column/py/basequestion/q4.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/q4.html</guid>
      <source url="https://bornforthis.cn/rss.xml">04-章节测试四</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Wed, 18 May 2022 09:47:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>
<p>Python 支持使用字典的“键”作为下标来访问字典中的值。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>列表可以作为字典的“键”。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>Python 支持字典里嵌套列表或嵌套字典。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>Python字典中的“键”不允许重复。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>Python字典中的“值”不允许重复。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>Python 字典和集合属于无序序列。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>Python 内置函数_________可以返回列表、元组、字典、集合、字符串中的元素个数。</p>
</li>
<li>
<p>字典中多个元素之间使用____________分隔开，每个元素的“键”与“值”之间使用________分隔开。</p>
</li>
<li>
<p>获得集合的并集应使用______运算符；获得集合的交集应使用______运算符；获得集合的差集应使用______运算符。</p>
</li>
<li>
<p>集合 a 被定义为：<code>a = {1,2,3,2,5,6,2,1}</code> ；则代码 <code>len(a)</code> 的值为_________。</p>
</li>
<li>
<p>（拓展）字典对象的___________方法可以获取指定 “键” 对应的“值”，并且可以在指定 “键” 不存在的时候返回指定值，如果不指定则返回 None。</p>
</li>
</ol>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>作业1丨创建问答式简历程序</title>
      <link>https://bornforthis.cn/column/py/basequestion/hw1.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/hw1.html</guid>
      <source url="https://bornforthis.cn/rss.xml">作业1丨创建问答式简历程序</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Wed, 18 May 2022 08:33:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>通过一句一句的提问获取用户的信息，生成一个格式化的简历。</p>
<p><strong>如例：</strong></p>
<p><img src="@source/column/py/basequestion/hw1.assets/fb736dc40ee235cf8565a7d6ed222fd3.png" alt="image-20200713094252087" loading="lazy"></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>03-章节测试三答案</title>
      <link>https://bornforthis.cn/column/py/basequestion/answer3.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/answer3.html</guid>
      <source url="https://bornforthis.cn/rss.xml">03-章节测试三答案</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Wed, 18 May 2022 08:33:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>
<p>列表、元组、字符串是 Python 的_______序列。</p>
<p>A. 有序</p>
<p>B. 无序</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<ol start="2">
<li>此题无需在线作答，请在纸上作答后查看答案解析 **________**关键字既可以删除列表中的一个元素，也可以删除整个列表。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：del 记忆性知识点</p>
</div>
<ol start="3">
<li>此题无需在线作答，请在纸上作答后查看答案解析 已知列表 x = [1, 2, 3]，那么执行语句 x.pop(0) 之后，x的值为_________。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：[2, 3] 列表的 pop 操作格式为 <code>列表名.pop(删除位置)</code> ，题中即为删除下标为 0 的元素.</p>
</div>
<ol start="4">
<li>此题无需在线作答，请在纸上作答后查看答案解析 已知列表 x = [1, 2, 3]，那么执行语句 x.insert(1, 4) 只有，x的值为___________。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：[1, 4, 2, 3]</p>
<p>列表的 insert 操作格式为 <code>列表名.insert(插入位置，插入值)</code> ，题中即为在下标为 1 的位置插入 4.</p>
</div>
<ol start="5">
<li>此题无需在线作答，请在纸上作答后查看答案解析 任意长度的Python列表、元组和字符串中最后一个元素的下标为________。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：-1 记忆性知识点。正向的下标从 0 开始，反向的下标从 -1 开始。</p>
</div>
<ol start="6">
<li>
<p>列表对象的 <code>append()</code> 方法属于原地操作，用于在列表尾部追加一个元素。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<ol start="7">
<li>
<p>Python 列表中所有元素必须为相同类型的数据。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：A 同一个列表对象中的元素类型可以各不相同。</p>
</div>
<ol start="8">
<li>
<p>已知x是个列表对象，那么执行语句 y = x 之后，对y所做的任何操作都会同样作用到 x 上。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A 你的选择：A</p>
<p>易错项：B 记忆性知识点，如果需要复制一个新的对象，可以用 <code>y = x[:]</code></p>
</div>
<ol start="9">
<li>
<p>已知 x 是个列表对象，那么执行语句 <code>y = x[:]</code> 之后，对y所做的任何操作都会同样作用到x上。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：A <code>y=[:]</code> 是复制操作，y 和 x 的内存地址不一样，对 y 的修改不会影响到 x。</p>
</div>
<ol start="10">
<li>
<p>列表、元组、字符串支持双向索引。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 双向索引即可支持正向索引也支持反向索引。</p>
</div>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>03-章节测试三</title>
      <link>https://bornforthis.cn/column/py/basequestion/q3.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/q3.html</guid>
      <source url="https://bornforthis.cn/rss.xml">03-章节测试三</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Wed, 18 May 2022 09:47:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>
<p>列表、元组、字符串是 Python 的_______序列。</p>
<p>A. 有序</p>
<p>B. 无序</p>
</li>
<li>
<p>________关键字既可以删除列表中的一个元素，也可以删除整个列表。</p>
</li>
<li>
<p>已知列表 <code>x = [1, 2, 3]</code> ，那么执行语句 <code>x.pop(0)</code>  之后，x 的值为_________。</p>
</li>
<li>
<p>已知列表 <code>x = [1, 2, 3]</code> ，那么执行语句 <code>x.insert(1, 4)</code>  只有，x 的值为___________。</p>
</li>
<li>
<p>任意长度的 Python 列表、元组和字符串中最后一个元素的下标为________。</p>
</li>
<li>
<p>列表对象的 <code>append()</code> 方法属于原地操作，用于在列表尾部追加一个元素。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>Python 列表中所有元素必须为相同类型的数据。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>已知 x 是个列表对象，那么执行语句 <code>y = x</code> 之后，对y所做的任何操作都会同样作用到 x 上。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>已知 x 是个列表对象，那么执行语句 <code>y = x[:]</code> 之后，对 y 所做的任何操作都会同样作用到x上。</p>
<p>A. √</p>
<p>B. X</p>
</li>
<li>
<p>列表、元组、字符串支持双向索引。</p>
<p>A. √</p>
<p>B. X</p>
</li>
</ol>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/zsxq.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>05-必知必会，掌握 HTTP 基本原理</title>
      <link>https://bornforthis.cn/column/crawler/s2_05.html</link>
      <guid>https://bornforthis.cn/column/crawler/s2_05.html</guid>
      <source url="https://bornforthis.cn/rss.xml">05-必知必会，掌握 HTTP 基本原理</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Tue, 17 May 2022 08:57:30 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>本课时我们会详细讲解 HTTP 的基本原理，以及了解在浏览器中输入 URL 到获取网页内容之间发生了什么。了解了这些内容，有助于我们进一步掌握爬虫的基本原理。</p>
<h1 id="_1-uri-和-url" tabindex="-1"> 1. URI 和 URL</h1>
<p>首先，我们来了解一下 URI 和 URL，URI 的全称为 Uniform Resource Identifier，即统一资源标志符，URL 的全称为 Universal Resource Locator，即统一资源定位符。</p>
<p>举例来说，<a href="https://github.com/favicon.ico" target="_blank" rel="noopener noreferrer">https://github.com/favicon.ico</a>，它是一个 URL，也是一个 URI。即有这样的一个图标资源，我们用 <code>URL/URI</code> 来唯一指定了它的访问方式，这其中包括了访问协议 HTTPS、访问路径（即根目录）和资源名称 <code>favicon.ico</code>。通过这样一个链接，我们便可以从互联网上找到这个资源，这就是 URL/URI。</p>
<p>URL 是 URI 的子集，也就是说每个 URL 都是 URI，但不是每个 URI 都是 URL。那么，什么样的 URI 不是 URL 呢？URI 还包括一个子类叫作 URN，它的全称为 Universal Resource Name，即统一资源名称。</p>
<p>URN 只命名资源而不指定如何定位资源，比如 <code>urn:isbn:0451450523</code> 指定了一本书的 ISBN，可以唯一标识这本书，但是没有指定到哪里定位这本书，这就是 URN。URL、URN 和 URI 的关系可以用图表示。</p>
<p><img src="@source/column/crawler/s2_05.assets/CgpOIF5XRxOAT9vMAAAwHI1kHMc253.jpg" alt="img" loading="lazy"></p>
<p>但是在目前的互联网，URN 的使用非常少，几乎所有的 URI 都是 URL，所以一般的网页链接我们可以称之为 URL，也可以称之为 URI，我个人习惯称之为 URL。</p>
<h1 id="_2-超文本" tabindex="-1"> 2. 超文本</h1>
<p>接下来，我们再了解一个概念 —— 超文本，其英文名称叫作 <code>Hypertext</code>，我们在浏览器里看到的网页就是超文本解析而成的，其网页源代码是一系列 HTML 代码，里面包含了一系列标签，比如 img 显示图片，p 指定显示段落等。浏览器解析这些标签后，便形成了我们平常看到的网页，而网页的源代码 HTML 就可以称作超文本。</p>
<p>例如，我们在 Chrome 浏览器里面打开任意一个页面，如淘宝首页，右击任一地方并选择 “检查” 项（或者直接按快捷键 F12），即可打开浏览器的开发者工具，这时在 Elements 选项卡即可看到当前网页的源代码，这些源代码都是超文本，如图所示。</p>
<p><img src="@source/column/crawler/s2_05.assets/image-20220517114240027.png" alt="image-20220517114240027" loading="lazy"></p>
<h1 id="_3-http-和-https" tabindex="-1"> 3. HTTP 和 HTTPS</h1>
<p><img src="@source/column/crawler/s2_05.assets/1596515794625-62c01947-c247-4f82-90c1-d14e32510784-165275919780821.png" alt="img" loading="lazy"></p>
<p>也就是在 <strong>TCP/IP</strong> 四层模型中添加了一层 <strong>SSL 层（或者叫 TLS）</strong> ，并且，根据加密程度不同，所需要的费用不同。</p>
<p>**04 资源消耗：**如果大家访问HTTPS网站呢，对我们的CPU来说需要更高程度的计算。上面我们讲到了，对于HTTPS来说，连接安全的同时它需要 <strong>加密传输和身份验证</strong> ，其实这是基于CPU的运算，需要我们电脑的CPU不断进行加密解密的运算，这样就会对我们电脑的CPU和占用一些资源。大家访问 HTTP、HTTPS，访问不同的网站，对我们电脑的CPU的消耗是不一样的，HTTPS需要很多很多的计算，才能进行加密验证。这些都是在我们电脑本地完成的。</p>
<h2 id="_3-1-http" tabindex="-1"> 3.1 HTTP</h2>
<blockquote>
<p>HTTP 是一个客户端（用户）和服务器端（网站）之间请求和应答的标准，通常使用 <a href="https://baike.baidu.com/item/TCP/33012?fromtitle=TCP%E5%8D%8F%E8%AE%AE&amp;fromid=8988699&amp;fr=aladdin" target="_blank" rel="noopener noreferrer">TCP协议</a>。通过使用<a href="https://baike.baidu.com/item/%E7%BD%91%E9%A1%B5%E6%B5%8F%E8%A7%88%E5%99%A8/8309940?fr=aladdin" target="_blank" rel="noopener noreferrer">网页浏览器</a>、<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB" target="_blank" rel="noopener noreferrer">网络爬虫</a>或者其他的工具，客户端发起一个 HTTP 请求到服务器上指定端口（默认<a href="https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3" target="_blank" rel="noopener noreferrer">端口</a>为80）。我们称这个客户端为用户代理程序（user agent）。应答的服务器上存储着一些资源，比如 <strong>HTML</strong> 文件和图像。我们称这个应答服务器为源服务器（origin server）。在用户代理和源服务器中间可能存在多个”中见层“，比如：<a href="https://baike.baidu.com/item/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/97996?fr=aladdin" target="_blank" rel="noopener noreferrer">代理服务器</a>、<a href="https://baike.baidu.com/item/%E7%BD%91%E5%85%B3" target="_blank" rel="noopener noreferrer">网关</a>或者<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E9%9A%A7%E9%81%93/3993106?fr=aladdin" target="_blank" rel="noopener noreferrer">隧道</a>（tunnel）</p>
</blockquote>
<p>我们平时写爬虫的时候就直接一个 <strong>requestes</strong> 过去，我们的电脑扮演的是 <strong>客户端的角色</strong>，我们 <strong>requests 请求的网址</strong>我们称之为：<strong>服务器</strong>。</p>
<p>大家即使是一个简单的 <strong>get</strong> 在网络就要经历许多层。这个模式我们叫做 <strong>C/S 模式</strong>服务器客户端模式。</p>
<p>上面我们说在请求网络的过程中会经过许多层，那这个 <strong>层</strong> 指的是什么呢？<strong>有那几层呢？我们继续往下看！</strong></p>
<table>
<thead>
<tr>
<th>名称</th>
<th>对应的意思</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用层</td>
<td>应用程序是指人们用于网络通信的软件程序。有些终端用户应用程序是网络感知程序，</td>
</tr>
<tr>
<td></td>
<td>即这些程序实现应用层协议，并可直接与协议栈的较低层通信。</td>
</tr>
<tr>
<td></td>
<td>电子邮件客户程序和 Web 浏览器就属于这种类型的应用程序。</td>
</tr>
<tr>
<td>网络层（IP）</td>
<td>cmd &gt;&gt;&gt; ipconfig</td>
</tr>
<tr>
<td></td>
<td>到网络层，就会进行 <strong>IP</strong> 的封装，（也就是把你电脑的本地 IP 封装，放在你的数据上，前面</td>
</tr>
<tr>
<td></td>
<td>就加个头说：我是来自192.168.0.1 的电脑，发往百度的 IP 一个是百度的 IP 一个是你自己的</td>
</tr>
<tr>
<td></td>
<td>IP ）之后就会携带着发起请求的目标服务器。（也就是是封装在你的 Get 请求上）</td>
</tr>
<tr>
<td>隧道</td>
<td>VPN</td>
</tr>
<tr>
<td>网关</td>
<td>加码解码（类似于，把一个英文网站翻译成中文网站）</td>
</tr>
<tr>
<td>课下</td>
<td>自行看 TCP／UDP</td>
</tr>
<tr>
<td>TCP</td>
<td>有连接的流形式，就类似我们打电话，也就类似我们的全双工，我可以和你说话，你也可以</td>
</tr>
<tr>
<td></td>
<td>和我说话。并且，我知道你能接起电话，你一定能听到我说话。</td>
</tr>
<tr>
<td>UDP</td>
<td>面向无连接，不在乎你是否收到了我的信息。就类似于：发邮件的时候，你知道你的邮件发</td>
</tr>
<tr>
<td></td>
<td>出去了，但不确定对方能不能收到。</td>
</tr>
<tr>
<td>对比</td>
<td>相对来说，UDP 回比 TCP 简单的多了。（我们的 HTPP 是使用 TCP的。）</td>
</tr>
</tbody>
</table>
<p>网络层就类似于我们的　<strong>IP</strong></p>
<p><img src="@source/column/crawler/s2_05.assets/1596515794458-0c232d25-5d2f-49b1-b3e9-5fa0a25376ad-165278440799424.png" alt="img" loading="lazy"></p>
<h3 id="_3-1-1-http-请求头详解" tabindex="-1"> 3.1.1 HTTP  请求头详解</h3>
<p><strong>HTTP 头部</strong></p>
<p><img src="@source/column/crawler/s2_05.assets/1596515794579-7b7e7ba1-80e5-4e25-bd72-e34c0006e551-165278446432427.png" alt="img" loading="lazy"></p>
<p>举个例子：</p>
<p><img src="@source/column/crawler/s2_05.assets/1596515794606-1856f7a1-d190-4797-84f1-9ee90e886e70-165278461481230.png" alt="img" loading="lazy"></p>
<p>上图中的 <strong>Request Header</strong> 有个</p>
<p><strong>Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,</strong><em><strong>/</strong></em><strong>;q=0.8,application/signed-exchange;v=b3</strong></p>
<p>这个如果加在你的请求头里面，就只会返回你要求的数据。</p>
<h2 id="_3-2-https" tabindex="-1"> 3.2 HTTPS</h2>
<p>超文本传输安全协议（英语：HyperText Transfer Protocol Secure，缩写：HTTPS；常常称为：HTTP over TLS</p>
<p><img src="@source/column/crawler/s2_05.assets/1596515794624-a14f78ee-b11c-4067-ad67-fa18fd78bb31-165278469571433.png" alt="img" loading="lazy"></p>
<h2 id="_3-3-实例讲解" tabindex="-1"> 3.3 实例讲解</h2>
<p>在淘宝的首页 https://www.taobao.com/ 中，URL 的开头会有 http 或 https，这个就是访问资源需要的协议类型，有时我们还会看到 ftp、sftp、smb 开头的 URL，那么这里的 ftp、sftp、smb 都是指的协议类型。在爬虫中，我们抓取的页面通常就是 http 或 https 协议的，我们在这里首先来了解一下这两个协议的含义。</p>
<p>HTTP 的全称是 Hyper Text Transfer Protocol，中文名叫作超文本传输协议，HTTP 协议是用于从网络传输超文本数据到本地浏览器的传送协议，它能保证高效而准确地传送超文本文档。HTTP 由万维网协会（World Wide Web Consortium）和 Internet 工作小组 IETF（Internet Engineering Task Force）共同合作制定的规范，目前广泛使用的是 HTTP 1.1 版本。</p>
<p>HTTPS 的全称是 Hyper Text Transfer Protocol over Secure Socket Layer，是以安全为目标的 HTTP 通道，简单讲是 HTTP 的安全版，即 HTTP 下加入 SSL 层，简称为 HTTPS。</p>
<p>HTTPS 的安全基础是 SSL，因此通过它传输的内容都是经过 SSL 加密的，它的主要作用可以分为两种：</p>
<ul>
<li>建立一个信息安全通道，来保证数据传输的安全。</li>
<li>确认网站的真实性，凡是使用了 HTTPS 的网站，都可以通过点击浏览器地址栏的锁头标志来查看网站认证之后的真实信息，也可以通过 CA 机构颁发的安全签章来查询。</li>
</ul>
<p><img src="@source/column/crawler/s2_05.assets/image-20220517185318734.png" alt="image-20220517185318734" loading="lazy"></p>
<p>现在越来越多的网站和 App 都已经向 HTTPS 方向发展。例如：</p>
<ul>
<li>
<p>苹果公司强制所有 iOS App 在 2017 年 1 月 1 日 前全部改为使用 HTTPS 加密，否则 App 就无法在应用商店上架。</p>
</li>
<li>
<p>谷歌从 2017 年 1 月推出的 Chrome 56 开始，对未进行 HTTPS 加密的网址链接亮出风险提示，即在地址栏的显著位置提醒用户 “此网页不安全”。</p>
</li>
<li>
<p>腾讯微信小程序的官方需求文档要求后台使用 HTTPS 请求进行网络通信，不满足条件的域名和协议无法请求。</p>
</li>
</ul>
<p>因此，HTTPS 已经已经是大势所趋。</p>
<h1 id="_4-http-请求过程" tabindex="-1"> 4. HTTP 请求过程</h1>
<p><img src="@source/column/crawler/s2_05.assets/1596515794481-b90fd970-352e-48ac-85ff-ea944bd57e33.png" alt="img" loading="lazy"></p>
<p>我们在浏览器中输入一个 URL，回车之后便可以在浏览器中观察到页面内容。实际上，这个过程是浏览器向网站所在的服务器发送了一个请求，网站服务器接收到这个请求后进行处理和解析，然后返回对应的响应，接着传回给浏览器。响应里包含了页面的源代码等内容，浏览器再对其进行解析，便将网页呈现了出来，传输模型如图所示。</p>
<p><img src="@source/column/crawler/s2_05.assets/CgpOIF5XRxSANG0_AACovJPtMYQ497.jpg" alt="img" loading="lazy"></p>
<p>此处客户端即代表我们自己的 PC 或手机浏览器，服务器即要访问的网站所在的服务器。</p>
<p>为了更直观地说明这个过程，这里用 Chrome 浏览器的开发者模式下的 Network 监听组件来做下演示，它可以显示访问当前请求网页时发生的所有网络请求和响应。</p>
<p>打开 Chrome 浏览器，右击并选择 “检查” 项，即可打开浏览器的开发者工具。这里访问百度 <a href="https://www.baidu.com/" target="_blank" rel="noopener noreferrer">https://www.baidu.com/</a>，输入该 URL 后回车，观察这个过程中发生了怎样的网络请求。可以看到，在 Network 页面下方出现了一个个的条目，其中一个条目就代表一次发送请求和接收响应的过程，如图所示。</p>
<p><img src="@source/column/crawler/s2_05.assets/image-20220517191449991.png" alt="image-20220517191449991" loading="lazy"></p>
<p>我们先观察第一个网络请求，即 <a href="www.baidu.com">www.baidu.com</a>，其中各列的含义如下。</p>
<ul>
<li>第一列 Name：请求的名称，一般会将 URL 的最后一部分内容当作名称。</li>
<li>第二列 Status：响应的状态码，这里显示为 200，代表响应是正常的。通过状态码，我们可以判断发送了请求之后是否得到了正常的响应。</li>
<li>第三列 Type：请求的文档类型。这里为 document，代表我们这次请求的是一个 HTML 文档，内容就是一些 HTML 代码。</li>
<li>第四列 Initiator：请求源。用来标记请求是由哪个对象或进程发起的。</li>
<li>第五列 Size：从服务器下载的文件和请求的资源大小。如果是从缓存中取得的资源，则该列会显示 from cache。</li>
<li>第六列 Time：发起请求到获取响应所用的总时间。</li>
<li>第七列 Waterfall：网络请求的可视化瀑布流。</li>
</ul>
<p>我们点击这个条目即可看到其更详细的信息，如图所示。</p>
<p><img src="@source/column/crawler/s2_05.assets/CgpOIF5XRxSAXezkAAJwMNsqow0849.jpg" alt="img" loading="lazy"></p>
<p>首先是 General 部分，Request URL 为请求的 URL，Request Method 为请求的方法，Status Code 为响应状态码，Remote Address 为远程服务器的地址和端口，Referrer Policy 为 Referrer 判别策略。</p>
<p>再继续往下，可以看到，有 Response Headers 和 Request Headers，这分别代表响应头和请求头。请求头里带有许多请求信息，例如浏览器标识、Cookies、Host 等信息，这是请求的一部分，服务器会根据请求头内的信息判断请求是否合法，进而作出对应的响应。图中看到的 Response Headers 就是响应的一部分，例如其中包含了服务器的类型、文档类型、日期等信息，浏览器接受到响应后，会解析响应内容，进而呈现网页内容。</p>
<p>下面我们分别来介绍一下请求和响应都包含哪些内容。</p>
<h2 id="_4-1-请求" tabindex="-1"> 4.1 请求</h2>
<p>请求，由客户端向服务端发出，可以分为 4 部分内容：请求方法（Request Method）、请求的网址（Request URL）、请求头（Request Headers）、请求体（Request Body）。</p>
<h2 id="_4-2-请求方法" tabindex="-1"> 4.2 请求方法</h2>
<p>常见的请求方法有两种：GET 和 POST。</p>
<p>在浏览器中直接输入 URL 并回车，这便发起了一个 GET 请求，请求的参数会直接包含到 URL 里。例如，在百度中搜索 Python，这就是一个 GET 请求，链接为 <a href="https://www.baidu.com/s?wd=Python" target="_blank" rel="noopener noreferrer">https://www.baidu.com/s?wd=Python</a> ，其中 URL 中包含了请求的参数信息，这里参数 wd 表示要搜寻的关键字。POST 请求大多在表单提交时发起。比如，对于一个登录表单，输入用户名和密码后，点击 “登录” 按钮，这通常会发起一个 POST 请求，其数据通常以表单的形式传输，而不会体现在 URL 中。</p>
<p>GET 和 POST 请求方法有如下区别。</p>
<ul>
<li>GET 请求中的参数包含在 URL 里面，数据可以在 URL 中看到，而 POST 请求的 URL 不会包含这些数据，数据都是通过表单形式传输的，会包含在请求体中。</li>
<li>GET 请求提交的数据最多只有 1024 字节，而 POST 请求没有限制。</li>
</ul>
<p>一般来说，登录时，需要提交用户名和密码，其中包含了敏感信息，使用 GET 方式请求的话，密码就会暴露在 URL 里面，造成密码泄露，所以这里最好以 POST 方式发送。上传文件时，由于文件内容比较大，也会选用 POST 方式。</p>
<p>我们平常遇到的绝大部分请求都是 GET 或 POST 请求，另外还有一些请求方法，如 HEAD、PUT、DELETE、OPTIONS、CONNECT、TRACE 等，我们简单将其总结为下表。</p>
<p><img src="@source/column/crawler/s2_05.assets/Cgq2xl5XTMeAFYgXAADGW57EU8s068.png" alt="img" loading="lazy"></p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>GET</td>
<td>请求页面，并返回页面内容</td>
</tr>
<tr>
<td>HEAD</td>
<td>类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td>
</tr>
<tr>
<td>POST</td>
<td>大多用于提交表单或上传文件，数据包含在请求体中</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>04-课前预习2：爬虫开发网络基本知识</title>
      <link>https://bornforthis.cn/column/crawler/s2_04.html</link>
      <guid>https://bornforthis.cn/column/crawler/s2_04.html</guid>
      <source url="https://bornforthis.cn/rss.xml">04-课前预习2：爬虫开发网络基本知识</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Tue, 17 May 2022 08:20:30 GMT</pubDate>
      <content:encoded><![CDATA[<h3 id="_1-http-与-https" tabindex="-1"> 1. HTTP 与 HTTPS</h3>
<p>超文本传输协议 HTTP 协议被用于在 Web 浏览器和网站服务器之间传递信息，HTTP 协议以明文方式发送内容，不提供任何方式的数据加密，如果攻击者截取了 Web 浏览器和网站服务器之间的传输报文，就可以直接读懂其中的信息，因此，HTTP 协议不适合传输一些敏感信息，比如：信用卡号、密码等支付信息。</p>
<p>为了解决HTTP协议的这一缺陷，需要使用另一种协议：安全套接字层超文本传输协议 HTTPS，为了数据传输的安全，HTTPS 在 HTTP的基础上加入了 SSL 协议，SSL 依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。</p>
<p>HTTPS 和 HTTP 的区别主要如下：</p>
<p>1）https 协议需要到 ca 申请证书，一般免费证书较少，因而需要一定费用。</p>
<p>2）http 是超文本传输协议，信息是明文传输，https 则是具有安全性的 ssl 加密传输协议。</p>
<p>3）http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</p>
<p>4）http 的连接很简单，是无状态的；HTTPS 协议是由 <code>SSL+HTTP</code> 协议构建的可进行加密传输、身份认证的网络协议，比 http 协议安全。</p>
<h3 id="_2-请求头" tabindex="-1"> 2. 请求头</h3>
<p>通常我们请求网页的时候点开开发者工具会出现如下内容，我们来具体讨论一下各项含义。</p>
<p><img src="@source/column/crawler/s2_04.assets/1596515697234-d5be8434-ccfe-4a44-9a50-d21fbaac80e3.png" alt="" loading="lazy"></p>
<p>Request URL：我们请求的页面URL</p>
<p>Requests Method：页面的请求方式</p>
<p>Status Code：相应状态码</p>
<p>Remote Address：我们访问国内网站使用的IP地址</p>
<p>Referrer Policy：用于过滤Referer内容，这里的意思是当发生降级的时候不传递referer报头</p>
<p>下面是常见的HTTP状态码：</p>
<p>200 请求成功</p>
<p>301 永久移动</p>
<p>302 暂时移动</p>
<p>304 内容未修改</p>
<p>400 客户端请求错误</p>
<p>403 客户端的请求被服务器拒绝</p>
<p>404 页面丢失</p>
<p>405 客户端请求的方法错误</p>
<p>500 服务器内部错误</p>
<p>502 远程服务器响应无效</p>
<p><img src="@source/column/crawler/s2_04.assets/1596515697205-9d38b4be-b64c-4f47-9ac7-cd74e1f4c8e2.png" alt="" loading="lazy"></p>
<p>Accept：表示客户端会接受的文本</p>
<p>Accept-Encoding：表示客户端可以接受的编码方式</p>
<p>Accept-Language：表示客户端可以接受的语言</p>
<p>Cache-Control：客户端是否使用缓存</p>
<p>Connection：客户端请求连接时长，这里是长连接</p>
<p>Cookie：保存在客户端本地的可被服务端识别身份的数据</p>
<p>Host：客户端请求的主机</p>
<p>User-Agent：客户端使用什么终端访问</p>
<p>DNT：表示客户端是否允许网站追踪，这里是1可以追踪</p>
<p>Upgrade-Insecure-Request：表示客户端优先接受加密响应</p>
<p>Program：HTTP1.0用来向后兼容只支持HTTP1.0的缓存服务器</p>
<p><img src="@source/column/crawler/s2_04.assets/1596515697336-701b70ef-8875-4763-9ed7-006c4c5c5d99.png" alt="" loading="lazy"></p>
<p>Cache-Control：服务器指定缓存方式，这里表示代理服务器不能缓存，只能用户缓存</p>
<p>Connection：当前事务结束后是否关闭连接</p>
<p>Content-Encoding：内容编码方式</p>
<p>Content-Type：返回的数据类型</p>
<p>Expires：在此日期之后，相应失效</p>
<p>Server：服务器处理信息的软件信息</p>
<p>Set-Cookie：服务器给客户端设置cookies</p>
<p>Strict-Transport-Security：在这个时间内发起的请求都使用HTTPS</p>
<p>Transfer-Encoding：数据以块的方式发送</p>
<h3 id="_3-cookies" tabindex="-1"> 3. Cookies</h3>
<p>Cookies是存储在你电脑上的一些数据，因为HTTP是面向无连接的，也就是每一个请求和响应都是单独分开的，有时候我们需要保存用户的状态，比如你在网站一直在线，就需要使用cookie记录你的信息，下一次请求时候网站会识别你的本地cookie来验证你的身份。</p>
<p>Cookies以键值对形似存在，也就是key=value。</p>
<h3 id="_4-html" tabindex="-1"> 4. HTML</h3>
<p>HTML就是编写前端页面使用的代码，一般用来搭建网站骨架，而渲染用css，实现网页交互使用Js。</p>
<h3 id="_5-json" tabindex="-1"> 5. json</h3>
<p>Json是一种轻量级的数据交换格式，一般用来搭建网站API。</p>
<p>Json语法：</p>
<p>数据是键值对</p>
<p>数据由逗号分隔</p>
<p>大括号保存对象</p>
<p>方括号保存数组</p>
<p>{“name”:”python”}就是一个json对象</p>
<h3 id="_6-ajax" tabindex="-1"> 6. Ajax</h3>
<p>Ajax是异步执行js网络请求的意思。一般来说，我们提交一个表单，一旦用户点击submit，浏览器就会刷新一下。Ajax是不让页面刷新，用户依然同留在当前页面，同时后台发出新的请求，收到数据之后，通过js刷新页面，这样用户就感觉自己一直在当前页面，但是数据却可以不断刷新。比如查看百度图片，就可以看到图片不断刷新。</p>
]]></content:encoded>
    </item>
    <item>
      <title>手把手教你怎么从微软官方下载 Windos10 正版镜像</title>
      <link>https://bornforthis.cn/posts/08.html</link>
      <guid>https://bornforthis.cn/posts/08.html</guid>
      <source url="https://bornforthis.cn/rss.xml">手把手教你怎么从微软官方下载 Windos10 正版镜像</source>
      <category>技术杂谈</category>
      <pubDate>Mon, 16 May 2022 15:20:02 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="前言" tabindex="-1"> 前言</h1>
<blockquote>
<p>前段时间自己使用 VMware 搭建了一个Windos10系统，并把过程发布到博客【<a href="/posts/07.html">传送门</a>】，至于搭建一个 Windos 系统要做什么，你懂的哦~，你在虚拟机上的操作导致死机后不会影响你物理机哦 ~~~ 所以赶紧动起来吧！！ 咳咳，言归正传，我发到 CSDN 后有小伙伴跟着我的操作走，在最后安装系统的时候出现各种各样的错误，而原因也基本就是系统镜像不是正版的原因，所以，今天我来教你怎么自己获取正版的 Windos10 镜像，跟着来吧！</p>
</blockquote>
<h1 id="一、首先找到微软官方网站下载" tabindex="-1"> 一、首先找到微软官方网站下载：</h1>
<p><a href="https://www.microsoft.com/zh-cn/software-download/windows10" target="_blank" rel="noopener noreferrer">https://www.microsoft.com/zh-cn/software-download/windows10</a></p>
<p><strong>是不是官方你自己看😕</strong></p>
<p><strong>整体过程是比较久的</strong></p>
<p><img src="@source/posts/08.assets/image-20220517100344547.png" alt="image-20220517100344547" loading="lazy"></p>
<p><strong>点击立即下载工具</strong></p>
<p><img src="@source/posts/08.assets/image-20220517100542735.png" alt="image-20220517100542735" loading="lazy"></p>
<p><strong>等待工具下载完毕右键 --&gt; 管理员运行</strong></p>
<p><img src="@source/posts/08.assets/20200703181043926.png" alt="img" loading="lazy"></p>
<p><img src="@source/posts/08.assets/2020070315521364.png" alt="img" loading="lazy"></p>
<p><strong>等待。。。</strong></p>
<p><img src="@source/posts/08.assets/20200703155252405.png" alt="img" loading="lazy"></p>
<p><strong>选择接受条款</strong>，不接受不让你用。。。</p>
<p><img src="@source/posts/08.assets/20200703155433101.png" alt="img" loading="lazy"></p>
<p>选择安装介质，我们需要生成 ISO 文件</p>
<p><img src="@source/posts/08.assets/20200703155548806.png" alt="img" loading="lazy"></p>
<p><img src="@source/posts/08.assets/20200703155754393.png" alt="img" loading="lazy"></p>
<p><strong>选择使用 ISO 介质</strong></p>
<p><img src="@source/posts/08.assets/20200703155721551.png" alt="img" loading="lazy"></p>
<p><strong>起个名字，找个位置给他存储下来</strong></p>
<p><img src="@source/posts/08.assets/20200703155925963.png" alt="img" loading="lazy"></p>
<p><strong>等待等待等待 等等等待待待。。。。。。</strong></p>
<p><img src="@source/posts/08.assets/20200703160011284.png" alt="img" loading="lazy"></p>
<p><strong>经过 40 分钟的煎熬，终于成功了。。</strong></p>
<p><img src="@source/posts/08.assets/20200703180414835.png" alt="img" loading="lazy"></p>
<p><strong>这个速度的快慢取决于你的网速，所以你懂的。</strong></p>
<p><img src="@source/posts/08.assets/20200703180801464.png" alt="img" loading="lazy"></p>
<p><strong>好了，到这里你的 Win10 ISO 文件就算准备好了有个这个文件就可以在 VMware 上安装另一个 Windos 系统啦。</strong></p>
<p><strong>希望点赞关注。</strong></p>
<h1 id="👇看完点赞👍-养成习惯😘" tabindex="-1"> 👇看完点赞👍 养成习惯😘</h1>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>【VMware】vmware15 安装win10教程【史上最详细图文教程】</title>
      <link>https://bornforthis.cn/posts/07.html</link>
      <guid>https://bornforthis.cn/posts/07.html</guid>
      <source url="https://bornforthis.cn/rss.xml">【VMware】vmware15 安装win10教程【史上最详细图文教程】</source>
      <category>技术杂谈</category>
      <pubDate>Fri, 13 May 2022 15:20:02 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="一-创建新的虚拟机-自定义-下一步" tabindex="-1"> 一：创建新的虚拟机 --&gt; 自定义 --&gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303115123329.png" alt="img" loading="lazy"></p>
<h2 id="二-直接选择下一步" tabindex="-1"> 二：直接选择下一步</h2>
<p><img src="@source/posts/07.assets/20200303115218784.png" alt="img" loading="lazy"></p>
<h2 id="三-选择稍后安装操作系统-下一步" tabindex="-1"> 三：选择稍后安装操作系统 --&gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303115259960.png" alt="img" loading="lazy"></p>
<h2 id="四-选择-microsoft-windows-w-选择版本-下一步" tabindex="-1"> 四：选择 Microsoft Windows(W) --&gt; 选择版本 --&gt;下一步</h2>
<p><img src="@source/posts/07.assets/20200303115431252.png" alt="img" loading="lazy"></p>
<h2 id="五-自定义虚拟机名称和虚拟机保存位置-下一步" tabindex="-1"> 五：自定义虚拟机名称和虚拟机保存位置 --&gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303115615706.png" alt="img" loading="lazy"></p>
<h2 id="六-选择-bios-下一步" tabindex="-1"> 六：选择 BIOS -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303115712471.png" alt="img" loading="lazy"></p>
<h2 id="七-根据宿主机的配置自定义处理器数量" tabindex="-1"> 七：根据宿主机的配置自定义处理器数量</h2>
<p><img src="@source/posts/07.assets/20200303115822927.png" alt="img" loading="lazy"></p>
<h2 id="八-根据宿主机的配置自定义内存大小-下一步" tabindex="-1"> 八：根据宿主机的配置自定义内存大小 -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303115942658.png" alt="img" loading="lazy"></p>
<h2 id="九-使用-nat-网络模式-下一步" tabindex="-1"> 九：使用 NAT 网络模式 -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303120029567.png" alt="img" loading="lazy"></p>
<h2 id="十-默认推荐-下一步" tabindex="-1"> 十：默认推荐 -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303120103406.png" alt="img" loading="lazy"></p>
<h2 id="十一-默认推荐-下一步" tabindex="-1"> 十一：默认推荐 -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303120137226.png" alt="img" loading="lazy"></p>
<h2 id="十二-创建新的磁盘-下一步" tabindex="-1"> 十二：创建新的磁盘 -- &gt;下一步</h2>
<p><img src="@source/posts/07.assets/20200303120234902.png" alt="img" loading="lazy"></p>
<h2 id="十三-根据宿主机的配置自定义虚拟机磁盘大小-将磁盘拆分成多个文件-下一步" tabindex="-1"> 十三：根据宿主机的配置自定义虚拟机磁盘大小 -- &gt; 将磁盘拆分成多个文件 -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303120321920.png" alt="img" loading="lazy"></p>
<h2 id="十四-选择虚拟系统存储路径-下一步" tabindex="-1"> 十四：选择虚拟系统存储路径 --&gt;下一步</h2>
<p><img src="@source/posts/07.assets/20200303120551936.png" alt="img" loading="lazy"></p>
<h2 id="十五-点击自定义硬件" tabindex="-1"> 十五：点击自定义硬件</h2>
<p><img src="@source/posts/07.assets/20200303120737610.png" alt="img" loading="lazy"></p>
<h2 id="十六-配置镜像文件" tabindex="-1"> 十六：配置镜像文件</h2>
<p>微软官方正版 Win10 纯净版镜像获取教程【<a href="https://blog.csdn.net/dlc_996/article/details/107106738" target="_blank" rel="noopener noreferrer">传送门</a>】</p>
<p><img src="@source/posts/07.assets/20200303121005290.png" alt="img" loading="lazy"></p>
<h2 id="十七-点击完成" tabindex="-1"> 十七：点击完成</h2>
<p><img src="@source/posts/07.assets/20200512194242463.png" alt="img" loading="lazy"></p>
<h2 id="十八-开机" tabindex="-1"> 十八：开机</h2>
<p><img src="@source/posts/07.assets/20200303121141562.png" alt="img" loading="lazy"></p>
<h2 id="十九-开始安装-windos10-系统" tabindex="-1"> 十九：开始安装 Windos10 系统</h2>
<p><img src="@source/posts/07.assets/image-20220514194940268.png" alt="image-20220514194940268" loading="lazy"></p>
<h2 id="二十-开始安装" tabindex="-1"> 二十：开始安装</h2>
<p><img src="@source/posts/07.assets/image-20220514195030207.png" alt="image-20220514195030207" loading="lazy"></p>
<h2 id="二十一-选择安装版本-下一步" tabindex="-1"> 二十一：选择安装版本 -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303121421995.png" alt="img" loading="lazy"></p>
<h2 id="二十二-接受条款-选择下一步" tabindex="-1"> 二十二：接受条款 -- &gt; 选择下一步</h2>
<p><img src="@source/posts/07.assets/20200303121542207.png" alt="img" loading="lazy"></p>
<h2 id="二十三-选择自定义" tabindex="-1"> 二十三：选择自定义</h2>
<p><img src="@source/posts/07.assets/20200303121634655.png" alt="img" loading="lazy"></p>
<h2 id="二十四-选择安装盘符-下一步" tabindex="-1"> 二十四：选择安装盘符 -- &gt; 下一步</h2>
<p><img src="@source/posts/07.assets/20200303121736203.png" alt="img" loading="lazy"></p>
<h2 id="二十五-等待安装" tabindex="-1"> 二十五：等待安装</h2>
<p><img src="@source/posts/07.assets/20200303121827153.png" alt="img" loading="lazy"></p>
<h2 id="二十六-自定义配置" tabindex="-1"> 二十六：自定义配置</h2>
<p><img src="@source/posts/07.assets/20200303123920383.png" alt="img" loading="lazy"></p>
<p><img src="@source/posts/07.assets/20200303123943888.png" alt="img" loading="lazy"></p>
<p><img src="@source/posts/07.assets/20200303124009476.png" alt="img" loading="lazy"></p>
<p><img src="@source/posts/07.assets/20200303124106989.png" alt="img" loading="lazy"></p>
<h2 id="输入账户密码后创建-pin-密码" tabindex="-1"> 输入账户密码后创建 PIN 密码</h2>
<p><img src="@source/posts/07.assets/20200303124221576.png" alt="img" loading="lazy"></p>
<p><img src="@source/posts/07.assets/20200303124301419.png" alt="img" loading="lazy"></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>03-网络爬虫的原理</title>
      <link>https://bornforthis.cn/column/crawler/s2_03.html</link>
      <guid>https://bornforthis.cn/column/crawler/s2_03.html</guid>
      <source url="https://bornforthis.cn/rss.xml">03-网络爬虫的原理</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Mon, 10 Aug 2020 12:02:30 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>通过前面的介绍，同学们已经弄清楚了爬虫是什么，它是干什么的。以及它的反爬和一些奇淫技巧，接下来我们就开始在技术层面上探究一下它是如何工作的。</p>
<p><img src="@source/column/crawler/s2_03.assets/1596515593062-c8dfdd2c-6485-444d-aa18-ff550cf272bb.png" alt="" loading="lazy"></p>
<p>互联网上，公开数据（各种网页）都是以 http（或加密的 http 即 https ）协议传输的。所以，我们这里介绍的爬虫技术都是基于http（https）协议的爬虫。</p>
<p>在 Python 的模块海洋里，支持 http 协议的模块是相当丰富的，既有官方的 urllib，也有大名鼎鼎的社区（第三方）模块 requests。它们都很好的封装了 http 协议请求的各种方法，因此，我们只需要熟悉这些模块的用法，不再进一步讨论 http 协议本身。</p>
<h2 id="_1-认识浏览器和服务器" tabindex="-1"> 1. 认识浏览器和服务器</h2>
<p>同学们对浏览器应该一点都不陌生，可以说，只要上过网的人都知道浏览器。可是，明白浏览器各种原理的同学可不一定多哦。</p>
<p>作为要开发爬虫的者，是一定一定要明白浏览器的工作原理的。这是你写爬虫的必备工具，别无他。</p>
<p>不知道的同学们在面试的时候，有没有遇到这么一个非常宏观而又处处细节的解答题：</p>
<ul>
<li>请说说从你在浏览器地址栏输入网站到你看到网页中间都发生了什么？</li>
</ul>
<p>这真是一个考验知识面的题啊，经验老道的程序员既可以滔滔不绝的讲上三天三夜，也可以提炼出几分钟的精华讲个大概。而小白们恐怕对整个过程就一知半解了。</p>
<p>巧的是，对这个问题理解的越透彻，越对写爬虫有帮助。换句话说，爬虫是一个考验综合技能的领域。那么，同学们准备好迎接这个综合技能挑战了吗？</p>
<p>废话不多说，我们就从解答这个题目开始，认识浏览器和服务器，看看这中间有哪些知识是爬虫要用到的。</p>
<p>前面也说过，这个问题可以讲上三天三夜，但我们没那么多时间，其中一些细节就略过，把大致流程结合爬虫讲一讲，分成三部分：「强迫症或者想认真补的学员呢，可以点击此文章阅读」<a href="/column/crawler/replenish03.html"><strong>从输入 url 到页面展现发生了什么？</strong></a></p>
<ol>
<li>浏览器发出请求</li>
<li>服务器做出响应</li>
<li>浏览器接收响应</li>
</ol>
<h2 id="_2-浏览器发出请求" tabindex="-1"> 2. 浏览器发出请求</h2>
<p>在浏览器地址栏输入网址后回车，浏览器请服务器提出网页请求，也就是告诉服务器，我要看你的某个网页。</p>
<p>上面短短一句话，蕴藏了无数玄机啊，让我不得不费点口舌一一道来。主要讲述：</p>
<ul>
<li>网址是不是有效的？</li>
<li>服务器在哪里？</li>
<li>浏览器向服务器发送了些什么？</li>
<li>服务器返回了些什么？</li>
</ul>
<h3 id="_2-1-网址是不是有效的" tabindex="-1"> 2.1 网址是不是有效的？</h3>
<p>首先，浏览器要判断你输入的网址（URL）是否合法有效。对应 URL，同学们并不陌生吧，以 http(s) 开头的那一长串的字符，但是你知道它还可以以 <code>ftp</code> ,  <code>mailto</code> , <code>file</code> , <code>data</code> , <code>irc</code>  开头吗？下面是它最完整的语法格式：</p>
<div><pre><code>URI <span>=</span> scheme<span>:</span><span>[</span><span>//</span>authority<span>]</span>path<span>[</span>?query<span>]</span><span>[</span><span>#fragment]</span>
<span># 其中， authority 又是这样的：</span>
authority <span>=</span> <span>[</span>userinfo@<span>]</span>host<span>[</span><span>:</span>port<span>]</span>
<span># userinfo可以同时包含user name和password，以：分割</span>
userinfo <span>=</span> <span>[</span>user_name<span>:</span>password<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>用图更形象的表现处理就是这样的：</p>
<p><img src="@source/column/crawler/s2_03.assets/1596515593165-68405d99-7ae1-478e-b6d3-02c85ea276d2.png" alt="" loading="lazy"></p>
<p><strong>悦创经验：要判断 URL 的合法性</strong></p>
<p>Python 里面可以用 <code>urllib.parse</code> 来进行 URL 的各种操作</p>
<div><pre><code>In <span>[</span><span>1</span><span>]</span><span>:</span> <span>import</span> urllib<span>.</span>parse 

In <span>[</span><span>2</span><span>]</span><span>:</span> url <span>=</span> <span>'http://dachong:the_password@www.yuanrenxue.com/user/info?page=2'</span>

In <span>[</span><span>3</span><span>]</span><span>:</span> zz <span>=</span> urllib<span>.</span>parse<span>.</span>urlparse<span>(</span>url<span>)</span>
Out<span>[</span><span>4</span><span>]</span><span>:</span> ParseResult<span>(</span>scheme<span>=</span><span>'http'</span><span>,</span> netloc<span>=</span><span>'dachong:the_password@www.yuanrenxue.com'</span><span>,</span> path<span>=</span><span>'/user/info'</span><span>,</span> params<span>=</span><span>''</span><span>,</span> query<span>=</span><span>'page=2'</span><span>,</span> fragment<span>=</span><span>''</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>我们看到，urlparse 函数把 URL 分析成了 6 部分：</p>
<p><code>scheme://netloc/path;params?query#fragment</code></p>
<p>需要主要的是 netloc 并不等同于 URL 语法定义中的 host</p>
<h3 id="_2-2-服务器在哪里" tabindex="-1"> 2.2 服务器在哪里？</h3>
<p>上面 URL 定义中的 host，就是互联网上的一台服务器，它可以是一个 IP 地址，但通常是我们所说的域名。域名通过 DNS 绑定到一个（或多个）IP 地址上。</p>
<p>浏览器要访问某个域名的网站就要先通过 DNS 服务器解析域名，得到真实的 IP 地址。</p>
<p>这里的域名解析一般是由操作系统完成的，爬虫不需要关心。然而，当你写一个大型爬虫，像 Google、百度搜索引擎那样的爬虫的时候，效率变得很主要，爬虫就要维护自己的 DNS 缓存。</p>
<p><strong>悦创经验：大型爬虫要维护自己的 DNS 缓存</strong></p>
<h3 id="_2-3-浏览器向服务器发送些什么" tabindex="-1"> 2.3 浏览器向服务器发送些什么？</h3>
<p>浏览器获得了网站服务器的 IP 地址，就可以向服务器发送请求了。</p>
<p>这个请求就是遵循 http 协议的。写爬虫需要关心的就是 http 协议的 headers ，下面是访问 <a href="https://en.wikipedia.org/wiki/URL" target="_blank" rel="noopener noreferrer">en.wikipedia.org/wiki/URL</a> 时浏览器发送的请求 headers：</p>
<p><img src="@source/column/crawler/s2_03.assets/1596515593266-d9ddec5c-6c63-4e60-aad5-fd12e47410d1.png" alt="" loading="lazy"></p>
<p>同学们可能已经从图中看出来些端倪，发送的 http 请求头是类似一个字典的结构：</p>
<ul>
<li>authority: 就是访问的目标机器；</li>
<li>method: http请求的方法有很多：
<ul>
<li>GET</li>
<li>HEAD</li>
<li>POST</li>
<li>PUT</li>
<li>DELETE</li>
<li>CONNECT</li>
<li>OPTIONS</li>
<li>TRACE</li>
<li>PATCH</li>
<li>一般，爬虫使用最多的是 <strong>GET</strong> 和 <strong>POST</strong></li>
</ul>
</li>
<li>path: 访问的网站的路径</li>
<li>scheme: 请求的协议类型，这里是https</li>
<li>accept: 能够接受的回应内容类型（Content-Types）</li>
<li>accept-encoding: 能够接受的编码方式列表</li>
<li>accept-language: 能够接受的回应内容的自然语言列表</li>
<li>cache-control: 指定在这次的请求/响应链中的所有缓存机制 都必须 遵守的指令</li>
<li>cookie: 之前由服务器通过 Set- Cookie发送的一个 超文本传输协议 Cookie 这是爬虫很关心的一个东东，登录信息都在这里。</li>
<li>upgrade-insecuree-requests: 非标准请求字段，可忽略之。</li>
<li>user-agent: 浏览器身份标识</li>
</ul>
<p>这也是爬虫很关心的部分。比如，你需要得到手机版页面，就要设置浏览器身份标识为手机浏览器的user-agent。</p>
<p><strong>悦创经验: 通过设置 headers 跟服务器沟通</strong></p>
<h3 id="_2-4-服务器返回了些什么" tabindex="-1"> 2.4 服务器返回了些什么？</h3>
<p>如果我们在浏览器地址栏输入一个网页网址（不是文件下载地址），回车后，很快就看到了一个网页，里面包含排版文字、图片、视频等数据，是一个丰富内容格式的页面。然而，我通过浏览器查看源代码，看到的却是一对文本格式的html代码。</p>
<p>没错，就是一堆的代码，却让浏览器给渲染成了漂亮的网页。这对代码里面有：</p>
<ul>
<li>css： 浏览器根据它来排版，安排文字、图片等的位置；</li>
<li>JavaScript： 浏览器运行它可以让用户和网页交互；</li>
<li>图片等链接： 浏览器再去下载这些链接，最终渲染成网页。</li>
</ul>
<p>而我们想要爬取的信息就藏在html代码中，我们可以通过解析方法提取其中我们想要的内容。如果html代码里面没有我们想要的数据，但是在网页里面却看到了，那就是浏览器通过 ajax 请求异步加载（偷偷下载）了那部分数据。</p>
<p>这个时候，我们就要通过观察浏览器的加载过程来发现具体是哪个 ajax 请求加载了我们需要的数据。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>03-从输入 url 到页面展现发生了什么？</title>
      <link>https://bornforthis.cn/column/crawler/replenish03.html</link>
      <guid>https://bornforthis.cn/column/crawler/replenish03.html</guid>
      <source url="https://bornforthis.cn/rss.xml">03-从输入 url 到页面展现发生了什么？</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Fri, 17 Jul 2020 17:22:32 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<blockquote>
<p>从用户的角度出发，得益于各大浏览器厂商的不懈努力，这一切都显得已经很理所当然，输入一个地址，访问网络，显示一个绚丽多彩的界面，你可以可以在上面浏览视频，看文章，甚至玩游戏。 但是站在开发者的角度，这是一个纵观全局的大问题，每一个步骤都是一个可以延伸的话题。对于项目的优化都离不开这里的方方面面，是有深入理解的价值的。我们可以从一个总览出发，看看背后发生了什么。</p>
</blockquote>
<h2 id="_1-大致是如下步骤" tabindex="-1"> 1. 大致是如下步骤</h2>
<ol>
<li>根据地址栏输入的地址向 <a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener noreferrer">DNS（Domain Name System）</a> 查询IP</li>
<li>通过 IP 向服务器发起 TCP 连接</li>
<li>向服务器发起请求</li>
<li>服务器返回请求内容</li>
<li>浏览器开始解析渲染页面并显示</li>
<li>关闭连接</li>
</ol>
<p><img src="@source/column/crawler/replenish03.assets/20200717172147-165242050764310.png" alt="clipboard.png" loading="lazy"></p>
<hr>
<h2 id="_2-dns" tabindex="-1"> 2. DNS</h2>
<p>首先我们要知道什么是 DNS</p>
<blockquote>
<p>域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS 使用 TCP 和 UDP 端口 53。当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能超过 253 个字符。 --维基百科</p>
</blockquote>
<p>域名解析的过程是逐级查询的</p>
<ol>
<li><strong>浏览器缓存</strong>: 首先会向浏览器的缓存中读取上一次访问的记录，在 chrome 可以通过地址栏中输入 <code>chrome://net-internals/#dns</code> 查看缓存的当前状态</li>
<li><strong>操作系统缓存</strong>：查找存储在系统运行内存中的缓存。在mac中可以通过下面的命令清除系统中的DNS缓存。</li>
</ol>
<div><pre><code>dscacheutil <span>-</span>flushcache
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><ol>
<li>
<p><strong>在 host 文件中查找</strong>：如果在缓存中都查找不到的情况下，就会读取系统中预设的 host 文件中的设置。</p>
</li>
<li>
<p><strong>路由器缓存</strong>：有些路由器也有DNS缓存的功能，访问过的域名会存在路由器上。</p>
</li>
<li>
<p><strong>ISP DNS 缓存</strong>：互联网服务提供商（如中国电信）也会提供 DNS 服务，比如比较著名的 <code>114.114.114.114</code> ，在本地查找不到的情况下，就会向 ISP 进行查询，ISP 会在当前服务器的缓存内查找是否有记录，如果有，则返回这个IP，若没有，则会开始向根域名服务器请求查询。</p>
</li>
<li>
<p><strong>顶级 DNS 服务器/根 DNS 服务器</strong>：根域名收到请求后，会判别这个域名(<code>.com</code>)是授权给哪台服务器管理,并返回这个顶级 DNS 服务器的 IP。请求者收到这台顶级 DNS 的服务器IP后，会向该服务器发起查询，如果该服务器无法解析，该服务器就会返回下一级的DNS 服务器 IP（nicefilm.com），本机继续查找，直到服务器找到(www.nicefilm.com)的主机。</p>
</li>
</ol>
<p>我们可以通过 dig 命令查看域名解析的记录</p>
<div><pre><code>dig math.stackexchange.com
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>我们重点看返回的应答，会看到有四条记录，返回了该网址的四个 IP</p>
<div><pre><code>;; ANSWER SECTION:
math.stackexchange.com.    31    IN    A    151.101.1.69
math.stackexchange.com.    31    IN    A    151.101.129.69
math.stackexchange.com.    31    IN    A    151.101.193.69
math.stackexchange.com.    31    IN    A    151.101.65.69
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>31是 TTL 的值，表示该域名的缓存时间，即该时间内不用重新查询。A 是该 DNS 查询的记录类型，表示返回一个IPv4格式的地址。还有其他记录类型诸如 NS（返回查询的服务器地址）、AAAA（返回IPV6格式的地址）、CNAME（域名的别名）等。</p>
<hr>
<h2 id="_3-tcp-连接" tabindex="-1"> 3. TCP 连接</h2>
<p>拿到了要请求的资源服务器 IP 后，浏览器通过操作 OS 的 socket 与服务器进行 TCP 连接（一般来说操作系统已经封装好了 TCP/IP 等协议，提供套接字给应用去使用，该部分涉及到标准网络模型的知识，另外再开篇拓展。） 这个连接就是我们所熟知的<strong>三次握手</strong> 本机主动打开连接</p>
<ul>
<li>第一次，本机将标识位 SYN 置为 1, <code>seq = x(Sequence number)</code> 发送给服务端。此时本机状态为 <strong>SYN-SENT</strong></li>
<li>第二次，服务器收到包之后，将状态切换为<strong>SYN-RECEIVED</strong>，并将标识位 SYN 和 ACK都置为1, <code>seq = y</code> , <code>ack = x + 1</code> , 并发送给客户端。</li>
<li>第三次，客户端收到包后，将状态切换为 <strong>ESTABLISHED</strong>，并将标识位 ACK 置为 1，<code>seq = x + 1</code> , <code>ack = y + 1</code> , 并发送给服务端。服务端收到包之后，也将状态切换为 <strong>ESTABLISHED</strong>。</li>
</ul>
<p><strong>需要注意的一点是，有一些文章对ACK标识位 和 ack（Acknowledgement Number）的解释比较模糊，有一些画图的时候干脆就写在一起了。虽然这两者有关联，但不是同一个东西，搞清楚这个误区可以更方便去理解。还有一些会把第二次握手描述成两个包（比如某百科……），实际上这也是不正确的</strong></p>
<ul>
<li>标识位 ACK 置为 1 表示我已确认收到 seq 为 x 的包，并回复确认序号 <code>ack = x + 1</code></li>
<li>而 SYN 表示这是我第一次随机生成 seq 的序列 x，此后我每次发送的包都会在上一次发送的基础上增加 y（有数据的时候，y 是数据的长度，没有的时候 y = 1）。<strong>所以，当seq已初始化完成之后，没必要再把 SYN 置为1</strong></li>
</ul>
<p>理解了这两点，也就不难理解为什么三次握手分别是 SYN、ACK/SYN、ACK了。</p>
<h3 id="_3-1-标识位-tcp-flag" tabindex="-1"> 3.1 标识位（TCP FLAG）</h3>
<p>TCP 的头部固定有 20 个字节，其中分配了 6bits 给 TCP FLAG ，组合起来用来表示当前包的类型。分别是 URGACKPSHRSTSYNFIN（ CWRECE 放在保留位，暂不考虑）</p>
<ul>
<li><strong>URG</strong>：紧急指针，用于将要发送的包标识为“紧急”，这意味着不必等待前段数据被响应处理完即可发送给接收端。</li>
<li><strong>ACK</strong>：确认标识，用于表示对数据包的成功接收。</li>
<li><strong>PSH</strong>：推送标识，表示这个数据包应该被立即发送，不需要等待额外的数据。</li>
<li><strong>RST</strong>：reset 标识，用来异常关闭连接。</li>
<li><strong>SYN</strong>：同步标识，表示TCP连接已初始化。</li>
<li><strong>FIN</strong>：完成标识，用于拆除上一个SYN标识。一个完整的TCP连接过程一定会有SYN 和 FIN包。</li>
</ul>
<p>至此我们了解了一个TCP 连接的过程，通道通了，是时候利用这个通道送东西了。 我们从传输层再回到应用层。</p>
<hr>
<h2 id="_4-http请求与响应" tabindex="-1"> 4. HTTP请求与响应</h2>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener noreferrer">超文本传输协议</a>（英文：HyperText Transfer Protocol，缩写：HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议[1]。HTTP是万维网的数据通信的基础。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识。 --wiki</p>
</blockquote>
<p>我们用 https://www.segmentfault.com 举例子。 在应用层，浏览器会分析这个 url，并设置好请求报文发出。请求报文中包括请求行、请求头、空行、请求主体。https 默认请求端口443， http 默认80。</p>
<ul>
<li><strong>请求行</strong>：请求行中包括请求的方法，路径和协议版本。</li>
<li><strong>请求头</strong>：请求头中包含了请求的一些附加的信息，一般是以键值的形式成对存在，比如设置请求文件的类型accept-type，以及服务器对缓存的设置。</li>
<li><strong>空行</strong>：协议中规定请求头和请求主体间必须用一个空行隔开</li>
<li><strong>请求主体</strong>：对于post请求，所需要的参数都不会放在 url 中，这时候就需要一个载体了，这个载体就是请求主题。</li>
</ul>
<p>服务端收到请求之后，会根据url匹配到的路径做相应的处理，最后返回浏览器需要的页面资源。浏览器会收到一个响应报文，而所需要的资源就就在报文主体上。与请求报文相同，响应报文也有与之对应的起始行、首部、空行、报文主体，不同的地方在于包含的东西不一样。</p>
<ul>
<li><strong>响应行</strong>：响应报文的起始行同样包含了协议版本，与请求的起始行不同的是其包含的还有状态码和状态码的原因短语。</li>
<li><strong>响应头</strong>：对应请求报文中的请求头，格式一致，但是各自有不同的首部。也有一起用的通用首部。</li>
<li><strong>空行</strong></li>
<li><strong>报文主体</strong>：请求所需要的资源。</li>
</ul>
<h3 id="_4-1-http缓存" tabindex="-1"> 4.1 http缓存</h3>
<p>请求是浏览器的一个优化点，我们可以通过缓存来减少不必要的请求，进而加快页面的呈现。通过简单地设置http头部可以使用缓存的功能。一般来说有三种设置的方式</p>
<h3 id="_4-2-last-modify-响应头-if-modified-since-请求头" tabindex="-1"> 4.2 Last-Modify(响应头) + If-Modified-Since（请求头）</h3>
<p>服务器在返回资源的时候设置Last-Modify当前资源最后一次修改的时间，浏览器会把这个时间保存下来，在下次请求的时候，请求头部If-Modified-Since 会包含这个时间，服务端收到请求后，会比对资源最后更新的时间是否在 If-Modified-Since 设置的时间之后，<strong>如果不是，返回304状态码，浏览器将从缓存中获取资源。反之返回200和资源内容</strong>。</p>
<h3 id="_4-3-etag-响应头-if-none-match-请求头" tabindex="-1"> 4.3 ETag（响应头） + If-None-Match（请求头）</h3>
<p>根据资源标识符来确定文件是否存在修改，服务器每一次返回资源，都会在 Etag 中存放资源的标识符，浏览器收到这个标识符，在下一次请求的时候将标识符放在 If-None-Match 中，服务端将判断是否匹配，<strong>如果不匹配，返回200以及新的资源，反之返回304，浏览器从缓存中获取资源</strong></p>
<h3 id="_4-4-cache-control-expires-响应头" tabindex="-1"> 4.4 Cache-Control/Expires(响应头)</h3>
<p>首先这不是一种方法，而是协议更替中的一种演化。 在 http 1.0 的时代，我们基于 Pragma 和 Expires 控制缓存的生命周期。我们可以通过设置 Pragma 为 no-cache 关闭缓存功能，同样也可以在Expires中设置一个缓存失效的时间。需要注意的是，这个失效的时间是相对于服务器的实践而言的，如果人为地改变了客户端的时间，是会导致缓存失效的。 所以，为了解决这个问题，HTTP1.1的协议加入了Cache-Control，通过设置 Cache-Control 的 max-age 可以控制缓存的周期。在这个周期内，资源是新鲜的，浏览器再一次需要使用资源的时候，就不会发出请求了。</p>
<hr>
<h2 id="_5-页面呈现" tabindex="-1"> 5. 页面呈现</h2>
<p>至此浏览器已经拿到了一个 HTML 文档，并为了呈现文档而开始解析。呈现引擎开始工作，基本流程如下（以webkit为例）</p>
<ul>
<li>通过 HTML 解析器解析HTML文档，构建一个 DOM Tree，同时通过 CSS 解析器解析 HTML 中存在的 CSS，构建 Style Rules ，两者结合形成一个Attachment。</li>
<li>通过 Attachment 构造出一个呈现树（Render Tree）</li>
<li>Render Tree 构建完毕，进入到布局阶段（layout/reflow），将会为每个阶段分配一个应出现在屏幕上的确切坐标。</li>
<li>最后将全部的节点遍历绘制出来后，一个页面就展现出来了。</li>
</ul>
<p>从构建 DOM 树到呈现的过程如下 需要注意的是，这是一个渐进的过程，呈现引擎为了力求显示的及时，会在文档请求不完全的情况下就开始渲染页面，同时，如果在解析的过程中遇到script的时候，文档的解析将会停止下来，立即解析执行脚本，如果脚本是外部的，则会等待请求完成并解析执行。所以，为了不阻塞页面地呈现，一般会把 script 脚本放在文档的最后。 在最新的 HTML4 和 HTML5 规范中，也可以将脚本标注为 defer，这样就不会停止文档解析，而是等到解析结束后才执行。HTML5 增加了一个选项，可将脚本标记为 async，以便由其他线程解析和执行。</p>
<hr>
<h2 id="_6-连接关闭" tabindex="-1"> 6. 连接关闭</h2>
<p>现在的页面为了优化请求的耗时，默认都会开启持久连接（keep-alive），那么一个TCP连接确切关闭的时机，是这个tab标签页关闭的时候。这个关闭的过程就是著名的四次挥手。关闭是一个全双工的过程，发包的顺序的不一定的。一般来说是客户端主动发起的关闭，过程如下。 假如最后一次客户端发出的数据 <code>seq = x</code> , <code>ack = y</code> ;</p>
<ol>
<li>客户端发送一个FIN置为1的包，<code>ack = y</code> ， <code>seq = x + 1</code> ，此时客户端的状态为 <strong>FIN_WAIT_1</strong></li>
<li>服务端收到包后，状态切换为 <strong>CLOSE_WAIT</strong> 发送一个ACK为1的包， <code>ack = x + 2</code>。客户端收到包之后状态切换为<strong>FNI_WAIT_2</strong></li>
<li>服务端处理完任务后，向客户端发送一个 <code>FIN</code> 包，<code>seq = y</code> ; 同时将自己的状态置为 <strong>LAST_ACK</strong></li>
<li>客户端收到包后状态切换为 <strong>TIME_WAIT</strong>，并向服务端发送 ACK 包，<code>ack = y + 1</code> ，等待 2MSL 后关闭连接。</li>
</ol>
<h3 id="_6-1-为什么客户端等待2msl" tabindex="-1"> 6.1 为什么客户端等待2MSL？</h3>
<p>MSL: 全程 Maximum Segment Lifetime，中文可以翻译为报文最大生存时间。 等待是为了保证连接的可靠性，确保服务端收到ACK包，如果服务端没有收到这个ACK包，将会重发FIN包给客户端，而这个时间刚好是服务端等待超时重发的时间 + FIN的传输时间。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>01-Referer 案例</title>
      <link>https://bornforthis.cn/column/crawler/replenish01.html</link>
      <guid>https://bornforthis.cn/column/crawler/replenish01.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-Referer 案例</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Fri, 07 Aug 2020 12:02:30 GMT</pubDate>
      <content:encoded><![CDATA[<p>网站：<a href="https://cloud.tencent.com/developer/article/1875661" target="_blank" rel="noopener noreferrer">https://cloud.tencent.com/developer/article/1875661</a>
图片链接：<a href="https://ask.qcloudimg.com/http-save/7111610/50febd19e08f024d8ddd6509ce54edfa.png?imageView2/2/w/1620" target="_blank" rel="noopener noreferrer">https://ask.qcloudimg.com/http-save/7111610/50febd19e08f024d8ddd6509ce54edfa.png?imageView2/2/w/1620</a></p>
<p>直接访问：</p>
<p><img src="@source/column/crawler/s2_0201.assets/1631254472457-4f32ec1e-8e11-45eb-93f9-2c5e39f4eb02.gif" alt="1.gif" loading="lazy"></p>
<p><img src="@source/column/crawler/s2_0201.assets/1631254783984-f7761f77-c990-4be3-9f63-c835eccc46c3.gif" alt="2.gif" loading="lazy"></p>
<p>不加 headers：</p>
<div><pre><code><span>import</span> requests

url <span>=</span> <span>"https://ask.qcloudimg.com/http-save/7111610/50febd19e08f024d8ddd6509ce54edfa.png?imageView2/2/w/1620"</span>

html <span>=</span> requests<span>.</span>get<span>(</span>url<span>)</span><span>.</span>content
<span>with</span> <span>open</span><span>(</span><span>"image.png"</span><span>,</span> mode<span>=</span><span>"wb"</span><span>)</span> <span>as</span> f<span>:</span>
    f<span>.</span>write<span>(</span>html<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p><img src="@source/column/crawler/s2_0201.assets/1631255449109-7ef6cbfd-4f13-4c38-a38f-ef59d9f4a65b.png" alt="image.png" loading="lazy"></p>
<p>加上 headers：</p>
<div><pre><code><span>import</span> requests

url <span>=</span> <span>"https://ask.qcloudimg.com/http-save/7111610/50febd19e08f024d8ddd6509ce54edfa.png?imageView2/2/w/1620"</span>

headers <span>=</span> <span>{</span>
    <span>"User-Agent"</span><span>:</span> <span>"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36"</span><span>,</span>
    <span>"Referer"</span><span>:</span> <span>"https://cloud.tencent.com/"</span><span>,</span>
<span>}</span>
html <span>=</span> requests<span>.</span>get<span>(</span>url<span>,</span> headers<span>=</span>headers<span>)</span><span>.</span>content
<span>with</span> <span>open</span><span>(</span><span>"image.png"</span><span>,</span> mode<span>=</span><span>"wb"</span><span>)</span> <span>as</span> f<span>:</span>
    f<span>.</span>write<span>(</span>html<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p><img src="@source/column/crawler/s2_0201.assets/1631255506705-2da7842d-7a72-4267-a82b-31b3583c1000.png" alt="image.png" loading="lazy"></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>02-还没用异步，爬取就速度太快？更智能的延迟插件</title>
      <link>https://bornforthis.cn/column/crawler/replenish02.html</link>
      <guid>https://bornforthis.cn/column/crawler/replenish02.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-还没用异步，爬取就速度太快？更智能的延迟插件</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Sat, 08 Aug 2020 12:02:30 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="_1-前言" tabindex="-1"> 1. 前言</h2>
<blockquote>
<p>要想“看见”，就得从蒙昧中睁开眼来。这才是最困难的地方，因为蒙昧就是我自身，想石头一样成了心里的坝。</p>
</blockquote>
<p>你好，我是悦创。 最近好久没更新公众号了，一直在啃代理池也快啃完一些了，然后发现公众号终于邀请小悦开通付费阅读体验，为此，就先来分享一下延迟插件的实现。</p>
<p>其实，很忐忑。因为，别人付费之后发现不值这个钱亏了，就会流失好不容易攒起来的关注率。所以付费得保证绝对原创与精品。 上一篇，我带你手摸手入门了 App 爬虫，可是问题来了，或许你没有想到，但这个问题确实存在，也就是爬虫速度要是过快该怎么办？心理嘀咕：我还没用异步呢，就速度太快封 IP ，心理不是滋味。代理使用的话也还不至于，那有没有什么好的方法呢？肯定是有的！ <strong>群友也遇到了类似的问题：</strong></p>
<details><summary>聊天记录图片</summary>
<p><img src="@source/column/crawler/replenish02.assets/20200531115153-16524187103587.jpg" alt="" loading="lazy"></p>
<p><img src="@source/column/crawler/replenish02.assets/20200531115706-16524187773518.jpg" alt="" loading="lazy"></p>
</details>
<blockquote>
<p><strong>题外话：</strong> 不要报名很多机构课程水课太多，老师基本上就是水时间的，水也没事，重点老师自己啥也不懂！希望小白不要轻易入坑，要入门资源可以关注公众号：AI悦创，加小编好友。</p>
</blockquote>
<p>你们细品，细细品，我不希望你们被割韭菜还不自知，这不是简单的会与不会的问题...... 一般没有实际工作经验的，只会使用 <code>time.sleep()</code>  对于小白入门来说，能想到用这个方法是值得表扬的。而当小白问老师的时候，老师回答：<code>time.sleep()</code>  ，那这个回答太不负责任也是没有任何经验就来当老师了。</p>
<h2 id="_2-你能得到什么" tabindex="-1"> 2. 你能得到什么？</h2>
<p><strong>本文已经实现：</strong></p>
<ol>
<li>代码封装；</li>
<li>直接使用即可；</li>
<li>讲解原理；</li>
<li>面试官问：爬虫速度过快，你如何解决？（看完你就可以回答啦）；</li>
<li>一般插件的功能是很专一的，当个文件只实现一个功能；</li>
</ol>
<p><strong>未实现：</strong></p>
<ol>
<li>并未实现进一步优化；</li>
<li>因为本人数学能力有限，数学大佬如果有更好的解决策略可以点击阅读原文留下你的方法；</li>
</ol>
<h2 id="_3-实现" tabindex="-1"> 3. 实现</h2>
<h3 id="_3-1-原理讲解" tabindex="-1"> 3.1 原理讲解</h3>
<p>爬虫速度过快，被封 IP 这是非常常见的，那这个被封的逻辑，你们是否有具体捋过呢？我来给大家简单的捋一捋，一个网站把你的 IP 封禁（BAN），无非就以下几点：</p>
<ol>
<li>在一个时间段中请求的次数过多被封禁；</li>
<li>同一个 IP 访问同一个主站的请求间隔过短或者说太过于相同从而被封禁；</li>
</ol>
<p>所谓，赚钱的方法都写在宪法里面了，那解决的方法都写着问题里面了。 <strong>解决方法也很简单：</strong></p>
<ol>
<li>避免对使用同一个 IP 请求也就是换 IP 但是我们本文不是讲这个的；</li>
<li>避免对过快的请求同一个主站；</li>
<li>让每个 get 请求的间隔有所不同；</li>
</ol>
<p>最简单的方法，也就上面开头所说的：直接使用 <strong>time.sleep()</strong> 不过，聪明人都知道有时候不一定是需要睡眠相同时间的，这样显然是太浪费时间和资源了。</p>
<h3 id="_3-2-导库" tabindex="-1"> 3.2 导库</h3>
<p>这里我们讲主要使用 Python 当中的 time 模块，但实现的方法不一样，不会是简单的使用 <strong>time.sleep()</strong> 而是会利用这个 <strong>time.sleep()</strong> 来实现更加智能的延迟插件。 需要导入以下库，以下库皆不用安装都是 Python 内置库：</p>
<div><pre><code><span>from</span> urllib <span>import</span> parse
<span>from</span> datetime <span>import</span> datetime 
<span>import</span> time<span>,</span>requests
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><ul>
<li><code>from urllib import parse</code> ：解析 URL</li>
<li><code>from datetime import datetime</code> ：获取时间（标注时间）时间加减</li>
<li><code>import time,requests</code> ：time 实现睡眠 requests 爬虫库</li>
</ul>
<h3 id="_3-3-主体代码实现" tabindex="-1"> 3.3 主体代码实现</h3>
<h4 id="_1-delaywait" tabindex="-1"> 1. DelayWait</h4>
<p>这里因为我们需要自己 DIY 一个插件，所以需要创建一个类 <code>DelayWait</code> ，来使用。也方便之后的调用，不必重复编写。 我们并为这个类进行初始化，初始化如下：</p>
<div><pre><code><span>class</span> <span>DelayWait</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> delay <span>=</span> <span>3</span><span>)</span><span>:</span>
        self<span>.</span>delay <span>=</span> delay
        self<span>.</span>urls <span>=</span> <span>dict</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p><strong>上面代码看不懂？别急，我来解释！</strong> 这个其实从上面就可以看见，我们设置了延迟的时间的变量 <code>self.delay = delay</code> ， 创建了一个 <code>self.urls = dict()</code> 来存储各种 url。</p>
<ul>
<li>内置函数初始化： __init__</li>
<li>一般来说，在我们实行这个类的的时候，就会自动执行这个类的初始化函数（它是第一个执行的）</li>
<li>初始化参数（初始化属性，属性：对象的某个静态特征）</li>
<li><code>delay = 3</code> , 每次延迟 3 秒；</li>
<li><code>self.urls = dict()</code> ，存储各种 URL</li>
</ul>
<h4 id="_2-wait" tabindex="-1"> 2. wait</h4>
<p>接下来我们来编写个等待函数 <code>wait</code> ，和上面一样，还是先来看看代码然后进行解析：</p>
<div><pre><code>    <span>def</span> <span>wait</span><span>(</span>self<span>,</span> url<span>)</span><span>:</span>
        netloc <span>=</span> parse<span>.</span>urlparse<span>(</span>url<span>)</span><span>.</span>netloc
        lastOne <span>=</span> self<span>.</span>urls<span>.</span>get<span>(</span>netloc<span>)</span>
        <span>if</span> lastOne <span>and</span> self<span>.</span>delay<span>></span><span>0</span><span>:</span>
            timeWait <span>=</span> self<span>.</span>delay <span>-</span> <span>(</span>datetime<span>.</span>now<span>(</span><span>)</span><span>-</span>lastOne<span>)</span><span>.</span>seconds
            <span>if</span> timeWait<span>></span><span>0</span><span>:</span>
                time<span>.</span>sleep<span>(</span>timeWait<span>)</span>
        self<span>.</span>urls<span>[</span>netloc<span>]</span> <span>=</span> datetime<span>.</span>now<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>我也来一行一行解析，带你读懂它：</p>
<ol>
<li><code>netloc = parse.urlparse(url).netloc</code></li>
</ol>
<ul>
<li>函数：对象的某个动态能力</li>
<li>解析我们的 URL，来对比每次访问的主站，是否是同一个主站，同一个就是使用该延迟插件，不是就不用啦！因为，我们封 IP 其实就是，快速重复访问同一个网站,才有可能被封；</li>
</ul>
<ol start="2">
<li><code>lastOne = self.urls.get(netloc)</code></li>
</ol>
<ul>
<li>我们上一步请求的网址是什么，看有没有这个主站；</li>
<li>这里的 <code>get('', null)</code> 是字典的一个方法，使用 get 来查询字典中的数据，如果这个数据存在，则返回改键对应的值。</li>
<li>不存在则返回：预先设定的内容：null；</li>
</ul>
<ol start="3">
<li><code>if lastOne and self.delay&gt;0:</code></li>
</ol>
<ul>
<li>如果，我们上一次请求过的话，就执行这个语句</li>
</ul>
<ol start="4">
<li><code>timeWait = self.delay - (datetime.now()-lastOne).seconds</code></li>
</ol>
<ul>
<li>本次访问和上一次访问的时间差；</li>
<li>seconds 转换为秒；</li>
<li>解析:
<ul>
<li>如果两次请求的时间差 <code>(datetime.now()-lastOne)</code> 非常小,表明,两次请求的时间间隔,非常小；</li>
<li>所以,以每次请求 delay 所设定的时间为标准.如果得出来的差为 3s (举例)那就不执行延迟；</li>
<li>如果差小于 3s 则执行与 3s 相差的时间的差.</li>
</ul>
</li>
</ul>
<ol start="5">
<li><code>self.urls[netloc] = datetime.now()</code></li>
</ol>
<ul>
<li>为字典 urls 添加：键对值：主站:对应添加的时间</li>
</ul>
<h2 id="_4-完整代码" tabindex="-1"> 4. 完整代码</h2>
<p>上面其实就已经实现了完成了，使用直接调用即可，今天也刚刚好可以开通付费阅读，就试一试。 <strong>有兴趣可以支持一下小编，不付费也不影响实现这个插件，上面已经是完整的代码操作，下面的是合在一起的代码。</strong> 以及简单的使用演示。</p>
<div><pre><code><span># -*- coding: utf-8 -*-</span>
<span># @Author     ：AI悦创</span>
<span># @DateTime   ：2019/9/14  15:42 </span>
<span># @FileName   ：延迟插件解析与使用.PY</span>
<span># @Function   ：功能</span>
<span># Development_tool   ：PyCharm</span>
<span># &lt;-------import data--------------></span>
<span>from</span> urllib <span>import</span> parse <span># 解析 URL</span>
<span>from</span> datetime <span>import</span> datetime  <span># 获取时间（标注时间）时间加减</span>
<span>import</span> time<span>,</span>requests <span># time 实现睡眠 # requests  爬虫库</span>

<span># 一般插件的功能是很专一的，当个文件只实现一个功能</span>
<span>class</span> <span>DelayWait</span><span>:</span>
    <span># 内置函数初始化： __init__</span>
    <span># 一般来说，在我们实行这个类的的时候，就会自动执行这个类的初始化函数（它是第一个执行的）</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> delay <span>=</span> <span>3</span><span>)</span><span>:</span>
        <span># 初始化参数（初始化属性，属性：对象的某个静态特征）</span>
        <span># delay = 3 ,每次延迟 3 秒；</span>
        self<span>.</span>delay <span>=</span> delay <span># 延迟时间</span>
        self<span>.</span>urls <span>=</span> <span>dict</span><span>(</span><span>)</span> <span># 存储各种 URL</span>

    <span># 函数：对象的某个动态能力</span>
    <span>def</span> <span>wait</span><span>(</span>self<span>,</span> url<span>)</span><span>:</span>
        <span># 解析我们的 URL，来对比每次访问的主站，是否是同一个主站，同一个就是使用该延迟插件，不是就不用啦！</span>
        <span># 因为，我们封 IP 其实就是，快速重复访问同一个网站,才有可能被封</span>
        netloc <span>=</span> parse<span>.</span>urlparse<span>(</span>url<span>)</span><span>.</span>netloc

        <span># 我们上一步请求的网址是什么，看有没有这个主站。</span>
        <span># 这里的 get('', null) 是字典的一个方法，使用get来查询字典中的数据，如果这个数据存在，则返回改键对应的值。</span>
        <span># 不存在则返回：预先设定的内容：null</span>
        lastOne <span>=</span> self<span>.</span>urls<span>.</span>get<span>(</span>netloc<span>)</span>

        <span># 如果，我们上一次请求过的话，就执行这个语句</span>
        <span>if</span> lastOne <span>and</span> self<span>.</span>delay<span>></span><span>0</span><span>:</span>
            <span># 本次访问和上一次访问的时间差.</span>
            timeWait <span>=</span> self<span>.</span>delay <span>-</span> <span>(</span>datetime<span>.</span>now<span>(</span><span>)</span><span>-</span>lastOne<span>)</span><span>.</span>seconds
            <span># seconds 转换为秒</span>
            <span># 解析:</span>
            <span>#   如果两次请求的时间差(datetime.now()-lastOne)非常小,表明,两次请求的时间间隔,非常小.</span>
            <span>#   所以,以每次请求 delay 所设定的时间为标准.如果得出来的差为 3s(举例)那就不执行延迟,</span>
            <span>#   如果差小于 3s 则执行与 3s 相差的时间的差.</span>
            <span>if</span> timeWait<span>></span><span>0</span><span>:</span>
                time<span>.</span>sleep<span>(</span>timeWait<span>)</span>

        <span># 为字典 urls 添加：键对值：主站:对应添加的时间</span>
        self<span>.</span>urls<span>[</span>netloc<span>]</span> <span>=</span> datetime<span>.</span>now<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br></div></div><p>每行代码的含义都已经写在上面了，可以自行修改优化，那如何使用呢？ <strong>使用方法，也很简单：</strong></p>
<div><pre><code>urls <span>=</span> <span>[</span><span>'http://www.baidu.com'</span><span>]</span><span>*</span><span>10</span>
d <span>=</span> DelayWait<span>(</span><span>)</span>
<span>for</span> url <span>in</span> urls<span>:</span>
    html <span>=</span> requests<span>.</span>get<span>(</span>url<span>)</span>
    d<span>.</span>wait<span>(</span>url<span>)</span>
    <span>print</span><span>(</span>html<span>.</span>status_code<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>可以自行导入到其他的爬虫代码中来实现。或者不会导入也可以直接写在同一个代码文件中，因为本公众号不支持留言，如果你有问题可以点击阅读原文进行留言。还可以加小编好友，拉你入群。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>01-课前预习1：理解网络爬虫</title>
      <link>https://bornforthis.cn/column/crawler/s2_01.html</link>
      <guid>https://bornforthis.cn/column/crawler/s2_01.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-课前预习1：理解网络爬虫</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Wed, 05 Aug 2020 12:02:30 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="_1-1-网络爬虫的定义" tabindex="-1"> 1.1 网络爬虫的定义</h2>
<p>当今最大的网络是互联网，最大的爬虫就是各类搜索引擎，包括谷歌丶百度等。网络爬虫就是按照一定规则去爬去人类所需要的信息的程序，主要通过对 URL 的请求来实现。一般来说，从搜索引擎这类爬虫搜索到的信息是非常宽泛的，而且夹杂着各种广告，信息是不纯粹的，也有可能不是我们需要的。这种时候，就需要一些聚焦于某一方面信息的爬虫来为我们服务，比方说，专门爬取某一类书的信息，在网站上浏览的时候，可能会有形形色色的图片和一些其他信息干扰我们，如果编写网络爬虫的话，就可以单单把自己想要的信息存储下来，以便数据分析，提取有用的信息。</p>
<h2 id="_1-2-网络爬虫的类型" tabindex="-1"> 1.2 网络爬虫的类型</h2>
<p>现在的网络爬虫大体可以分为四类：全网爬虫，主题爬虫，增量式爬虫和深层爬虫。</p>
<p>全网爬虫：也就是谷歌百度等搜索引擎，这类爬虫会从一些非常基础的URl出发，一直延伸到整个网站，这类爬虫庞大臃肿，需要很大的存储空间以及极高的爬行速度。</p>
<p>主题爬虫：满足特定人的特定需求，不同于全网爬虫，它是有选择地爬行与需求相关的信息。</p>
<p>增量式爬虫：对已经下载的页面采取增量式更新的爬虫，只爬取新产生的或者发生变化的网页，一定程度上可以保证爬取得页面是最新的，减少了空间的浪费，但是复杂度较高。</p>
<p>深层网络爬虫：不能通过静态 URL 访问，隐藏在表单后，只有用户提交一些关键词才能得到的页面。</p>
<h2 id="_1-3-网络爬虫的原理" tabindex="-1"> 1.3 网络爬虫的原理</h2>
<p><img src="@source/column/crawler/s2_01.assets/1596514058635-e2da370b-e4e0-4f38-a522-c08e471f16f4.png" alt="" loading="lazy"></p>
<p>如果正确返回了网页 response，就构成了了一次爬虫行为，接下来我们要做的就是解析页面，获取我们需要的信息了。</p>
<p>一般流程如图所示：</p>
<p><img src="@source/column/crawler/s2_01.assets/1596514058626-0ce8cc04-4533-4ffb-b390-2777edd9c428.png" alt="" loading="lazy"></p>
<p>1）从基础URL开始爬行</p>
<p>2）从初始页面抓取到我们需要的 URL</p>
<p>3）对新的URL继续解析，再次抓取新的 URL</p>
<h2 id="_1-4-网络爬虫的搜索策略" tabindex="-1"> 1.4 网络爬虫的搜索策略</h2>
<p>网络爬虫过的搜搜策略一般分为三种</p>
<p>1）深度优先</p>
<p>深度优先指的是当某个页面的 URL 被选择后，对被选择的 URL 进行深度优先搜索，搜索后得到新的页面，再从新的页面继续选择  URL，循环往复，直到新的请求页面没有URL为止。</p>
<p>2）广度优先</p>
<p>广度优先指的是爬取完一个页面的全部 URL 之后，再选择一个 URL 进行深入，当把新的URL请求的页面的 URL 全部爬取完毕，再继续深入。</p>
<p>3）聚焦爬虫</p>
<p>聚焦爬虫会通过给下载好的页面打分的形式，根据得分把页面插入队列中，这样就有可能优先追踪那些最有价值的页面。</p>
<h2 id="_1-5常见反爬虫技术与解决方案" tabindex="-1"> 1.5常见反爬虫技术与解决方案</h2>
<p>1）用户请求headers</p>
<p>从用户请求过来的 request headers 中查看是否存在 <code>User-Agent</code> ，如果不存在会在中间件中将请求过滤，不会返回正常 response。还有一些网站会通过请求头里边的 Referer 进行检测，一些资源网站的防止盗链技术就是通过这个来实现。对于这种反爬虫机制，我们只需要在 headers 中添加 <code>user-agent</code> 与 referer 就可以解决。</p>
<p>2）用户访问频率</p>
<p>有些网站通过用户请求网站的频率来判断请求者是用户还是爬虫，比如豆瓣会对访问频率过高的爬虫进行封禁，这就需要我们控制请求网站的速度，或者是建立IP代理池来解决。</p>
<p>3）字体反爬虫</p>
<p>实习僧等网站会把常用字和数字自己建立一套关系映射，通过前端渲染，得不到字体映射关系只会看到乱码。</p>
<p>4）网站目录数据加载</p>
<p>上述反爬虫技术是在静态网站，还有一些网站会通过 Ajax 交互，遇到这种情况，需要我们找到Ajax访问接口，分析具体的参数和结构，在爬虫中模拟 Ajax，就可以获得所需数据。</p>
<p>5）通过数据加密</p>
<p>有些网站会通过 JavaScripts 对一些参数加密，这些加密代码可以在 js 文件中找到，分析代码需要掌握前端技术，但是耗费时间较多，难度大。另一种解决方案是通过 selenium，调用浏览器模拟人类行为，slelenium 可以完美触发网页的 js，基本上解决这类问题，不过爬取速度较慢。一般只有在迫不得已的时候才会使用。</p>
<p>6）基于验证码识别</p>
<p>早期的验证码主要是数字验证码，可以调用第三方平台或者 OCR 识别技术解决。不过现在出现了图片验证码，目前仍然需要人类去操作；滑块验证码的破解已经有了成熟的技术，就是利用 PIL 模块与 selenium 来实现，比如 B 站登陆时候的滑块验证码。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>02-什么是网络爬虫</title>
      <link>https://bornforthis.cn/column/crawler/s2_02.html</link>
      <guid>https://bornforthis.cn/column/crawler/s2_02.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-什么是网络爬虫</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Thu, 06 Aug 2020 12:02:30 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>互联网诞生之初，是为了让人们更容易的分享数据、交流通讯。互联网是桥梁，连接了世界各地的人们。网站的点击、浏览都是人为的，与你聊天的也是活生生的人。</p>
<p>然而，随着技术的发展，人们对数据的渴望，出现了各种网络机器人，这个时候，你不知道屏幕那端跟你聊天的是一个人还是一条狗，你也不知道你网站的浏览量是人点击出来的，还是机器爬出来的。</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444493-d5cc3586-8811-4d98-8fee-cba5044aeb1e.png" alt="" loading="lazy"></p>
<hr>
<p>表面上看，互联网上是各种各样的人；暗地里，已经布满了形形色色的网络爬虫。</p>
<p>在讲什么是爬虫之前呢，我来讲讲爬虫的职位问题，这也是很多同学报名我的爬虫私教课的初心之一。</p>
<h2 id="_1-大数据时代的爬虫岗位" tabindex="-1"> 1. 大数据时代的爬虫岗位</h2>
<p><img src="@source/column/crawler/s2_02.assets/1596515444616-5c225efe-0cce-43a7-903d-672629aee031.png" alt="" loading="lazy"></p>
<p>上面的图片数据，就是为了提高大家对于学习网络爬虫兴趣。可见，爬虫工程师的工资不低鸭！</p>
<h2 id="_2-网络爬虫概况" tabindex="-1"> 2. 网络爬虫概况</h2>
<blockquote>
<p>当今最大的网络是互联网，最大的爬虫就是各类搜索引擎，包括谷歌、百度等。网络爬虫就是按照一定规则去爬取人类所需要的信息的程序，主要通过对 URL 的请求来实现。
一般来说，从搜索引擎这类爬虫搜索到的信息是非常宽泛的，而且夹杂着各种广告，信息是不纯粹的，也有可能不是我们需要的。
这种时候，就需要一些聚焦于某一方面信息的爬虫来为我们服务，比方说，专门爬取某一类书的信息，在网站上浏览的时候，可能会有形形色色的图片和一些其他信息干扰我们，如果编写网络爬虫的话，就可以单单把自己想要的信息存储下来，以便数据分析，提取有用的信息。</p>
</blockquote>
<p><img src="@source/column/crawler/s2_02.assets/1596515444479-2aa8f9ab-e5f9-4dc9-a2d7-760843ac458c.png" alt="" loading="lazy"></p>
<p>像我们平时用的，谷歌浏览器、火狐浏览器、IE浏览器等，这些浏览器不是搜索引擎哦，主要的作用是：<strong>渲染我们的这些网页。</strong></p>
<p>其实，这个浏览器和我们平时写的小爬虫最大的区别就是：我们平时的小爬虫抓取的网页源代码的不渲染的，直接把网页的源代码 <strong>HTML</strong> 展现出来，而浏览器是会加载 <strong>HTML</strong> 相关的 <strong>CSS、JS</strong> 等。爬虫是不会执行这些关联的文件。</p>
<h2 id="_3-搜索引擎时代的网络爬虫" tabindex="-1"> 3. 搜索引擎时代的网络爬虫</h2>
<p>关于网络爬虫的概念，我们先来瞅瞅维基百科（Wikipedia）上面的定义：</p>
<blockquote>
<p>网络爬虫（英语：web crawler），也叫网上蜘蛛（spider），是一种用来自动浏览万维网的网络机器人。其目的一般为编纂网络索引。</p>
</blockquote>
<p>这里提到的编纂网络索引，就是搜索引擎干的事情。我们对搜索引擎并不陌生，Google、百度等搜索引擎可能每天都在帮我们快速获得信息。可能同学们要问，搜索引擎的工作过程是怎样的呢？</p>
<p>首先，就是有网络爬虫不断抓取各个网站的网页，存放到搜索引擎的数据库；</p>
<p>接着，索引程序读取数据库的网页进行清理，建立倒排索引；</p>
<p>最后，搜索程序接收用户的查询关键词，去索引里面找到相关内容，并通过一定的排序算法（Pagerank等）把最相关最好的结果排在最前面呈现给用户。「吐槽一下：百度并不是把相关最好的结果排在最前面，而是广告比较多 ！」</p>
<p>看上去简简单单的三个部分，却构成了强大复杂的搜索引擎系统。而网络爬虫是其中最基础也很重要的一部分，它决定着搜索引擎数据的完整性和丰富性。我们也看到网络爬虫的主要作用是获取数据。</p>
<p>由此简单地说，网络爬虫就是获取互联网公开数据的自动化工具。</p>
<p>这里要强调一下，网络爬虫爬取的是互联网上的<strong>公开数据</strong>，而不是通过特殊技术非法入侵到网站服务器获取的非公开数据。</p>
<p>那么同学们可能要问，什么是 <strong>“公开数据”</strong> 呢？</p>
<blockquote>
<p>简而言之，就是网站上公开让用户浏览、获取的数据。</p>
</blockquote>
<p>虽然数据是公开的，但是当某人或机构（如，搜索引擎）大量收集这些数据并因此获利时，也会让数据生产方——网站很不爽，由此而产生法律纠纷。比如，早些年 Google 因此而惹上官司。</p>
<p>网站们看着搜索引擎，因为搜索引擎抓取自己的内容而获利不爽，但也因为搜索引擎带来的流量而高兴不已，于是就出现了网站主动进行搜索引擎优化（SEO, Search Engine Optimization），也就是告诉搜索引擎，我这里的内容好，快来抓取吧！</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444715-5e67b4fa-ce0f-479e-8fcc-2bd75a9fc4cd.png" alt="" loading="lazy"></p>
<p>搜索引擎和网站的博弈，催生了一个君子协议： <strong>robots.txt</strong> 。网站在自己的网站上放上这个文件，告诉爬虫哪些内容可以抓，哪些内容不可以抓；</p>
<p>搜索引擎读取网站的 <strong>robots.txt</strong> 来知道自己的抓取范围，同时也在访问网站时通过 <strong>User-Agent</strong> 来向网站表明自己的身份（这种表明也是君子协议，技术上很容易假扮他人），比如，Google 的爬虫叫做 Googlebot，百度的爬虫叫做 Baiduspider。这样，二者和平共处，互惠互利。</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444487-e537acd3-43fd-4095-b391-c1bf9383e23d.png" alt="" loading="lazy"></p>
<h3 id="_3-1-使用-robots-txt" tabindex="-1"> 3.1 使用 robots.txt</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444616-4231b9eb-4cf1-4483-b315-838bd0c15904.png" alt="" loading="lazy"></p>
<div><pre><code><span>from</span> urllib <span>import</span> robotparser

rp <span>=</span> robotparser<span>.</span>RobotFileParser<span>(</span><span>)</span>
rp<span>.</span>set_url<span>(</span><span>'https://www.baidu.com/robots.txt'</span><span>)</span>
url <span>=</span> <span>'https://www.baidu.com/'</span>
<span>print</span><span>(</span>rp<span>.</span>can_fetch<span>(</span><span>'Python'</span><span>,</span> url<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="_4-大数据时代的网络爬虫" tabindex="-1"> 4. 大数据时代的网络爬虫</h2>
<p>时代在发展，数据变得越来越重要，“大数据”已经成为各行各业讨论的话题，人们对数据的渴望也变成贪婪，数据也就成了“石油”，爬虫也就成了“钻井机”。</p>
<p>为了获取石油，人们使用钻井机；</p>
<p>为了获取数据，人们使用爬虫。</p>
<p>为了获得数据，人们把互联网钻的是“千疮百孔”。</p>
<p><strong>哈哈，这里有些夸张。</strong></p>
<p>但人们对数据的获取，已经打破的君子协定，和网站们玩起了猫捉老鼠的游戏，展开了道高一尺魔高一丈的较量。</p>
<p><strong>为什么说是较量呢？</strong></p>
<p>因为大量爬虫的行为会给网站带来网络带宽、服务器计算力等方面很大的压力，却几乎不带来任何利益。</p>
<p>为了降低这种毫无利益的压力和避免自己的数据被他人集中收集，网站肯定要通过技术手段来限制爬虫；另一方面，爬虫为了获取石油般的数据，就想方设法来突破这种限制。</p>
<p><strong>对于这种较量的理解，还是看活生生的例子来得更透彻。</strong></p>
<ul>
<li>你有没有花几十块钱让某个软件帮你抢火车票？
<ul>
<li>攻： 抢票爬虫会不断访问 12306 来获得火车票座位数据，并进而购买火车票；</li>
<li>防： 12306 网站出了变态的认证码，人都经常识别错误。</li>
</ul>
</li>
<li>各种秒杀让你很受伤！
<ul>
<li>攻： 研究网站的秒杀机制，提前写好爬虫，秒杀时刻，人快不过机器；</li>
<li>防： 有些秒杀的宣传作用很大就懒得防；有些秒杀机制复杂到你很难写出对应的爬虫；有些秒杀成功被发现作弊也会被取消。</li>
</ul>
</li>
</ul>
<p>爬虫变得越来越多，越来越肆无忌惮，网站也不得不使用各种技术手段来禁止或限制爬虫。这些手段大致包括：</p>
<ul>
<li>使用账户保护数据，数据仅对登录用户可见；</li>
<li>数据多次异步加载；</li>
<li>限制IP访问频率，甚至封锁 IP；</li>
<li>输入验证码以获得访问权限；</li>
<li>数据在服务器端加密，浏览器端解密；</li>
<li>……</li>
</ul>
<p>而这些手段也是爬虫在技术实现中要解决和突破的问题。</p>
<h2 id="_5-网络爬虫的分类" tabindex="-1"> 5. 网络爬虫的分类</h2>
<p><img src="@source/column/crawler/s2_02.assets/1596515444620-859d3f02-ec50-45ec-994f-21d0b4110ac9.png" alt="" loading="lazy"></p>
<hr>
<blockquote>
<p>现在的网络爬虫大体可以分为四类：<strong>全网爬虫，主题爬虫，增量式爬虫和深层爬虫。</strong></p>
<ol>
<li>全网爬虫：也就是谷歌百度等搜索引擎，这类爬虫会从一些非常基础的 <strong>URl</strong> 出发，一直延伸到整个网站，这类爬虫庞大臃肿，需要很大的存储空间以及极高的爬行速度。</li>
<li>主题爬虫：满足特定人的特定需求，不同于全网爬虫，它是有选择地爬行与需求相关的信息。</li>
<li>增量式爬虫：对已经下载的页面采取增量式更新的爬虫，只爬取新产生的或者发生变化的网页，一定程度上可以保证爬取得页面是最新的，减少了空间的浪费，但是<strong>复杂度较高。</strong></li>
<li>深层网络爬虫：不能通过静态 <strong>URL</strong> 访问，隐藏在表单后，只有用户提交一些关键词才能得到的页面。</li>
</ol>
</blockquote>
<p><strong>PS: 深层网络爬虫也就是我们所说的暗网，我们一般接触到就是一些 POST 表单，登录页面之类的，你输入账户密码之后，点击登录。这就是一个深层网络爬虫。</strong></p>
<p><strong>为啥子呢？因为我们的爬虫是自动爬不到里面的，必须设置一些参数才是可以的。</strong></p>
<p><strong>举个例子：比如我建立了一个网络爬虫。要求它从百度开始遍历所有网站，它遇到有验证码的有登录的就进不去了。因为，它之后的页面是隐藏在表单之后，这个东西就叫网络爬虫（它也是归入暗网的范畴）</strong></p>
<p><strong>咱们来个简单的介绍暗网：</strong></p>
<blockquote>
<p>暗网（不可见网，隐藏网）是指那些存储在<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C/1717974" target="_blank" rel="noopener noreferrer">网络</a>数据库里、但不能通过<a href="https://baike.baidu.com/item/%E8%B6%85%E9%93%BE%E6%8E%A5/97857" target="_blank" rel="noopener noreferrer">超链接</a>访问而需要通过动态网页技术访问的资源集合，不属于那些可以被标准搜索引擎索引的表面网络。
暗网是<a href="https://baike.baidu.com/item/%E6%B7%B1%E7%BD%91/22089976" target="_blank" rel="noopener noreferrer">深网</a>（Deep Web）的一个子集，属于深网的一小部分。
迈克尔·伯格曼将当今互联网上的搜索服务比喻为像在地球的海洋表面的拉起一个大网的搜索，大量的表面信息固然可以通过这种方式被查找得到，可是还有相当大量的信息由于隐藏在深处而被搜索引擎错失掉。绝大部分这些隐藏的信息是须通过动态请求产生的网页信息，而标准的搜索引擎却无法对其进行查找。传统的搜索引擎“看”不到，也获取不了这些存在于暗网的内容，除非通过特定的搜查这些页面才会动态产生。于是相对的，暗网就隐藏了起来。 <strong>----------来源----------《百度百科》</strong></p>
</blockquote>
<p>其实，多说一句，暗网并不难，使用<strong>洋葱路由器</strong>就可以登陆。</p>
<hr>
<h3 id="_5-1-增量式爬虫-爬虫策略" tabindex="-1"> 5.1 增量式爬虫 <strong>(爬虫策略)</strong></h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444572-79c371fa-3409-4dfa-aa92-f80fab19ab1e.png" alt="" loading="lazy"></p>
<hr>
<p><strong>举个例子：</strong></p>
<p>还是以微博为例，微博上有个热搜版块，现在公司的需求是抓取实时的热搜信息，持续一周的时间。这个时候，我们最优的爬取就是增量爬，<strong>每次只爬新出现</strong> 的，或者被修改过的。这样数量越多，速度越快，后期速度就可以提升几百倍。</p>
<p><strong>具体举例：</strong></p>
<p>第一次抓取，则需要抓取全部数据。所需的抓取时间比如：<strong>12h</strong>，那等你第二天再抓取该微博热搜榜，<strong>难道要继续再重新全部抓取一遍和存储么？</strong></p>
<p>显然这是非常低效的，所以，这个增量式爬虫就是 <strong>只爬取微博热搜榜上新出现的数据（评论）或者哪些式被修改的数据等等</strong> 这样原本所需要 <strong>12h</strong> 的抓取时间，就比如变成 <strong>2h</strong> 实际时间。不过这个<strong>时间</strong>还是按实际情况来。（有硬件、网络、策略、实现方法等影响因素）</p>
<p><strong>我们先来快速简单的回顾一下：</strong></p>
<ol>
<li>请求网站资源</li>
<li>如果网站的给你返回一个 <strong>status_code 是200，那服务器就会给你返回那个资源</strong></li>
<li>然后，我们需要 <strong>Parser</strong> 来解析我们得到的资源。可以用来解析的轮子有哪些呢？
<ul>
<li>BeautifulSoup</li>
<li>PyQuery</li>
<li>Xpath</li>
<li>re （正则表达式）</li>
</ul>
</li>
<li>存储入库</li>
</ol>
<p><strong>实现：</strong></p>
<ol>
<li>发送请求前——判断这个 <strong>URL</strong> 是不是之前爬取过的（爬取过的 <strong>Url</strong> 我们就不再继续爬取）</li>
<li>解析内容后——判断这部分内容是不是之前爬取过（也就是解析得到数据之后，判断之前是否有爬取到过。实现方法就类似我们可以创建一个很大的数据库池。然后，把你解析得到的数据和里面的数据进行比对一下，看有无变化）</li>
<li>存储介质（数据入库时）——判断内容是不是已经在介质中存在（判断我解析得到的数据是不是在我们数据库已经出现过了，如果出现的话，我们就不入库。如果是修改过的我们就把新修改过的在重新入库，替换掉原先那个）</li>
</ol>
<p><strong>难点：其实增量式爬虫最难的那部分，就是数据的比对呢？</strong></p>
<ul>
<li>常见的增量式爬虫使用 <strong>哈希</strong></li>
<li>哈希可以生成<strong>独一无二的哈希数字</strong></li>
<li>我们只需要比对哈希即可</li>
</ul>
<p>代码示例：</p>
<div><pre><code><span># -*- coding: utf-8 -*-</span>
<span># 开发团队   ：AI悦创</span>
<span># 开发人员   ：AI悦创</span>
<span># 开发时间   ：2019/9/4  8:25 </span>
<span># 文件名称   ：haxi_1.PY</span>
<span># 开发工具   ：PyCharm</span>
text <span>=</span> <span>"这是第一个评论"</span>
text2 <span>=</span> <span>"这是第二个评论"</span>
text3 <span>=</span> <span>"这是第一个评论"</span>
<span>print</span><span>(</span><span>hash</span><span>(</span>text<span>)</span><span>)</span>
<span>print</span><span>(</span><span>hash</span><span>(</span>text2<span>)</span><span>)</span>
<span>print</span><span>(</span><span>hash</span><span>(</span>text3<span>)</span><span>)</span>
compare <span>=</span> text <span>==</span> text3
<span>print</span><span>(</span><span><span>f'text == text3 is </span><span><span>{</span>compare<span>}</span></span><span>'</span></span><span>)</span>

输出：
<span># 注意，不同编译器，不同电脑环境生成的哈希是不一样的。</span>
<span>#	就算是同一台电脑同一个编译器，每次运行生成的哈希数字也是不一样的。</span>

<span># 第一次运行输出：</span>
<span>1136825877591950482</span>
<span>-</span><span>1853188872266928196</span>
<span>1136825877591950482</span>
text <span>==</span> text3 <span>is</span> <span>True</span>

<span># 第二次运行输出：</span>
<span>-</span><span>1711655599760904659</span>
<span>-</span><span>4125108592533926432</span>
<span>-</span><span>1711655599760904659</span>
text <span>==</span> text3 <span>is</span> <span>True</span>

<span># 第三次运行输出：</span>
<span>-</span><span>1365827303885436725</span>
<span>-</span><span>4683858178280503991</span>
<span>-</span><span>1365827303885436725</span>
text <span>==</span> text3 <span>is</span> <span>True</span>

<span># 这里你还会发现，虽然每次生成都会变化，但最后一行对相同的字符串做出比较还是成功的也就是（True）。</span>
<span># 哈希值设涉及数据结构和算法，有兴趣的学员的自行了解。</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br></div></div><p>扩展：</p>
<blockquote>
<p>A：老师，我想选择的是标签是span class是font的，为什么上面那个class='day font'也会被选择到
Teacher：标签里的class可以使用多个类，在前端多个css一起用是用空格分割的，每一个class都是独立的
B：老师python3的hash() 是不是和python2里的 hash() 不一样呀</p>
</blockquote>
<p>代码示例：</p>
<p>Python2：</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444528-5458d5db-99fc-4dfe-9f1a-1d1d16138c00.png" alt="" loading="lazy"></p>
<p>Python3：</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444512-c78302e8-aa53-4536-b1a9-4156c3562323.png" alt="" loading="lazy"></p>
<blockquote>
<p>C：好像每一次生成的都不一样
Teacher：本身就是随机的，环境不同会出现不同运算结果，算法改进了。</p>
</blockquote>
<p>那这个 <strong>hash</strong> 生成的随机数，如何来帮助我们实现 <strong>增量式爬虫呢？</strong></p>
<p>我例如可以，在每一条得到的数据在入库之前，哈希一下。然后可以把它的数字比如存进一个集合里面（集合：里面只能存在不同的对象）。</p>
<div><pre><code><span>set</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>再详细一些就是：当我们把第一个数据例如上面的 <strong>hash 测试代码</strong> 第一个哈希：这是第一个评论，生成的伪随机数，存到我们的集合里面，第二个哈希由：这是第二个评论，生成的伪随机数，也存到我们所创建的集合中。当第三个哈希由：这是第一个评论，生成的伪随机数，存到集合中，集合将会将他阻挡在外。</p>
<p>当然，你还可以使用数据库，建立一个<strong>唯一索引</strong>。</p>
<p>扩展：还有 <strong>指纹、布隆过滤器等（相关数学）</strong></p>
<h3 id="_5-2-提取信息" tabindex="-1"> 5.2 提取信息</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444581-7d231bf6-d464-4a94-8f97-4b8b259e9e87.png" alt="" loading="lazy"></p>
<h3 id="_5-3-保存爬虫数据" tabindex="-1"> 5.3 保存爬虫数据</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444613-34fd2661-7b03-4d37-99e1-0d1974c492a7.png" alt="" loading="lazy"></p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444586-2347df9b-0238-4323-b1c6-89a35e9b0cbf.png" alt="" loading="lazy"></p>
<hr>
<p><strong>问题：有人可能会问为什么存到数据库里，这个数据库不也是在我电脑硬盘里面存在的吗？</strong></p>
<p><strong>答：虽然数据库也是装在我们的电脑里面，和我们直接存储这些：txt、world、Excel、CSV等文件，有什么区别呢？</strong></p>
<p><strong>其实，学过计算机原理的都懂哈。我们直接存储在硬盘里面（Disk）存储的速度是比较慢的。这是因为如下：</strong></p>
<blockquote>
<p>1.我们的操作系统，会把它压入一个高速缓冲区，之后再慢慢的刷新到我们的硬盘里面。</p>
</blockquote>
<p>相比之下，我们直接操作 <strong>CPU</strong> 就非常之快了，例如：我们的内存型数据库 <strong>Redis</strong> 就是直接存储在数据库中。（我们的 CUP 内存里面）比操作在硬盘里面的高速缓冲区，快了不止十倍。</p>
<p><strong>所以，Redis 现在是默认程序员掌握的。</strong></p>
<p><strong>但是，Redis 存储在内存有个不好的地方就是，你可能存的太多有可能把内存搞奔溃——内存溢出</strong></p>
<p>另一个就是，我i可能偶尔发生断电这些，电脑突然黑屏关机了。那这些数据全部消失了，所以，用 CPU 这样的方法，还是要有集群方案，和容灾措施、及时的备份、和 log（日志）</p>
<h2 id="_6-网络爬虫的自我约束" tabindex="-1"> 6. 网络爬虫的自我约束</h2>
<p>看完上面“猫捉老鼠”的游戏的描述，同学们不禁要问，网站和爬虫这种对抗较量会不会引起法律问题？</p>
<p><strong>这是一个很好的问题，也是值得每个爬虫开发者思考的问题。</strong></p>
<p><strong>爬虫作为一种技术本身可能无所谓善恶，但是使用它的人就有善恶之分。</strong></p>
<p>如何使用爬虫，爬取的数据如何使用，都可能产生潜在的法律问题。作为技术开发的程序员，都应该思考这个问题。无论何种目的，网络爬虫都不能突破法律的底线，同时也有遵守一定的准则：</p>
<ul>
<li>遵循 robots.txt 协议；</li>
<li>避免短时间高并发访问目标网站，避免干扰目标网站的正常运行；</li>
<li>不要抓取个人信息，比如手机通讯录等；</li>
<li>使用抓来的数据注意隐私保护，合法合规。</li>
</ul>
<p>守法合规，既是一直自我约束，也是自我保护。</p>
<h2 id="_7-我们可以抓什么数据" tabindex="-1"> 7. 我们可以抓什么数据</h2>
<p><img src="@source/column/crawler/s2_02.assets/1596515444515-8ab7ab7e-5e5a-4b3a-b01d-0b1c35d53e48.png" alt="" loading="lazy"></p>
<hr>
<h2 id="_8-识别网站技术" tabindex="-1"> 8. 识别网站技术</h2>
<div><pre><code>pip install builtwith
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>可以检测网站的一些常见技术</p>
<div><pre><code><span># !/usr/bin/python3</span>
<span># -*- coding: utf-8 -*-</span>
<span># @Author：AI悦创 @DateTime ：2020/1/5 17:44 @Function ：功能  Development_tool ：PyCharm</span>
<span># code is far away from bugs with the god animal protecting</span>
<span>#    I love animals. They taste delicious.</span>
<span># 如何识别网站技术</span>
<span>import</span> builtwith
<span>from</span> pprint <span>import</span> pprint

<span># url = 'https://www.baidu.com/'</span>
url <span>=</span> <span>'https://www.cnblogs.com/'</span>
html <span>=</span> builtwith<span>.</span>builtwith<span>(</span>url<span>)</span>
pprint<span>(</span>html<span>)</span>

<span># ----------------输出----------------</span>
<span>{</span><span>'advertising-networks'</span><span>:</span> <span>[</span><span>'DoubleClick for Publishers (DFP)'</span><span>]</span><span>,</span>
 <span>'javascript-frameworks'</span><span>:</span> <span>[</span><span>'jQuery'</span><span>]</span><span>}</span>

Process finished <span>with</span> exit code <span>0</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><hr>
<h2 id="_9-网络爬虫策略" tabindex="-1"> 9. 网络爬虫策略：</h2>
<p><img src="@source/column/crawler/s2_02.assets/1596515444489-7fbd6313-9547-4399-a933-725beae1daf5.png" alt="" loading="lazy"></p>
<hr>
<h3 id="_9-1-广度优先算法" tabindex="-1"> 9.1 广度优先算法</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444765-ce01581c-a080-4500-a5e3-2069db7474fd.png" alt="" loading="lazy"></p>
<hr>
<p>比如下图是个 <strong>url 树</strong>，在程序进行 <strong>url 提取和访问的时候所提取的步骤是图中所写的编号</strong>（其实，这个也是二叉树）图中的顺序就是按广度优先算法来操作与读取的。也就是一层一层的来操作。</p>
<hr>
<p><img src="@source/column/crawler/s2_02.assets/1596515444643-4d627d84-7487-4432-a0e8-906d9d6e626c.png" alt="" loading="lazy"></p>
<hr>
<p>我们用糗事百科来说：</p>
<p>比如我吗要爬取这个热门下面的所有 <strong>url</strong>，我使用广度优先算法（BFS）来进行抓取的话，它的顺序是：先把这个热门页面下的 <strong>所有 url 都爬取下来，我们不会特别进入每一个里面</strong>，我们就会继续爬 <strong>第二页、第三页、第四页......</strong></p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444690-8dfee9f8-6a71-4e50-87fa-63f61d253e4e.png" alt="" loading="lazy"></p>
<hr>
<p>然后，<strong>我们再进入到单个里面把所有的 url 爬取下来。再进入到下一个爬取 url</strong>。</p>
<p>（这其实，就是一层一层的往下爬取）</p>
<p>也就是，先扩展再深入。</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444651-b274be85-fe4b-4f92-b430-6769e7cef333.png" alt="" loading="lazy"></p>
<hr>
<p><img src="@source/column/crawler/s2_02.assets/1596515444835-e8caad2c-192a-40b2-8fcd-b535b71c4765.png" alt="" loading="lazy"></p>
<hr>
<h3 id="_9-2-深度优先算法" tabindex="-1"> 9.2 深度优先算法</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444803-7ebcd2d5-d8d6-44ac-a5dd-7ac3a2ee9cc3.png" alt="" loading="lazy"></p>
<hr>
<p>可以理解为：一条路走到黑（不撞南墙不回头）</p>
<p>我们也再一次的来使用 <strong>二叉树来讲解</strong>我们的深度优先算法，下图所标的序号就是我们所说的深度优先算法。</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444688-ee93b125-03b3-489d-afec-93636a742737.png" alt="" loading="lazy"></p>
<h3 id="_9-3-聚焦爬虫" tabindex="-1"> 9.3 聚焦爬虫</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444804-1767c101-be1d-42c9-bf13-4ddf5a4b6546.png" alt="" loading="lazy"></p>
<hr>
<p>相对于通用网络爬虫，聚焦爬虫解决三个主要问题：</p>
<ol>
<li>对抓取目标的描述或定义；</li>
<li>对网页或数据的分析与过滤；</li>
<li>对 URL 的搜索策略。</li>
</ol>
<blockquote>
<p>抓取目标的描述和定义是决定网页分析算法与 URL 搜索策略如何制定的基础。
而网页分析算法和候选 URL 排序算法是决定搜索引擎所提供的服务形式和爬虫网页抓取行为的关键所在。这两个部分的算法又是紧密相关的。</p>
</blockquote>
<p><strong>制定 URL 搜索策略：</strong></p>
<p>当然除了上面讲的：BFS（广度优先）、DFS（深度优先），我们不经常使用这么简单的爬虫策略了。</p>
<p>例如：<strong>按优先级的爬虫策略</strong></p>
<blockquote>
<p>比如我们现在要爬取豆瓣上的书籍内容，所以，比方说我们现在要爬取的网站 url 是：<strong>/var/page=1</strong>、<strong>/view/page=1</strong>这样的 <strong>url</strong> 我们该怎么处理呢？
我们对这些 url 做优先级划分，比方说 <strong>用 var 开头的，我们就放在列表前面、以 view 开头我们就放在列表的后面</strong>。优先爬取与我们 <strong>var</strong> 相关的。——这就是我们所说的优先级</p>
</blockquote>
<p>我们都会对 url 进行分析的。</p>
<hr>
<h2 id="_10-反爬虫案例" tabindex="-1"> 10. 反爬虫案例</h2>
<p><img src="@source/column/crawler/s2_02.assets/1596515444672-573249cb-7aa8-4ca9-aeed-0002a40d390c.png" alt="" loading="lazy"></p>
<hr>
<blockquote>
<p>PS：**Ajax 交互：**在我们访问一个网站的时候，页面在不断的刷新，而我们的 url 没有变化。（就像百度图片这样的就是 Ajax 交互。）</p>
</blockquote>
<h3 id="_10-1-referer" tabindex="-1"> 10.1 Referer</h3>
<p>**referer：**防盗链，作用就是你次的这次请求是从哪里来的。</p>
<p><strong>我们一一来看一看：</strong></p>
<p><strong>Headers 检测</strong></p>
<p>下面的 <strong>iter_content(512)</strong> 小块读取（第一篇就是大揽，之后都会讲到）</p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444756-cc47fd46-46ff-4029-9b48-458cee09b90e.png" alt="" loading="lazy"></p>
<div><pre><code><span>import</span> requests
url <span>=</span> <span>'http://img3.laibafile.cn/p/m/310277586.jpg'</span>
headers <span>=</span> <span>{</span>
	<span>'Referer'</span><span>:</span> <span>'http://bbs.tianya.cn/pic-no04-2829676.shtml'</span>
<span>#我上一次请求在哪里（或者说，我发起下载这个图片的请求是从哪个地方发起的。</span>
<span>}</span>
img <span>=</span> requests<span>.</span>get<span>(</span>url<span>,</span> headers <span>=</span> headers<span>)</span>
<span>with</span> <span>open</span><span>(</span><span>'refer.jpg'</span><span>,</span> <span>'wb'</span><span>)</span> <span>as</span> f<span>:</span>
	f<span>.</span>write<span>(</span>img<span>.</span>content<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p><img src="@source/column/crawler/s2_02.assets/1596515444679-21479a5e-03e8-4023-adc3-54bdd15a2bb5.png" alt="" loading="lazy"></p>
<div><pre><code><span>import</span> requests
url <span>=</span> <span>'http://img3.laibafile.cn/p/m/310277586.jpg'</span>
<span># headers = {</span>
<span># 	'Referer': 'http://bbs.tianya.cn/pic-no04-2829676.shtml'</span>
<span>#我上一次请求在哪里（或者说，我发起下载这个图片的请求是从哪个地方发起的。</span>
<span>#</span>
<span># }</span>
<span># img = requests.get(url, headers = headers)</span>
img <span>=</span> requests<span>.</span>get<span>(</span>url<span>)</span>
<span>with</span> <span>open</span><span>(</span><span>'refer.jpg'</span><span>,</span> <span>'wb'</span><span>)</span> <span>as</span> f<span>:</span>
	f<span>.</span>write<span>(</span>img<span>.</span>content<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p><img src="@source/column/crawler/s2_02.assets/1596515444722-273e783b-11cb-47c6-9433-e4dd27f500c5.png" alt="" loading="lazy"></p>
<hr>
<h3 id="_10-2-用户访问频率限制-这个刚刚开始只需要了解即可-涉及异步" tabindex="-1"> 10.2 用户访问频率限制（这个刚刚开始只需要了解即可-涉及异步）</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444670-77a8b9b6-f247-4b57-bfe4-7ebb16a4ce36.png" alt="" loading="lazy"></p>
<blockquote>
<p>以上代码是异步爬虫，然后上面的图片就是为了加快速度让豆瓣封我 <strong>IP</strong> 代码实现都不用疑惑，之后都会讲到滴。爬取到了许多资源。
如何，防止被封 <strong>IP</strong> 第一个使用： <strong>IP</strong>，第二个就是：<strong>降低爬虫速度。</strong></p>
</blockquote>
<h3 id="_10-3-用户延迟访问插件" tabindex="-1"> 10.3 用户延迟访问插件</h3>
<p>该插件详细解析：<a href="/column/crawler/replenish02.html">还没用异步，爬取就速度太快？更智能的延迟插件</a></p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444757-07a93687-9163-4908-b1a9-4697134811b6.png" alt="" loading="lazy"></p>
<p>有基础的你，有可能会有疑惑。为什么不使用 <strong>time.sleep(sum)</strong> 我可以明确告诉你，可以使用。但是，会造成时间浪费。</p>
<h3 id="_10-4-ajax-交互" tabindex="-1"> 10.4 Ajax 交互</h3>
<p>举个例子就是百度图片，这个你直接 <strong>Get</strong> 是请求不到的，之后会有找 <strong>Json 接口、API 构造一些参数来</strong></p>
<p><img src="@source/column/crawler/s2_02.assets/1596515444672-b29b783a-266e-4939-865f-63c448d81e17.png" alt="" loading="lazy"></p>
<h3 id="_10-5-网页数据加密" tabindex="-1"> 10.5 网页数据加密</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444703-4c170df6-52a3-4558-a49f-37c5db020a21.png" alt="" loading="lazy"></p>
<h3 id="_10-6-验证码" tabindex="-1"> 10.6 验证码</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444716-9daab4d1-473b-4990-8c88-09715719c48d.png" alt="" loading="lazy"></p>
<h3 id="_10-7-字体反爬虫" tabindex="-1"> 10.7 字体反爬虫</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444770-6dfd5487-a4c9-4e17-b051-65d870297d0a.png" alt="" loading="lazy"></p>
<p>字体反爬虫最近也是比较流行的。往期教程有讲到实习僧的网站的抓取。</p>
<h3 id="_10-8-用户延迟访问插件使用演示" tabindex="-1"> 10.8 用户延迟访问插件使用演示</h3>
<p><img src="@source/column/crawler/s2_02.assets/1596515444860-043ae329-582d-423b-adf8-77f19adf90b5.png" alt="" loading="lazy"></p>
<div><pre><code><span>from</span> urllib <span>import</span> parse
<span>from</span> datetime <span>import</span> datetime
<span>import</span> time<span>,</span>requests
<span>class</span> <span>DelayWait</span><span>:</span>
	<span>def</span> <span>__init__</span><span>(</span>self<span>,</span> delay <span>=</span> <span>3</span><span>)</span><span>:</span>
		<span># delay = 3 ,每次延迟 3 秒；</span>
		self<span>.</span>delay <span>=</span> delay
		self<span>.</span>urls <span>=</span> <span>dict</span><span>(</span><span>)</span>
	<span>def</span> <span>wait</span><span>(</span>self<span>,</span> url<span>)</span><span>:</span>
		netloc <span>=</span> parse<span>.</span>urlparse<span>(</span>url<span>)</span><span>.</span>netloc
        <span># print(netloc)</span>
		lastOne <span>=</span> self<span>.</span>urls<span>.</span>get<span>(</span>netloc<span>)</span>
        <span># print(lastOne)</span>

		<span>if</span> lastOne <span>and</span> self<span>.</span>delay<span>></span><span>0</span><span>:</span>
			timeWait <span>=</span> self<span>.</span>delay <span>-</span> <span>(</span>datetime<span>.</span>now<span>(</span><span>)</span><span>-</span>lastOne<span>)</span><span>.</span>seconds
			<span>if</span> timeWait<span>></span><span>0</span><span>:</span>
				time<span>.</span>sleep<span>(</span>timeWait<span>)</span>

		self<span>.</span>urls<span>[</span>netloc<span>]</span> <span>=</span> datetime<span>.</span>now<span>(</span><span>)</span>

urls <span>=</span> <span>[</span><span>'http://www.baidu.com'</span><span>]</span><span>*</span><span>10</span>
d <span>=</span> DelayWait<span>(</span><span>)</span>
<span>for</span> url <span>in</span> urls<span>:</span>
	html <span>=</span> requests<span>.</span>get<span>(</span>url<span>)</span>
	d<span>.</span>wait<span>(</span>url<span>)</span>
	<span>print</span><span>(</span>html<span>.</span>status_code<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><p>同学理解：</p>
<div><pre><code><span>from</span> urllib <span>import</span> parse
<span>from</span> datetime <span>import</span> datetime
<span>import</span> time<span>,</span>requests
<span>class</span> <span>DelayRequests</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span>delay<span>=</span><span>3</span><span>)</span><span>:</span> <span>#定义延迟类</span>
        self<span>.</span>delay<span>=</span>delay<span>#类的属性,类的延迟等于3</span>
        self<span>.</span>urls<span>=</span><span>dict</span><span>(</span><span>)</span><span>#链接</span>
    <span>def</span> <span>wait</span><span>(</span>self<span>,</span>url<span>)</span><span>:</span><span>#定义类的方法：延迟方法</span>
        netloc<span>=</span>parse<span>.</span>urlparse<span>(</span>url<span>)</span><span>.</span>netloc
        <span>#print(netloc)  输出域名，netloc是域名的意思 ,这里不是很确定</span>
        lastOne<span>=</span>self<span>.</span>urls<span>.</span>get<span>(</span>netloc<span>)</span>
        <span>#print(lastOne),获取最后一个域名对应的链接</span>
        <span>if</span> self<span>.</span>delay<span>></span><span>0</span> <span>and</span> lastOne<span>:</span><span>#延时设置</span>
            sleepTime<span>=</span>self<span>.</span>delay<span>-</span>\
                        <span>(</span>datetime<span>.</span>now<span>(</span><span>)</span><span>-</span>lastOne<span>)</span><span>.</span>seconds<span>#3与两个链接分钟差值进行运算，其中'-\'不理解，李老师说的难度可能在这</span>
            <span>if</span> sleepTime<span>></span><span>0</span><span>:</span>
                time <span>.</span>sleep<span>(</span>sleepTime<span>)</span><span>#修改sleep时间，避免课程中说的时间浪费</span>
        self<span>.</span>urls<span>[</span>netloc<span>]</span><span>=</span>datetime<span>.</span>now<span>(</span><span>)</span><span>#得到当前时间即上一延迟的后的链接，从而把它当初下一延迟的初始链接</span>
urls<span>=</span><span>[</span><span>'https://blog.csdn.net/'</span><span>]</span><span>*</span><span>10</span><span>#运用</span>
d<span>=</span>DelayRequests<span>(</span><span>)</span><span>#实例化</span>
<span>for</span> url <span>in</span> urls<span>:</span>
    html<span>=</span>requests<span>.</span>get<span>(</span>url<span>)</span>
    d<span>.</span>wait<span>(</span>url<span>)</span><span>#链接延时</span>
    <span>print</span><span>(</span>html<span>.</span>status_code<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><p>PS：这么理解即可</p>
<div><pre><code><span>from</span> urllib <span>import</span> parse <span># 解析 URL</span>
<span>from</span> datetime <span>import</span> datetime  <span># 获取时间（标注时间）时间加减</span>
<span>import</span> time<span>,</span>requests <span># time 实现睡眠 # requests  爬虫库</span>

<span># 一般插件的功能是很专一的，当个文件只实现一个功能</span>
<span>class</span> <span>DelayWait</span><span>:</span>
	<span># 内置函数初始化： __init__</span>
	<span># 一般来说，在我们实行这个类的的时候，就会自动执行这个类的初始化函数（它是第一个执行的）</span>
	<span>def</span> <span>__init__</span><span>(</span>self<span>,</span> delay <span>=</span> <span>3</span><span>)</span><span>:</span>
		<span># 初始化参数（初始化属性，属性：对象的某个静态特征）</span>
		<span># delay = 3 ,每次延迟 3 秒；</span>
		self<span>.</span>delay <span>=</span> delay <span># 延迟时间</span>
		self<span>.</span>urls <span>=</span> <span>dict</span><span>(</span><span>)</span> <span># 存储各种 URL</span>

	<span># 函数：对象的某个动态能力</span>
	<span>def</span> <span>wait</span><span>(</span>self<span>,</span> url<span>)</span><span>:</span>
		<span># 解析我们的 URL，来对比每次访问的主站，是否是同一个主站，同一个就是使用该延迟插件，不是就不用啦！</span>
		<span># 因为，我们封 IP 其实就是，快速重复访问同一个网站,才有可能被封</span>
		netloc <span>=</span> parse<span>.</span>urlparse<span>(</span>url<span>)</span><span>.</span>netloc

		<span># 我们上一步请求的网址是什么，看有没有这个主站。</span>
		<span># 这里的 get('', null) 是字典的一个方法，使用get来查询字典中的数据，如果这个数据存在，则返回改键对应的值。</span>
		<span># 不存在则返回：预先设定的内容：null</span>
		lastOne <span>=</span> self<span>.</span>urls<span>.</span>get<span>(</span>netloc<span>)</span>

		<span># 如果，我们上一次请求过的话，就执行这个语句</span>
		<span>if</span> lastOne <span>and</span> self<span>.</span>delay<span>></span><span>0</span><span>:</span>
			<span># 本次访问和上一次访问的时间差.</span>
			timeWait <span>=</span> self<span>.</span>delay <span>-</span> <span>(</span>datetime<span>.</span>now<span>(</span><span>)</span><span>-</span>lastOne<span>)</span><span>.</span>seconds
			<span># seconds 转换为秒</span>
			<span># 解析:</span>
			<span># 	如果两次请求的时间差(datetime.now()-lastOne)非常小,表明,两次请求的时间间隔,非常小.</span>
			<span>#   所以,以每次请求 delay 所设定的时间为标准.如果得出来的差为 3s(举例)那就不执行延迟,</span>
			<span>#   如果差小于 3s 则执行与 3s 相差的时间的差.</span>
			<span>if</span> timeWait<span>></span><span>0</span><span>:</span>
				time<span>.</span>sleep<span>(</span>timeWait<span>)</span>

		<span># 为字典 urls 添加：键对值：主站:对应添加的时间</span>
		self<span>.</span>urls<span>[</span>netloc<span>]</span> <span>=</span> datetime<span>.</span>now<span>(</span><span>)</span>

urls <span>=</span> <span>[</span><span>'http://www.baidu.com'</span><span>]</span><span>*</span><span>10</span>
d <span>=</span> DelayWait<span>(</span><span>)</span>
<span>for</span> url <span>in</span> urls<span>:</span>
	html <span>=</span> requests<span>.</span>get<span>(</span>url<span>)</span>
	d<span>.</span>wait<span>(</span>url<span>)</span>
	<span>print</span><span>(</span>html<span>.</span>status_code<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br></div></div><p><img src="@source/column/crawler/s2_02.assets/1596515444855-5daa9fde-b6d9-4966-b826-07b2f32fdeb0.png" alt="" loading="lazy"></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>爬虫技术成就了这些商业公司的</title>
      <link>https://bornforthis.cn/posts/06.html</link>
      <guid>https://bornforthis.cn/posts/06.html</guid>
      <source url="https://bornforthis.cn/rss.xml">爬虫技术成就了这些商业公司的</source>
      <category>悦创杂谈</category>
      <pubDate>Thu, 12 May 2022 17:20:02 GMT</pubDate>
      <content:encoded><![CDATA[<p>从 98 年 google 以搜索技术起家开始，互联网至今，以提供内容为主的互联网企业每一家都离不开小爬虫的帮助，大到互联网巨头，小到刚成立没几天的创业公司， 在早期没有足够内容来撑住自家网站和 app 时，都会采取抓取手段来补充内容，让自家产品显得内容满满。</p>
<p><img src="@source/posts/06.assets/image-20220512172820550.png" alt="image-20220512172820550" loading="lazy"></p>
<p>还有好些公司的商业模式就建立在爬虫技术之上的，比如搜索引擎公司、大数据处理公司、网络舆情监控公司，没有数据，他们的公司就没法运转。</p>
<p>另外现如今互联网公司的获客成本上升，出现了增长黑客这个概念，里面的大量运营技巧都是要依赖于爬虫技术的手段来驱动，这里不是指抓数据，而是模仿用户请求，模仿用户操作，自动发贴等手法来新增和激活用户。</p>
<p><strong>接下来悦创就来浅谈几家在这方面做得成功的公司。</strong></p>
<ol>
<li>
<p>提到爬虫，必然会说起搜索引擎，它是直接利用爬虫抓取信息来构建底层服务的。简单粗暴，但是直接有效，而如今世界上最大的两家搜索引擎服务公司( google 和百度)，已分别是 7 千亿和 600 亿美金市值。</p>
</li>
<li>
<p>现在已是国民资讯 app 的今日头条，早期通过抓取数百家机构的新闻源，然后以技术手段来分发给用户，做到千人千面的阅读体验，现在已是中国互联网公司第三极。</p>
</li>
</ol>
<p>这也是一个在早期直接利用爬虫手段而成功的例子，如果不抓取别人的新闻资讯，今日头条根本不可能成功。</p>
<ol start="3">
<li>做职场社交，获得 2 亿美金投资的脉脉，早期直接抓取微博用户信息，用来弥补自身用户数量的不足，完成了脉脉早期几百万用户积累，不过脉脉抓取微博用户信息已被法院判决为非法，做社交媒体和舆情监控的估计没几家没抓过微博的数据吧。要小心噢。</li>
</ol>
<p>当下随着国家知识产权法规越来越完善和严格，这种直接抓取别人信息然后直接商业化的行为够你进去蹲几年了。所以要慎重哦！！！</p>
<p><strong>每个时代都有它所谓的企业原罪，8090 年代是企业产权不明，要论互联网时代的原罪估计就是企业早期冷启动时抓取的内容是否应该直接商业化吧。</strong></p>
<p>如果现在再做一个类似搜索引擎和今日头条的产品，不解决版权问题，会随时被请喝茶吧。那么现在爬虫抓取的内容就不能商业化了吗？
也不尽然，比如政府公开的数据是可以直接商用的。</p>
<ol start="4">
<li>在企业工商信息查询领域另辟蹊径的天眼查/企查查。 这两家企业把各个省，市的官方几千万家工商信息抓取出来，结构化整合后提供给用户查询，让人眼前一亮。</li>
</ol>
<p>这个 APP 已成为创业者，投资人，老板们的标配APP，查询法人信息，企业股权结构等等一目了然。类似的数据还有商标，专利，法院判决文书等等</p>
<p>另外在电商领域抓取各家电商平台做比价网站一直是一个商业模式，比如即将在A股上市的什么值得买，把各家电商网站的商品和价格抓取过来，把他们的价格差异展示出来，方便用户查看哪家网站的便宜，但是后来各家电商网站都把价格信息图片化之后，解析准确价格的难度就加大了不少。</p>
<p>再比如在纳斯达克上市，后又被私有化的去哪儿网，在早期能够崛起成为一个机票和酒店预定的流量入口，就是他的搜索比价模式，实时抓取各家机票和酒店信息，把价格差异展示出来，而这正击中了用户想要买便宜的需求。</p>
<p>用抓取的数据发展成为一个商业模式的例子还有很多，以上举了几个较为知名的，还有悦创了解的很多个人站长，自由职业者都是靠着抓取和整合数据做出了不错的流量和用户，每年有不菲的收入，在面朝大海，春暖花开的地方，吃着火锅，喝着小酒，以后再为大家一一道来。</p>
<p>原文链接：<a href="https://www.yuanrenxue.com/crawler/crawler-makes-company-stronger.html" target="_blank" rel="noopener noreferrer">https://www.yuanrenxue.com/crawler/crawler-makes-company-stronger.html</a></p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>03-个人利用 Python 爬虫技术怎么挣钱-1万被动收入</title>
      <link>https://bornforthis.cn/column/crawler/s1_04.html</link>
      <guid>https://bornforthis.cn/column/crawler/s1_04.html</guid>
      <source url="https://bornforthis.cn/rss.xml">03-个人利用 Python 爬虫技术怎么挣钱-1万被动收入</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Tue, 04 Aug 2020 12:02:30 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>我利用 Python 爬虫技术有时间的时候，月挣1万被动收入的方式，在正式聊 Python 爬虫技术之前，先来说说挣钱的事，说说作为一个自由职业或兼职者怎么利用爬虫来挣钱。</p>
<p><img src="@source/column/crawler/s1_04.assets/1596513867186-4f2f7d62-21fb-403c-a311-cdcaf4dba9ae-165234482393620.png" alt="" loading="lazy"></p>
<hr>
<p><strong>个人爬虫挣钱方法大致如下</strong></p>
<h2 id="_1-爬虫技术挣钱方法" tabindex="-1"> 1. 爬虫技术挣钱方法</h2>
<h3 id="接外包爬虫项目" tabindex="-1"> 接外包爬虫项目</h3>
<p>这是网络爬虫最通常的的挣钱方式，通过外包网站，熟人关系接一个个中小规模的爬虫项目，一般向甲方提供数据抓取，数据结构化，数据清洗等服务。</p>
<p>各位新入行的小伙伴看官大多都会先尝试这个方向，直接靠技术手段挣钱，这是我们技术人最擅长的方式，但是竞争也是最激烈的，外包接单网站上的爬虫项目已经被砍到了白菜价，因为项目竞价的人太多。</p>
<p>接外包的地方在国内有：猪八戒网、a5外包等、国外有 freelancer，freelancer 上挣的是美刀，看官要接外包可以试试，不过要跟印度阿三竞争。美国学生也懒，以前接触 freelancer 时，上面还有美国学生 python 作业没完成，在 freelancer 上花 60美刀找人帮忙做作业。</p>
<p>做外包越来越难，做的人太多，网上能接爬虫外包的人从在校大学生、两鬓白发的程序员，到几个人团队作战都在抢几千元一个的项目，交付时间又很紧，你如果没有客户资源，现成的解决方案，和稳定，高效率的爬虫技术来支撑，是抢不到好单的。</p>
<p>不过有一个方向从前段时间开始知道，到现在的观察来看都还有钱途，就是写发贴机。小悦对发贴机一直记忆犹新的原因是刚开始学 Python 的时候，毕滢的自动上传下载机和那会在 freelancer 上了解到一个老外靠写发贴机，一年挣了50万。</p>
<p><strong>什么是发贴机？</strong></p>
<p>就是自动往论坛，社交媒体自动发帖子，发评论等，甲方通常使用发贴机在大量的网站上使用大量的账号灌水，去达到甲方的商业目的。这是一个体力活，你要研究大量网站的登陆流程，发帖流程，网站一改版，你就又要重写流程，现在发贴机任然有市场，不过现在对登陆限制，发帖限制等反爬措施都比以前先进很多， 写一个好的稳定的发帖机很难。</p>
<h2 id="_2-爬虫技术挣钱方法" tabindex="-1"> 2. 爬虫技术挣钱方法</h2>
<h3 id="整合信息、整合数据做产品" tabindex="-1"> 整合信息、整合数据做产品</h3>
<p>简单说就是抓取分散在各个角落的信息，整合后用网站或微信或 APP 呈现出来，以通过网盟广告，电商佣金，直接售卖电商产品或知识付费来变现。</p>
<p>别被产品这个词吓到，一个技术人员通过自学开发一个简单的网站，APP，小程序，直接使用 wordpress，或者接入别人的电商系统不是难事。关键是需要一些运营技巧，这方面个人站长是做得最好的，自己摸索运营方法，自己还学习技术开发。咱们技术人员也要了解运营和产品知识。</p>
<p><strong>有句话叫着：流氓不可怕，就怕流氓有文化。 我想说的是：技术不可怕，就怕技术懂运营。</strong>（哎，不押韵啊！）</p>
<p>在当下互联网和移动互联网盛行的时代，作为技术人也要去了解和明白运营技巧，在公司里你能更好跟产品和运营沟通，也会有更多的晋升空间；作为自由职业者和创业者就更加需要。(跑题了)</p>
<p>关于信息整合，数据整合老猿在<a href="https://bornforthis.cn/posts/06.html" target="_blank" rel="noopener noreferrer">《爬虫是如何成就了这些商业公司的》</a>中提到的去哪儿和天眼查这两家公司是比较典型的，去哪儿是整合各家航空公司的机票价格，方便用户比对哪个航班的价格便宜；天眼查是整合各个省市的企业工商信息，提供多纬度的企业信息，股东信息查询，节省了用户不少时间。</p>
<p>机票信息和工商信息在没有这两家公司之前也都是存在的，但是都散落在不同的网站上，用户查询时就比较费劲，这两家就是把这些信息抓取，处理，聚合到一块来提供查询服务。</p>
<p><strong>你整合后的信息要能提高用户的使用效率才有价值。</strong></p>
<p>类似的还有商标查询，专利查询这些，现有的都很难用，你可以从商标局中把几千万个商标抓取出来，提供一个更好的查询网站或者小程序，每天都会有不错的流量。</p>
<p>别以为这些没有机会了，告诉你，爬虫前辈们在17年还抓了几千万家企业工商信息做成一个网站薅SEO流量，每个月还能带来小几千元的网盟收入。
当然这些你要去了解一些流量技巧，社群运营技巧等，我相信猿们周末少花些时间去研究片子，研究妹子，用点时间在学习上肯定手到擒来。</p>
<p><strong>提醒：抓取的数据如果要商业化，要小心知识产权问题噢。</strong></p>
<p><strong>还要提醒一点：抓取和处理这些数据的代价要小于人工处理的代价，使用爬虫代替人工才有价值。</strong></p>
<h2 id="_3-爬虫技术挣钱方法" tabindex="-1"> 3. 爬虫技术挣钱方法</h2>
<h3 id="做自媒体-做知识社群" tabindex="-1"> 做自媒体，做知识社群</h3>
<p>这是随着微信兴起，移动支付兴起后的一个方向。当你具备了扎实的编程功底和实战经验后，无论是想塑造个人品牌还是做自媒体谋生，对外输出技术文章，这是当下一个不错的选择，比如悦创就在尝试做AI悦创，呵呵。做自媒体写文章贵在坚持，不要担心笔杆子功夫不行，悦创这篇文章写到这里花了两天8小时，见笑了。做自媒体不敢写得太多，因为鄙人也是在学习中，但是我相信做永远比不做好。</p>
<h2 id="_4-爬虫挣钱方法" tabindex="-1"> 4. 爬虫挣钱方法</h2>
<h3 id="做决策的数据依据-比如买卖股票" tabindex="-1"> 做决策的数据依据，比如买卖股票</h3>
<p>首先，买卖股票有风险，这里不提倡噢。有前辈在17年买美股，用8万本金，半年后翻到24万，操作太激进后来在2周内本金只剩3万，哭到在厕所。</p>
<p>针对C端用户的互联网公司的产品在社交媒体上大都会被热烈讨论，这些产品卖的好还是不好，可以通过抓取社交媒体上的用户讨论来分析。</p>
<p>比如苹果发布的iPhone XS,iPhone XR 可以通过抓取微博上最近发微博的用户设备情况来观察 iPhone 在中国的销售情况，还可以跟iPhone 以前每款新品上市时，那时的用户发微博设备情况来对比，是比以前卖的好还是差。</p>
<p>一点浅见，不要轻易入市，风险较大。</p>
<p>本来写了第5点，但是有些灰产，跟正能量不相符，还是删掉。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>02-小悦为什么写 Python 爬虫教程</title>
      <link>https://bornforthis.cn/column/crawler/s1_03.html</link>
      <guid>https://bornforthis.cn/column/crawler/s1_03.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-小悦为什么写 Python 爬虫教程</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Tue, 04 Aug 2020 12:02:30 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>对于 “爬虫”， 或许你只是听说过，或许已经有所了解。无论怎样，你可能有过这样的困惑：</p>
<ul>
<li>学了爬虫不知道怎么挣钱？</li>
<li>技术不知道如何进阶？</li>
<li>遇到问题不知道找谁交流？</li>
</ul>
<p>以前，小悦在学习 Python 时就遇到了这样困惑。</p>
<p>曾经，“独上高楼，望尽天涯路”；</p>
<p>好在，“衣带渐宽终不悔，为伊消得人憔悴”；</p>
<p>而今，“蓦然回首，那人却在，灯火阑珊处”。</p>
<p>在这几年不断实践中，这些困惑都被一一解开。坚定的目标，专注的追寻，豁然开朗般的领悟，让技术知识融会贯通。领悟得越多就越想把这些经验和知识分享出来，给那些跟曾经的我们有一样困惑的小伙伴们多一点借鉴。于是就动起了笔写下了这份教程。</p>
<h2 id="_1-小悦学-python-爬虫的过程" tabindex="-1"> 1. 小悦学 Python 爬虫的过程</h2>
<p>从报名培训班，花了不下几万，最后得到的知识少之又少，收智商税的课程、割韭菜的课程让我深受其害。这个部分我之后有时间的话继续写。</p>
<h2 id="_2-爬虫是一个综合技艺" tabindex="-1"> 2. 爬虫是一个综合技艺</h2>
<p>爬虫是一个运用综合技能的工作，一个好的爬虫工程师应该要具备前端(html、JS、浏览器和 APP 抓包)，HTTP 知识，简单数据挖掘(数据结构化、清洗、排重等工作)，数据存储等知识。</p>
<p>熟练运用以上技能可以算作一个合格的爬虫码农，能够处理过百万的网页数据。当处理上千万的网页数据时，你的存储方法，内存调配方式，抓取策略就又需要你打怪升级了。当对抓取的实时性和数据量要求都很高时，爬虫其实又变成了一个社会工程，需要解决大量分布的 IP 和账号问题。</p>
<h2 id="_3-从最简单的-python-爬虫开始练习" tabindex="-1"> 3. 从最简单的 Python 爬虫开始练习</h2>
<p>不要被上述的一堆名词吓到，如果你是一个初学者，你要做的就是多动手练习，从最简单的爬虫写起，在编码和调试的过程中你会遇到各种各样的问题，这时就是你最好的学习和进阶时刻，在解决这些问题中你会摸索出该去掌握哪些技巧。</p>
<p>这些知识都是小悦在过去一个坑一个坑趟过来的，小悦打算写一个 AI悦创 Python爬虫教程系列，会把 Python爬虫教程分成几部分，这部教程主要写给刚学习爬虫的小伙伴们，后续根据各位看官的反馈来续写第二部教程。</p>
<p><strong>如果你也跟我们一样有过同样困惑，如果你想在早期学习阶段少走一些弯路，那么从现在开始，就跟着悦创一起来学习 Python 爬虫吧。</strong></p>
<p>下一篇咱们讲怎么利用 python 爬虫来挣钱。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>01-为什么做这个系列爬虫私教入门的课程</title>
      <link>https://bornforthis.cn/column/crawler/s1_02.html</link>
      <guid>https://bornforthis.cn/column/crawler/s1_02.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-为什么做这个系列爬虫私教入门的课程</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Tue, 04 Aug 2020 11:57:30 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p><img src="@source/column/crawler/s1_02.assets/1596513426312-d946e249-77d8-4a30-a474-b5bd1d4543c2.png" alt="" loading="lazy"></p>
<p>这一篇呢，是我们的第零篇，主要给大家介绍一下这个课程的大致情况。</p>
<h2 id="目录" tabindex="-1"> 目录</h2>
<ol>
<li>为什么要写这门系列课程？</li>
<li>这门课的主要目的是什么？</li>
<li>这门课的主要内容有哪些？</li>
<li>学完之后我能收获什么东西呢？</li>
</ol>
<h2 id="_1-为什么要写这门系列课程" tabindex="-1"> 1. 为什么要写这门系列课程？</h2>
<p>先来解答两个很多人都会问的问题，第一个：<strong>“为什么要写这门系列课程？”</strong></p>
<ul>
<li>市面上的相关内容质量低</li>
<li>市面上的相关内容不成体系</li>
<li>很多收智商税的培训班</li>
</ul>
<h3 id="_1-1-市面上的相关内容质量低" tabindex="-1"> 1.1 市面上的相关内容质量低</h3>
<p>其实，原因很简单。第一点呢，是市面上的相关内容质量比较低。怎么说呢，有关注一些<strong>公众号</strong>或者<strong>专栏</strong>的朋友们应该会发现，现在市面上的大部分爬虫的文章千篇一律。也就是像：<strong>自动化测试工具来做某个网站的登录或者是采集一些所谓的动态页面，又或者是那种其实，只需要：全局搜索、打个断点就能秒杀掉的那种网页。<strong>那么这些内容对于</strong>纯粹的新手</strong>而言可能还好，因为能够了解一些之前不知道的东西。但是，对于一些有经验的人而言，这些内容都毫无价值。</p>
<p>因为，它们<strong>反反复复</strong>的就只有自动化测试工具的使用和简单的一些搜索、断点之类的东西。对于实际工作中你会碰到的各种<strong>骚操作</strong>，以及<strong>各大厂的人机验证</strong>而言，只会这些东西（自动化测试工具的使用和简单的一些搜索、断点等等）是远远不够的。而且，这些内容也是很多机构平台经常拿来讲的，打着各种招牌（某某大学团队、某某机构等等）来水课的。</p>
<p>而我本系列课程呢，会带你做一些**工作中真正会碰到的、有难度的东西并且会告诉你它们的原理，他们为什么会这么做。**所以放心，这个内容的质量是很ok的，你花的钱也绝对值。</p>
<h3 id="_1-2-市面上的相关内容不成体系" tabindex="-1"> 1.2 市面上的相关内容不成体系</h3>
<p>那么我所要讲的第二点是：市面上的相关内容不成体系。这一点的话，如果你是有仔细观察过自媒体行业的朋友，应该不难发现——<strong>很多不是真正在某个行业里做事的人，搞了一个自媒体就开始水文章做课程，各种互推、引流</strong>，然后就想着捞钱了。他们通常是这样的，每天要么引流、要么转载一些别人的文章或者是伪原创的一些水文。那这种人，他们其实<strong>懂的也并不多</strong>。文章内容通常<strong>不起考证、错漏百出</strong>，而且搞来搞去其实都是那些内容。（也就是前面说的：自动化测试、全局搜索、打个断点之类的，这种很简单的东西。）</p>
<p>那么，这时候同学们会问——那些大牛们呢？</p>
<p>他们要么是在大厂做安全，接触到的东西很多不方便分享。要么就是做灰黑产的，要是把东西分享出来的话，自己可能就没得做了——毕竟闷声发大财嘛。不过，以后这个情况就会有所改善了。因为，我所写的这们课程将会从浅到深地给你<strong>讲解 JavaScript 逆向相关的知识点</strong>。你不用担心不成体系，因为内容非常地全面，学完之后，你即使没有学会，也会对整个 <strong>JavaScript 逆向方面的知识，有一个清晰的了解。</strong></p>
<h3 id="_1-3-很多收智商税的培训班" tabindex="-1"> 1.3 很多收智商税的培训班</h3>
<p>接下来，我们来讲第三点，现在有很多收智商税的培训班。我们能在朋友圈、公众号之类的地方，看到这些培训班的广告。他们通常是以大数据或者是人工智能之类的热门方向作为营销点。然后，也有一些单纯教 Python 或者是爬虫方向的。不过呢，不管他们怎么搞花样——<strong>最终他们的内容都是比较简单、初级的</strong>。基本上都是那种......就我自己来说吧，<strong>都是一些看书、搜索引擎搜一搜就能学会的东西</strong>。那么，我这里主要来说一下爬虫方面的。</p>
<p>爬虫方面的话，他们培训班的课程一般内容都很简单，基本上就是：<strong>正则表达式、XPath、Requests、Scrapy、BeautifulSoup</strong>，然后可能就先这样子的基础爬个静态页面。顶多还有一些抓包或者是 **Puppeteer、Selenium 之类的东西。**然后就没有了，仅此而已。</p>
<p>课程价格可能还定个......五六千、七八千甚至上万的也有。然后我这个系列课程就不一样了，内容实际有广度有深度，价格相对于那些收智商税的而言，真的很低了。我觉得有些说我们定价贵的，可能是看盗版或者看白嫖的看多了。没有那种知识付费的意识了，一个学完之后，你哪怕接个外包都能赚回来的成本的课程，不值这个价格么？</p>
<p>好了，我们现在把话题扯回来。前面说了三个因素，那么这三个因素会导致出现什么问题呢？</p>
<p>很简单，招爬虫的（公司）会招不到合适的人。好几个之前招人的朋友都会吐槽，为什么招个靠谱、技术过得去的人这么难。这个问题呢，在我买过的课程和其他事情上也遇到过，还做了个统计。</p>
<p><strong>大概是这样的：</strong></p>
<p>在这些朋友收到的简历中呢，有 90% 的人只会一些简单的东西，他们通常是只会：正则、XPath、Requests、Scrapy、Selenium 之类的很基础的东西——这些就是市面上那些培训班你能看到的那些东西，以及各种营销号发的水文里面所会包含的这些东西。然后还有 95% 的人对逆向几乎没有了解，只会<strong>自动化测试工具 + 代理池</strong>怼爆一切。甚至有一小撮人会搞简历造假。这其实实一件很恐怖的事情，这说明了现在做爬虫的人有很大一部分，可能是看了一些网上的简单文章，或者是刚从培训班出来，然后他们标个两三年工作经验就开始找工作了。</p>
<p>所以呀，害......</p>
<p>我们再来看一下，常见的简历。</p>
<p><strong>简历一：</strong></p>
<table>
<thead>
<tr>
<th>序号</th>
<th>个人能力</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>熟练使用 Python 爬虫常用模块</td>
</tr>
<tr>
<td>2</td>
<td>熟练使用 Scrapy 框架</td>
</tr>
<tr>
<td>3</td>
<td>熟练使用 Scrapy-redis 分布式</td>
</tr>
<tr>
<td>4</td>
<td>熟练使用 Selenium +  Chrome 模拟浏览器获取动态 html</td>
</tr>
<tr>
<td>5</td>
<td>掌握常见的反爬机制</td>
</tr>
<tr>
<td>6</td>
<td>熟练使用 正则、xpath、bs4、解析 html</td>
</tr>
<tr>
<td>7</td>
<td>熟练使用 mongodb 与 redis 数据库</td>
</tr>
<tr>
<td>8</td>
<td>熟悉 Linux 系统使用</td>
</tr>
</tbody>
</table>
<p><strong>简历二：</strong></p>
<blockquote>
<p>Scrapy：爬虫最熟悉 Scrapy，其他框架略会不常用，熟悉 Scrapy 爬虫流程，熟练自定义中间件设置代理，浏览器和 cookies 等，熟悉 Scrapy 和 django 的对接共享数据库，最熟悉的解析 html 方式是 Xpath 和正则表达式，其他解析方式不常用。</p>
</blockquote>
<p><strong>简历三：</strong></p>
<ol>
<li>具备爬虫开发经验</li>
<li>熟练掌握网络爬虫框架 scrapy</li>
<li>熟练掌握 HTML、CSS、JavaScript 等页面技术</li>
<li>熟练使用正则表达式、xpath、css 选择器等页面提取方式，能够从结构化和非结构话的数据中提取信息。</li>
<li>熟悉 MySql，MongoDB、redis 等数据库，熟悉 SQL 语言</li>
</ol>
<p><strong>简历四：</strong></p>
<blockquote>
<p>技能栈：
熟悉 Python，了解面向对象，大致了解过主要的 Python 库，也喜欢  Pythonic 的 代码（还在努力）
熟悉 Django
熟悉 HTML、CSS、JS
了解 Bootstrap （在自己开发网站使用过）
了解爬虫，使用 Requests 写过几个小爬虫（爬取 Instagram 球星照片）
对网络组成和 HTTP 协议有大致了解。</p>
</blockquote>
<p>上面是三年经验、市场均价招爬虫会碰到的大多数情况，是不是发现内容都挺简单的？跟我前面说的差不多，比如说 Scrapy、Selenium、正则表达式、Xpath、BS4，然后还有数据库的基本使用。基本上就是这些东西。其他的像 Django 种跟爬虫没关系的，其实就可以忽略。然后，只会这些的话，说真的<strong>没啥用</strong>。现在不管是 Web 还是App 都是越做越安全的，而企业如果要招垂直爬虫的话，肯定也都不是爬一些简单的静态页面，对逆向水平有要求是必然的事情。不会逆向就跟咸鱼一样，很可能连工作都招不到。<strong>所以，建议大家认真好好学学逆向</strong>。</p>
<h2 id="_2-这门课的主要目的是什么" tabindex="-1"> 2. 这门课的主要目的是什么？</h2>
<p>我做这个课程其实主要有三个目的：<strong>传播优质知识、打击收智商税的、打破固有观念</strong></p>
<p><strong>传播优质知识</strong></p>
<blockquote>
<p>毕竟现在市面上的水文、智商税实在是太多了。像前面说的，招人都不好招。</p>
</blockquote>
<p><strong>打击收智商税的</strong></p>
<blockquote>
<p>我要用没有水分的价格和知识碾压他们。</p>
</blockquote>
<p><strong>打破固有观念</strong></p>
<blockquote>
<p>现在有个很奇怪的事情就是，很多人觉得搞公众号的是营销的，卖课的就是收智商税的（当然，还有一些被收智商税而不自知）。然后对正常的内容爱答不理，如果混 V2EX 的朋友应该会知道，现在很常见这种事情。这样会导致整个市场的恶性循环，因为大家都发现，其他人就不爱看这些东西。反而那些新手会对营销话的东西很感兴趣，非常喜欢看，甚至还愿意交钱。既然能赚钱，为什么不做呢？
这样大家就开始都变成那种讨人厌的样子了，毕竟那样讨人厌，但是能赚钱呀。谁不希望自己的付出能有一点回报呢？所以 ，我希望我的这个课程呢，能改变一下这个观念，也能然这种情况有所好转，哪怕只是一点点，所以希望大家能多多支持优质内容。</p>
</blockquote>
<h2 id="_3-这门课的主要内容有哪些" tabindex="-1"> 3. 这门课的主要内容有哪些？</h2>
<p>我们现在来看一下这个课程的主要内容，内容我分为了七大块：</p>
<ul>
<li>爬虫基础原理</li>
<li>爬虫基本库的使用</li>
<li>多种形式的爬取方法</li>
<li>反爬虫的应对方法</li>
<li>App 爬虫</li>
<li>智能化解析</li>
<li>Scrapy 框架的使用</li>
<li>「由于课程内容在不断的完善，所以课程表将会一直更新！</li>
</ul>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>00-Python 的环境不会搭？看这里准没错！</title>
      <link>https://bornforthis.cn/column/crawler/s1_01.html</link>
      <guid>https://bornforthis.cn/column/crawler/s1_01.html</guid>
      <source url="https://bornforthis.cn/rss.xml">00-Python 的环境不会搭？看这里准没错！</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Tue, 04 Aug 2020 11:55:30 GMT</pubDate>
      <content:encoded><![CDATA[<p><img src="@source/column/crawler/01.assets/1596513066859-43b79d21-f2e0-4d4a-a241-49b4ef70cb5e.jpeg" alt="" loading="lazy"></p>
<blockquote>
<p>没有智慧的头脑，就象没有腊烛的灯笼。		——列夫·托尔斯泰</p>
</blockquote>
<p>你好，我是悦创。</p>
<p>自学一门编程语言着实不易。从我自己的经历看，你需要翻越好几个障碍，从心态，到体力，再到思维，最终才能成为一名优秀的程序员。所以说掌握一门语言，需要你用心去感悟，去认真体会你和“她”的那一丝默契。</p>
<p>但是遗憾的是，太多的朋友们，并不是倒在了中途，而是他们并没有开始，是的，他们连 <code>Python</code> 公主的纤纤玉手都没有摸到。</p>
<p><strong>Python 应该下载哪个版本？</strong></p>
<p><strong>Python 环境如何配置？</strong></p>
<p>推荐几款最好用的 <code>Python</code> <code>IDE</code> 等等。我们的挑战在于选择太多，在丰收的农场门口，我们望着满眼的西瓜和葡萄，踌躇满志却不敢前进。</p>
<p>如果你现在还没有配置好 <code>Python</code> 环境，那么恭喜你，跟着本文走，你将能够收获基于 <code>Python3.7</code> 搭建的编程平台，以及以 <code>Jupyter</code> 为主要工具的编程环境，本文还将带你安装常用的数据分析工具以及可视化工具，一站式购齐，无后顾之忧。</p>
<p>如果你已经安装了 <code>Python3.7</code> 的环境，或者 <code>anaconda</code> 环境，你也可以顺着本文的思路往下走，工具不是重点，配置环境的能力才是。</p>
<div><p>提示</p>
<p>千万别给我使用 anaconda 安装 Python 环境！！！其他不多说。</p>
</div>
<p>但是如果你的 <code>Python</code> 环境来历不明（不明论坛下载），我强烈建议你卸载后重新安装官网版本（ <code>Python</code> 的卸载方式同普通软件，在控制面板中卸载即可）。毕竟 <strong>&quot;磨刀不误砍柴工”</strong> ，有的版本残缺不全，谁也无法预测你会出现什么 bug。</p>
<p><strong>本文以windows 10 X64系统为例，演示本地 Python 数据分析环境的搭建过程。</strong></p>
<details><summary>视频播放</summary>
<iframe src="//player.bilibili.com/player.html?aid=668871436&bvid=BV1sa4y1a7kN&cid=211502373&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 100%; height: 500px; max-width: 100%; align:center; padding:20px 0;"> </iframe>
</details>
<h2 id="_1-安装-python-环境" tabindex="-1"> 1. 安装 Python 环境</h2>
<h3 id="_1-1-python-软件下载" tabindex="-1"> 1.1 Python 软件下载</h3>
<p>作为 21世纪的大好青年，从来都是要玩最正宗的，盗版？！那是上一代人玩剩下的。特别是在正版还免费的情况下。推荐去 Python 官网<a href="https://www.python.org/" target="_blank" rel="noopener noreferrer">https://www.python.org/</a> 下载。部分朋友可能加载会比较慢，稍安勿躁，除非网络问题，网站都是能够访问的。</p>
<p><img src="@source/column/crawler/01.assets/1596513066859-80926084-403a-49bf-a08b-82509cc30b81.jpeg" alt="" loading="lazy"></p>
<p>进入官网后，你可以直接按照上图的提示，选择 <code>Windows</code> 标签，进入 <code>Windows</code> 平台的 <code>Python</code> 版本详单页面（ <code>Releases Page</code> ），建议选择 3.7或以上的版本。<code>Python2.7</code> 将在 2020年停止所有更新，就像曾经辉煌的 <code>Windows XP</code> 一样，最终慢慢成为历史的尘埃，所以本专栏不推荐安装 <code>Python2.7</code>。</p>
<p>在选择 <code>Python</code> 版本要注意根据自己 PC 的版本一致，如果自己的版本是 64位，建议选择 <code>x86-64</code> 版本下载，否则直接选择普通版本。切记电脑位数和 <code>Python</code> 版本保持一致，否则以后流的泪都是当初挖的坑啊。</p>
<p><img src="@source/column/crawler/01.assets/1596513066844-4ecf3d87-c9c9-4745-99ca-3a56d009b366.jpeg" alt="" loading="lazy"></p>
<p>对于使用 mac OS 的朋友，请选择 mac OS X 标签，进行下载，步骤基本一致。</p>
<h3 id="_1-2-python-软件安装" tabindex="-1"> 1.2 Python 软件安装</h3>
<p>Python 的安装过程非常人性化，你只要双击安装程序，设置好安装路径，「记得勾选：Add Python 3.7 to PATH」然后不断点击下一步，直至完成安装。</p>
<p><img src="@source/column/crawler/01.assets/1596513066885-e164f3f8-34bd-473a-90bd-0d86776fc059.jpeg" alt="" loading="lazy"></p>
<p><strong>上图 <code>add python3.7 to Path</code> ，是指安装过程中程序默认把安装路径添加到系统环境变量中，此项务必打勾！</strong></p>
<p>至此我们已经初步完成了 <code>Python3.7</code> 的安装。在 <code>cmd</code> 命令行中输入 <code>python</code> ，可以直接进入 <code>python</code> 环境中：</p>
<div><pre><code>C:\Users\Administrator&gt;python
Python 3.7.4 (v3.6.5:f59c0932b4, Mar 28 2018, 17:00:18) [MSC v.1900 64 bit (AMD64)] on win32
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>继续输入我们的第一行 <code>Python</code> 语句，开启我们的数据分析之旅吧：</p>
<div><pre><code><span>>></span> <span>print</span><span>(</span><span>"Life is short, I do data analysis in python!"</span><span>)</span>
<span>"Life is short, I do data analysis in python!"</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>如果把 <code>Python</code> 比作公主的话，那么怎么也得配个丫鬟才对，是吧？我们常说 <code>Python</code> 广泛应用与数据分析、爬虫、网络编程、人工智能、运维等领域，其实是因为基于 <code>Python</code> 有非常多的第三方库，这些库极大地丰富了 <code>Python</code> 的生态，使得 <code>Python</code> 近乎无所不能。那我们该怎么安装这些第三方库呢？</p>
<p>没错，<code>PIP</code> 工具应该说是这块的小能手了。<code>PIP</code> 直观上理解，就是为 <code>Python</code> 量身定做的管理第三方库的小工具，扮演了丫鬟的角色。让我们先来撩一下 <code>PIP</code> ，在 <code>cmd</code> 窗口中输入命令查看 PIP 的版本和安装路径：</p>
<div><pre><code>C:\Users\Administrator&gt;pip --version
pip 19.1 from d:\users\lemeng\appdata\local\programs\python\python37\lib\site-packages\pip-19.1-py3.7.4.egg\pip (python 3.7)
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>如果系统提示 PIP 不是最新版本，请继续执行如下命令：</p>
<div><pre><code>C:\Users\Administrator&gt;python -m pip install --upgrade pip
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>PIP 是不是就这么简单呢？我们稍后揭晓。</p>
<h1 id="_2-jupyter-notebook-最适合做数据分析的编程工具「也可以写爬虫-当然推荐-pycharm-这里我就懒得写了-」" tabindex="-1"> 2. Jupyter Notebook，最适合做数据分析的编程工具「也可以写爬虫（当然推荐 Pycharm 这里我就懒得写了）」</h1>
<p>虽然，Pycharm 的安装懒得写，我却录了一个完整的环境安装视频：<a href="https://www.bilibili.com/video/BV1sa4y1a7kN/" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1sa4y1a7kN/</a></p>
<p>准确来讲，<code>Jupyter Notebook</code> 不仅仅适合做数据分析，而且它非常适合新入门的朋友练习 <code>Python</code>。</p>
<p><code>Jupyter Notebook</code> 是一种以 “问答式” 为重要特征的 <code>Python</code> 编辑器，就像排版精良的笔记，你的程序、执行结果，井然有序。</p>
<p>本专栏重点介绍在 <code>Python</code> 数据分析过程中的 <code>Jupyter Notebook</code> 的使用。在实际案例中，你输入一句，它便返回程序执行的结果。并且执行后程序的内存会被锁定，直到程序关闭，变量才会被销毁、内存被释放。</p>
<p>这种特征，在数据分析领域尤为重要。在数据分析的过程中，一切套路都是围绕着数据本身的特点来的。特别是对于中大型的数据表格，只有熟悉了数据的特点，才能对数据进行下一步的分析。这也正是数据编程与网络编程最大的差别。</p>
<p>我们先安装 <code>Jupyter Notebook</code>，然后通过一个实例来感受它的便捷。</p>
<p>我们推荐通过 PIP 工具进行一键式安装，在 <code>cmd</code> 窗口输入如下命令：</p>
<div><pre><code>C<span>:</span>\Users\Administrator<span>></span>pip install jupyter
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><blockquote>
<p>这里推荐给你的 pip 换源，这里以 Windows10 为例：</p>
<ol>
<li>先打开查看文件后缀：查看 -&gt; 勾选文件扩展名
<img src="@source/column/crawler/01.assets/1596513066961-a2f7d6f0-a3d5-4434-a333-09484434dc38.gif" alt="" loading="lazy"></li>
<li>首先在 Windows 的文件夹「快捷键：Win 图标+ E 」窗口输入 ： %APPDATA%
<img src="@source/column/crawler/01.assets/1596513066834-08a4d1c4-6a73-4bb3-a178-b262e997c8f2.png" alt="" loading="lazy"></li>
<li>然后在底下新建 pip 文件夹，然后到 pip 文件夹里面去新建个 pip.ini ,然后再里面输入内容
<img src="@source/column/crawler/01.assets/1596513066967-eb21e060-7596-4c20-a8b3-9fc2b5ce5eea.gif" alt="" loading="lazy"></li>
<li>输入一下内容：</li>
</ol>
</blockquote>
<div><pre><code><span><span>[</span><span>global</span><span>]</span></span>
<span>index-url</span> <span>=</span> <span>http://mirrors.aliyun.com/pypi/simple/</span>
<span><span>[</span><span>install</span><span>]</span></span>
<span>trusted-host</span><span>=</span><span>mirrors.aliyun.com</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><blockquote>
<ol start="4">
<li><img src="@source/column/crawler/01.assets/1596513066968-a900ee37-f603-408d-87f8-40a0b10e8657.gif" alt="" loading="lazy"></li>
<li>自此就换源结束</li>
<li>补充：
从 pip10.0.0 开始，有个 config 子命令可用来改配置，无需关心不同操作系统下配置文件路径。
详见讨论：<a href="https://link.zhihu.com/?target=https%3A//github.com/pypa/pip/issues/1736" target="_blank" rel="noopener noreferrer">Create a command to make it easy to access the configuration file · Issue #1736 · pypa/pip</a>
实际使用例子：</li>
</ol>
</blockquote>
<div><pre><code># 阿里源
pip config set global.index-url http://mirrors.aliyun.com/pypi/simple/

# 豆瓣源
pip config set global.index-url https://pypi.douban.com/simple

# 阿里云 http://mirrors.aliyun.com/pypi/simple/
# 科技大学 https://pypi.mirrors.ustc.edu.cn/simple/
# 豆瓣(douban) http://pypi.douban.com/simple/
# 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/
# 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>提示安装成功后，推荐设置一下我们常用的 Python 学习路径，这样新建和保存文件均会默认放置到该路径下。在 <code>cmd</code> 窗口中继续输入：</p>
<div><pre><code>C<span>:</span>\Users\Administrator<span>></span>jupyter notebook <span>-</span><span>-</span>generate<span>-</span>config
Writing default config to C<span>:</span>\Users\Administrator\<span>.</span>jupyter\jupyter_notebook_config<span>.</span>py
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>编辑上一步提示的 <code>jupyter_notebool_config.py</code> 文件，找到 <code>c.Notebook.notebok_dir</code> ，放开前面的注释，并按照下图修改完成（路径根据自己的实际情况填写，注意避免放置中文路径，给自己挖坑），保存并关闭。</p>
<p><img src="@source/column/crawler/01.assets/1596513066958-0bb662ed-8192-484d-8ccf-2d6904030ecb.jpeg" alt="" loading="lazy"></p>
<p>到此为止，Python 环境就完成配置了，下面我们就来撩一下吧。</p>
<p>在 <code>cmd</code> 窗口中输入 <code>jupyter notebook</code> ，启动环境：</p>
<div><pre><code>C<span>:</span>\Users\Administrator<span>></span>jupyter notebook
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>通过 <code>New</code> 菜单，新建一个 <code>Python 3</code> 的程序后，在新的页面继续输入：</p>
<div><pre><code><span>for</span> i <span>in</span> <span>range</span><span>(</span><span>10</span><span>)</span><span>:</span>
    <span>print</span><span>(</span>i<span>,</span> end<span>=</span><span>","</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><code>jupyter notebook</code> 界面及效果如下：</p>
<p><img src="@source/column/crawler/01.assets/1596513067059-8c715203-1566-4e5a-abe3-21e2a1f71d89.jpeg" alt="" loading="lazy"></p>
<p>在 <code>Jupyter</code> 的常用工具栏上，有保存、剪切、复制、粘贴、运行、停止等按钮，鼠标移动到按钮上会有提示，总体来说，还是很人性化的，相信上手应该没有难度的。</p>
<p>这里请朋友们注意了，在本专栏的后续章节中，除特殊说明外，<code>Python</code> 程序的演示都是在 <code>Jupyter Notebook</code> 中进行的。</p>
<h2 id="_5-总结" tabindex="-1"> 5. 总结</h2>
<p>到这里，整个基于 Python 的析环境就搭建完成了。总的来说，搭建这套环境的意义就在于：提供了一套爬虫学习的平台，你可以方便地观察数据的规律，并完成对应课程内容学习；所以朋友们还等什么，赶紧加入学习吧。</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>01-课前预习1：理解网络爬虫</title>
      <link>https://bornforthis.cn/column/crawler/stage1_spider1.html</link>
      <guid>https://bornforthis.cn/column/crawler/stage1_spider1.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-课前预习1：理解网络爬虫</source>
      <category>Python 网络爬虫专栏</category>
      <pubDate>Tue, 04 Aug 2020 12:07:30 GMT</pubDate>
      <content:encoded><![CDATA[<h3 id="_1-1-网络爬虫的定义" tabindex="-1"> 1.1 网络爬虫的定义</h3>
<p>你好，我是悦创。</p>
<p>当今最大的网络是互联网，最大的爬虫就是各类搜索引擎，包括谷歌丶百度等。网络爬虫就是按照一定规则去爬去人类所需要的信息的程序，主要通过对URL的请求来实现。一般来说，从搜索引擎这类爬虫搜索到的信息是非常宽泛的，而且夹杂着各种广告，信息是不纯粹的，也有可能不是我们需要的。这种时候，就需要一些聚焦于某一方面信息的爬虫来为我们服务，比方说，专门爬取某一类书的信息，在网站上浏览的时候，可能会有形形色色的图片和一些其他信息干扰我们，如果编写网络爬虫的话，就可以单单把自己想要的信息存储下来，以便数据分析，提取有用的信息。</p>
<h3 id="_1-2-网络爬虫的类型" tabindex="-1"> 1.2 网络爬虫的类型</h3>
<p>现在的网络爬虫大体可以分为四类：全网爬虫，主题爬虫，增量式爬虫和深层爬虫。</p>
<p>全网爬虫：也就是谷歌百度等搜索引擎，这类爬虫会从一些非常基础的URl出发，一直延伸到整个网站，这类爬虫庞大臃肿，需要很大的存储空间以及极高的爬行速度。</p>
<p>主题爬虫：满足特定人的特定需求，不同于全网爬虫，它是有选择地爬行与需求相关的信息。</p>
<p>增量式爬虫：对已经下载的页面采取增量式更新的爬虫，只爬取新产生的或者发生变化的网页，一定程度上可以保证爬取得页面是最新的，减少了空间的浪费，但是复杂度较高。</p>
<p>深层网络爬虫：不能通过静态 URL 访问，隐藏在表单后，只有用户提交一些关键词才能得到的页面。</p>
<h3 id="_1-3-网络爬虫的原理" tabindex="-1"> 1.3 网络爬虫的原理</h3>
<p><img src="@source/column/crawler/stage1_spider1.assets/1596514058635-e2da370b-e4e0-4f38-a522-c08e471f16f4.png" alt="" loading="lazy"></p>
<p>如果正确返回了网页response，就构成了了一次爬虫行为，接下来我们要做的就是解析页面，获取我们需要的信息了。</p>
<p>一般流程如图所示：</p>
<p><img src="@source/column/crawler/stage1_spider1.assets/1596514058626-0ce8cc04-4533-4ffb-b390-2777edd9c428.png" alt="" loading="lazy"></p>
<p>1）从基础URL开始爬行</p>
<p>2）从初始页面抓取到我们需要的URL</p>
<p>3）对新的URL继续解析，再次抓取新的URL</p>
<h3 id="_1-4-网络爬虫的搜索策略" tabindex="-1"> 1.4 网络爬虫的搜索策略</h3>
<p>网络爬虫过的搜搜策略一般分为三种</p>
<p>1）深度优先</p>
<p>深度优先指的是当某个页面的URL被选择后，对被选择的URL进行深度优先搜索，搜索后得到新的页面，再从新的页面继续选择URL，循环往复，直到新的请求页面没有URL为止。</p>
<p>2）广度优先</p>
<p>广度优先指的是爬取完一个页面的全部URL之后，再选择一个URL进行深入，当把新的URL请求的页面的URL全部爬取完毕，再继续深入。</p>
<p>3）聚焦爬虫</p>
<p>聚焦爬虫会通过给下载好的页面打分的形式，根据得分把页面插入队列中，这样就有可能优先追踪那些最有价值的页面。</p>
<h3 id="_1-5常见反爬虫技术与解决方案" tabindex="-1"> 1.5常见反爬虫技术与解决方案</h3>
<p>1）用户请求headers</p>
<p>从用户请求过来的request headers中查看是否存在User-Agent，如果不存在会在中间件中将请求过滤，不会返回正常response。还有一些网站会通过请求头里边的Referer进行检测，一些资源网站的防止盗链技术就是通过这个来实现。对于这种反爬虫机制，我们只需要在headers中添加user-agent与referer就可以解决。</p>
<p>2）用户访问频率</p>
<p>有些网站通过用户请求网站的频率来判断请求者是用户还是爬虫，比如豆瓣会对访问频率过高的爬虫进行封禁，这就需要我们控制请求网站的速度，或者是建立IP代理池来解决。</p>
<p>3）字体反爬虫</p>
<p>实习僧等网站会把常用字和数字自己建立一套关系映射，通过前端渲染，得不到字体映射关系只会看到乱码。</p>
<p>4）网站目录数据加载</p>
<p>上述反爬虫技术是在静态网站，还有一些网站会通过Ajax交互，遇到这种情况，需要我们找到Ajax访问接口，分析具体的参数和结构，在爬虫中模拟Ajax，就可以获得所需数据。</p>
<p>5）通过数据加密</p>
<p>有些网站会通过JavaScripts对一些参数加密，这些加密代码可以在js文件中找到，分析代码需要掌握前端技术，但是耗费时间较多，难度大。另一种解决方案是通过selenium，调用浏览器模拟人类行为，slelenium可以完美触发网页的js，基本上解决这类问题，不过爬取速度较慢。一般只有在迫不得已的时候才会使用。</p>
<p>6）基于验证码识别</p>
<p>早期的验证码主要是数字验证码，可以调用第三方平台或者OCR识别技术解决。不过现在出现了图片验证码，目前仍然需要人类去操作；滑块验证码的破解已经有了成熟的技术，就是利用PIL模块与selenium来实现，比如B站登陆时候的滑块验证码。</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>02-章节测试二答案</title>
      <link>https://bornforthis.cn/column/py/basequestion/answer2.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/answer2.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-章节测试二答案</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Tue, 10 May 2022 08:33:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>数字型和字符串类型的变量完全可以互相转换。 A. 正确 B. 错误</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：A 数字型转字符串类型可以使用 <code>str()</code> 函数，字符串类型转数字型可使用 <code>int()</code> 和 <code>float()</code> 函数</p>
</div>
<ol start="2">
<li>加法运算符可以用来连接字符串并生成新字符串。 A. 正确 B. 错误</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B</p>
</div>
<p>3.不管输入什么，Python 3.x 中 input() 函数的返回值总是字符串。 A. 正确 B. 错误</p>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<p>4.Python 字符串方法 replace() 对字符串进行原地修改。 A. 正确 B. 错误</p>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：A</p>
<p>在 Python 中，字符串属于不可变对象，不支持原地修改，如果需要修改其中的值，只能重新创建一个新的字符串对象。</p>
</div>
<p>5.此题无需在线作答，请在纸上作答后查看答案解析 7//3的值为_________；7%3的值为__________。</p>
<div><p>答案解析</p>
<p>2；1</p>
</div>
<p>6.此题无需在线作答，请在纸上作答后查看答案解析 y 变量初始赋值为 10，有代码为：y *= 2，则运算过后 y 的值为__________。</p>
<div><p>答案解析</p>
<p>20</p>
</div>
<p>7.此题无需在线作答，请在纸上作答后查看答案解析 可以使用________函数将数字型的变量转换成字符串。</p>
<div><p>答案解析</p>
<p>str()</p>
</div>
<p>8.下列哪个表达式在 Python 中是非法的？</p>
<p>A. x = y = z = 1</p>
<p>B. x = (y = z + 1)</p>
<p>C. x, y = y, x</p>
<p>D. x += y</p>
<div><p>答案解析</p>
<p>正确答案：B</p>
<p>易错项：C</p>
<p>B 中的 <code>y=z+1</code> 是一个完整的赋值语句，不能放在等号的右边用来再次给x赋值。</p>
<p>A 是同时赋值，C 是变量的值交换，D 等价于 <code>x=x+y</code>。</p>
</div>
<p>9.字符串是 Python 的_________序列。 A. 有序 B. 无序</p>
<div><p>答案解析</p>
<p>正确答案：A</p>
<p>易错项：B 记忆性知识点</p>
</div>
<p>10.此题无需在线作答，请在纸上作答后查看答案解析 当在字符串前加上小写字母_______________或大写字母______表示原始字符串，不对其中的任何字符进行转义。</p>
<div><p>答案解析</p>
<p>正确答案：r、R 记忆性知识点</p>
</div>
<p>11.此题无需在线作答，请在纸上作答后查看答案解析 已知字符串 x = 'hello world'，那么执行语句 x.replace('hello', 'hi') 之后，x 的值为____________。</p>
<div><p>答案解析</p>
<p>正确答案：'hello world'</p>
<p>x 自身的值不会被 <code>replace()</code> 影响。具体理解可以参考 <a href="https://blog.csdn.net/qq_33254766/article/details/124834439" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_33254766/article/details/124834439</a></p>
</div>
<ol>
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p>设 s=&quot;abcdefg&quot;，则：</p>
<ul>
<li>s[3] 的值为____<em>___，</em></li>
<li>s[3:5] 的值为__<em>_；</em></li>
<li>s[:5] 的值为____<em>_；</em></li>
<li>s[3:] 的值为______；</li>
<li>s[::2] 的值为________；</li>
<li>s[::-1] 的值为__________；</li>
<li>s[-2:-5] 的值为________。</li>
</ul>
<div><p>答案解析</p>
<p>正确答案：'d';'de';'abcde';'defg';'aceg';'gfedcba';''</p>
<p>这是 Python 中的切片操作：使用一对方括号、起始偏移量 start、终止偏移量 end 以及可选的步长 step 来定义一个分片。Statr、end 的值都是以字符串下标来说的。 格式： [start🔚step]</p>
<ul>
<li>[:] 提取从开头（默认位置0）到结尾（默认位置-1）的整个字符串</li>
<li>[start:] 从start 提取到结尾</li>
<li>[:end] 从开头提取到 end - 1</li>
<li>[start:end] 从start 提取到end - 1</li>
<li>[start🔚step] 从start 提取到end - 1，每step 个字符提取一个</li>
<li>Python 分片默认步长是 1，-2 到 -5 的步长用 -1才能输出结果，所以结果为空。</li>
</ul>
</div>
<details><summary>图片版答案：</summary>
<p><img src="@source/column/py/basequestion/answer2.assets/ed580f50-6d1a-11ea-b4d9-23ebe60403e6.png" alt="在这里插入图片描述" loading="lazy"></p>
</details>
<ol start="13">
<li>此题无需在线作答，请在纸上作答后查看答案解析。</li>
</ol>
<p>有变量 `name = ' Alex '，请按照要求实现每个功能：</p>
<ol>
<li>移除 name 变量对应的值两边的空格，并输出移除后的内容；</li>
<li>判断 name 变量对应的值是否以 &quot;al&quot; 开头和以 &quot;X&quot; 结尾，并输出结果；</li>
<li>将 name 变量对应的值中的 &quot;l&quot; 替换为 &quot;p&quot;，并输出结果；</li>
<li>将 name 变量对应的值根据 &quot;l&quot; 分割，并输出结果；</li>
<li>将 name 变量对应的值分别变大写和小写，并输出结果。</li>
</ol>
<div><p>答案</p>
<div><pre><code>1.
v=name.strip()  #.strip()移除指定字符串，空白，/t，/n等转义字符
print(v)
2.
v1=name.startswith("al")   #判断以什么开头
v2=name.endswith("X")     #判断以什么结尾
print(v1)
print(v2)
3.
v3=name.replace("l","p")   
print(v3)
4.
name='Alex'
print(name.split('l'))
5.
v5=name.casefold()      #全部变成小写
v6=name.upper()           #变成全部变成大写，对应的有lower()
print(v5)             #swapcase()大小写互相转换
print(v6)
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div></div>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>02-章节测试二</title>
      <link>https://bornforthis.cn/column/py/basequestion/q2.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/q2.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-章节测试二</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Thu, 26 Mar 2020 22:47:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>数字型和字符串类型的变量完全可以互相转换。</li>
</ol>
<p>A. 正确</p>
<p>B. 错误</p>
<ol start="2">
<li>加法运算符可以用来连接字符串并生成新字符串。</li>
</ol>
<p>A. 正确</p>
<p>B. 错误</p>
<ol start="3">
<li>不管输入什么，Python 3.x 中 <code>input()</code>  函数的返回值总是字符串。</li>
</ol>
<p>A. 正确</p>
<p>B. 错误</p>
<ol start="4">
<li>Python 字符串方法 <code>replace()</code>  对字符串进行原地修改。</li>
</ol>
<p>A. 正确</p>
<p>B. 错误</p>
<ol start="5">
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p><code>7//3</code> 的值为_________；<code>7%3</code> 的值为__________。</p>
<ol start="6">
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p>y 变量初始赋值为 10，有代码为：<code>y *= 2</code>，则运算过后 y 的值为__________。</p>
<ol start="7">
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p>可以使用________函数将数字型的变量转换成字符串。</p>
<ol start="8">
<li>下列哪个表达式在 Python 中是非法的？</li>
</ol>
<p>A. x = y = z = 1</p>
<p>B. x = (y = z + 1)</p>
<p>C. x, y = y, x</p>
<p>D. x += y</p>
<ol start="9">
<li>字符串是 Python 的_________序列。</li>
</ol>
<p>A. 有序</p>
<p>B. 无序</p>
<ol start="10">
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p>当在字符串前加上小写字母_______________或大写字母______表示原始字符串，不对其中的任何字符进行转义。</p>
<ol start="11">
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p>已知字符串 <code>x = 'hello world'</code> ，那么执行语句 <code>x.replace('hello', 'hi')</code>  之后，x 的值为____________。</p>
<ol start="12">
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p>设 <code>s='abcdefg'</code>，则：</p>
<ul>
<li><code>s[3]</code> 的值为____<em>___，</em></li>
<li><code>s[3:5]</code> 的值为____；</li>
<li><code>s[:5]</code> 的值为____；</li>
<li><code>s[3:]</code> 的值为______；</li>
<li><code>s[::2]</code> 的值为________；</li>
<li><code>s[::-1]</code> 的值为_______；</li>
<li><code>s[-2:-5]</code> 的值为________。</li>
</ul>
<ol start="13">
<li>此题无需在线作答，请在纸上作答后查看答案解析</li>
</ol>
<p>（知识拓展）有变量 <code>name = ' Alex '</code>，请按照要求实现每个功能：</p>
<ol>
<li>移除 name 变量对应的值两边的空格，并输出移除后的内容；</li>
<li>判断 name 变量对应的值是否以 <code>&quot;al&quot;</code> 开头和以 <code>&quot;X&quot;</code> 结尾，并输出结果；</li>
<li>将 name 变量对应的值中的 <code>l</code> 替换为 <code>p</code>，并输出结果；</li>
<li>将 name 变量对应的值根据 <code>l</code> 分割，并输出结果；</li>
<li>将 name 变量对应的值分别变大写和小写，并输出结果。</li>
</ol>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/zsxq.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>01-章节测试一答案</title>
      <link>https://bornforthis.cn/column/py/basequestion/answer1.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/answer1.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-章节测试一答案</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Mon, 09 May 2022 23:33:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。欢迎来到 Python 核心技术实战，这是你的第一次测试，加油！</p>
<ol>
<li>
<p>以下哪个变量可以做python的变量：</p>
<p>A. 01a</p>
<p>B. class</p>
<p>C. a_int</p>
<p>D. b-int</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：C</p>
<p>易错项：B ，变量名命名规则必须是大小写英文、数字和_的组合，不能用数字开头，且不能以 Python 里的关键字作为变量名。其中 B 为 Python 中关键字，可在命令行中进入交互环境输入 <code>help('keywords')</code> 来查看 Python 关键字列表。</p>
</div>
<ol start="2">
<li>
<p>以下哪个选项不是 Python 的基本数据类型关键字</p>
<p>A. int</p>
<p>B.bool</p>
<p>C. string</p>
<p>D. dict</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：C</p>
<p>易错项：B 字符串的关键字在 Python 里是 str</p>
</div>
<ol start="3">
<li>
<p>此题无需在线作答，请在纸上作答后查看答案解析 语句 <code>x, y, z = 1, 2, 3</code> 执行后，变量 y 的值为__<em>_____</em>_。</p>
<p>请在该文章下面留言，留下你的答案！</p>
</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：2</p>
</div>
<ol start="4">
<li>此题无需在线作答，请在纸上作答后查看答案解析 查看变量类型的 Python 内置函数是________________。</li>
</ol>
<div><p>答案解析</p>
<p>正确答案：type()</p>
<p>记忆性知识点</p>
</div>
<ol start="5">
<li>此题无需在线作答，请在纸上作答后查看答案解析 请写出该代码的输出结果_____________。</li>
</ol>
<div><pre><code>  a = 'ABC'
  b = a
  a = 'XYZ'
  print(b)
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><div><p>答案解析</p>
<p>正确答案：ABC</p>
<p>执行 <code>a = 'ABC'</code>，解释器创建了字符串 <code>'ABC'</code> 和变量 a，并把 a 指向 <code>'ABC'</code> ： 执行 <code>b = a</code> ，解释器创建了变量 b，并把 b 指向 a 指向的字符串 <code>'ABC'</code> ： 执行 <code>a = 'XYZ'</code> ，解释器创建了字符串 <code>'XYZ'</code>，并把 a 的指向改为 <code>'XYZ'</code>，但 b 并没有更改： 所以，最后打印变量 b 的结果自然是 'ABC' 了。</p>
</div>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/zsxq.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>课程表</title>
      <link>https://bornforthis.cn/column/py/basequestion/</link>
      <guid>https://bornforthis.cn/column/py/basequestion/</guid>
      <source url="https://bornforthis.cn/rss.xml">课程表</source>
      <category>Python 基础</category>
      <pubDate>Tue, 02 Mar 2021 12:10:52 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="课程内容" tabindex="-1"> 课程内容：</h2>
<table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>第一章 变量和数据类型</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨变量</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨初识数据类型</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="./q1"><strong>章节测试一</strong></a></td>
</tr>
<tr>
<td><strong>第二章 数据类型（上）</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨数值</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨字符串</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="./hw1"><strong>作业一丨创建一个问答式简历软件</strong></a></td>
</tr>
<tr>
<td>04</td>
<td><strong>作业一讲解</strong></td>
</tr>
<tr>
<td>05</td>
<td><a href="./q2"><strong>章节测试二</strong></a></td>
</tr>
<tr>
<td><strong>第三章 数据类型（中）</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨列表</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨元组</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="./q3"><strong>章节测试三</strong></a></td>
</tr>
<tr>
<td><strong>第四章 数据类型（下）</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨字典</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨集合</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="./q4"><strong>章节测试四</strong></a></td>
</tr>
<tr>
<td><strong>第五章 if条件判断</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨布尔表达式</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨if条件判断</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="./q5"><strong>章节测试五</strong></a></td>
</tr>
<tr>
<td><strong>第六章 while循环</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>while循环</strong></td>
</tr>
<tr>
<td>02</td>
<td><a href="./q6"><strong>章节测试六</strong></a></td>
</tr>
<tr>
<td><strong>第七章 for循环</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>for循环</strong></td>
</tr>
<tr>
<td>02</td>
<td><a href="https://www.aiyc.top/628.html" target="_blank" rel="noopener noreferrer"><strong>作业二丨创建一个运势预测软件</strong></a>：https://www.aiyc.top/628.html</td>
</tr>
<tr>
<td>03</td>
<td><a href="https://www.aiyc.top/630.html" target="_blank" rel="noopener noreferrer"><strong>章节测试七</strong></a>：https://www.aiyc.top/630.html</td>
</tr>
<tr>
<td><strong>复习及测试习题讲解</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>复习及测试习题讲解</strong></td>
</tr>
<tr>
<td><strong>第八章 函数</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨计算机函数的概念</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨函数的定义与调用</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="https://www.aiyc.top/635.html" target="_blank" rel="noopener noreferrer"><strong>章节测试八</strong></a>：https://www.aiyc.top/635.html</td>
</tr>
<tr>
<td><strong>第九章 类</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨类的概念</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨类的使用</strong></td>
</tr>
<tr>
<td>03</td>
<td><strong>第三节丨self参数的使用</strong></td>
</tr>
<tr>
<td>04</td>
<td><a href="https://www.aiyc.top/642.html" target="_blank" rel="noopener noreferrer"><strong>章节测试九</strong></a>：https://www.aiyc.top/642.html</td>
</tr>
<tr>
<td>05</td>
<td><a href="https://www.aiyc.top/647.html" target="_blank" rel="noopener noreferrer"><strong>项目作业丨对话式对战游戏设计</strong></a>：https://www.aiyc.top/647.html</td>
</tr>
<tr>
<td><strong>阶段测试</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><a href="https://www.aiyc.top/649.html" target="_blank" rel="noopener noreferrer"><strong>Python-基础课程结业测试</strong></a>：https://www.aiyc.top/649.html</td>
</tr>
<tr>
<td><strong>课程重点总结及答疑</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td>课程重点总结及答疑</td>
</tr>
</tbody>
</table>
<p>你可以得到：</p>
<ul>
<li>PPT</li>
<li>零基础快速入门</li>
<li>三个小实战</li>
<li>一对一教学</li>
<li>笔记（脑图）：使你专注学习！</li>
</ul>
<p>有兴趣联系我！</p>
<p>我的微信号：Jiabcdefh</p>
<p>如果你有其他需求或者疑问，点击：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ 在线客服</a></p>
<p>微信：</p>
<div align=center><i>Content not supported</i></div>]]></content:encoded>
    </item>
    <item>
      <title>「练习」统计书本的平均评分</title>
      <link>https://bornforthis.cn/posts/05.html</link>
      <guid>https://bornforthis.cn/posts/05.html</guid>
      <source url="https://bornforthis.cn/rss.xml">「练习」统计书本的平均评分</source>
      <category>Numpy and pandas</category>
      <pubDate>Wed, 12 Aug 2020 08:36:02 GMT</pubDate>
      <content:encoded><![CDATA[<p><strong>统计书本的平均评分</strong></p>
<ol>
<li>读取文件 rating.txt 中的的数据并分析</li>
</ol>
<ul>
<li>共有 10000 本书，以数字 id 表示</li>
<li>每个用户的打分为1~5</li>
<li>每一行数据有 3 个数字：分别表示用户 ID，书本 ID，该用户对该书的打分</li>
</ul>
<p><strong>要求输出： 所有书本各自的平均得分</strong> 数据集链接：<a href="https://www.bornforthis.cn/data-analysis-data-set" target="_blank" rel="noopener noreferrer">https://www.bornforthis.cn/data-analysis-data-set</a> 请将你的代码，在下方留言。 题目解析已经答案，请自行购买： <a href="https://www.yuque.com/aiyuechuang/fisb2l/fus7c5" target="_blank" rel="noopener noreferrer">https://www.yuque.com/aiyuechuang/fisb2l/fus7c5</a> <strong>作业解析</strong> 文件较大，没必要在测试的时候每次读取全部数据，我们可以创建个数据副本，数据少一些。</p>
<ol>
<li>读取数据并转换为整数</li>
</ol>
<div><pre><code><span>import</span> numpy <span>as</span> np

data <span>=</span> np<span>.</span>genfromtxt<span>(</span><span>'rating.txt'</span><span>,</span> delimiter<span>=</span><span>','</span><span>)</span>
data <span>=</span> data<span>.</span>astype<span>(</span><span>int</span><span>)</span>
<span>print</span><span>(</span>data<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><ol start="2">
<li>创建两个数组分别存放各个书籍的总评分和总评分人数</li>
</ol>
<div><pre><code>rating_sum <span>=</span> np<span>.</span>zeros<span>(</span><span>10000</span><span>)</span>
rating_people_count <span>=</span> np<span>.</span>zeros<span>(</span><span>10000</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><ol start="3">
<li>For 循环读取每行的数据</li>
</ol>
<div><pre><code><span>for</span> rating <span>in</span> data<span>:</span>
    book_id <span>=</span> rating<span>[</span><span>1</span><span>]</span> <span>-</span> <span>1</span>
    rating_sum<span>[</span>book_id<span>]</span> <span>+=</span> rating<span>[</span><span>2</span><span>]</span>
    rating_people_count<span>[</span>book_id<span>]</span> <span>+=</span> <span>1</span> 
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>第一列是用户的 ID 其实对于我们这道题目来说没什么用，所以我们不需要去管它。 这里我 <code>rating[1] - 1</code> 是为什么减去 1 呢？ 同学们应该是知道的，编程中和数组的索引都是从 0 开始的，所以 减 1 就是为了可以直接使用书本的 ID 进行索引。</p>
<ol start="4">
<li>完整代码</li>
</ol>
<div><pre><code><span>import</span> numpy <span>as</span> np

data <span>=</span> np<span>.</span>genfromtxt<span>(</span><span>'rating.txt'</span><span>,</span> delimiter<span>=</span><span>','</span><span>)</span>
data <span>=</span> data<span>.</span>astype<span>(</span><span>int</span><span>)</span>
<span># print(data)</span>

rating_sum <span>=</span> np<span>.</span>zeros<span>(</span><span>10000</span><span>)</span>
rating_people_count <span>=</span> np<span>.</span>zeros<span>(</span><span>10000</span><span>)</span>

<span>for</span> rating <span>in</span> data<span>:</span>
    book_id <span>=</span> rating<span>[</span><span>1</span><span>]</span> <span>-</span> <span>1</span>
    rating_sum<span>[</span>book_id<span>]</span> <span>+=</span> rating<span>[</span><span>2</span><span>]</span>
    rating_people_count<span>[</span>book_id<span>]</span> <span>+=</span> <span>1</span>

<span># 计算方法一：</span>
result <span>=</span> rating_sum <span>/</span> rating_people_count
<span>print</span><span>(</span>result<span>)</span>
<span># 计算方法二：</span>
<span>print</span><span>(</span>np<span>.</span>true_divide<span>(</span>rating_sum<span>,</span> rating_people_count<span>)</span><span>)</span>

<span># 输出</span>
<span>[</span><span>4.27970709</span> <span>4.35135011</span> <span>3.21434056</span> <span>.</span><span>.</span><span>.</span> <span>4.32352941</span> <span>3.70769231</span> <span>4.00900901</span><span>]</span>
<span>[</span><span>4.27970709</span> <span>4.35135011</span> <span>3.21434056</span> <span>.</span><span>.</span><span>.</span> <span>4.32352941</span> <span>3.70769231</span> <span>4.00900901</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>「练习」分析热门标签</title>
      <link>https://bornforthis.cn/posts/04.html</link>
      <guid>https://bornforthis.cn/posts/04.html</guid>
      <source url="https://bornforthis.cn/rss.xml">「练习」分析热门标签</source>
      <category>Numpy and pandas</category>
      <pubDate>Sun, 30 Aug 2020 08:21:26 GMT</pubDate>
      <content:encoded><![CDATA[<ul>
<li>
<p>任务1：找出最多人想读的50本书的名称</p>
</li>
<li>
<p>任务2：找出这50本书对应最热门的10个标签</p>
</li>
</ul>
<p><strong>文件1：to_read.csv</strong></p>
<ul>
<li>每行两个数据，用户 id 和该用户想读的书籍 id</li>
</ul>
<p><strong>文件2：books.csv</strong></p>
<ul>
<li>书籍的各类 id，名称，作者等信息</li>
</ul>
<p><strong>文件3：tags.csv</strong></p>
<ul>
<li>每行两个数据，标签 id 和标签名称</li>
</ul>
<p><strong>文件4：book_tags.csv</strong></p>
<ul>
<li>每行三个数据，<code>_goodreads_book_id_</code>（和 <code>to_read</code> 中的书籍 id 的对应关系可以在 <code>books.csv</code> 里找到），标签 id，标记次数</li>
</ul>
<p>数据集： 数据集链接：</p>
<ul>
<li>本题数据集文件名称：<strong>homework.zip</strong></li>
<li>本题数据链接：
<ul>
<li>蓝奏云文件链接：<a href="https://aiyc.lanzous.com/iqgPTfxyrxc" target="_blank" rel="noopener noreferrer">https://aiyc.lanzous.com/iqgPTfxyrxc</a></li>
</ul>
</li>
<li>总数据表链接： <a href="https://www.bornforthis.cn/data-analysis-data-set" target="_blank" rel="noopener noreferrer">https://www.bornforthis.cn/data-analysis-data-set</a></li>
</ul>
<p><strong>解答</strong> Python 原生的处理方式，代码如下「简版代码」：</p>
<div><pre><code><span>import</span> pandas <span>as</span> pd
<span>import</span> numpy <span>as</span> np


data <span>=</span> pd<span>.</span>read_csv<span>(</span><span>'../to_read.csv'</span><span>)</span>
<span># print(data)</span>
new_data <span>=</span> data<span>[</span><span>'book_id'</span><span>]</span>
<span># array_lengt = len(set(data['book_id']))</span>
<span># print(array_lengt)</span>
<span># book_count_array = np.zeros(array_lengt)</span>
<span># print(set(new_data))</span>
book_id_values <span>=</span> <span>{</span><span>}</span>
result <span>=</span> <span>list</span><span>(</span>new_data<span>)</span>
<span>for</span> data <span>in</span> <span>set</span><span>(</span>new_data<span>)</span><span>:</span>
    book_id_values<span>[</span>data<span>]</span> <span>=</span> result<span>.</span>count<span>(</span>data<span>)</span>
<span># print(book_id_values)</span>
d_sorted_by_value <span>=</span> <span>sorted</span><span>(</span>book_id_values<span>.</span>items<span>(</span><span>)</span><span>,</span> key<span>=</span><span>lambda</span> x<span>:</span> x<span>[</span><span>1</span><span>]</span><span>)</span> <span># 根据字典值的升序排序</span>
a <span>=</span> d_sorted_by_value<span>[</span><span>:</span><span>:</span><span>-</span><span>1</span><span>]</span><span>[</span><span>:</span><span>50</span><span>]</span>
<span>print</span><span>(</span>a<span>)</span>
<span>print</span><span>(</span><span>len</span><span>(</span>a<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><div><pre><code><span>[</span><span>(</span><span>47</span><span>,</span> <span>2772</span><span>)</span><span>,</span> <span>(</span><span>143</span><span>,</span> <span>1967</span><span>)</span><span>,</span> <span>(</span><span>113</span><span>,</span> <span>1840</span><span>)</span><span>,</span> <span>(</span><span>13</span><span>,</span> <span>1812</span><span>)</span><span>,</span> <span>(</span><span>11</span><span>,</span> <span>1767</span><span>)</span><span>,</span> <span>(</span><span>45</span><span>,</span> <span>1717</span><span>)</span><span>,</span> <span>(</span><span>139</span><span>,</span> <span>1650</span><span>)</span><span>,</span> <span>(</span><span>39</span><span>,</span> <span>1619</span><span>)</span><span>,</span> <span>(</span><span>65</span><span>,</span> <span>1608</span><span>)</span><span>,</span> <span>(</span><span>35</span><span>,</span> <span>1576</span><span>)</span><span>,</span> <span>(</span><span>342</span><span>,</span> <span>1521</span><span>)</span><span>,</span> <span>(</span><span>185</span><span>,</span> <span>1502</span><span>)</span><span>,</span> <span>(</span><span>119</span><span>,</span> <span>1499</span><span>)</span><span>,</span> <span>(</span><span>8</span><span>,</span> <span>1498</span><span>)</span><span>,</span> <span>(</span><span>6</span><span>,</span> <span>1484</span><span>)</span><span>,</span> <span>(</span><span>4</span><span>,</span> <span>1478</span><span>)</span><span>,</span> <span>(</span><span>94</span><span>,</span> <span>1460</span><span>)</span><span>,</span> <span>(</span><span>89</span><span>,</span> <span>1458</span><span>)</span><span>,</span> <span>(</span><span>55</span><span>,</span> <span>1441</span><span>)</span><span>,</span> <span>(</span><span>61</span><span>,</span> <span>1435</span><span>)</span><span>,</span> <span>(</span><span>109</span><span>,</span> <span>1432</span><span>)</span><span>,</span> <span>(</span><span>16</span><span>,</span> <span>1425</span><span>)</span><span>,</span> <span>(</span><span>31</span><span>,</span> <span>1417</span><span>)</span><span>,</span> <span>(</span><span>67</span><span>,</span> <span>1352</span><span>)</span><span>,</span> <span>(</span><span>146</span><span>,</span> <span>1342</span><span>)</span><span>,</span> <span>(</span><span>54</span><span>,</span> <span>1339</span><span>)</span><span>,</span> <span>(</span><span>46</span><span>,</span> <span>1325</span><span>)</span><span>,</span> <span>(</span><span>121</span><span>,</span> <span>1313</span><span>)</span><span>,</span> <span>(</span><span>5</span><span>,</span> <span>1293</span><span>)</span><span>,</span> <span>(</span><span>173</span><span>,</span> <span>1292</span><span>)</span><span>,</span> <span>(</span><span>115</span><span>,</span> <span>1285</span><span>)</span><span>,</span> <span>(</span><span>68</span><span>,</span> <span>1257</span><span>)</span><span>,</span> <span>(</span><span>36</span><span>,</span> <span>1211</span><span>)</span><span>,</span> <span>(</span><span>95</span><span>,</span> <span>1208</span><span>)</span><span>,</span> <span>(</span><span>167</span><span>,</span> <span>1188</span><span>)</span><span>,</span> <span>(</span><span>129</span><span>,</span> <span>1181</span><span>)</span><span>,</span> <span>(</span><span>265</span><span>,</span> <span>1180</span><span>)</span><span>,</span> <span>(</span><span>137</span><span>,</span> <span>1172</span><span>)</span><span>,</span> <span>(</span><span>277</span><span>,</span> <span>1160</span><span>)</span><span>,</span> <span>(</span><span>66</span><span>,</span> <span>1158</span><span>)</span><span>,</span> <span>(</span><span>267</span><span>,</span> <span>1154</span><span>)</span><span>,</span> <span>(</span><span>268</span><span>,</span> <span>1149</span><span>)</span><span>,</span> <span>(</span><span>28</span><span>,</span> <span>1148</span><span>)</span><span>,</span> <span>(</span><span>38</span><span>,</span> <span>1130</span><span>)</span><span>,</span> <span>(</span><span>60</span><span>,</span> <span>1129</span><span>)</span><span>,</span> <span>(</span><span>14</span><span>,</span> <span>1127</span><span>)</span><span>,</span> <span>(</span><span>225</span><span>,</span> <span>1111</span><span>)</span><span>,</span> <span>(</span><span>10</span><span>,</span> <span>1110</span><span>)</span><span>,</span> <span>(</span><span>233</span><span>,</span> <span>1106</span><span>)</span><span>,</span> <span>(</span><span>252</span><span>,</span> <span>1105</span><span>)</span><span>]</span>
<span>50</span>
<span>[</span>Finished <span>in</span> <span>147</span><span>.</span>9s<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>Pandas 代码： <strong>第一步，找到最热的50本书</strong></p>
<div><pre><code><span>import</span> pandas <span>as</span> pd
<span>import</span> numpy <span>as</span> np


to_read <span>=</span> pd<span>.</span>read_csv<span>(</span><span>'../to_read.csv'</span><span>)</span>
to_read_counts <span>=</span> to_read<span>[</span><span>'book_id'</span><span>]</span><span>.</span>value_counts<span>(</span><span>)</span><span>.</span>sort_values<span>(</span>ascending<span>=</span><span>False</span><span>)</span>
hottest_50_books_id <span>=</span> to_read_counts<span>[</span><span>:</span><span>50</span><span>]</span><span>.</span>index
hottest_50_books_counts <span>=</span> to_read_counts<span>[</span><span>:</span><span>50</span><span>]</span><span>.</span>values
hottest_50_books <span>=</span> pd<span>.</span>DataFrame<span>(</span><span>{</span>
    <span>'book_id'</span><span>:</span> hottest_50_books_id<span>,</span>
    <span>'to_read_counts'</span><span>:</span> hottest_50_books_counts
    <span>}</span><span>)</span>

<span>"""
涉及到的知识点
1. value_counts():  计算重复元素出现的次数「显示形式为：值为索引，次数为值」
2. sort_values():   按某一列的数据进行排序，使用 by=列名，来指定。 
                    默认是升序排序，可以使用 ascending=False 来反转
"""</span>
<span>print</span><span>(</span>hottest_50_books<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><div><pre><code>    book_id  to_read_counts
<span>0</span>        <span>47</span>            <span>2772</span>
<span>1</span>       <span>143</span>            <span>1967</span>
<span>2</span>       <span>113</span>            <span>1840</span>
<span>3</span>        <span>13</span>            <span>1812</span>
<span>4</span>        <span>11</span>            <span>1767</span>
<span>5</span>        <span>45</span>            <span>1717</span>
<span>6</span>       <span>139</span>            <span>1650</span>
<span>7</span>        <span>39</span>            <span>1619</span>
<span>8</span>        <span>65</span>            <span>1608</span>
<span>9</span>        <span>35</span>            <span>1576</span>
<span>10</span>      <span>342</span>            <span>1521</span>
<span>11</span>      <span>185</span>            <span>1502</span>
<span>12</span>      <span>119</span>            <span>1499</span>
<span>13</span>        <span>8</span>            <span>1498</span>
<span>14</span>        <span>6</span>            <span>1484</span>
<span>15</span>        <span>4</span>            <span>1478</span>
<span>16</span>       <span>94</span>            <span>1460</span>
<span>17</span>       <span>89</span>            <span>1458</span>
<span>18</span>       <span>55</span>            <span>1441</span>
<span>19</span>       <span>61</span>            <span>1435</span>
<span>20</span>      <span>109</span>            <span>1432</span>
<span>21</span>       <span>16</span>            <span>1425</span>
<span>22</span>       <span>31</span>            <span>1417</span>
<span>23</span>       <span>67</span>            <span>1352</span>
<span>24</span>      <span>146</span>            <span>1342</span>
<span>25</span>       <span>54</span>            <span>1339</span>
<span>26</span>       <span>46</span>            <span>1325</span>
<span>27</span>      <span>121</span>            <span>1313</span>
<span>28</span>        <span>5</span>            <span>1293</span>
<span>29</span>      <span>173</span>            <span>1292</span>
<span>30</span>      <span>115</span>            <span>1285</span>
<span>31</span>       <span>68</span>            <span>1257</span>
<span>32</span>       <span>36</span>            <span>1211</span>
<span>33</span>       <span>95</span>            <span>1208</span>
<span>34</span>      <span>167</span>            <span>1188</span>
<span>35</span>      <span>129</span>            <span>1181</span>
<span>36</span>      <span>265</span>            <span>1180</span>
<span>37</span>      <span>137</span>            <span>1172</span>
<span>38</span>      <span>277</span>            <span>1160</span>
<span>39</span>       <span>66</span>            <span>1158</span>
<span>40</span>      <span>267</span>            <span>1154</span>
<span>41</span>      <span>268</span>            <span>1149</span>
<span>42</span>       <span>28</span>            <span>1148</span>
<span>43</span>       <span>38</span>            <span>1130</span>
<span>44</span>       <span>60</span>            <span>1129</span>
<span>45</span>       <span>14</span>            <span>1127</span>
<span>46</span>      <span>225</span>            <span>1111</span>
<span>47</span>       <span>10</span>            <span>1110</span>
<span>48</span>      <span>233</span>            <span>1106</span>
<span>49</span>      <span>252</span>            <span>1105</span>
<span>[</span>Finished <span>in</span> <span>0</span><span>.</span>6s<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br></div></div><p><strong>第二步，找到书籍的名称</strong></p>
<div><pre><code>books <span>=</span> pd<span>.</span>read_csv<span>(</span><span>'../books.csv'</span><span>)</span>
book_id_and_title <span>=</span> books<span>[</span><span>[</span><span>'book_id'</span><span>,</span> <span>'goodreads_book_id'</span><span>,</span> <span>'title'</span><span>]</span><span>]</span>
hottest_50_books_with_title <span>=</span> pd<span>.</span>merge<span>(</span>
    hottest_50_books<span>,</span> 
    book_id_and_title<span>,</span> 
    how<span>=</span><span>'left'</span><span>)</span>
<span>print</span><span>(</span>hottest_50_books_with_title<span>)</span>
hottest_50_books_with_title<span>.</span>to_csv<span>(</span><span>'hottest_50_books_with_title.csv'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p><strong>第三步，找到这50本书对应最热的10个标签</strong></p>
<div><pre><code>book_tags <span>=</span> pd<span>.</span>read_csv<span>(</span><span>'../book_tags.csv'</span><span>)</span>
book_tags <span>=</span> book_tags<span>[</span>book_tags<span>[</span><span>'_goodreads_book_id_'</span><span>]</span><span>.</span>isin<span>(</span>hottest_50_books_with_title<span>[</span><span>'goodreads_book_id'</span><span>]</span><span>)</span><span>]</span>
<span>del</span> book_tags<span>[</span><span>'_goodreads_book_id_'</span><span>]</span>
hottest_10_tags <span>=</span> book_tags<span>.</span>groupby<span>(</span><span>'tag_id'</span><span>)</span><span>.</span><span>sum</span><span>(</span><span>)</span>
hottest_10_tags <span>=</span> hottest_10_tags<span>.</span>sort_values<span>(</span>by<span>=</span><span>'count'</span><span>,</span> ascending<span>=</span><span>False</span><span>)</span><span>[</span><span>:</span><span>10</span><span>]</span>
hottest_10_tags <span>=</span> pd<span>.</span>DataFrame<span>(</span><span>{</span>
    <span>'tag_id'</span><span>:</span> hottest_10_tags<span>.</span>index<span>,</span>
    <span>'count'</span><span>:</span> hottest_10_tags<span>[</span><span>'count'</span><span>]</span>
    <span>}</span><span>)</span>
<span>print</span><span>(</span>hottest_10_tags<span>[</span><span>'tag_id'</span><span>]</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p><strong>第四步，找到这10个标签的名称</strong></p>
<div><pre><code>tags <span>=</span> pd<span>.</span>read_csv<span>(</span><span>'../tags.csv'</span><span>)</span>
hottest_10_tags_with_tag_name <span>=</span> pd<span>.</span>merge<span>(</span>
    hottest_10_tags<span>,</span>
    tags<span>,</span>
    on<span>=</span><span>'tag_id'</span><span>,</span>
    how<span>=</span><span>'left'</span><span>)</span>
<span>print</span><span>(</span>hottest_10_tags_with_tag_name<span>)</span>
hottest_10_tags_with_tag_name<span>.</span>to_csv<span>(</span><span>'hottest_10_tags_with_tag_name.csv'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>02-悦创带你现场 coding 小游戏【主角打怪-文字游戏】</title>
      <link>https://bornforthis.cn/column/py/basequestion/hw_word_game.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/hw_word_game.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-悦创带你现场 coding 小游戏【主角打怪-文字游戏】</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Mon, 09 May 2022 09:07:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>游戏名称：主角打怪-文字游戏</li>
<li>一个玩家【Player】、一个敌人【Enemy】</li>
<li>敌人和玩家互相攻击</li>
<li>玩家可以选择攻击也可以选择防守，敌人也一定会攻击，防守受到的攻击为：十分之一</li>
<li>敌人的攻击数值随机【random】</li>
</ol>
<div><pre><code><span># -*- coding: utf-8 -*-</span>
<span># @Author: clela</span>
<span># @Date:   2020-03-31 14:13:35</span>
<span># @Last Modified by:   clela</span>
<span># @Last Modified time: 2020-04-01 17:51:50</span>
<span>import</span> random
<span># 1</span>
<span>class</span> <span>Creature</span><span>(</span><span>)</span><span>:</span>
    <span>def</span> <span>attack</span><span>(</span>self<span>)</span><span>:</span>
        <span># 我希望得到一个随机的攻击数值</span>
        attack_value <span>=</span> random<span>.</span>randint<span>(</span><span>0</span><span>,</span> <span>50</span><span>)</span>
        <span>return</span> attack_value
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>上面我们类创建好了之后，我接下来就需要实例化了：</p>
<div><pre><code>player <span>=</span> Creature<span>(</span><span>)</span>
enemy <span>=</span> Creature<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>对于游戏的设定我们一般要判断用户和敌人的状态，也就是活着还是死了(玩家或者敌人)，也就是不断地判断，那这个时候需要什么呢？很明显是需要一个 <code>while</code> 循环在这里的。我们定义一个 <code>not_dead()</code> 函数来判断：</p>
<div><pre><code><span>while</span> player<span>.</span>not_dead<span>(</span><span>)</span> <span>and</span> enemy<span>.</span>not_dead<span>(</span><span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>所以这就需要给玩家和敌人设定一个初始的值(初始的生命值)也就是需要在类的实例化的时候传入设定的生命值，比如：玩家生命值：<code>100</code> ，敌人：<code>80</code>，既然我们要添加初始的值，那接下来就需要编写类的初始化。</p>
<div><pre><code>player <span>=</span> Creature<span>(</span><span>100</span><span>)</span>
enemy <span>=</span> Creature<span>(</span><span>80</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>类的初始化，我们接下来使用 <code>hp</code>  来存储用户初始化的血量。(使用 <code>self.hp</code> 来存储用户和敌人的血量)</p>
<div><pre><code><span>class</span> <span>Creature</span><span>(</span><span>)</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> hp<span>)</span><span>:</span>
        self<span>.</span>hp <span>=</span> hp
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>这个时候，我们游戏就有了生命值了，接下来就是要判断玩家和敌人的游戏状态：</p>
<div><pre><code><span># 写法一：</span>
<span>def</span> <span>not_dead</span><span>(</span>self<span>)</span><span>:</span>
    <span>if</span> self<span>.</span>hp <span>&lt;=</span> <span>0</span><span>:</span>
        <span>return</span> <span>False</span>
    <span>else</span><span>:</span>
        <span>return</span> <span>True</span>
<span># 写法二</span>
<span>def</span> <span>not_dead</span><span>(</span>self<span>)</span><span>:</span>
    <span>if</span> self<span>.</span>hp <span>&lt;=</span> <span>0</span><span>:</span>
        <span>return</span> <span>False</span>
    <span>return</span> <span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>那接下来就继续编写，<code>not_dead()</code> 返回的值是 <code>True</code>，那么游戏继续继续进行。</p>
<p>又因为我们的游戏是用户的输入来获取操作，所以需要在 while 循环中添加用户输入：</p>
<h6 id="这里我就写的简单点-就不判断用户输入的是否符合规则-我们这里就先默认用户输入是对的-课后自行添加" tabindex="-1"> 这里我就写的简单点，就不判断用户输入的是否符合规则，我们这里就先默认用户输入是对的，课后自行添加！</h6>
<div><pre><code><span>while</span> player<span>.</span>not_dead<span>(</span><span>)</span> <span>and</span> enemy<span>.</span>not_dead<span>(</span><span>)</span><span>:</span>
    user_input <span>=</span> <span>input</span><span>(</span><span>"Attack or Defence(A/D):"</span><span>)</span>
 
    <span>if</span> user_input <span>==</span> <span>"A"</span><span>:</span>
        player_attack_value <span>=</span> player<span>.</span>attack<span>(</span><span>)</span>
        enemy_attack_value <span>=</span> enemy<span>.</span>attack<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>那现在我们获取到了玩家的攻击值和敌人的攻击值，我们就需要来减少生命值。</p>
<p>所以，接下来我们编写一个 <code>being_attack()</code> 生命值减少的规则：</p>
<div><pre><code>enemy<span>.</span>being_attack<span>(</span>player_attack_value<span>)</span>
player<span>.</span>being_attack<span>(</span>enemy_attack_value<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>这个时候我们就需要添加一个受到攻击的函数：</p>
<div><pre><code><span>def</span> <span>being_attack</span><span>(</span>self<span>,</span> attack_value<span>)</span><span>:</span>
    self<span>.</span>hp <span>=</span> self<span>.</span>hp <span>-</span> attack_value
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>接下来，我们要编写的是，当用户输入防守的时候操作，当玩家选择防守的时候，那就只剩下敌人的攻击值，受到的攻击值减少十分之一：</p>
<div><pre><code><span>elif</span> user_input <span>==</span> <span>"D"</span><span>:</span>
    enemy_attack_value <span>=</span> enemy<span>.</span>attack<span>(</span><span>)</span><span>*</span><span>0.1</span>
    player<span>.</span>being_attack<span>(</span>enemy_attack_value<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>那么有没有觉得少了点什么呢？也就是游戏状态，而这个游戏状态应该写在什么位置呢？</p>
<p>那就是玩家的选择之前，实时的看见玩家和敌人的生命值：</p>
<div><pre><code>player<span>.</span>show_status<span>(</span><span>)</span>
enemy<span>.</span>show_status<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>编写所需要的函数：</p>
<div><pre><code><span>def</span> <span>show_status</span><span>(</span>self<span>)</span><span>:</span>
    <span>print</span><span>(</span>self<span>.</span>hp<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>现在我们需要知道那个是用户哪个个敌人，所以我们就需要在在初始化的地方添加自定义的用户名称：</p>
<div><pre><code>player <span>=</span> Creature<span>(</span><span>100</span><span>,</span> <span>"AI悦创"</span><span>)</span>
enemy <span>=</span> Creature<span>(</span><span>80</span><span>,</span> <span>"Enemy"</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>那我们就需要编写类的初始化的部分：</p>
<div><pre><code><span>def</span> <span>__init__</span><span>(</span>self<span>,</span> hp<span>,</span> name<span>)</span><span>:</span>
    self<span>.</span>hp <span>=</span> hp
    self<span>.</span>name <span>=</span> name
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>接下来就需要写一个，显示名称和血量了，所以我们需要修改函数 <code>show_status()</code> ：</p>
<div><pre><code><span>def</span> <span>show_status</span><span>(</span>self<span>)</span><span>:</span>
    <span>print</span><span>(</span><span>"{}' hp is {}."</span><span>.</span><span>format</span><span>(</span>self<span>.</span>name<span>,</span> self<span>.</span>hp<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>现在我们主程序就编写结束了。我们还要判断谁输谁赢：</p>
<div><pre><code><span>if</span> player<span>.</span>not_dead<span>(</span><span>)</span><span>:</span>
    <span>print</span><span>(</span><span>"You Win!"</span><span>)</span>
<span>else</span><span>:</span>
    <span>print</span><span>(</span><span>"You Lose"</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>程序源代码可关注公众号：<strong>AI悦创</strong>，后台回复：文字游戏即可获取！</p>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/zsxq.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>「练习」Numpy 与 Pandas 读取文件速度对比</title>
      <link>https://bornforthis.cn/posts/03.html</link>
      <guid>https://bornforthis.cn/posts/03.html</guid>
      <source url="https://bornforthis.cn/rss.xml">「练习」Numpy 与 Pandas 读取文件速度对比</source>
      <category>Numpy</category>
      <pubDate>Sun, 30 Aug 2020 08:08:28 GMT</pubDate>
      <content:encoded><![CDATA[<p>本题就是操作 Numpy 与 Pandas 读取文件，并对比速度： 数据集：</p>
<ul>
<li>
<p>rating.txt：<a href="https://aiyc.lanzoux.com/iSU8ufj79af" target="_blank" rel="noopener noreferrer">https://aiyc.lanzoux.com/iSU8ufj79af</a></p>
</li>
<li>
<p>rating.csv：<a href="https://aiyc.lanzoux.com/iy3upfxymba" target="_blank" rel="noopener noreferrer">https://aiyc.lanzoux.com/iy3upfxymba</a></p>
</li>
</ul>
<div><pre><code><span>import</span> numpy <span>as</span> np
<span>import</span> pandas <span>as</span> pd
<span>import</span> time

start_time <span>=</span> time<span>.</span>time<span>(</span><span>)</span>
data <span>=</span> np<span>.</span>genfromtxt<span>(</span><span>'./rating.txt'</span><span>,</span> delimiter<span>=</span><span>','</span><span>)</span>
end_reading_time <span>=</span> time<span>.</span>time<span>(</span><span>)</span>
<span>print</span><span>(</span><span>'Numpy reading time: {}ms'</span><span>.</span><span>format</span><span>(</span><span>round</span><span>(</span><span>(</span>end_reading_time <span>-</span> start_time<span>)</span> <span>*</span> <span>1000</span><span>,</span> <span>2</span><span>)</span><span>)</span><span>)</span>

start_time <span>=</span> time<span>.</span>time<span>(</span><span>)</span>
data <span>=</span> pd<span>.</span>read_table<span>(</span><span>'./rating.csv'</span><span>,</span> 
    names<span>=</span><span>[</span><span>'user_id'</span><span>,</span> <span>'book_id'</span><span>,</span> <span>'rating'</span><span>]</span><span>,</span>
    sep<span>=</span><span>','</span><span>)</span>
end_reading_time <span>=</span> time<span>.</span>time<span>(</span><span>)</span>
<span>print</span><span>(</span><span>'Pandas reading time: {}ms'</span><span>.</span><span>format</span><span>(</span><span>round</span><span>(</span><span>(</span>end_reading_time <span>-</span> start_time<span>)</span> <span>*</span> <span>1000</span><span>,</span> <span>2</span><span>)</span><span>)</span><span>)</span>

<span># 输出</span>
Numpy reading time<span>:</span> <span>27029</span><span>.</span>64ms
Pandas reading time<span>:</span> <span>1003</span><span>.</span>31ms
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>《5分钟商学院》4周年：写了100万字，我学到的3件事</title>
      <link>https://bornforthis.cn/posts/01.html</link>
      <guid>https://bornforthis.cn/posts/01.html</guid>
      <source url="https://bornforthis.cn/rss.xml">《5分钟商学院》4周年：写了100万字，我学到的3件事</source>
      <category>刘润</category>
      <pubDate>Wed, 17 Feb 2021 11:36:04 GMT</pubDate>
      <content:encoded><![CDATA[<p>2016年9月25日，《5分钟商学院》第一次在得到APP上与大家见面。 到今天，正好四周年，有超过40万学员加入。 心中感慨万分。 借此机会，分享一篇2018年，我在更新完2季5商之后，给当时28万学员写的3点感悟。 希望对你有所启发。 以下原文。</p>
<hr>
<p>2013年，离开工作近14年的微软，我问一位前同事：你当时离开的时候，是什么感受？ 他说：</p>
<blockquote>
<p>没什么感受，直到第二天早上。 你刷完牙，洗完脸，吃完早饭，收拾好自己，准备去上班时，突然发现，自己再也不需要去那个去了十几年的地方上班了。 <strong>一种强烈的伤心，突然袭来。</strong> 你从梦中突然醒来：我居然真的离开了。</p>
</blockquote>
<p>就是这种感觉。 <strong>这是我第二次有这种感觉：《5分钟商学院》，居然真的结束了。</strong> 《5分钟商学院》的全名，叫《刘润 · 5分钟商学院》。 为什么？ 2016年，我第一次和罗胖沟通这个产品原型时，他说：你必须把自己的名字，加在产品前面。 这是招牌。 <strong>这样，爱惜羽毛如生命的你，才绝不会敷衍。你丢不起这个人。</strong> 我为罗胖的这个小心思一惊。 果然，我发现我丢不起这个人。 2年后的今天，我以我之名，居然为28万的付费学员，整理了超过1000万字的素材，交付了超过100万字的2季课程。 录制了超过600篇语音，做了10场线上直播，20场线下大课，4次海外游学，请了50多位客座教授驻场，甚至发放了20万元的奖学金。 这2年，很多5商学员对我说，他们获得了不小的收获。 真好。祝贺你们。 但是， <strong>其实有一个人，他这2年悄悄获得的收获，可能是远远超过所有28万学员的。</strong> 这个人获得的成长，是他自己都不敢想象的。 这个人就是我自己。 没有做作，没有夸张。是真的。 你很难想象，我的收获有多么巨大。 我对此满怀感激。 今天，在5商两季课程正式结束之时，请允许我与你分享。</p>
<hr>
<h2 id="_1-只有对普通人讲得清楚-才证明你想得明白" tabindex="-1"> 1.只有对普通人讲得清楚，才证明你想得明白</h2>
<p>我以为自己挺会讲课的。</p>
<p><img src="@source/posts/01.assets/2021021711293925.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>在2016年做《刘润 · 5分钟商学院》之前，我已经是有点影响力的咨询顾问，而且每年要给企业家、创业者、CEO讲100天的课。 无数人听完我的分享，会冲过来对我说：</p>
<blockquote>
<p>润总，这是我这辈子听过的最好的课。</p>
</blockquote>
<p>今天想来，只能呵呵了。 <strong>那是因为，你没有对28万人讲过课。</strong> 当我把第一个“5分钟”音频交给罗胖的时候，罗胖当时的“克制”我至今印象深刻。 我能敏锐地体会到，他在努力挑选合适的词，在不伤害我前提下，表达他的不满。 但是显然，他失败了。他没找到这样的词汇。于是，直接劈头盖脸。 我哪受过这样的批评。 但可气的是，他讲得有道理。 然后，我咬着牙回去改。 然后又被打回来。然后再改。 <strong>就这样，我的第一个“5分钟”，一共改了50多稿。</strong> 在微软的时候，我的下属年薪百万。 他们非常优秀，我们的知识结构也非常相似，所以，沟通非常容易。 我们有一大片的共识区域。 <strong>在共识区域里，你的蜻蜓点水，可能就是我的醍醐灌顶。</strong></p>
<p><img src="@source/posts/01.assets/20210217113239817-16520011183045.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>但是在5商的28万学员中，大家的知识结构，实在是差太远。 把28万各行各业、各层各次的学员放在一起， <strong>我们的共识，就是没有共识。</strong> 这不是学员的问题，这是我自己的问题。 我需要在几乎完全没有共识的情况下，把事情讲清楚。 <strong>这就逼着我，想清楚那些我本来以为必然正确的东西，也就是共识。</strong> 为什么正确是正确，共识是共识？ 在重新证明共识的过程中，我发现，我对很多概念的理解，似是而非，知其然不知其所以然。 我一身冷汗。 那一刻，我突然明白了，为什么很多知名教授讲不好课。 很多教授很喜欢说，“等你水平到了，就会明白了”。 这句话的本质，是对因为想不透、所以讲不清的自暴自弃。 <strong>只有对普通人讲得清楚，才证明你想得明白。</strong></p>
<p><img src="@source/posts/01.assets/2021021711350774.png" alt="在这里插入图片描述" loading="lazy"></p>
<h2 id="_2-把自己逼疯-把对手逼死" tabindex="-1"> 2.把自己逼疯，把对手逼死</h2>
<p>在这2年中，《刘润 · 5分钟商学院》出现了很多的模仿者，有6分钟商学院，有7分钟商学院，还有各种五花八门的商学院。 我一开始，有些焦虑。去听了几个。 后来发现，你根本就听不完。 再后来，我就不听了。 我明白，我真正应该关注的，不应该是竞争对手，更不应该是模仿者。 <strong>我唯一应该关注的，是用户。</strong> 因为所有产品的失败，只可能是因为被用户抛弃，而不会是因为被竞争对手干掉。 <strong>逼死竞争对手最好的方式，是把自己逼疯。</strong></p>
<p><img src="@source/posts/01.assets/20210217113742802.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>每一篇5分钟商学院的文章的生产流程，都是先从2万字左右的素材里，先整理出2、3千字的文章。 为什么？ 保证文章的知识浓度。 然后，我再一个字一个字的删减到1800字的音频，保证音频是在5-6分钟左右。 为什么？ 因为一篇10分钟左右的音频，一周没听，就1个小时了。 用户会压力巨大。 两周没听，他就再也不会听了。 而且，他不会觉得是自己的错。 <strong>他会找到一个理由：是你讲得不好！然后删掉APP。</strong> 马克·吐温说：</p>
<blockquote>
<p>抱歉，我没有时间给您写一封简短的信，所以我写了一封长信。</p>
</blockquote>
<p>我花双倍的时间，就是为了节省学员的时间。 <strong>然后，我请专业的声音训练师，帮我练习字、词、句的发音，口播时的吐气、抑扬顿挫。</strong> 学员是不是能听完，除了短，还取决对于是否移步换景，让注意力一直不涣散。 充满吸引力的发音，是抓住注意力的手。 <strong>当然，文章的结构，也非常重要。</strong> 看文章，和听语音最大的不同是，看文章你是可以回去再看一遍的，听语音你只能向前。 所以，语音信息流中的逻辑瀑布，就显得非常重要。 稍有跳跃，用户就会立刻跳悬崖而死，不知道你在说什么。 <strong>就这样，每篇5分钟的课程，不包括我的团队时间，我都要花5-7个小时。</strong> 我的产品经理宁志忠问我：润总，你有拖延症吗？ 我说：我没有“拖延症”，我有“拖延就会死症”。</p>
<p><img src="@source/posts/01.assets/2021021711424158.png" alt="在这里插入图片描述" loading="lazy"></p>
<p><strong>“拖延就会死症”，把我自己逼疯，把对手逼死。</strong></p>
<h2 id="_3-当你心中没有自己的时候-才会有用户" tabindex="-1"> 3.当你心中没有自己的时候，才会有用户</h2>
<p>第2年的5商，我经历过4任“得到”的产品经理：李双宏，陈轶男，吕燕宜，和宁志忠。 这四任产品经理都有一个特征：特别谦虚。 他们说话的姿势，通常是这样的。 你们感受一下：</p>
<blockquote>
<p>润总，您的这几节课写得太好了，转发率，是专栏里最高的之一，几乎完美。 但是，如果一定要鸡蛋里挑骨头的话，他们的数据比你自己的平均值要低一些。 我们觉得您写得非常好，但是如果您能从以下99个方面做提升，就更完美了。</p>
</blockquote>
<p>一定是罗胖！一定是罗胖培训过他们！ 我知道，我的考验来了。 我实在是太爱这些文字了。谁都不能说它一个字的不好。 我绞尽脑汁，删了写，写了删，再修改，再打磨。 直到我觉得一个字都不能改为止，才敢发布。 你们不知道我是如何斟词酌句写下每一个字的；你们完全不理解我的结构设计；你们哪懂我巧妙的前后呼应；你们 …… …… <strong>我说：好的。我改。</strong> 两年前，我说我改的时候，我是压抑着自己一点点情绪的。 两年过去了，我看到数据 …… <strong>数据不会撒谎，于是我亲手杀死自己的文字。</strong> 心如止水。 改完后，我开始写一篇新专栏，丝毫不会因为以后有可能会改，就减少哪怕一分的心血。 因为，我会再次疯狂爱上自己的文字。 我想，我终于能从心底克服了宜家效应，鸡蛋效应，沉没成本，和其他不管叫什么的心理。 我终于可以做到： <strong>既疯狂爱自己的文字，又能冷静地掐死它。</strong></p>
<p><img src="@source/posts/01.assets/20210217114718507.png" alt="在这里插入图片描述" loading="lazy"></p>
<p>为什么？ 用户最大的竞争对手是你自己。 <strong>当你心中没有自己的时候，才会有用户。</strong> 无论投入多少心血，都毫不手软。</p>
<h2 id="最后的话" tabindex="-1"> 最后的话</h2>
<p>《刘润 · 5分钟商学院》两季内容，终于完整交付了。</p>
<p>两季内容，我为28万学员，写了100万字课程。 <strong>以上，就是我在写这100万字时，学到的东西，获得的感悟。</strong> 希望这些感悟，对你，对你的朋友，对所有正在做知识付费，打算做知识付费，或者所有做其他产品的同学，有一点点帮助和启发。 昨天和罗胖、脱不花一起吃饭。脱不花一句话很让我很受触动。 <strong>她说：我不希望，5商变成你人生的支线。</strong> 是的。 我是做咨询公司的。5商不是我做咨询生涯中，插进来的2年支线情节。 我从5商中学习到的，是一生受益价值观；我在5商中结识的28万学员，也希望一生相伴。 在未来，我会持续在得到里，更新更多的“商业选修课”；在我的公号里，更新我更多的商业观察；在真实的商业世界中，与你并肩作战。 第二天早上。我刷完牙，洗完脸，吃完早饭，收拾好自己，坐在办公桌前写《5商》时，突然发现，自己再也不需要写这个写了700多天的课程了。 <strong>我一点都没有伤心。因为我知道，你们都还在。</strong> 这是《刘润 · 5分钟商学院》陪你成长的又一天，期待你的进步。  花半秒钟就看透事物本质的人，  和花一辈子都看不清的人，  注定是截然不同的命运。</p>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>02-初识数据类型 Notebook</title>
      <link>https://bornforthis.cn/posts/02.html</link>
      <guid>https://bornforthis.cn/posts/02.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-初识数据类型 Notebook</source>
      <category>Python Base Notebook</category>
      <pubDate>Sat, 30 Apr 2022 12:10:52 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_02-初识数据类型-notebook" tabindex="-1"> 02-初识数据类型 Notebook</h1>
<p><img src="@source/posts/02.assets/blog202205061310294.png" alt="img" loading="lazy"></p>
<h2 id="_1-数字型【int、float】" tabindex="-1"> 1. 数字型【int、float】</h2>
<div><pre><code>a <span>=</span> <span>1</span>
<span>print</span><span>(</span><span>type</span><span>(</span>a<span>)</span><span>)</span>

a <span>=</span> <span>1.0</span>
<span>print</span><span>(</span><span>type</span><span>(</span>a<span>)</span><span>)</span>

<span># type: 类型</span>
<span># class: 班级、类别、类型</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="_2-字符串【str】" tabindex="-1"> 2. 字符串【str】</h2>
<div><pre><code>s <span>=</span> <span>"Hello aiyuechuang."</span>
<span>print</span><span>(</span><span>type</span><span>(</span>s<span>)</span><span>)</span>
<span># 三大特性</span>
<span># 1. 有序性【从左到右：0 开始， 从右到左 -1 开始】</span>
<span># 2. 不可变【字符串被创建出来之后是不能被修改的（运行当中才是真正创建）】</span>
<span># 3. 任意数据类型【字符串里面可以放我们第一张发给你的图片中的所有 Python 的数据类型】</span>
<span># s = "122sasda[1, 2, 34]"</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="_3-列表【list】" tabindex="-1"> 3. 列表【list】</h2>
<div><pre><code>lst <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>"aiyc"</span><span>,</span> <span>1.1</span><span>]</span>
<span>print</span><span>(</span>lst<span>)</span>
<span>print</span><span>(</span><span>type</span><span>(</span>lst<span>)</span><span>)</span>
<span># 三大特性</span>
<span># 1. 有序性【从左到右：0 开始， 从右到左 -1 开始】</span>
<span># 2. 可变性【添加、删除、修改】</span>
<span># 3. 任意数据类型【它可以存放任意的数据类型】</span>
<span># lst = [1, "aiyc", (1, 2, 3)]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="_4-元组【tuple】" tabindex="-1"> 4. 元组【tuple】</h2>
<div><pre><code>tup <span>=</span> <span>(</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>]</span><span>)</span>
<span>print</span><span>(</span>tup<span>)</span>
<span>print</span><span>(</span><span>type</span><span>(</span>tup<span>)</span><span>)</span>
<span># 1. 有序性【从左到右：0 开始， 从右到左 -1 开始】</span>
<span># 2. 不可变</span>
<span># 3. 任意数据类型</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="_5-字典【dict】" tabindex="-1"> 5. 字典【dict】</h2>
<div><pre><code><span># key:value</span>
<span># {}</span>
<span># d = {"key1": "value1", "key2": "value2"}</span>
<span># 特点：</span>
<span># 1. 无序性【Python 3.6+ 之后的版本，字典是有序的。但是你目前用不到，所以直接理解为无序即可】</span>
<span># 2. key: 不可变【你家的钥匙能变形嘛？】变形之后能开门吗？-》不能开门</span>
<span># value：任意数据类型</span>
<span># 可变性【添加数据、修改数据、删除数据、读取数据】</span>
d <span>=</span> <span>{</span><span>"name"</span><span>:</span> <span>"aiyc"</span><span>,</span> <span>"age"</span><span>:</span> <span>18</span><span>}</span>
<span>print</span><span>(</span>d<span>)</span>
<span>print</span><span>(</span><span>type</span><span>(</span>d<span>)</span><span>)</span>
d <span>=</span> <span>{</span><span>9</span><span>:</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>]</span><span>,</span> <span>"aiyc"</span><span>:</span> <span>2</span><span>}</span>
<span>print</span><span>(</span>d<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h2 id="_6-集合【set】" tabindex="-1"> 6. 集合【set】</h2>
<div><pre><code><span># set 集合的三大特性</span>
<span># 1. 无序性：元素是没有顺序的</span>
<span># 2. 确定性：每一个元素都必须是确定的才行，不能是不确定</span>
<span># 3. 互异性：不重复</span>
<span># 无序性</span>
s <span>=</span> <span>{</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>65</span><span>,</span> <span>(</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>)</span><span>,</span> <span>"aiyc"</span><span>,</span> <span>1.1</span><span>}</span>
<span>print</span><span>(</span>s<span>)</span>
<span># s = {1, 2, 3}</span>
<span># s = {2, 1, 3}</span>
<span># s = {3, 2, 1}</span>
<span># 确定性</span>
<span># s = {1, 2, 3, 4, (1, 2, 34), [1, 2, 3, 4]}</span>
<span>"""Traceback (most recent call last):
  File "D:/Windows_Code/新建文件夹/data.py", line 54, in &lt;module>
    s = {1, 2, 3, 4, (1, 2, 34), [1, 2, 3, 4]}
TypeError: unhashable type: 'list'"""</span>
<span># 互异性【去重、数据去重】</span>
s <span>=</span> <span>{</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>5</span><span>,</span> <span>5</span><span>,</span> <span>5</span><span>,</span> <span>5</span><span>,</span> <span>22</span><span>,</span> <span>2</span><span>,</span> <span>2</span><span>,</span> <span>21</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>}</span>
<span>print</span><span>(</span>s<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>强制转换：</p>
<div><pre><code><span># 强制转换【可以理解为变性】</span>
lst <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>"aiyc"</span><span>,</span> <span>"book"</span><span>]</span>
<span># print(set(lst))</span>
s <span>=</span> <span>set</span><span>(</span>lst<span>)</span>
<span>print</span><span>(</span>s<span>)</span>
<span>print</span><span>(</span><span>type</span><span>(</span>s<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="_7-布尔型【bool】" tabindex="-1"> 7. 布尔型【bool】</h2>
<div><pre><code><span># 布尔型</span>
a <span>=</span> <span>True</span>
b <span>=</span> <span>False</span>
<span>print</span><span>(</span>a<span>)</span>
<span>print</span><span>(</span>b<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><p>Think</p>
<p>我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</p>
</div>
<p>欢迎关注我公众号：AI悦创，有更多更好玩的等你发现！</p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>03-Markdown 列表</title>
      <link>https://bornforthis.cn/column/md/03.html</link>
      <guid>https://bornforthis.cn/column/md/03.html</guid>
      <source url="https://bornforthis.cn/rss.xml">03-Markdown 列表</source>
      <category>Markdown 基础</category>
      <pubDate>Sun, 03 Apr 2022 12:10:52 GMT</pubDate>
      <content:encoded><![CDATA[<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/gzh.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>01-章节测试一</title>
      <link>https://bornforthis.cn/column/py/basequestion/q1.html</link>
      <guid>https://bornforthis.cn/column/py/basequestion/q1.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-章节测试一</source>
      <category>Python 私教练习题【基础】</category>
      <pubDate>Fri, 06 May 2022 16:49:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。欢迎来到 Python 核心技术实战，这是你的第一次测试，加油！</p>
<ol>
<li>
<p>以下哪个变量可以做 Python 的变量：</p>
<p>A. 01a B. class C. a_int D. b-int</p>
</li>
<li>
<p>以下哪个选项不是 Python 的基本数据类型关键字</p>
<p>A. int B.bool C. string D. dict</p>
</li>
<li>
<p>此题无需在线作答，请在纸上作答后查看答案解析</p>
<p>语句 <code>x, y, z = 1, 2, 3</code> 执行后，变量 y 的值为__<em>_____</em>_。</p>
<blockquote>
<p>请在改文章下面留言，留下你的答案！</p>
</blockquote>
</li>
<li>
<p>此题无需在线作答，请在纸上作答后查看答案解析</p>
<p>查看变量类型的 Python 内置函数是________________。</p>
</li>
<li>
<p>此题无需在线作答，请在纸上作答后查看答案解析</p>
<p>请写出该代码的输出结果_____________。</p>
<div><pre><code>a = 'ABC'
b = a
a = 'XYZ'
print(b)
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div></li>
</ol>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://bornforthis.cn/zsxq.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>Python 零基础入门一对一教学课程表</title>
      <link>https://bornforthis.cn/onepython.html</link>
      <guid>https://bornforthis.cn/onepython.html</guid>
      <source url="https://bornforthis.cn/rss.xml">Python 零基础入门一对一教学课程表</source>
      <category>Python 基础</category>
      <pubDate>Tue, 02 Mar 2021 12:10:52 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="课程内容" tabindex="-1"> 课程内容：</h2>
<table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>第一章 变量和数据类型</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨变量</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨初识数据类型</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="column/py/basequestion/q1"><strong>章节测试一</strong></a></td>
</tr>
<tr>
<td><strong>第二章 数据类型（上）</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨数值</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨字符串</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="column/py/basequestion/hw1"><strong>作业一丨创建一个问答式简历软件</strong></a></td>
</tr>
<tr>
<td>04</td>
<td><strong>作业一讲解</strong></td>
</tr>
<tr>
<td>05</td>
<td><a href="column/py/basequestion/q2"><strong>章节测试二</strong></a></td>
</tr>
<tr>
<td><strong>第三章 数据类型（中）</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨列表</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨元组</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="column/py/basequestion/q3"><strong>章节测试三</strong></a></td>
</tr>
<tr>
<td><strong>第四章 数据类型（下）</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨字典</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨集合</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="column/py/basequestion/q4"><strong>章节测试四</strong></a></td>
</tr>
<tr>
<td><strong>第五章 if条件判断</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨布尔表达式</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨if条件判断</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="column/py/basequestion/q5"><strong>章节测试五</strong></a></td>
</tr>
<tr>
<td><strong>第六章 while循环</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>while循环</strong></td>
</tr>
<tr>
<td>02</td>
<td><a href="column/py/basequestion/q6"><strong>章节测试六</strong></a></td>
</tr>
<tr>
<td><strong>第七章 for循环</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>for循环</strong></td>
</tr>
<tr>
<td>02</td>
<td><a href="https://www.aiyc.top/628.html" target="_blank" rel="noopener noreferrer"><strong>作业二丨创建一个运势预测软件</strong></a>：https://www.aiyc.top/628.html</td>
</tr>
<tr>
<td>03</td>
<td><a href="column/py/basequestion/q7"><strong>章节测试七</strong></a></td>
</tr>
<tr>
<td><strong>复习及测试习题讲解</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>复习及测试习题讲解</strong></td>
</tr>
<tr>
<td><strong>第八章 函数</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨计算机函数的概念</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨函数的定义与调用</strong></td>
</tr>
<tr>
<td>03</td>
<td><a href="column/py/basequestion/q8"><strong>章节测试八</strong></a></td>
</tr>
<tr>
<td><strong>第九章 类</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><strong>第一节丨类的概念</strong></td>
</tr>
<tr>
<td>02</td>
<td><strong>第二节丨类的使用</strong></td>
</tr>
<tr>
<td>03</td>
<td><strong>第三节丨self参数的使用</strong></td>
</tr>
<tr>
<td>04</td>
<td><a href="column/py/basequestion/q9"><strong>章节测试九</strong></a></td>
</tr>
<tr>
<td>05</td>
<td><a href="https://www.aiyc.top/647.html" target="_blank" rel="noopener noreferrer"><strong>项目作业丨对话式对战游戏设计</strong></a>：https://www.aiyc.top/647.html</td>
</tr>
<tr>
<td><strong>阶段测试</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td><a href="https://www.aiyc.top/649.html" target="_blank" rel="noopener noreferrer"><strong>Python-基础课程结业测试</strong></a>：https://www.aiyc.top/649.html</td>
</tr>
<tr>
<td><strong>课程重点总结及答疑</strong></td>
<td></td>
</tr>
<tr>
<td>01</td>
<td>课程重点总结及答疑</td>
</tr>
</tbody>
</table>
<p>你可以得到：</p>
<ul>
<li>PPT</li>
<li>零基础快速入门</li>
<li>三个小实战</li>
<li>一对一教学</li>
<li>笔记（脑图）：使你专注学习！</li>
</ul>
<p>有兴趣联系我！</p>
<p>我的微信号：Jiabcdefh</p>
<p>如果你有其他需求或者疑问，点击：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ 在线客服</a></p>
<p>微信：</p>
<div align=center><i>Content not supported</i></div>]]></content:encoded>
    </item>
    <item>
      <title>幻灯片页</title>
      <link>https://bornforthis.cn/slide.html</link>
      <guid>https://bornforthis.cn/slide.html</guid>
      <source url="https://bornforthis.cn/rss.xml">幻灯片页</source>
      <pubDate>Fri, 06 May 2022 04:30:42 GMT</pubDate>
      <content:encoded><![CDATA[
<Presentation id="presentation-1a96284b" data-code="%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20--%3E%0A%0A%23%23%20%E5%B9%BB%E7%81%AF%E7%89%87%E6%BC%94%E7%A4%BA%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%B9%BB%E7%81%AF%E7%89%87%E6%BC%94%E7%A4%BA%E4%B8%8E%E5%90%84%E7%A7%8D%E5%B0%8F%E8%B4%B4%E5%A3%AB%E3%80%82%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%3E%20%E4%BD%9C%E8%80%85%20Mr.Hope.%20%E8%AF%B7%E6%BB%9A%E5%8A%A8%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E8%BF%9B%E5%85%A5%E4%B8%8B%E4%B8%80%E9%A1%B5%0A%0A---%0A%0A%23%23%20%E6%A0%87%E6%B3%A8%E5%B9%BB%E7%81%AF%E7%89%87%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%5B%F0%9F%91%87%5D(%23%2F1%2F1)%0A%0A--%0A%0A%23%23%20%E6%A0%87%E6%B3%A8%E5%B9%BB%E7%81%AF%E7%89%87%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%E4%BD%BF%E7%94%A8%20%60---%60%20%E6%A0%87%E6%B3%A8%E6%B0%B4%E5%B9%B3%E5%B9%BB%E7%81%AF%E7%89%87%0A%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-in%22%20--%3E%0A%0A%E5%9C%A8%E6%B0%B4%E5%B9%B3%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E4%BD%BF%E7%94%A8%20%60--%60%20%E5%88%86%E5%89%B2%E5%9E%82%E7%9B%B4%E5%B9%BB%E7%81%AF%E7%89%87%0A%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-in%22%20--%3E%0A%0A%E4%BD%BF%E7%94%A8%20%60%3C!--%20.slide%3A%20...%20--%3E%60%20%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%8A%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7%0A%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-in%22%20--%3E%0A%0A%E4%BD%BF%E7%94%A8%20%60%3C!--%20.element%3A%20...%20--%3E%60%20%E5%9C%A8%E5%89%8D%E4%B8%80%E4%B8%AA%20HTML%20%E5%85%83%E7%B4%A0%E4%B8%8A%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7%0A%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-in%22%20--%3E%0A%0A---%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20Markdown%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E4%BD%BF%E7%94%A8%20Markdown%20%E8%AF%AD%E6%B3%95%E7%9A%84%E5%90%84%E7%A7%8D%E6%A0%87%E8%AE%B0.%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20Markdown%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E4%BD%BF%E7%94%A8%20Markdown%20%E8%AF%AD%E6%B3%95%E7%9A%84%E5%90%84%E7%A7%8D%E6%A0%87%E8%AE%B0.%0A%0A%23%23%23%20%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%20H3%0A%0A%E6%A0%87%E9%A2%98%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%A4%A7%E5%86%99%E3%80%82%0A%0A%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9C%89%E7%9D%80%20**%E7%B2%97%E4%BD%93**%2C%20_%E6%96%9C%E4%BD%93_%2C%20~~%E5%88%A0%E9%99%A4%E7%BA%BF~~%20%E6%96%87%E5%AD%97%E5%B9%B6%E5%8C%85%E5%90%AB%20%5B%E4%B8%80%E4%B8%AA%E9%93%BE%E6%8E%A5%5D(https%3A%2F%2Fmrhope.site)%20%E7%9A%84%E6%AE%B5%E8%90%BD%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%83%E4%BC%9A%E8%87%AA%E5%8A%A8%E6%8D%A2%E8%A1%8C%E3%80%82%E6%89%80%E4%BB%A5%E4%BD%A0%E6%97%A0%E9%9C%80%E6%8B%85%E5%BF%83%E5%AE%83%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%82%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20Markdown%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E4%BD%BF%E7%94%A8%20Markdown%20%E8%AF%AD%E6%B3%95%E7%9A%84%E5%90%84%E7%A7%8D%E6%A0%87%E8%AE%B0.%0A%0A%E5%88%97%E8%A1%A8%E9%BB%98%E8%AE%A4%E4%B8%BA%20%60inline-block%60%0A%0A-%20%E9%A1%B9%E7%9B%AE%0A-%20%E9%A1%B9%E7%9B%AE%0A-%20%E9%A1%B9%E7%9B%AE%0A%0A1.%20%E9%A1%B9%E7%9B%AE%201%0A1.%20%E9%A1%B9%E7%9B%AE%202%0A1.%20%E9%A1%B9%E7%9B%AE%203%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20Markdown%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E4%BD%BF%E7%94%A8%20Markdown%20%E8%AF%AD%E6%B3%95%E7%9A%84%E5%90%84%E7%A7%8D%E6%A0%87%E8%AE%B0.%0A%0A%E5%9C%A8%E4%BD%A0%E5%90%AF%E7%94%A8%20%60highlight%60%20%E6%8F%92%E4%BB%B6%E5%90%8E%EF%BC%8C%E4%BB%A3%E7%A0%81%E5%9D%97%E4%BC%9A%E8%87%AA%E5%8A%A8%E9%AB%98%E4%BA%AE%E3%80%82%0A%0A%60%60%60js%0Aconst%20a%20%3D%201%3B%0A%60%60%60%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20Markdown%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E4%BD%BF%E7%94%A8%20Markdown%20%E8%AF%AD%E6%B3%95%E7%9A%84%E5%90%84%E7%A7%8D%E6%A0%87%E8%AE%B0.%0A%0A%E5%9C%A8%E4%BD%A0%E5%90%AF%E7%94%A8%20%60math%60%20%E6%8F%92%E4%BB%B6%E5%90%8E%EF%BC%8C%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%20TEX%20%E6%A0%BC%E5%BC%8F%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E3%80%82%0A%0A%24%24%0AJ(%5Ctheta_0%2C%5Ctheta_1)%20%3D%20%5Csum_%7Bi%3D0%7D%0A%24%24%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20Markdown%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E4%BD%BF%E7%94%A8%20Markdown%20%E8%AF%AD%E6%B3%95%E7%9A%84%E5%90%84%E7%A7%8D%E6%A0%87%E8%AE%B0.%0A%0A%E2%9A%A0**%E8%AF%B7%E6%B3%A8%E6%84%8F**%3A%20%E8%A1%A8%E6%A0%BC%E5%92%8C%E5%88%86%E5%89%B2%E7%BA%BF%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%89%80%E6%9C%89%E4%B8%8D%E5%9C%A8%20Markdown%20%E6%A0%87%E5%87%86%E8%AF%AD%E6%B3%95%E4%B8%AD%E7%9A%84%E5%86%85%E5%AE%B9%E5%9D%87%E4%B8%8D%E5%8F%97%E6%94%AF%E6%8C%81%E3%80%82%0A%0A---%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%B8%83%E5%B1%80%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20%20--%3E%0A%0A%23%23%20%E5%B8%83%E5%B1%80%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%F0%9F%91%86%20%60r-fit-text%60%20class%20%E4%BC%9A%E8%AE%A9%E6%96%87%E5%AD%97%E5%9C%A8%E4%B8%8D%E8%B6%85%E5%87%BA%E5%B9%BB%E7%81%AF%E7%89%87%E8%8C%83%E5%9B%B4%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E5%B0%BD%E5%8F%AF%E8%83%BD%E5%A4%A7%E3%80%82%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20%20--%3E%0A%0A%23%23%20%E5%B8%83%E5%B1%80%0A%0A!%5BLogo%5D(%2Flogo.svg)%0A%0A%3C!--%20.element%3A%20class%3D%22r-stretch%22%20--%3E%0A%0A%F0%9F%91%86%20%60r-stretch%60%20class%20%E5%B8%AE%E5%8A%A9%E4%BD%A0%E6%8E%A7%E5%88%B6%E6%B3%A8%E5%85%A5%E5%9B%BE%E7%89%87%E6%88%96%E8%A7%86%E9%A2%91%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E4%BD%BF%E5%AE%83%E4%BB%AC%E5%A1%AB%E5%85%85%E6%BB%A1%E5%B9%BB%E7%81%AF%E7%89%87%E5%9E%82%E7%9B%B4%E6%96%B9%E5%90%91%E4%B8%8A%E7%9A%84%E5%89%A9%E4%BD%99%E7%A9%BA%E9%97%B4%E3%80%82%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20data-background-color%3D%22rgb(70%2C%2070%2C%20255)%22%20--%3E%0A%0A%23%23%20%E5%B8%83%E5%B1%80%0A%0A%23%23%23%20%E8%83%8C%E6%99%AF%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E5%90%91%E7%89%B9%E5%AE%9A%E5%B9%BB%E7%81%AF%E7%89%87%E6%B7%BB%E5%8A%A0%20%60data-background%60%20%E5%B1%9E%E6%80%A7%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B9%BB%E7%81%AF%E7%89%87%E8%83%8C%E6%99%AF.%0A%0A---%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%E7%94%A8%E4%BA%8E%E9%AB%98%E4%BA%AE%E6%88%96%E6%98%BE%E9%9A%90%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%82%0A%0A%E4%BD%A0%E9%9C%80%E8%A6%81%E5%9C%A8%E5%85%83%E7%B4%A0%E4%B8%8A%E6%B7%BB%E5%8A%A0%20%60fragment%60%20%E5%92%8C%E5%8A%A8%E7%94%BB%20class%E3%80%82%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%23%23%23%20%E5%8A%A8%E7%94%BB%20class%0A%0A-%20%60fade-in%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-in%22%20--%3E%0A%0A-%20%60fade-out%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-out%22%20--%3E%0A%0A-%20%60fade-up%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-up%22%20--%3E%0A%0A%3C!--%20list%20break%20--%3E%0A%0A-%20%60fade-down%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-down%22%20--%3E%0A%0A-%20%60fade-left%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-left%22%20--%3E%0A%0A-%20%60fade-right%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-right%22%20--%3E%0A%0A%3C!--%20list%20break%20--%3E%0A%0A-%20%60fade-in-then-out%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-in-then-out%22%20--%3E%0A%0A-%20%60fade-in-then-semi-out%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20fade-in-then-semi-out%22%20--%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%23%23%23%20%E5%8A%A8%E7%94%BB%20class%0A%0A-%20%60grow%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20grow%22%20--%3E%0A%0A-%20%60shrink%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20shrink%22%20--%3E%0A%0A-%20%60strike%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20strike%22%20--%3E%0A%0A%3C!--%20list%20break%20--%3E%0A%0A-%20%60highlight-red%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20highlight-red%22%20--%3E%0A%0A-%20%60highlight-green%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20highlight-green%22%20--%3E%0A%0A-%20%60highlight-blue%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20highlight-blue%22%20--%3E%0A%0A%3C!--%20list%20break%20--%3E%0A%0A-%20%60highlight-current-red%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20highlight-current-red%22%20--%3E%0A%0A-%20%60highlight-current-green%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20highlight-current-green%22%20--%3E%0A%0A-%20%60highlight-current-blue%60%0A%3C!--%20.element%3A%20class%3D%22fragment%20highlight-current-blue%22%20--%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%23%23%23%20%E5%A4%9A%E4%B8%AA%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E6%8C%89%E7%85%A7%E9%A1%BA%E5%BA%8F%E5%8C%85%E8%A3%B9%E4%B8%80%E4%B8%AA%20HTML%20%E5%85%83%E7%B4%A0%E4%BD%BF%E5%85%B6%E6%8B%A5%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%3Cspan%20class%3D%22fragment%20fade-in%22%3E%0A%20%20%3Cspan%20class%3D%22fragment%20highlight-red%22%3E%0A%20%20%20%20%3Cspan%20class%3D%22fragment%20fade-out%22%3E%0A%20%20%20%20%20%20%E6%B8%90%E5%85%A5%20%3E%20%E5%8F%98%E7%BA%A2%20%3E%20%E6%B8%90%E5%87%BA%0A%20%20%20%20%3C%2Fspan%3E%0A%20%20%3C%2Fspan%3E%0A%3C%2Fspan%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%A8%E7%94%BB%E7%89%87%E6%AE%B5%0A%0A%23%23%23%20%E9%A1%BA%E5%BA%8F%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%20%60data-fragment-index%60%20%E5%B1%9E%E6%80%A7%E6%94%B9%E5%8F%98%E5%85%83%E7%B4%A0%E7%9A%84%E5%8A%A8%E7%94%BB%E9%A1%BA%E5%BA%8F%E3%80%82%0A%0A%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E5%8F%AF%E4%BB%A5%E6%9C%89%E7%9B%B8%E5%90%8C%E7%9A%84%E5%8A%A8%E7%94%BB%E9%A1%BA%E5%BA%8F%E3%80%82%0A%0A-%20%E6%9C%80%E5%90%8E%E6%98%BE%E7%A4%BA%0A%3C!--%20.element%3A%20class%3D%22fragment%22%20data-fragment-index%3D%223%22--%3E%0A%0A-%20%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%98%BE%E7%A4%BA%0A%3C!--%20.element%3A%20class%3D%22fragment%22%20data-fragment-index%3D%222%22--%3E%0A%0A%3C!--%20list%20break%20--%3E%0A%0A-%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%98%BE%E7%A4%BA%0A%3C!--%20.element%3A%20class%3D%22fragment%22%20data-fragment-index%3D%221%22--%3E%0A%0A-%20%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%98%BE%E7%A4%BA%0A%3C!--%20.element%3A%20class%3D%22fragment%22%20data-fragment-index%3D%222%22--%3E%0A%0A---%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E6%B8%90%E5%8F%98%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E6%B8%90%E5%8F%98%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0ATransition%20%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E4%B8%AD%E7%9A%84%20%60transition%60%20%E9%80%89%E9%A1%B9%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E5%9C%A8%E7%89%B9%E5%AE%9A%E5%B9%BB%E7%81%AF%E7%89%87%E6%B7%BB%E5%8A%A0%20%60data-transition%60%20%E5%B1%9E%E6%80%A7%E5%B1%80%E9%83%A8%E8%AE%BE%E7%BD%AE.%0A%0A%E5%8F%AF%E8%83%BD%E7%9A%84%E5%80%BC%3A%0A%0A-%20none%0A-%20fade%0A-%20slide%0A%0A%3C!--%20list%20break%20--%3E%0A%0A-%20convex%0A-%20concave%0A-%20zoom%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-auto-animate%20--%3E%0A%0A%23%23%20%E6%B8%90%E5%8F%98%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%23%23%23%20%E8%BF%87%E6%B8%A1%E5%8A%A8%E7%94%BB%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%9B%B8%E9%82%BB%E7%9A%84%E5%B9%BB%E7%81%AF%E7%89%87%E4%B8%8A%E6%B7%BB%E5%8A%A0%20%60data-auto-animate%60%20%E4%BD%BF%E7%9B%B8%E5%90%8C%E7%9A%84%20HTML%20%E5%85%83%E7%B4%A0%E4%BA%A7%E7%94%9F%E8%BF%87%E6%B8%A1%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C%E3%80%82%0A%0A---%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%9F%E8%83%BD%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%9F%E8%83%BD%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%23%23%23%20%E4%BB%A3%E7%A0%81%0A%0A%E9%80%9A%E8%BF%87%E5%90%AF%E7%94%A8%20%60highlight%60%20%E6%8F%92%E4%BB%B6%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%AF%B9%E4%BB%A3%E7%A0%81%E5%9D%97%E8%BF%9B%E8%A1%8C%E9%AB%98%E4%BA%AE%E3%80%82%0A%0A%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%20%60%5Ba-b%7Cc-d%5D%60%20%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%88%86%E5%B8%83%E9%AB%98%E4%BA%AE%E7%89%B9%E5%AE%9A%E8%A1%8C%E3%80%82%0A%0A%60%60%60js%20%5B1-2%7C3%7C4%5D%0Alet%20a%20%3D%201%3B%0Alet%20b%20%3D%202%3B%0Alet%20c%20%3D%20(x)%20%3D%3E%201%20%2B%202%20%2B%20x%3B%0Ac(3)%3B%0A%60%60%60%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%9F%E8%83%BD%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%23%23%23%20%E9%A2%84%E8%A7%88%E6%A8%A1%E5%BC%8F%0A%0A%E6%8C%89%E4%B8%8B%20%60Esc%60%20%E6%88%96%20%60O%60%20%E5%8D%B3%E5%8F%AF%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E8%8E%B7%E5%BE%97%E7%84%A6%E7%82%B9%E6%97%B6%E8%BF%9B%E5%85%A5%E9%A2%84%E8%A7%88%E6%A8%A1%E5%BC%8F%E3%80%82%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%9F%E8%83%BD%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%23%23%23%20%E5%85%A8%E5%B1%8F%E6%A8%A1%E5%BC%8F%0A%0A%E6%8C%89%E4%B8%8B%20%60F%60%20%E6%88%96%20%60F11%60%20%E5%8D%B3%E5%8F%AF%E5%9C%A8%E5%B9%BB%E7%81%AF%E7%89%87%E8%8E%B7%E5%BE%97%E7%84%A6%E7%82%B9%E6%97%B6%E8%BF%9B%E5%85%A5%E5%85%A8%E5%B1%8F%E6%A8%A1%E5%BC%8F%E3%80%82%0A%0A--%0A%0A%3C!--%20.slide%3A%20data-transition%3D%22slide%22%20data-auto-animate%20--%3E%0A%0A%23%23%20%E5%8A%9F%E8%83%BD%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%23%23%23%20%E7%BC%A9%E6%94%BE%0A%0A%E6%8C%89%E4%B8%8B%20%60alt%60%20(Linux%20%E4%B8%8A%E4%BD%BF%E7%94%A8%20%60ctrl%60)%20%E7%9A%84%E5%90%8C%E6%97%B6%E7%82%B9%E5%87%BB%E5%B9%BB%E7%81%AF%E7%89%87%E7%9A%84%E4%BB%BB%E4%BD%95%E5%85%83%E7%B4%A0%EF%BC%8C%E5%8D%B3%E5%8F%AF%E4%BB%A5%E5%90%91%E6%AD%A4%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E6%94%BE%E5%A4%A7%E3%80%82%0A%0A%E5%86%8D%E6%AC%A1%E7%82%B9%E5%87%BB%E5%8D%B3%E5%8F%AF%E7%BC%A9%E5%B0%8F%E3%80%82%0A%0A---%0A%0A%3C!--%20.element%3A%20class%3D%22r-fit-text%22%20--%3E%0A%0A%23%23%20%E7%BB%93%E6%9D%9F%0A" theme="auto"></Presentation>]]></content:encoded>
      <enclosure url="https://bornforthis.cn/logo.svg" type="image/svg+xml"/>
    </item>
    <item>
      <title>密码加密的文章</title>
      <link>https://bornforthis.cn/guide/encrypt.html</link>
      <guid>https://bornforthis.cn/guide/encrypt.html</guid>
      <source url="https://bornforthis.cn/rss.xml">密码加密的文章</source>
      <category>使用指南</category>
      <pubDate>Fri, 06 May 2022 04:30:42 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="密码加密的文章" tabindex="-1"> 密码加密的文章</h1>
<p>实际的文章内容。</p>
<p>段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。</p>
<p>段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。</p>
]]></content:encoded>
    </item>
    <item>
      <title>01-Markdown 标题</title>
      <link>https://bornforthis.cn/column/md/01.html</link>
      <guid>https://bornforthis.cn/column/md/01.html</guid>
      <source url="https://bornforthis.cn/rss.xml">01-Markdown 标题</source>
      <category>Markdown 基础</category>
      <pubDate>Fri, 01 Apr 2022 12:10:52 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>Markdown 标题有两种格式。</p>
<h1 id="_1、使用-和-标记一级和二级标题" tabindex="-1"> 1、使用 = 和 - 标记一级和二级标题</h1>
<p>= 和 - 标记语法格式如下：</p>
<div><pre><code><span>我展示的是一级标题
<span>=================</span></span>

<span>我展示的是二级标题
<span>-----------------</span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>显示效果如下图：</p>
<p><img src="@source/column/md/01.assets/image-20211022145145089.png" alt="" loading="lazy"></p>
<h1 id="_2-使用-号标记" tabindex="-1"> 2. 使用 # 号标记</h1>
<p>使用 <strong>#</strong> 号可表示 1-6 级标题，一级标题对应一个 <strong>#</strong> 号，二级标题对应两个 <strong>#</strong> 号，以此类推。</p>
<div><pre><code><span><span>#</span> 一级标题</span>
<span><span>##</span> 二级标题</span>
<span><span>###</span> 三级标题</span>
<span><span>####</span> 四级标题</span>
<span><span>#####</span> 五级标题</span>
<span><span>######</span> 六级标题</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>显示效果如下图：</p>
<p><img src="@source/column/md/01.assets/image-20211022150038645.png" alt="image-20211022150038645" loading="lazy"></p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
    <item>
      <title>02-Markdown 段落格式</title>
      <link>https://bornforthis.cn/column/md/02.html</link>
      <guid>https://bornforthis.cn/column/md/02.html</guid>
      <source url="https://bornforthis.cn/rss.xml">02-Markdown 段落格式</source>
      <category>Markdown 基础</category>
      <pubDate>Sat, 02 Apr 2022 12:10:52 GMT</pubDate>
      <content:encoded><![CDATA[<p>你好，我是悦创。</p>
<p>Markdown 段落没有特殊的格式，直接编写文字就好，<strong>段落的换行直接回车就好。</strong></p>
<p><img src="@source/column/md/02.assets/202205051655970.png" alt="image-20211027172857577" loading="lazy"></p>
<h2 id="字体" tabindex="-1"> 字体</h2>
<p>Markdown 可以使用以下几种字体：</p>
<div><pre><code><span><span>*</span><span>斜体文本</span><span>*</span></span>
<span><span>_</span><span>斜体文本</span><span>_</span></span>
<span><span>**</span><span>粗体文本</span><span>**</span></span>
<span><span>__</span><span>粗体文本</span><span>__</span></span>
<span><span>**</span><span><span><span>*</span><span>粗斜体文本</span><span>*</span></span></span><span>**</span></span>
<span><span>__</span><span><span><span>_</span><span>粗斜体文本</span><span>_</span></span></span><span>__</span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>显示效果如下所示：</p>
<p><img src="@source/column/md/02.assets/202205051655205.png" alt="" loading="lazy"></p>
<h2 id="分隔线" tabindex="-1"> 分隔线</h2>
<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>
<div><pre><code><span>***</span>

<span>* * *</span>

<span>*****</span>

<span>- - -</span>

<span>----------</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>显示效果如下所示：</p>
<p><img src="@source/column/md/02.assets/202205051656556.png" alt="" loading="lazy"></p>
<h2 id="删除线" tabindex="-1"> 删除线</h2>
<p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <strong>~~</strong>  即可，实例如下：</p>
<div><pre><code>aiyc.top

book.bornforthi.com

<span><span>~~</span><span>baidu.com</span><span>~~</span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>显示效果如下所示：</p>
<p><img src="@source/column/md/02.assets/202205051656348.png" alt="image-20211027211907431" loading="lazy"></p>
<h2 id="下划线" tabindex="-1"> 下划线</h2>
<p>下划线可以通过 HTML 的 <strong>&lt;u&gt;</strong> 标签来实现：</p>
<div><pre><code><span><span><span>&lt;</span>u</span><span>></span></span>带下划线文本<span><span><span>&lt;/</span>u</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>显示效果如下所示：</p>
<p><img src="@source/column/md/02.assets/202205051656946.png" alt="image-20211027212240861" loading="lazy"></p>
<h2 id="脚注" tabindex="-1"> 脚注</h2>
<p>脚注是对文本的补充说明。</p>
<p>Markdown 脚注的格式如下:</p>
<div><pre><code>[^要注明的文本]
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>以下实例演示了脚注的用法：</p>
<div><pre><code>创建脚注格式类似这样 [^bornforthi]。

<span><span>[</span><span>^bornforthi</span><span>]</span><span>:</span> 流沙团队</span> -- 一股无形的力量，学的不仅是技术，更是梦想！！！
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>演示效果如下：</p>
<p><img src="@source/column/md/02.assets/202205051656607.png" alt="image-20211027212704519" loading="lazy"></p>
<details><summary>公众号：AI悦创【二维码】</summary>
<p><img src="/gzh.jpg" alt="" loading="lazy"></p>
</details>
<div><p>AI悦创·编程一对一</p>
<p>AI悦创·推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！微信：Jiabcdefh</p>
<p>C++ 信息奥赛题解，长期更新！长期招收一对一中小学信息奥赛集训，莆田、厦门地区有机会线下上门，其他地区线上。微信：Jiabcdefh</p>
<p>方法一：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1432803776&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">QQ</a></p>
<p>方法二：微信：Jiabcdefh</p>
</div>
<p><img src="/zsxq.jpg" alt="" loading="lazy"></p>
]]></content:encoded>
    </item>
  </channel>
</rss>